{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b0ed4995-9216-4ec5-95eb-9ae7222364eb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f3b26585-2253-4b74-bfc6-4bd33d17f523",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65843a71-ae0e-457d-a0f4-efac959575f6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4272d11-c33b-450e-9c3b-c15ff81b350a"
                }
              }
            ]
          },
          {
            "id": "80124523-655e-4a21-a6c4-679f0c4bfc03",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4de910c0-9426-4713-b843-86c54b524d53",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aeae3c22-a695-4ac0-92e5-3e364d2c3ad3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "894765b4-08cc-4867-b60a-13d06e09ef36",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8d932644-f843-4cd0-9913-eb0f47ae5383",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d22775b-f504-449f-9743-50131e5e326b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09fde9e5-9efa-4393-bf8e-12dd888c199b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55222d20-617c-4a71-aeeb-ee4fd2fcfec4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "007fa671-ff05-48cd-9cfb-f5cc1b08ee53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a68a467-f498-4e85-95f7-7306f40c42b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "917f6a1e-a2db-4f41-80eb-1944fa0692eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad84fb49-58a1-468e-87c7-f11aa18772ce"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "171bd7a1-fbcd-45bf-ae2b-db3bee966871",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4fa62965-4129-4e1c-b393-47c3c88ee554"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dcb0a6e-fc42-4a68-81c1-774c14626052",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cf766eb-6e7f-4b99-a2a0-4da8fd04caf2"
            }
          }
        ]
      },
      {
        "id": "d9048e17-875c-4d82-bd87-8033b61a901d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6592740e-df5c-4406-8a3f-2c9db8185756",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f55cb08d-6c7a-401c-8882-be34cbedec5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bd71dda-18b5-444d-8305-3f663a63347a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9697554b-77b7-4233-a20d-8121ea655d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f9d3a09-d201-4c6d-a32c-96e71718f227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe50002e-1cb0-490a-87ec-4149185227c7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1750cc0c-df9f-486b-bd68-96a0d64a3e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ce6e560-2292-47aa-84ec-7efb58d51de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60d7ac2-bb46-4cad-a7eb-89685c8c1a6b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d39017b-e86e-400e-a541-92edcbc5a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80d96ffd-2050-4931-a8bc-953d693bff0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca41b420-2861-4eb4-9e1c-0041afa968ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df3b9a94-909f-45a9-a4e5-6edb946cbf5d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc0230a-dd4d-446c-adfc-fdd07cf8bc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c438dc5d-2e83-4283-8301-5d9c5d250e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a96288-e0e0-48ec-9864-5f0d76d12a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9422d91d-e16b-45bd-b232-7db400565d2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c3a2a840-6b50-4222-851e-0244f1fba0c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "033fa8c0-cd48-42a2-824a-f60bf30e3284",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c251547a-d423-46c3-98d6-2426d6dcb18d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "921f6bdb-f54b-461b-ba18-f26ef211e7ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68499e0a-da5e-4a52-a98a-79c73ee20db3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "09b8b391-5a64-44dd-b830-9b17fd32a9fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6944cdfc-adef-4da8-bb9e-342b3f067f59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "527921a7-98bc-4312-ac19-3bfebcb3d70b"
            }
          }
        ]
      },
      {
        "id": "315c78dc-2d89-4f71-8864-53a0b89f04c2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9af53ea8-f588-4de3-b939-a505592d0a4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ccceb725-b0b8-475e-b6f9-bd6db67e5070",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f7643713-3fad-4eff-b8c5-1ac99dc3a83f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f89565-7b0b-4b60-8517-14d264a72559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a54ea7-a784-4676-9eac-5b5b67e4f32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6d9c6c-0924-49c6-b6f7-fcdb3df413a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "579743a2-a71d-43fe-abc2-9e926f47f490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b335a606-9b0b-4255-be5f-2098e5483fbb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24867e1-a0b9-4b15-8dfb-dd2abc587934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f02b1d-5e19-45dd-b441-07d3977542cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b15cee-3b16-4ba5-8bb9-260b915b5ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43e48b3c-71e1-40db-b6e6-7b44ee9f13c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55d4dee-890e-4580-b54f-fd769368364f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6717218a-721c-4f5a-8d63-e11f62235a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acf0c96-e7ea-44f4-9b9c-f325038ce6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28857e27-09db-4f55-b6ad-fa94f6cd8b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2a84a3f-4df3-4304-9555-4276244c9943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4eaef5-19fc-4aa7-ac5b-25878a205d45",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47019a3-de36-48f4-a430-d2deb8d72f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d4c6de-e140-474e-a9d3-18800d554046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7392b8-5026-458d-b5fb-16462efc5d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6663bc6c-7363-40c8-aedd-6dbc1662b8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b978ab9-fbaf-44a8-97fc-3c2a40200c12",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b8f943-4e43-4d73-94af-bfd3c6630071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0967af0-af39-48de-92b8-d192278ce182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f281e363-ad47-4302-b6bf-680bf0f6d000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1188cbca-9eb3-4ccb-922c-1adebffc6251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4837dfa-f360-4937-9646-75cca6f34d22",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cedbce-4016-40f8-a1ee-6fe19b451355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec09911-3e26-4cc2-88da-3e9021ccb332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6743bf76-4058-40a8-b56f-39097e66a0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b7fc455-0436-43ca-868e-8282e44f0c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de975a7-a883-41ad-b589-d21a16cac352",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca1b280-4377-45a5-a342-9805a2dcdf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476c179e-6e82-4222-9d8d-cd1baa2a49d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1d9d21-2d68-4719-94a0-4e1e4cc9c64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a064acaf-e05b-4c5a-bffe-36d26d6c7e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac06b94c-f7f6-473c-b4ff-5dd42a58b87f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6c611b-ebb1-460e-abbc-e90b375cec1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45550d94-ca4e-4fa1-acdd-d43b14ac6e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce140af6-eff6-42c8-ac62-bd25681d73d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a73cfc0-a54b-4ea8-9289-8d10d48d54c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3624b4-c504-4d20-8a52-86ab186e9224",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69660f69-2cf1-45eb-80ad-89aff6a7f98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14af8832-e2a1-4c80-a4bf-a69037bceb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddcbdf5-82cb-4181-b229-0691b610632d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "004762da-bd47-4155-a442-f9aecbb8226d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2c337d-18a6-4ef1-a627-f13c9656f1c6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828ef923-e792-45ce-a165-9ed9a989d078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0fb523-ceff-4f1e-91e2-de5bc4c36a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cd197e-1cdf-4d36-8b21-fed7c6ae0239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ffb8901-635a-4e9e-a50c-27dba8da1d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5c0024-0597-4bac-a793-862c7a96b0b7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daccaf4f-e156-4133-9122-bd1be1e31d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebe2070-e62f-4c7f-874b-73bdb7095689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869a8e15-1b9f-4f91-b939-64d3259d07ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7325a1d8-7ae6-4934-8518-2bd2754705c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c20af8c-8aef-4123-8a61-aaf525fdc9da",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9179ab54-93d1-4770-ba33-d7cdfa0e53d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74c06c5-76e0-4cdd-8735-798e313dd22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb04936-efc8-4d8d-98f8-299475e357e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1524b180-2cdf-4479-a5ab-e970c97c4d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38037d63-4be4-4119-b197-8a77d7a3b41d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac44d135-988d-40af-a2fb-a0cd1990b34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46edbfa8-fd94-442e-b2bd-80680d1f64a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05635f19-042b-4f7a-a999-e0c16db54459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bcab8c0-15d2-4bad-ad62-19944849cb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bb5489-18c6-438b-a0f0-ee401453187a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ba278f-4e56-4888-b862-387c4969a99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f1e5dc-9519-420c-84ad-41932be43432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9549aa7b-5adb-4841-add4-db8ba97f2ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcad86e5-6c7c-4060-9d1f-f0318fb45e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe8b71b-0258-45b9-b1bb-9b03f4925180",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca59db80-c0bc-4f51-885f-e3a2fd643b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec371b2a-2d70-484d-aa33-c13d87513c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a867494a-4a75-4ae6-91aa-064b60bec3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "959ac6dc-7074-47a8-bb22-ae544cae12ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965e75ab-6925-4e33-aef3-5443ee529080",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6f54e7-d850-4a4d-b87d-45d627e68641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf26465-9e0e-46dd-b69b-cfdc3f4a3743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585e9f00-2410-4e92-b791-c05a68b72367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a50bf69-6303-46ac-87e3-b15301213af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1feed6a-41b6-4e41-9b9b-29ec79ce824a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e91eac-3577-431c-81db-d8652169924c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d79730-5ff0-43a3-be68-d8b2d24957d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa894b65-8dff-4306-b294-23fdc2f5fbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "829d59e7-318c-438b-96f5-a78887c4faf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd626d1f-b147-4995-8fd3-b541543d76f2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6628e3-79fd-4309-b258-aa878d5a963a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68facf60-2c8d-4e6e-96ec-42b1bb18bb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df069ac-c7b0-4666-9dad-de241ee630b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd64a68-dfcc-4426-be94-3852b0b0c26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5e9db5-a308-4046-a494-1d05091bfc45",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aabfb19-44b6-4f00-aa5a-843cea6834fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9c4050-1b70-4ccb-95da-ce5e92022c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9b6afa-1b75-4552-bdc7-5548bccfcf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32dea9b2-58e3-490a-98c1-4e0f6c71e6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaa302d-28bf-4485-998e-45124efec7a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ccbea7-d6e4-4c3d-b27e-fb4c68236f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3b0aaa-ad22-4d58-921c-4f68cf08a509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a904cc2-3edb-4e2b-b8b3-84498d123744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cf41e8-ef30-4a27-964a-18791d0af3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6818df6f-e620-4417-9869-ab14e72ba242",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59871e3c-6993-4283-963d-4c5c76e59a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cdc051-d423-4fca-b001-99223aa8c8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d440971-e7c6-46a0-b997-2c6b34fa2e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b98d39-bf30-4668-a07e-fd6b51277ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bdb319-e2cd-4cef-9124-a87bead55efe",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18be0b6-a43a-4efc-a0ee-f76d5dd51a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7dc88cb-90fd-4499-945f-23568de51149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083bfed4-660c-4da2-ab9d-35f49b7345c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6562536a-8871-4fd2-be7a-e1d7c3628489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb1a829-d535-44b8-be6d-a046dd2f627a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701eae8f-92b0-48ee-a5fe-6431148d544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009e0c38-07a8-4dcd-8811-f3924ea0963d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecbc481-f322-4f5a-9220-17f9d0a9135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdfa5c5-874a-4e06-9ec6-a75f5f69a2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e93ca0-99cc-4050-ace1-78eb406a54a5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ba5f27-2531-4c64-ba37-0072ef6154aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e3c069-8557-4cff-b9ab-bb962abfe6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3590260-c4e3-42cf-8cf3-760dbb3b5bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7464479b-7e36-4d2c-83ad-9e913114a7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ccc9c5-e2f7-4cb5-973a-8bec9c6a2460",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bded5fa1-7c3f-4eec-aa30-adaa6e4bbdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141672d4-22ea-408f-92cc-bb34987478e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc63995-0a84-4569-8de6-75fb52b32f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa52ad4d-ce42-4231-ab9b-6d624d0349ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2606005a-7a88-4729-b719-109b97e50125",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebb12fe-a30f-44d5-b6f9-fe4a0fb54921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e79a85-8cfc-48a7-b8a9-ec1a9791d85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba21dc4-833a-4f20-bae2-a69134300fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fa01a2-c0cf-4c7e-8382-3fec02dfcffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2387530c-f8dd-4ac5-921b-50d7ca9d0132",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f988d347-00ba-4b7a-bfec-dd97b93caa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f679d112-3090-4e0d-a02a-68edc017da0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e150bafd-23e3-4b31-9165-258ae6fb170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28232901-e45b-4f72-a6de-d41c50408a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994a0750-7ff6-4165-9eff-56142e4dff97",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930dbccd-1561-4360-a396-da545bc0d668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4384701e-2eea-43cb-ba6f-604fcbdcfbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6343ae4-69e7-42de-8d2d-2ba4d0ee6b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cd31e5-8f73-4671-9eaa-a3032e18c09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcce0b9-a2b9-4cd0-b127-956b5db28b08",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b440aa-e175-4f2e-8951-7c8ef8526810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd1f8f3-52d8-48f6-bab1-af909218e410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786d9b31-2459-416a-b3a4-85199632bcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9decc17-2f2f-45eb-8652-609f5edfa37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9ce033-4428-490e-b47c-3b8449312927",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa73852a-5cdb-4fee-8853-2a39c2e02855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5815cc76-5615-4785-a646-87963a3cd5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab78a61-6cc7-4fe1-b947-2c636b04ead7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc3e0ed-17ce-4629-914c-89975e54dfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e05ab0-f440-4cad-a323-911ba3325b6c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083ab0b7-216d-4541-8e38-1d2b4da46981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9be910-3fbe-42ce-bd7c-c4ec50b58e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d7f680-37a8-4695-b796-a9968ffbc7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "002d431c-df7b-4b96-87ce-a9679c7094f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129838ff-cfa6-4555-8d2e-15e615d34cf7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b16920-645a-47ab-9eef-a933a5f9e28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe67c21-26b8-42fc-b3f9-ab6ed9ece853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb1afd1-022a-4eb7-85e9-b95685cd8b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dec0581-354f-40ad-9023-c25f70968900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ec72b1-d299-4a11-8f17-8014e1b4265d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a4734c-a835-45e9-8d56-7dde23c5d037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a95b046-cdd2-4df9-bc94-f9fb93726b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521d48b4-0578-4ff0-89a5-e6f2cef84a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b46d82-4efc-41ff-9280-cf26d1293593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e9c036-5c72-44f5-abc8-f489c357f560",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38b4d19-ad01-44ad-894d-57f251da152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debd232a-87d5-4718-9007-6e459ce1c645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f018461-fe3c-4036-957c-b76e21be3020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f3774f-a5c7-434f-90a9-828f230fd70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a41af80-593e-4630-9a3e-59fb65a6aa1f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6663f2-b8c3-4e54-be90-5653e2d34724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51829b8a-dfb8-4ed8-b570-f8469351588e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a99a456-aad5-4374-83a0-471a7d8505f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8f217cbb-cb97-4b8f-8495-1244a971473a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a76ac52-0946-4009-8749-02c5ac68afc6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8200e4a-e0fa-4263-b46f-68857ca437a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53a15ab5-4ea8-4c56-8af1-48a9b997b3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98eb0a7-d64e-40a3-8602-85813d4088d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6710e258-58cd-40f1-bfff-0ef45fcffe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5246d04a-6d4b-486c-be69-95b5a73fec7f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8e1c43-de3f-4f6e-8792-c003bbe9bbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f1d0af-5365-41ae-a1f6-2c3b33ab134e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ecc5e4-eb2c-496e-9590-b3aa5786e452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2311da6e-d00b-436a-b3c2-921f58cbd9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912a941f-9cfc-4207-a216-ca2453b01e97",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f62385-2153-41ff-baf6-310de16f0859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65023119-54fe-404b-8c97-e75a108f8fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8468de61-6cf4-484a-b6b1-b02087295ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d822c03-456d-459d-94a0-3cecd9c497d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63d509f-d4bc-4866-a83e-662e4d6acfb4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035539d3-4810-40d2-98d5-6601589dcc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c47d466-5b41-4bca-a28f-0082500eb9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394e75d7-d3b8-4807-b02c-52e430d912e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ca9635-c235-434b-9113-8252f7af5256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84710525-1850-49f5-b252-ab1e05256ecd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3274d839-d658-4997-8ac2-7460a37136a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f271fb-f180-46ad-b2dc-c80c930ee86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbbfbc4-7ee1-48f6-ae4c-af2f2429de0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20aae7c9-0688-4692-bf85-91497d420d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a8c0d0-7c81-4392-852d-d2e1ee09adb3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c66985b-bf59-4daa-bdf0-f77f9c300c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c9f1d3-42d2-4a42-9e70-bc5facab7d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee1ef9f-3397-49ab-afa2-39829d36c13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "30857045-f1bf-4827-8042-47240e10e8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e446c05d-c5f6-42de-94f0-6fde3d057053",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d577e4-7518-4ffb-9019-a99f40d8e1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780ef187-f135-45f3-8405-341cabd0c8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45188cd9-fe88-4630-b678-16dc9afccc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2f75cb-b80f-490d-a871-c050b5a76b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebacea57-9c4a-4e1b-a440-59875d77a557",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1877dd2-e87a-49ee-8700-c72489b7541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41efd669-b583-466e-9414-ceab671d6c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7effa790-af7c-4de4-a8ec-75dbd10b1852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6412993-9e66-40f2-bd87-2e08ac52c9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47afe7ef-64c7-46fd-b4f4-f93ea5a65bbf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b5d290-370e-4359-8e01-b52d5309ea6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf62cda-5ae6-4773-8c80-cd05e37fc95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43fa299-e33f-4b27-beb4-845da377d343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e70fd72-d3be-4acc-984d-326f2bca3551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cca9c58-04ba-4e3c-959a-0f7bc542c920",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a28f70-3a40-4c66-8353-24f35acdb666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fb3aaa-9fc2-4206-b91c-579b8439def8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0d5d38-4946-4082-85bb-66bef51fdb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ddd559-6d77-4b16-9fd1-5dc50c5103a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6997793-1c5e-49af-b167-5409469c155b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e260bb-4e3c-485e-9e4f-b0e5cefdee92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe233d0f-3afe-4bbe-988d-652561bc83e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86e8a00-ef1e-4fab-9ad5-5c621f49741e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a654d9f-6bcf-4c9c-84a8-b3cc13761a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14205b8d-874c-4723-92fa-cad46160ea44",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c96c48-5ae9-4905-a775-7331d88041e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c3adaa-38bb-4b8c-93ea-bb7704808635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d385aa23-0a02-4d21-9251-16accf6a7383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d19154d-84b7-4805-ad3d-734904e0a587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e601e36-4468-456b-a780-98426cc40247",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd99d12-1f43-4177-a33f-55447f8fa49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e8edec-bb60-4381-9c46-deb2e883ec16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0670067-7a98-4106-8d67-25fd793d9891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4710441-02d9-41e0-8222-d000c74ec506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fe6b17-583e-466a-9254-ef35926ac964",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832d691f-7957-49d0-848a-290d2fc6b28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71084c8f-07b9-4f4c-8561-dc6ebe0a1013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8777d237-bdd8-4f95-a18e-21f7a47b15b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdc2a81-e524-4193-90fb-a4efc49cd652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7a69d8-81c0-4088-8082-b6ede97121ab",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4747654f-ae1c-4062-9670-1098fc712b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ce7da6-3976-44ae-b255-2e94ae8e0267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c415cd0-1923-4bd5-83ac-5f52610d42f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efaf535d-e703-4230-b2bf-67c1230fefaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2262bcfe-0660-4c98-9f33-1db556421a53",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75a91d4-13ef-42d3-81d8-a32e8d6e039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3508c9dc-a355-4475-90f7-0737759bbf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d5361e-aa82-43ea-a69c-381770fecf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e2a422-1b2b-45e2-944d-542fc4f2dd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d38ba89-5dbb-4887-9212-3495d9a97ed2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabe0923-d1a8-4f26-b462-b9f40ddd871b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d5ece1-6c06-4dd7-8b7c-30e8c940aa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8e6d14-0913-46c9-b74a-ff64dc882893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbeadbb-8eaa-47ec-acbb-ce9ccf0417d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86da9a29-1297-4d67-93c7-0e2977eef4c0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed1b34e-9522-4bf3-9d7b-e7eafd618b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b97ef7-b0cf-4a2b-8472-12d90e9f5795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6101b66-4b5c-4278-bc05-0ad04a464877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96056465-591d-4ac0-9dac-e094bd6f93b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a05c55-8542-435c-a571-4f30f48ddfe9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88229dbb-2623-4173-8ad1-bfe3a8a0e8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec923df-16f8-480f-b89d-494e06390dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f02cab-43d3-4fe0-8865-2218d523677c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea676b95-0717-45e7-8ea9-4b651aa860c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4750a12-3ef8-4a53-a791-ae7409445653",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1961afc3-db04-47a9-ab24-47b18b2b8bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c64b651-4c9e-4a2a-a3c2-d197b158cb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03af5d18-4fc8-49fe-906b-467434a7f948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18df350e-b335-4006-a131-8b96251827d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae968f7d-1942-42f3-8cfe-3e72f46771a3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3148e02-703d-4b1b-b3a7-389b85374dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017fe33b-4acf-4218-a11b-6fde3fb6ff0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aeb399-3e65-4003-8d93-992663a06b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0d51628b-6c5c-40db-ac70-3d1958dde935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61183e35-de74-4700-93d6-6e0b54c0d5f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94f273e-ac3b-4712-a098-6f6444688334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5886f6-4368-484e-bbd5-54b7ed466a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0144cbbd-4ed9-444d-91ac-3a8a231b4a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40b1b5af-4e0c-4578-a875-9bd813c6f1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238ced73-4cd8-4e8c-ad9f-0ae1b370e5ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34833e2-e054-4459-93e2-7b809cb0efda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb24957-69ba-470d-b003-f207075bc6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2268f9-2b99-4486-af77-42da56a32d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf35f21-6863-4bcc-b0ba-e5c6ee5ffec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86edc3d3-5332-4046-a735-1d92fb008038",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da3f70d-7d61-4e5b-9d99-4ae2e92e9541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798f2a1e-e341-4938-9d86-ac3085a9e97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b50085-ab83-45dd-b556-83d935879329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d286929d-1e24-48ca-acae-83e214ffb441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fe0a11-f4e0-4f8e-8f97-2f16d508434d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ade372-bfd4-4a48-8f3c-3253167c58bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054040ec-17a6-418e-9975-e737889e747d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc81f81-719c-4932-89dd-3051f6a4ed52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3de698b0-c2ec-49c6-b523-ed8a30341ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f45d935-fcd1-405d-8176-c0bef926ea6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310bd028-5d31-4549-b76b-73d2328fd60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5d6062-a523-41f9-957a-af1bf0816cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b7cc34-0232-4b3b-a4ef-89014ae5a41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd0672b-0298-4d4e-8d87-9b2da6d57902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26da5ccf-2b44-44bd-bcb3-23ff4ff232f8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225befb0-8728-4a43-abee-d17a46249599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd22a03b-2fd6-45ca-abe1-37c07cbeeaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239e1223-cd59-43d9-a445-c18912edbddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a3c1c6-fed8-4d61-bad9-439a31309aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40555404-f342-47b0-a11d-abe79f5805bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdd4911-35c2-460a-945f-96d1cfad6810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a199ee-5f55-4474-9bd0-ad126487d26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dda37b-a26e-40df-acde-1ded35859951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75f6105-4bc8-4988-8c89-d324dea039c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08b297f-8777-4c7b-9cc5-6b8495b0e30c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2defb93e-ad28-4750-86ea-73aba0e255fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f84d1ef-6ae3-4b84-8ca9-2eccb87663ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c66a85-9dc3-4d67-8971-dd54ff3c12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ef9ac4-7a95-4892-a56b-fd0dc1c3e794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96acb5a-1e40-434f-bb5b-c629279751f2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f08c90-ed97-4385-a6cc-2f714a172573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06201c46-6eaa-4ee5-9bab-e1cf0973f74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eb7507-0de5-445b-b924-848fe7ae323d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a433c7-d5cf-4466-be01-668a0a5ed59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a4c9a0-8fab-4145-b1cf-e4f7eadfba7e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2de1d6-0a7c-440c-9df4-f8f49b6de435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff9484e-4ff0-4839-ae75-7665b15d5288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8762699c-fc5f-4b44-b923-f3c5d4c4e284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d163e2-33c2-4c21-a174-7473a3ef93ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66869bf9-2557-418f-ae6f-b0acfde227d6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4703b3ee-c2db-4d4d-85db-63ae1b47809e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda29101-31ae-465f-847c-1af1b44c9030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12725665-86a6-49b7-bf92-873c79b9d18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6de4c1-d485-4391-91ed-e36a5c6cf54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e08317-4b48-45c9-a34e-7c82e2c1f034",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fd4c1a-9998-456e-8fbf-f61810c1d614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f30165f-0128-44e6-b2e3-dc454a6e6d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff9c968-3201-4d2c-9078-d40022077d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f31e62f2-380e-43d1-8696-7edcedff09c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7923b253-d5b8-493c-91aa-de20c5d4a28c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27400f5a-c5bc-429e-bcda-ecee55cf5598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97760e0f-7e78-4035-b784-db5b3b71c6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89e134f-ddfe-4a26-b199-1978ae17032b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b725ca-be1e-4995-8059-03298b9795c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fceb9c9e-d0c4-4e8d-b2ca-1d3d03b77ce1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e395534a-68d8-4598-9628-da75a94a39b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e08bbb-e84c-44de-9963-ca172e476feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0effbc-667c-419d-83f9-aa748ebfed11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf15e33-16ee-4cfe-9659-bc5d66164ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a822c5dc-4436-43e3-8a39-976b2dc159f3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121d0dd6-348c-46bb-abf9-f6daeb02eed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cff99a-d284-48c8-9b4c-14038a511d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fa392e-efca-48c4-8025-dc01c44531a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f190b47b-b6a5-4102-81cb-33376a77947d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d199dd-3c1e-4b65-ab96-74d8cb8d1fc6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ef760e-a2bc-48ef-9725-66570bf5eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ec3a7f-2c76-4ec2-84fc-5d2f30912869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f24eec-32cd-4636-a975-eb9dfc68d7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "516031c5-8014-4079-ac9e-74c2ebc6cab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2092293e-388e-445e-988c-ce3917affdee",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bcf43d-fcac-4ecd-816a-5746e19200ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b7e17e-7861-451c-9faa-f648b1ced503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdb5f7a-7f45-4c01-9985-311391d011bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba43cc9-2246-48ea-9fbe-703232538594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac955096-69f3-4a87-b835-48dd2ffe1681",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb282ec-5a51-4ed9-b1cc-4d571c41d96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80379251-7cd8-420e-be83-6dcf041fbf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf4ebaf-95e0-4f70-9c8c-ea3bba26e2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8c02be-bf70-455a-a648-fc12f586497e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb689e5-77a4-4239-9adc-a032f95ec138",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43b4e42-c67c-493c-a114-93d32cbea701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058aecf3-76c3-40cf-a376-23552a97a277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5d5df2-7407-4b4a-83d5-8c4d9ffa9e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2740846e-f6f4-42d9-aacf-06328d2eef2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb60b8aa-5156-4f88-b34a-73903acec245",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fe4979-349e-4c4f-ad0f-aad22bf7be36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52242a68-db4f-431c-8c95-83cbadf41f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a520eddd-9c71-442b-ab45-37f1208dc451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5160fc4c-f92d-411e-9f91-5ff4dcdfa84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb030168-206d-45ba-bdb2-c4ba41a7b7ef",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f657330-6b06-4fec-ac6a-1d62fbb83d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c2ac47-4f47-4079-82da-9e1b4d9af4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e85b5e-54ce-4ae5-bfd9-a6ba7af50d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef33ea2a-65d2-463d-b23e-07c0d6b97095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0645f81-6ad5-4380-83bd-cb84f05800d9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdb21ad-cca5-4722-b79b-91c7c7fd22a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b45a04-bcdc-47c1-94b5-7074a78db18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7649601-b478-439f-b044-4d5ffff83bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "919ac6fc-cf8f-4743-8901-49f042a3df53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bd3f04-64d6-4fb6-86f9-4dc63bda813c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fe9932-e4c3-451a-85c9-6a8677e6ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60be8b42-0f23-4679-a38d-3a89ccb61cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127d6bad-654d-46cb-87be-b98ae2c71ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3ca512-cfa0-4ea5-bfab-6da6f63f7da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78921bb-cf29-4892-9807-a4efc0b4d7a6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5c1191-c073-4ad9-8067-e5389af35aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a56d527-f3c4-43b2-a0a5-59cb61f56110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9e9a53-e21a-4641-86d6-f899db820a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce766665-0d13-422d-912b-861ee7001a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ce04cc-7aaf-472c-b0b6-825af7076ead",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252f5658-2d40-4280-8e7a-87e84eec2aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec56442f-9c70-4873-879e-309a15850c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5231e1-9538-4ef6-9ae9-0d27123ecf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "acbeccca-270b-43f6-b5e2-9fbbc12a7ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec8b752-377c-48d6-aba7-40c7b333d195",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9118f855-1710-4e8d-a609-40ff577d5f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48179342-2964-4a87-9e3e-a3934109ee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab004015-7eed-4e03-9f82-f0aadd23d800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "beecbccc-c2c7-4480-b6c4-f1d0c3d45667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe9f6c5-157f-4e5e-9b79-5123e7903b7d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec716d23-b8f7-4c2c-b606-19a3bb1207ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b288a17f-1b06-46b5-8bf0-8a1e7286a663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ba11d0-a2fd-44e6-abe7-fc5dfaab4f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "522685b6-67f0-4370-939d-17631505f88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e0361b-79d6-4497-90f2-4b77d498032b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef24d65-6715-45bb-b5fc-0aa1c72c3ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89af5837-0daa-49b1-915b-d08ba9eef5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7a47e6-a9d9-4d66-8bce-0a2faf35efb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3a0f2d-fd3a-4b02-bf96-817a3e065b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0e1566-de30-48b3-8c40-f441bc594bc8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfbaabe-4a2e-4fc4-8eb7-7a4498c0087f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593987c2-13cd-4c05-8666-92ff66def498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335a75f2-411b-4a08-adb3-6c54ea9f2721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5e10ce-351e-4a2c-bb86-a4c18fe68230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2953d0-0599-43ec-9e1c-e4814bc9e1d8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd91869-0958-42f6-99b7-5ba415c2acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4aa7a39-5421-4571-a5ea-80cb8cf97612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a16f93-2405-459e-8e7a-3ce98e7fbf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75791592-ca58-41bb-87b2-0eb97f6138e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117d50a5-a59e-417b-b24b-9e4b51d939a7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2ba91a-4db1-4b9c-94e2-030fee8cd9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ef1d8b-72f2-4ceb-a06d-1293c416e712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed24efc-bfa6-4234-a5ea-889325f536c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f58bf1d1-e97c-405b-82f0-a847138d74e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd99366-9a8a-461f-8a56-42ccef7ba189",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd87dced-220f-460f-9ef7-8e5dd30dfd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9bc8e65-8ed6-4c5d-a517-c1800d0368f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c9c971-1f75-43b6-91b8-7e3eb18363e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4111a381-46a9-4ad7-acd9-4cad7c5d2231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816b9098-3033-4359-8ad2-dfdbb5a2a41d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec323bf6-9abd-445e-8d3e-3270e67eebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0189d78e-5a11-42f8-9bc8-d80a3839c0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1452da4-268f-4b68-b713-e416e3d91542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f701013-087a-46d7-b7dc-dc70f56c45a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6301319-4dee-402d-bcdc-9d4c69d78030",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9212c2da-9422-4d71-a380-ad97d64c32b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52209bd-aa11-48f3-9997-9f513cf559d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7d819a-e6ed-4d6b-80ef-a41afee62d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6da89027-9b35-47ef-93e6-86f7a1a6e5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c6404f-8e4e-4e47-9ed6-5c7f5c6d9b33",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5334bdb2-b163-49ab-856b-506ce4fed40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d8f1cd-2fc5-459a-af02-e56bb900bd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e546cfa5-1af2-4a98-8aa6-06004cdd5f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ea207b-fb9a-43ad-9d49-19631b21c8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28885a62-2566-414b-8e11-c6cecc438dd3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b815990-dfe6-43e3-ac1e-e3990c8403be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c9b67ba3-7d00-4298-952e-d1cefc035e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e880ca-02cf-44aa-ba7a-1348976c7f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55e51ee-b376-49a7-b075-d2b29ce2fc67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f1e0b82-67df-4c64-82c4-65296ef2b7bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9c77907-32a4-462e-826c-818a865a9a3d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce54cbfa-d37a-4280-ab08-4a33dc6f547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cf082b7-bd34-4bb5-91e8-0842b12af7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a818f9-705e-403b-b220-252f26880b30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af33a7f3-76c3-4388-b244-cf4a7202ec78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b8058d0-f5c0-497d-9821-63c1fd2cb449",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a484e5aa-3c3c-407e-b417-613a685d12a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be15140a-3545-4d09-9ec1-506789f9fcdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7abda55-a858-473d-9828-e2c15fc29279"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "023136bd-e139-48f4-be64-2ba99ad70dd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e64dcced-5f5b-477f-99eb-b6b9ee4eaa0f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8eeee555-b4e3-4758-8ed4-f8573801946f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d6cacbc-9ae7-4566-b4ba-394ed4f5072f"
                }
              }
            ]
          },
          {
            "id": "d2dc8f5b-e377-4340-9ad1-07963badf38d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a5f7258-8a66-4ce0-b367-be7accf60183",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "030b68b3-7a04-4910-85f1-8d5bd4e55a94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3871485-38bd-4898-adb8-8c02a19d66de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fbb860a-e08c-47e4-9794-f1e05904dd3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efce6d02-65bd-45c5-99bc-cbb16736c584"
                    }
                  }
                ]
              },
              {
                "id": "199a78b5-162f-4920-9618-3758424903b0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee1e6698-2eb1-473c-9c30-c1fa05dfa767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a94fd136-fd72-450f-be09-5a01613f3a45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56acc2c1-9edb-4ef3-8449-1e4085667d80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73f3c574-00eb-4845-951f-2a6d2bd7a1d3"
                    }
                  }
                ]
              },
              {
                "id": "4f1421d5-b598-4d6f-b81d-9cb4cf31972b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9ef9d21-00b7-4bdc-b65b-f5f0c78afcd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3db5ae16-02fb-49d1-bbf6-60d872ad2d0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd833cd1-f7be-4110-b283-fa96269b9717",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9953b629-cbe7-4e47-a9f5-6613f8c91245"
                    }
                  }
                ]
              },
              {
                "id": "2cf067da-0b62-44cc-b533-acb85a6e11dc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ce071b8-5623-4724-9dcf-98261ce925b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5af78c4e-21a2-4115-bfce-8a1b81263a26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d277128-1ab4-4838-adfc-9ca6b2d9ea82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4e3909a3-b9fe-4c53-82bd-2e5a18ff0390"
                    }
                  }
                ]
              },
              {
                "id": "3751aa83-908e-4aa7-bbb2-a6d53317c3ed",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df6085af-6a3d-4a3b-8a0b-80773ced6ffa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a020b15a-4f2b-4b17-87bd-941fb3aad2b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc407121-20f6-4f7e-9bb5-0e4c2a6cfb82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ea959b2d-9a07-475b-9042-301974f0d2af"
                    }
                  }
                ]
              },
              {
                "id": "1f3f047f-1ca0-40ba-af3e-fa0a2d02fe96",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d054ecc-716a-410b-abd2-c09e8d2820ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0bdf89c-4464-476d-b90e-03ef97bad885"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "634ed0f5-ba4f-48a3-9878-a93b495c384a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6d72a98-9277-472c-8f46-eb2e76a9932f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "005a1342-ac63-4e03-8e82-42ee77629006",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98a38b0d-c408-4023-a57e-92c627b108b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b3e2198-12a8-475f-83db-1f3488c58238",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4f331be-ae16-4b67-b9f8-312c751c85f9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fd7a4a1-2387-40f0-b35b-c9113c3b451e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "66a6651b-0d05-4e35-9e04-1b021e7f72be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0ca79a5-99d7-4afc-8c16-bd2ac4bf1a81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce4b0dde-4057-4618-b7e3-0de84f965fb1"
            }
          }
        ]
      },
      {
        "id": "ad0680ab-b24b-4128-864e-8c56c3c6f81d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e507da0f-ce00-4014-a72f-58ef484a15ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba7a347f-ded6-4014-b649-f91749349e41",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba820d44-61d5-4440-b8d1-1fb06c72e37e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85002c2e-e959-4688-91de-433f562168a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9d2f2b-ae89-4051-b916-b964bd9e1dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772c6dfd-7d54-477c-8454-118ab1bdecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4e0222-8f45-45d5-a357-b3958fcd7937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c22873-9770-4bcc-b1a0-1c031ae5028f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b603eef-1ab3-4cee-9840-8db63ed0dfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41196231-0e4d-4426-a17b-873c8511f8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7240d8bd-1ba0-465c-a7b4-0728542c5ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59e5708d-8630-44ed-943e-7059b28c0ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e34195a-f13c-474e-9163-3294033488ed",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a2e0e1-d79f-4036-a4c1-7da9212cd1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62725eee-638c-4321-a412-2e2d7a14b661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f6e867-3a25-4f7b-9dab-fb1e0a2dc7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f31bbfb-0e41-473e-8b24-5431a30c9b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c803813-2da6-41d9-9d06-9ee5e204fe44",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbd6dde-1eef-49d6-87ee-c0b634d72164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5981c923-ffad-4924-85fb-152770d215a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c6096e-1996-4525-8e5e-8abccd40b659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a3db50-5666-40bd-90d4-e33fbe857a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0a48fb-b832-4414-8ac7-c1e2815c7f44",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671b5289-d5ef-465f-a69a-df19007f1590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcd838e-774d-4013-869f-79f6324ad327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06b4fde-c0f5-4fb9-9dbf-59587b312697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e55a97c-1374-4598-8a3f-8897337fee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d2dab5-b0d6-4935-8665-288fee92e835",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67588005-00aa-4e8c-bf46-25d98f6e7670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8ee0c2-045d-4481-9515-99fd7140e866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af953126-002d-40e9-aa14-b647add8f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11df4c8e-56b4-4108-b9d9-c9855b1189ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab957c60-6e41-4037-b10d-2cfd56b95d9c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b705fc0-00a9-4624-aba1-6d7a53c506b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825be0b6-2f2a-4ddb-8d33-0e18d9acd67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df836f95-24f5-4d35-a4b9-fc2f46c1ab71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a69f69-bc97-4122-a637-754cc947ba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fedb9c9-f1d2-4538-a940-4a77cc15f31b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1a7977-dd97-4077-83ba-2e56755ce572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3572299-789f-450c-b305-91b3ff163f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbf40f9-0c52-488a-88d0-bd809aaf5c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f7b6a1-9fa2-4579-956a-a2f52c3e51d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c04f7d-c537-4eb5-bf50-d9568744d2da",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2dd817-97d0-4ec8-9475-8310964aeb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db168c7-6001-4568-9931-922f5a20120d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4419ed-6f98-47f1-a298-4a479990693e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dae73b98-f6ae-4e8b-a8a8-297068a09048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c366fe-db26-43f9-b3d4-2f882e1b597d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff49975-d789-48f3-8c69-273f3d6921c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77363dc3-5ff4-46be-9744-916ef35611d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98387242-b117-4cb2-a85a-22ec51c1280c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4a82a8-75ad-4c0d-95ae-e00e8eba930f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349e44b7-9fe5-4c09-812c-ded4f3394c7c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ee806c-8df4-46aa-860a-5c21fcab65c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ce01c4-989a-4531-9150-0eb717b69fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba64361b-45db-4574-b72a-314c182935e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1a04b135-2c6d-47b6-ae72-09cfc2b6a452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a02408f-ed46-465a-8b4d-d6d3d370d225",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983f9972-355d-430d-b271-406c0866b1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bd29e0-e392-4b3e-bc00-e6a775d40036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a361c9e0-53f7-4abc-96d4-760d7d6fec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d88b259-a9d5-4bce-98cd-2247a0e6a90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9281d11b-01f4-48ba-96ac-2fb300b99fe6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de48b06d-8867-40b0-892e-15de56a195e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da2f989-f1d9-4b1c-9079-5a47df6d4043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d825ccce-f9c1-4db4-aa22-8c49f7216e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe87f7b-3691-4dc9-8669-58156c02f410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3093574f-9c14-43bb-8618-e001864c11c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b62c74-ce00-4a8d-a03b-42d515946234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e196ed95-307e-49c8-8269-1d057e3a79e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df57750-8248-4e6a-a4b6-14225b26d45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "058aa46b-f587-4c5b-b93d-c9b643ee3ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d67508-d2f3-47b1-a8a2-080a3c6860b3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b86133c-4980-41b8-824c-38f7c4262522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c20745d-d60c-4ee7-a86d-52ccb6b2ffb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f277c66d-0454-4238-9fc9-84a55bd4c487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ae935e-91f3-4b7d-8ca5-57e0abaa0187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4adf6e-56b7-4fe6-9a09-5c269515d6cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f92925-a54b-419e-bd46-a60312859a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bf5a03-04c1-45bd-9eeb-5b93d4cfdad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4873b77a-0aab-4188-92cd-4da27f7b14cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1504eb-634f-462f-94ed-442a1b77f48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968e48da-d6ac-4ce6-81de-2c29ecbd0eeb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633c64e5-6be5-40bb-94bd-5ff0ebd056ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16fc5af-0fea-4132-9c98-2e1eb800f312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1649ca89-eaeb-4fd7-b2bf-24aa4a970ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "601cf767-9468-44ee-84ed-1d86e6c9f0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4490cd6-4b79-414f-96b4-0557fc09c9c8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba77fcf3-65c8-42b5-af02-b7f1db278541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2ff5a3-7cbb-46a4-9932-c0d39a7eb4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe10b2ba-27c1-4dc7-b276-27335a79ce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed57c43a-e505-455c-95f1-49b499ecda6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f736ae2b-5e5b-4913-b389-4df241ca943e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3612ae-62d1-47f1-b9be-39859a93bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a4ad39-9b59-4c03-b6d8-a7f52fad9c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ad91aa-61cf-4d62-902c-9cd44748bc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86c5a98-2297-412e-bb26-09074a32662d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670a8d3c-362b-4a83-94a0-94ae0c774fde",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2effa300-1047-4527-aaea-349e34e22f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe01d9ee-56d7-4264-8a9d-56c316a0216d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b69a4b-751a-4b28-8340-13e855f99fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "950a9e53-a22a-4f18-bfef-8a800c38606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34f7a61-fb94-49ad-9f83-310f69e16e69",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2e9186-75da-4144-9513-09105849d71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32d49a8-c6ee-4e5d-9e1d-36be9550da5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ef884f-0672-4271-930a-b1bb11e48673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ac6ccf-2528-4bf5-b301-3d6c7d5caa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48497d1-fb25-4bc9-bb4b-7c7cabec049a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02db8c1-22a8-412d-bc7e-8846fa21ea65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c750e3-3704-42dc-809b-6737649138a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e2ce48-6afc-4046-986d-78f70a8902c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7f1118-da38-48e7-a2b7-ef9c2f029846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a193537-6e07-4cc0-baba-15cfca536cba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824706ff-7a5c-4964-b35c-5ce34dbb53fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b07bad3-3769-4e80-9a71-757ce7e33ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21d0a24-74bc-448a-948b-05fc47cde43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f017aae2-2a96-4d84-bcbb-d8814694eba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5facb84-44d7-4972-9fae-d8830b1b5548",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8293a091-cf3b-41be-b599-47137931f3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfb666b-3da0-4f24-86dd-ad86ce7ca944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a98f8e-68bb-4910-8846-cd92da0a90ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50a8cf2-363d-479b-a116-b06de96808e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ab12cc-a78a-4218-8601-90b5deb863a9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a307ddcf-32b7-4d88-835a-528f6d572768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed058078-ffcb-42e2-86c9-8062993b9281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43857393-34d8-4da9-9e5d-1c74e06b8df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d62ad4-5301-452e-8e5b-22632ab051f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c19a5d5-6396-47cf-b887-e0641e770b3c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5f4c3e-b6e5-4bb8-9f1f-d3e6590307ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed57ff98-e113-4a27-a096-1b4aa81943a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe1e13d-64a0-4995-8be3-f989c213a5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce2fbc3-097d-4dfa-a454-2ad08c01a390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac653f8-04a6-481d-a627-7a54ed67da7f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7572c0-fc6c-4dfa-9143-2ddd2a52fb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1d657e-0b23-450f-8448-a4402df428d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccea5af-b0be-41a1-8222-0efa327564e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb435a8-1ac7-45e6-8ff6-085d4dccabf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35b7b6d-e6ad-4182-8827-c27d58aa7cbc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ee821c-a8bc-471a-b6ef-114a43d76a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfb169d-4c33-46d6-a7ef-af590b541cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dec08d-bbf4-429d-af54-8569f4b2a088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c33943-2739-4a73-ae60-9f2cf8b10d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0713c6e-c3eb-4aff-89ab-a655637d6dd3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114a2647-3338-466d-8fce-6c08ca5c8be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef631ae1-5eaf-42b4-85a1-300cfb4e73a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d476ba-b5fe-490e-9874-bd9d9ca911a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c56632f-627b-4a00-b952-331f7d6a3efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4ef16d-c385-44cc-ada0-0866d5aedbd1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390edd69-b97b-4696-b321-b6b140cbe2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ebbbb6-e7f9-472d-949b-fbcb60bcdfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb7f447-381b-43f9-8cea-79a04b02dbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06970869-9a79-4dce-aca7-dd132f9b9b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdd882e-2216-4a37-a688-fd9fb13171fc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfb22ba-4b3f-43ae-a818-4b7717553fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4421fb5-3f5a-4051-b95b-3c593662c66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a35adfa-cab3-428b-9fa9-0ca9eb72a263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56fb711d-ab41-4fb0-accb-56503ec1fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032a3c68-dd43-4775-bd2b-4054c0fc1e91",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d5b72f-48ae-4112-952e-f89895de7eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdfefff-55e8-4c41-90ae-79fa1af8a6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d79b842-3c0f-4f0a-8e04-41bbdded828d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6dbf867-91cc-4c9b-83ac-8aa0e802119d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e91eede0-41b6-451e-bea9-a3dbc9cb2724",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49130d07-3ac1-4513-b148-ff02ea4a25cd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc85afae-4226-417d-81c7-411169146a1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4c6eae-77c5-456f-a3a9-0c9866626f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d8611-80bb-41fc-960c-6acd3c233c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5dc98cd-bf16-4659-82c3-9c2625d572ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "263b05df-f522-4489-b4e1-42a611c6907f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a36374a-d3c8-4acb-aabc-c984cd5b5da2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a14e9f33-ea7e-49ec-a6dd-3b3a77d9fa8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eddc68a2-00d6-4949-8f3d-57b417d0a258"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fa3c1c6-826e-4245-a7cc-66f8486f5cdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a6061a82-5dc7-40e6-845c-52b07c73caad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9201cf56-768c-43df-9fd2-e9f075c3fa53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70f4ef20-3d1c-4f2a-9127-64867162ef00"
            }
          }
        ]
      },
      {
        "id": "cc5db0d3-d66e-43b0-9c6d-b5a8af96c583",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "24301f0b-6c04-44a2-823d-8cb5f7058e08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4c41bd4-6bcb-4c84-8e65-07312b5972af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d423b5d-c475-4db0-a639-73c8941fcb00",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a35feb-141c-4a63-ab33-f05f6663c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8882a744-19d2-4140-a53d-d981ef78350d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b43cad9-c110-4c25-8f80-c392554de628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "618123b6-43ff-4e56-852e-17babd0a5b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748ed573-2412-4087-9b5b-c754309e4e9d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842a3f9e-ad79-4074-8ce9-51f34c11db06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79614f30-9c98-4408-be67-679cc8c022ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1895d2ee-bbab-4ae8-ad73-56281aac6081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef314e88-f41c-48c5-afb5-a28d1ddff393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3855f36e-9fbb-40ce-b206-02716173d643",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b620d37f-9ab0-417e-a87a-c1d54ef5ab22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6701f3-0cf7-40f0-8481-a8479c6baf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371080fe-2e83-4aae-a0dc-d58cc3023490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46b46a28-da66-49fa-814d-29753073d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7888a660-2e90-4bdd-8ed8-aad9139949dc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9114dfe6-1448-4308-818e-3864051f0b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d522811f-39f5-43b9-b79f-f7e9f65e2c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c24c8b-7db5-4751-9231-2903e5c1d2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9bb122-13a6-42f4-8382-4807afe38222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21445645-f5a3-4419-95ae-b78fbb8fdb45",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfcd62b-a89d-4853-af9b-6543935001b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034e6e85-f9dd-46bb-8a3a-7f523c51f079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b589396d-24fe-4708-9e4d-45e60fa16f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da2702b2-a055-4248-812f-6e57ff9e887a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7010a1-0b0c-4d02-8e37-8894cc059e2a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13d6ff2-3504-41d7-af76-a0ec8e2b6a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73956f1-af1b-4dfc-b18c-fb6d0f99fc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7094f7ee-72e6-4906-b8c7-9ee9c89c842e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26452744-d711-4115-b7e6-383426dcc7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de822718-bfaf-49bd-88fa-ea19a480993d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d737e034-64ad-4482-bfe8-227f3df74de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f801365e-2ff1-4c90-8879-e392c913e107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24036629-da31-4ba9-8eac-08d73b9f1b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "550c8838-12ea-4401-90d6-e0cd6cc66181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeeac1d-111e-43e0-99d3-c858ac22934a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1555232b-f5ce-4f39-ae58-cb209b97bde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d6a066-cb19-4087-b26f-28853394634e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52533179-1075-4250-9c88-bde1e16ba996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9ff5e5-8fe4-49c5-8fae-7df39f71b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74917563-979b-442a-a987-07b359e6d995",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbcc8b7-4e0e-42a9-99cb-ca6a3563518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5901888-7d8d-4835-9d82-9d068622f5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b68e0d-4c11-4534-848a-1dbd3e5c19ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8716898-f2af-4796-89b5-1702efa8ef2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6736ba60-ca8f-4c7f-9009-6978f7ebfca3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b49a3d-7f4a-4fa3-a308-99361de4e483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d0b069-6a09-41da-93de-38ad47c8150f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2f8a12-90ba-4c7a-ab11-f6b6c67cb906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53253c1c-31a1-4581-8a3c-d57fd46c6e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc0b9fb-67ef-4e6b-b0d6-af26f286d73c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cab733f-2f5b-4789-8742-bf9ce7a1ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2e165e-3510-475c-89f6-7ad3bea95a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03d594e-ee99-4613-812b-484b24e3f423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "10666949-3d91-4849-8355-5e7f84cb89f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7e38c6-93ab-441d-9c6d-f0d3a0be8bf3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee11af3e-82d8-4819-9f63-a4eb04fdb9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5723f9a0-af03-46ba-8f81-00248bc38c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c66fe9f-ed6f-47e4-a418-ec9e63c4d89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "586c5d4b-45f2-431b-bb5f-3f16604ba34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b834a1-79f3-4e90-bbad-98557d467ec8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6827c73d-b35c-438a-abb2-293a0d581055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a2ded6-99d5-4b6b-8066-d54e8bd1dba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1734d0c7-37c3-4fc4-9645-a1ea269948dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d688f6-4110-4e8a-9394-ee34251b7d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d58876-3fad-44c6-8efb-8b6fd873e4e8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0774466c-5606-4db5-b0a0-519274a08121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414df06f-a74e-4f76-865f-f0c90ca941bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f97b1d-04ea-4778-bcfa-b69b36041aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff99016c-bb2c-4058-b6c8-a305cd909fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d32f46-cf5c-4b6c-b581-ed145bf9c855",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d38ccd-3b7e-4f74-bfbf-e4bb95cacfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04da2ee-fcd5-40e4-b1b2-012483cdf1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b284d07-0acc-4671-ad2e-ea3c3ede214e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fc6ada-3a17-46ac-84a3-03c973e47043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea610d4b-7da0-4829-9c01-aef055f14a7e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d08287-01fb-4b84-855b-39f9d8a8c26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c833f645-fe0e-49f8-8a6b-8bded4d5b647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f373be35-e940-48ab-8c6f-bb174a2b4117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a480e10-d2bf-405a-8f6c-f14fc6c8c832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88c7cb1-dac2-4ed7-84b8-f35ccfff8551",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7227e410-2bbb-4f14-86a1-ad8c292b6058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b39776-81fe-42ea-b4bf-88276be2d74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88830664-1666-4fba-83d2-5823dc6868c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8c02c6-1137-45e6-b724-2378041be14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d71bd78-c4e4-4219-80d7-3c878c156c78",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bb34fc-a036-4dbf-a125-3858989f4f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72648f9e-741b-46c3-866d-9c08f44665e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0f71d7-dd0b-4430-920c-a437a442fc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f649379f-de2a-48d7-86d1-a852fab97621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068d5ca7-9a44-423b-8223-ec804ec28cac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d08daf-6837-4fe5-a652-71568c727455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c498a48-b360-4ad1-8f8a-bab19d690c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4652fe85-939d-434a-af1c-ab2cfc15106f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80565dcf-d947-4dcc-9914-ecd8e5281d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0c6bb2-603a-42fb-9fe5-f106be337ebb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b130f3-5d82-4735-a7ac-68092742ded9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7cf35c-7ea6-48e9-975b-b7be818e01fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e527588d-02f8-4991-9715-85904cc34494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa11730-f488-4045-8c16-fe4cf4ab1502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3a382d-bf76-4e54-9dee-4011f4744b7b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde12a58-cd73-4f50-98ee-eb1ef60b756a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e035cbc0-3ee9-488f-9390-850996762824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11086a4-1d36-467e-ab51-ec0682e0090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a322a93-d936-47e8-a517-cba57dce60ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388c6f4d-4147-407e-959f-a4a8a4bf2efb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8375ef3d-6193-40f5-a2f4-1d14ceec7aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e02e1a-889d-4e81-8b0d-a390d8bde4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98361562-735a-4b37-8880-21e021ef6ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "032e271f-25e3-492e-abce-ad5585e0d74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9458f5-1880-478e-a0e8-4fd842089d76",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30779be-02a4-48ac-a006-e26e7c13bb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd1fa24-1551-4d49-a31d-183e8342bfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54085e7-b6ca-46aa-bfce-e8ece2ac71d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2c2772-a543-4b71-8e7d-5dbb33525d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d50fe25-81f1-40ad-8ba9-cad7903a3759",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e127332-14e6-40f7-829e-b92a7824dcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e3d260-70e5-490a-961f-adf7dda85376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf99f474-62fb-4636-863a-3842a0817a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1e11d3-c85c-4197-8a09-3672f0f68ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf366d5b-8dfc-40af-b18c-cdde3a135316",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb16a0b-6535-4638-aef9-6298f18b7f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a772d02-4c8a-477f-99a5-8f5b87db0dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f0b35d-d046-4354-b053-b8813df29730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af841e0-3088-430d-8142-73b70a59dda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d6ab7e-9813-42ed-814b-029e113af1c6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34540874-dfe8-40a8-8c8e-249350eafac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec94e1a-0593-4d69-ac54-d7606524bbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f410bc56-c35d-4f1f-b01a-364f216c99b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "293bf9c0-63b1-40af-b905-791516193245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5fee44-0aaa-45f8-9c48-9e75d8bd8f85",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aba707-a48a-4333-9607-a063c0dc0da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235f1c70-e767-4837-a6d9-9a7e19045808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3b2f63-c01c-47c0-9b90-9f2758e99cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3820d5eb-3c92-41db-96a7-42aeca4b1404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051eb50b-b20c-48d1-bae9-9dea0e098540",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd93e26-c6d5-4f3a-87f5-3a91d62675f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0341a447-c6e5-47c6-b827-a7b510d81fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95819a4d-cb30-4fdf-ba58-a224366d26a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "417df787-9cf6-4f2f-8035-393304ce905a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02c991a-19d1-45d9-ae59-a1c85e417d2f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c45412-05fa-4e60-8746-7efeed6346f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86b1497-0e09-4f51-a5b6-f3a13e55a445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86903c96-17e3-4f25-9188-13471ecf747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d5c5e2-5e3f-4f7a-9a9d-011863b9c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b2a7b3-1edf-495e-9f5c-0a5b9ecfd515",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84366aa1-acdb-480d-82c4-822a3b486522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe4f019-8af4-4e93-8db7-ee00637aa6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f516c1c6-e9c5-4d90-87c7-e20374749b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f15bea92-945d-44cf-9fa2-b1026f3a7769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5110d4-6a2c-43fe-a83f-aa9d769d0a33",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0997d69b-61a8-4c21-becb-0f299de81e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3bb223-ef76-43dd-b123-2ba0970ba095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8947ab1-0807-4779-8ebd-a745a71a1c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e91032-7803-4b99-bbbb-20b2390f304d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0172b7ca-9b01-4662-b232-1b960eef4720",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a927193-1b64-4eb2-b1c6-48654273d02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3101ea12-9db5-4d9b-b001-d47bde705597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c9df41-06c5-410a-977f-4683869bd141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37cc6a22-b7ae-4d45-b308-8e391e797153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86424d40-2ac4-4c2c-b830-e690f3d148a9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee566aa4-43f6-4921-983d-fd4e187cbf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e793bda6-aae6-4a59-bbd7-5c5955b88a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43499156-d984-4457-a8ce-c142ab014109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5540f5-86ce-43ed-aa07-ba0550984b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca30423-ce90-4e16-b354-0b032599e073",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7ec25a-0e92-46ce-83ea-3dea8712e7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b902fba3-7493-446f-88c8-f6781d9b8b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f9d23f-2008-46f3-b4f9-bd28e2dffbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe48ddb-adbf-4d29-a0db-a75ba6890bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28048815-be3a-4575-8386-d8b7c8264231",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fe9d3f-dc13-4a3c-b57a-0760940a673f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fabc8b6-b006-4791-ba0f-6cf7bd8a5a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112aec76-dc33-446f-83e3-02fa2ee9b189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2518d7-c032-4ae9-a251-8e5b2d3d8741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574e47fa-cc12-46bb-98c8-70b832bb2d87",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a788cab-695d-44c3-8ef2-e5a0e199e3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdd6ca4-2482-474e-8ae1-35a7b6bd0181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eae122-f590-4577-abbe-44b23a2dddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "121d6e9d-710d-40da-ac55-e18611b4c7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b7a79b-ecb4-402e-8505-c6b1c75b04f9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4a16f3-c901-419e-80dc-7ae2794f317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9118142f-12d1-4f12-83c6-705d42a15b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a406f2d-4681-4f9f-9eef-dd603e5f0082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b6e4ca-c8a0-4e97-9b92-44204fd2ddaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42f8518a-0c0b-469b-a900-b29b10c6dcad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe62af26-7a5b-4176-a722-32e1682c7a4d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5178b0bd-cc88-4732-b1c5-70f85aa07138",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0e91fcce-3584-40fc-804f-743cf3da83c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca36538e-ca9e-4c33-85e6-55cfdc39fe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42782770-267d-4aae-8346-7e77ba9e7ca1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0b8c315-fb73-47c8-96aa-26bb176478b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02f09f5c-96aa-4709-aefe-d2ba01c73e41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e416b6ac-529c-4d28-bf7e-db2b921041ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e532950d-ceaa-423d-976d-04906d8ef6ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40cae3f2-1685-4859-969e-9b8d18f9645e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9ffc96c0-4abb-4246-8d9e-1abaa5d938af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1d284b9-81b6-45eb-bc3e-fc86c143832d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bced383d-cb80-44fe-98c2-ada03dafc9e9"
            }
          }
        ]
      },
      {
        "id": "eb011741-b1fc-43db-bfcf-e511d10e8e1d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0dfc12b0-9c5e-4635-9e27-f6ca079e4fa1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c76160ef-e3e9-4267-875c-f5c097b331d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cce2724f-e057-4282-b6f5-097ec6a78ce4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f538ba3-bb7e-4a15-b016-84f5a6617ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c390816-d387-43c0-bab6-1f4f89cbe5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e05ccc-0d4e-45e8-ab3a-3122b552b1fe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be074a1-3f04-43ba-a9e9-5d51061697be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c26f9c-11ae-4c51-ab78-020d882f47c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2b9a9a-13ef-4de5-962c-5a15f31f80ee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d80fde-7339-4a1d-9d29-27757033ed9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c00271-df56-4f89-b535-62a2ddf66ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052440d3-406a-4dd2-a42a-0183e1ace045",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca3d1d8-f2a2-4644-8cc9-5e5093484ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62bc3eb-2cdc-4f90-91c7-944755749362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375e0da6-4f03-4180-a825-167a595c3452",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33190ffc-376c-45ab-9544-6144f0fa01a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e19248e-e595-45a6-9a57-e556cc543c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1818ad5c-3794-4081-a878-b44dacf3c390",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63137e6-5275-4684-be65-ff436e9ee29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edc6225-dfbd-4ca5-bd12-6203f46cfa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a324457d-06b4-452c-9f7f-ac16f6969915",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f5c5fc-c28a-4e71-a765-1962790e6cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c0aacb-3f93-4186-805a-685a018fc91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fff489-f272-47b0-ab90-d8fc10d761eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65760091-a625-40b1-b00f-be7493c7e952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48860c92-39d1-4147-8fd6-5937a7ee1e58",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246cb542-8ff5-4bcc-8efa-4f7959fc58a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa35e52-c7a3-4936-959b-37b8f896f2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87083a2-44a8-4094-9c52-f3fb6d30f21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8519bc-8a1a-48e3-acd0-0ad166be5260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1470e012-b17e-4f6a-94c0-3e265c918f4e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c384bd1-4ff3-4049-9aa9-14d8f8caaf03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82843b75-c18d-4977-91cf-2a3beada6832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f316ead-4e13-4ac0-8a9a-bdc389e8b3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7484a04-164f-4e09-bd0c-529e243ab0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf88c86-5ff9-4305-ac1f-99bcee359f54",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a73ff1-38f4-4737-bbbc-3f68307bfa97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0285e882-baf5-4a47-912b-32805b2e0294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58cfffc-b2e0-4c1e-bdf8-d98656aea963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5682366f-4a7a-4d3f-977a-6327fc10e0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b2634b-bc32-43cb-90d8-9bdf9c479148",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c201695f-26a0-438e-b631-d9ca645daf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae9e5f4-e93d-47ac-bfb4-172adbe6b50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b9536-0dde-499b-ba1e-3912538e2f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2854fe81-4235-4780-bef6-7eb1f7da26fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496de3fd-dab1-47ca-a855-48a4880da3e6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56312b2-fc92-42c3-9b3a-d6ef0a08335c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49909e13-6fe3-4c34-8346-9844e5880c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e63ff20-a380-4399-a766-75b763c7a9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb391c2d-25b0-40fb-947f-387e4bc290d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ccd660-baad-496f-be68-dea37544a2ff",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeca45e-f8fc-4e3f-b75e-24d13a31bb79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b079e0-fbaf-4425-a0a4-f855dd0a26b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee23296-a790-43d4-9c07-07d59f4186b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eef18bc-ce7e-4f91-8359-a48992cd0f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397eafdc-0665-4d5f-8e92-d14657577122",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538a55bb-bead-4836-b6f6-71cd7c17fa49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd9b37c-1fd0-463c-a262-e2f1680a9b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9988f81-19ad-4582-898f-2639a9441fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431fd617-0633-43eb-a019-e600d7090b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7aef9a-eae8-4b17-b865-f78888b409cc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850a5a94-c264-4d8e-b167-8d1a3494c619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e624ff51-1fbe-4757-9195-e903862c6739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a391f702-826b-4931-8409-3c551b79f877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c38353-b506-4ef0-94ff-dc0ee26c8d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99516a07-91f7-4ac4-8353-deaefef53621",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de6abb7-e2fd-4188-a88f-ed0a583e55f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf5edf1-06cd-4bfd-bab0-a8f860c5d62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1540960d-d830-4971-99bf-275b6a76aad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cff3b19-30a0-45ca-b651-388982ef9920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a7083f-d79b-44f5-83d2-59210ef348e5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e92759-b1cf-48bb-8df2-ec4cdbe6c023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb12039-091e-4ac3-a1a1-2cf5d157e981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396b0320-973a-4f33-9db8-3ca36d0410f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4893e2-6945-44fe-9609-e931610fc1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371c67ec-4bd2-4602-ac12-deca6b9b8bad",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb02d7d2-9929-4828-bf2a-bf4d8c7ff47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab43897-b038-4291-81b9-3ee82597288f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8132e842-fd42-408f-9bf8-5933f3214485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762adde4-081b-4c7f-a851-5326e4e4a22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa92dd57-b8ca-4b2f-888c-041759dc0207",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe41385-277c-4c52-bc6d-6003126e991c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8eb104-524b-4435-83ec-9d06aeab94bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689628ff-e353-4c43-97cc-fe03556f19d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f75e02d-5694-48ac-a290-26c509f326a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b881b11-7958-4166-9ed0-ac3bd63e3d9b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8cf964-ccd5-419f-840d-c2a4730aaa7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81e6478-a3d3-4d78-a92e-518ece2d57b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ff1a6a-fef6-4822-8da8-f186b88e6e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f465f25-bd19-46c9-b6c3-af88f62c0971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a49a90-f835-4c2b-8c46-f0f18c462b92",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d1af15-552c-4a1f-b523-ec5531299f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fb9dae-a263-4b75-8360-512324233eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b0be6d-9dd8-4336-be21-d59ebfbb1434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dccb7a-aec7-4260-8599-9ed464a59b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2c802e-b49a-46a2-ba54-da9390ec4d05",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b9ad46-8be9-489e-a334-da57c57cee2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9a7e0b-a19a-47fc-8493-18309270e3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7b5c0b-4460-43ba-9eb1-77728f572bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccbc58c-20f8-469d-9f92-521bcbdcf726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a6ed35-818e-4718-a310-8c4a46b6f349",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c606e22-803c-4168-940b-0957c92f26cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02697cc4-93bc-4412-8a07-b708b52de74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd3ccd0-66db-4b11-93f8-c3f5bb21634a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b9f222-afe4-4626-a6f3-f39003bb83ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd91304e-0a67-47b0-b544-35cf5f64696b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6c1070-711f-42ae-b31d-883e202bc4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1eca94d-0c5a-4b0d-9eff-c1b9d1b8d0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3088095-e13d-4e36-8b9e-bef771b58eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b263b50-5509-424d-a199-d9425ddb6ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652cc6ff-c7a9-4991-8f87-bb2fd7273bd5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653b3c41-e382-4b17-9cdb-38dc8a945af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a47beca-21cb-4d39-b8e7-eb34b66ac823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c90823-b2a9-4d6d-9d19-c63df075de30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43891bb1-68b1-49b6-bb14-e73b166ba589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba182539-b276-4524-8d92-ec378aacd554",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300667ea-6779-4e97-bad8-2c912c706c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70e88bd8-05ac-4998-b29c-433ec10073ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd609953-e2a4-4c55-b7cc-9672de4b858f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c2f83c-8079-4160-a054-20760679da94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcae14a-877f-4b93-b682-22bb40c1533d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3f1b9b-53e2-4a3f-be00-14314dcbc186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c561316-00d0-457b-8326-6b21a69ea4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a492a25-59c5-4bdb-a703-54289cb700b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa44aaf-8952-429e-b638-92747cb1101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9707dc-5778-4889-b153-f67cbb7935bc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8023f6a-c91b-49d3-a5b2-f91171b07815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce1442d-a199-40ee-930a-5186cb5b446a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716f27ed-6054-4b5d-ba6b-107f1594d802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502de90a-d94d-4c17-87ed-e90c4ff178b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a5db30-941c-43c5-9a3f-49dbdac5837f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e9cba8-7afd-44b7-9565-e8b3ebf708f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30eee473-7ca0-4d39-ac40-b187ead08b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603d3073-2686-4ff2-a5f2-afbf9c3b82b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efaa063a-169b-45d7-bdf6-bc763ce832d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c65be8f-858e-4882-9573-2fc40e89440b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2100bedc-8752-439d-a663-3d369f3f549b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e196de-0e88-4905-89dd-ddc5fbf92b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728befeb-be2e-4cb1-9066-b325af9eebe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e305970f-270d-4428-8383-125d3dbe264e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ed41cc-ca17-40b7-ac4c-44690f373c18",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a592ee-01f6-4cf6-ab23-92c207375731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8c4e98b-919c-48a8-bccc-57efa724de13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab642770-47e9-42c3-9b33-510f002129a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7b86ee-319c-4498-b438-1a33c89ede0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b655b1db-ced0-4f68-b773-5d2ed78cbf89",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80983683-8e9d-42c9-80b3-2ca354a63038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052ccb5a-5dcd-47fc-8758-0bf08db3ca7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39d39c7-6d7f-4183-941f-3c82d4d8a566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9ad8f3-1179-483b-9aa9-cae1bb12ea33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1275265-3543-4561-9604-942b03f39326",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7894ae0c-045e-492f-a7d4-ea19ad04893f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0216bd9-66f2-44e9-9b15-49701ebe721d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f373dc-eacb-4004-aff5-dbad180da771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c490ee-e2a4-4433-8055-b948a5b5849f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd2b74c-59be-4186-b7a1-9688ebbdf8d0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e93145-3dc9-456c-938d-7638c5671878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24ff636-840a-4d24-91c7-a6adbd6d8c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107f7cb9-5fa7-475e-9dc6-08dadd8558a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abe7ccb-47ef-4a9c-91f5-8fa7041d0c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77dcbd4-2727-45b3-a8cd-3722e5850b33",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4e2b6c-7e8e-451b-9370-6683ffb381f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb7da1d-66e7-4d0d-88a3-d9f0a8ff1b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299ea198-405a-4c9a-8954-2b407e106fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fbc739-73ce-4d56-ad8e-3f77a354aa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbc4dea-a959-4915-8d35-e1a1a3e75f9c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b9f2a1-4634-4263-a8ba-9ddba3277e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672b436c-76d7-4518-af4e-19c32f56d0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64407922-c9a6-4699-a6be-12aa12481c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4d79d0-cb22-4db6-a2ad-e27a1e7a9ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e13d042-86e8-47a7-b512-d7a6a78cc221",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb82f6d3-7a38-48c1-86f5-a44123a4c81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e458d300-41d0-439c-874b-7a5101c00f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879283cf-83cc-4bd3-a89d-8ccb32be6e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae81593-5725-4f2a-8b10-5af511a46ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbb1f3e-29b1-493f-94cd-e561fe915b8f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2b88dd-3ceb-40f5-8736-f7b862e31296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1431e5bb-de0c-4702-96c5-7df7e4d49648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7068fce5-ed86-4ff7-99df-f4dacb0f12c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dced3c0-9e47-4c2b-a21b-33ef03042038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f198c531-6127-4502-9349-2a6d6dffd970",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36754d74-3cfd-4855-9597-16f4f28dce30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30d08b2-a5fb-4b72-8a70-6872a931e81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff2ec7c-1464-4ef1-a0ea-d9b7d4be1dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf3aa56-ab1d-419f-9fb3-17af62f308e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2201e409-f52e-4d2a-aa2f-a8c17d60175d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734f2481-c23d-46d5-918b-702c6b38a621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b28ede5-d1bd-4b3d-ac59-1f36f1a70f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833c80bc-eaf5-46d7-a5cc-0686080dd351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34f5c31-302f-4b63-8d94-5d2417724d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981b32af-abb3-49a5-8090-31d781fc2052",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2dadec-6c3e-43b4-9fee-f9f48d41488c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e12fb97-a106-4ccd-9fdc-5e0f794e2481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123fd3fc-b6be-428b-af20-f2d1ead22b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36018758-ce71-47b2-b400-b882542d3d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12665dda-4cd7-4d20-960d-c7b88c84a54b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e46e432-8538-4cfe-a407-40604dda68ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33aa0256-34e7-4aa0-8eed-06d7847c214c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fa3137-57d3-4951-b594-e03db6a1d98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b8e678-4be1-408e-93a3-e9588eba0fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887c25df-b90f-4fb2-84c1-a02ba0287477",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcd8c4d-e104-47fd-9097-2d41e32ccef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855fb10e-2f3b-4833-91bf-c7b2931dc353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0badc4-4799-4527-9da7-991e59cd372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9658ff5-d286-4345-a8e7-1e817ebb1efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98df3ab3-2bff-43a3-b37e-8cf3eb7100d0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3977e0ac-88dd-498e-bf5f-554e4809e296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6faa53f9-6c2e-4b77-96b2-28d18e40a77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ddc662-1fae-416d-b8a3-8df57da97f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c2b0f9-70b0-4413-8a6d-d16d98b9d7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bae2941-844e-4b52-a0e1-397b98db2fd3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b857446-69f9-4da0-838c-25eb50b2e513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220214ca-4eef-4a24-97b9-2d0a23af330d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc534c-bf79-4544-b94b-471549ed738d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b828541-54f4-46d2-9b60-edfdf3c724a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7a9ddf-f8c3-4ae7-8958-90f03c826088",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeb7782-35e1-44b1-ac28-f7a77cca827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf9bc4a-fffb-40ad-92f8-cbe8bfb16c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccff1629-9627-4989-8751-85b5c75ee39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f6b114-66c1-4ffe-8b4a-4b84b2d426c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57676709-41b2-434e-a852-78ec15af7126",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c1268f-e456-4ce9-a0ff-0f696a8ec23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8a229d-0f77-495e-96d6-848edd37d808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3b5350-90b4-4c31-bcfc-93ce99272d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2c997b-68eb-47ee-adad-0940687145dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc7b7dd-c98c-449a-ab72-aa4971508011",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f9bcdc-60f3-4cfa-a6e6-db60169d7487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e974c3f-a626-45cc-be86-867a21176db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604381be-0855-4d12-bf27-f82521c43c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9717679-8c2b-41c1-8529-77ab52e29631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd92836e-31b0-4483-b021-8bff7a0ed67e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fcc7f4-e675-4dcb-bacc-a854c7d7451e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86b58c6-e38b-4ede-868f-01bf30b0a246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9924b71-05a5-4908-b5d3-2f46e75ecc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5979cd-ae25-462a-905d-25afaba19675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8745cf7d-d7cf-4104-89c9-247fbf76a6be",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0be987-feed-4a5d-a016-0ac1ab3245d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b2c10f-65ba-4b52-bfba-2fce81055470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d888b1-c29a-40fe-a830-3e27db2c965a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96727f09-ae88-42c0-80c4-492b6be582be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d770bc-939c-45d0-9082-8095105543f8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f984103-798e-4346-a464-e19340b6825c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b5ed17-4995-484f-89f3-36e65ee1e4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3a23a2-f9f1-41c2-972f-eaa87f489fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bc241a-85f7-4db3-b149-7f674a46e99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1865fa-bf31-4256-a3d7-e4282fca8f0d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d372c896-acad-4fb3-9af7-aaedb76b2979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33096fad-2b81-4706-a256-91f22bb37793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7261ef6d-e33e-4722-9382-cb3da1505018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3beb701e-a630-40a7-922b-ac3ebd744f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41a11db-793e-4fe5-8967-a75797be0006",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7449b44a-462e-4288-9fac-5f3e9c2c287a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bee45f-9be3-4fd1-80c8-4cd4894f3d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41934be3-b05d-468b-8913-0eb8ca5aa5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a93e46-b685-4760-8f9d-aafd1b73596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53d91c3-ed55-4976-9608-0efc7a25d22b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e69f1a6-5891-47cf-8fc8-115ea76860ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7096ae20-2207-48c8-af90-2537379d3f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3e4176-e6fd-4982-86fb-e11f4bb01dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7902c7ee-4985-442c-abe4-784916e0e2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9289a47-018f-4662-b6db-d9ca7189c6f3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836f3681-de0b-4d5a-a973-23e97a8e68bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7946b3c-0c94-45e8-9252-0b84ede4c45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9595a4ea-5990-4d8b-99d0-b867d6e1c017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492d755a-2c67-4e4f-830a-c37ffbb13463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cb0784-86c2-45a7-a7bf-d479334a6d07",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5b3f4d-c12e-4d3c-8284-16871b98295e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86f9e0b-42e9-43cd-806e-8184c233c8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df711d9c-84a9-498d-bb77-243e33e1fbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a18e01-2a9b-4dda-a65a-e03c1b854a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604c52e4-cf90-4c40-a065-b6414d262be3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60788620-5450-42ae-bd1b-f3128997eafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bae2948-deca-4608-8e50-984c97325f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b740d09-2e4d-4404-b4f6-6b7df7ee1cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5568f489-0659-4aa8-9eb6-a341b05021b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1ee9f0-f249-46d5-b4e2-5f54dbe0e31c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a78872c-c175-437f-bbb0-6edca462e068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1693e5f-59e1-4bfe-bf56-bb5bd24a4543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81eaaf3-7c1d-4783-9fbc-705331f3c47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050f8127-51e4-4a07-9ac4-87f8d8444f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf67ff99-a7a9-4c45-a4a4-5f7b717ef8b5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736710da-f4e0-4bb8-9209-4359456ea291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f430057-531f-4a7a-b48a-ec0bce953279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222b64c2-369a-4c87-8112-b8e97414fcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17235231-ab7d-4421-9440-73158e7b7757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa9bf70-caa3-4570-98ae-90a43f9a8582",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4145c725-017b-4c69-af78-404a5729a0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f483ccc5-ce3f-44fb-a725-faaaae39e599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b0fb85-2200-4068-ac5c-e4af7485ef8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db4c9f9-6cf3-45c9-be9e-de1cb5d3b554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f529a82-58db-45ed-9911-94c7ad870976",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f61ecb-b511-4e7d-85ec-ccb61a7a747b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f365688-7868-4f54-9a1a-f7f3d37ca02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd86e45d-e5f2-47fa-8553-86aa5c0134d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bba156-3939-4e90-9595-2025460c9225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fdc124-e487-4248-b10b-720af1e25ef7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5b45f3-e7e9-4d44-8291-ba596b8ce909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72268f42-281e-49f3-a1e6-8767380c09a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3cbb7a-5dd7-44c5-ba2e-8444b2bfd4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c74154-4b0d-4ea1-ad80-47abdceb67b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb7e107-dc69-472d-a6de-ebc9ef8aab8e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bfb525-4217-4a55-81ce-3040be285445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b3eee1-8bee-4e0d-b868-a72fbff17cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f107da8d-73d1-4ec2-b667-3c72c03ea716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda7ed0a-b0b1-4047-afbd-db7c984dbbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50494a9-3711-4abe-944f-16bdda51b853",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679fc3e2-7fda-48ca-bc89-c94d0df04ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b072a2-215c-4082-a201-c143cf8b67da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9dd15d-7dc0-4563-b58a-869535b8ba9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8186c02-0a52-4ff6-ad60-22f63a7d7e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f99818-5c45-49bd-a4d6-e22964a26f2d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31937664-40a3-47b2-94b5-28941df4a280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237956a2-0c8f-4346-96bb-e4ffe0a9cdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6737ac2e-3e11-4713-ba39-9e358cb8323e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28557334-2b82-4a0d-a15f-73379583a5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1308848-20cb-4803-8533-93f1753ce04a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8a1221-1067-453c-be54-0ecb469b0759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b131ec61-1e96-45d9-b3fe-140533b52547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c465718-0192-4d62-83e4-83a74e44959b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887b9111-021d-4561-884c-014f210458a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a040941-fd43-4bf9-b559-3f44ec5dcce7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90663c6-57fc-4811-a35a-008e959afdbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cbad9ec-33be-4550-8e95-fba84f3a046f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371301cc-9e4d-47c7-84fb-675870a3c792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73087acb-1cc2-4e3d-b70f-0f2eb9441243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc5797c-e5c9-4dc7-b737-914b0346c083",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c650ca6f-62e9-4a75-bad7-419a4e6c0125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb1a64b1-38fb-44cf-93af-906a7a21ab73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d61012-e03e-409a-bc04-65aa047eb295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fd3f58-f438-4fff-94a3-6d13da8527e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d02594-0808-434f-8328-e5998d93a43e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b45451-7500-4eab-9086-7ef93f4c1604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26d81b9-aa29-458d-bdd2-f5c3f730a1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91325dae-e5e9-4102-95cb-0f51a630d8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1501004-f994-4563-b999-3310391adb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84296357-5ca3-48c8-b1cd-804be3cad393",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671eb060-c1c0-43bd-a981-e98bb17d386b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e2a6b2-8138-47ff-ad0f-6f7157c6107b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ce793f-504a-453e-8e60-66fb316a2922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce43f97-204c-42b9-b8a9-b9bb010986da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3ac5d6-2766-435f-bb4a-11375f36173b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0eb9636-1cf4-4ef8-b925-8149ea955042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529e1b16-5c0e-48e1-992a-3a2ed819bf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d02d0d8-ba3a-464d-8365-590ae3cdc6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a75960f-e07b-49d5-b532-4ae49f6a9384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0b15c4-9795-4c7f-abfc-49ae1d805894",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c40e33-4518-4adb-84b1-a8f2cb3d07bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b864eba-14b4-47a8-8c19-78749989de49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2648846-43a6-480b-9423-bdd4f803a451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34522908-45ca-442e-89bf-edf7ce1644a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35391cca-666d-4105-a0ee-8f4c129e093f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88577741-7c98-49f6-9e3a-b06fce413bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7588c198-c577-4f93-b62e-2728b8b9a96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f9da4b-4f9d-4739-8145-a6012c9f1b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5058360-7d11-49bc-9865-810eb9fca3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc48e3a2-ab92-4090-841c-5ccaed25298c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8bf537-6e6a-4755-8ad9-00e4a48330df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2dbcb1f-de4f-4a35-9ea8-b219686d1899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5b4826-4919-4602-aacb-bd4901a607cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d4c41d-cc6c-46dc-9e64-957f3f1db0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15efe27c-2731-4a34-8a02-96b5b47df1e4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46b1c02-9e33-4a74-abfa-ae65abeb59b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529a5eda-b1cd-43e5-bfb5-a0cdaba8654e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00165b00-02be-47a6-993a-5662f2d08377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57eef1a-e536-4fc9-a1ac-69ce347e490a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f835bf80-66e9-4214-9a0b-d564042c19bf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d61d844-6439-400d-8c1e-64faac637c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc82715-4fce-49ef-ab72-e94a84fcfd0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109a130e-b534-43a5-a679-53c5a0a8c240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25517fbb-4e2c-4ff2-b2da-dfe10bc62709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2016945-46dc-4497-8301-0c5078539514",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72879dc-b7fd-42e1-afa9-b73e33324290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a73235f-ab65-46c3-a1cf-8b695b18e70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e6f0c2-898f-469b-9d66-415ecaaafeef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615c3555-de37-4fcc-846f-7e80481f630e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ef0e94-2947-4326-ae5d-7f17f226222a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1063693-4011-4e86-bab0-cc764dab87c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c15d91bc-7eb8-4864-b8dc-883f3dd4d323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cbfd43-71c9-4c3f-bcd6-36f2ecea3e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b92e230-db45-4928-9c83-3b88e21f8fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16efe0e6-4f7d-4179-bbf0-88a648e63cb4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a97c46-2db2-4336-aefa-916ac8363f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356ad4c6-94f6-42ca-b067-a70263202c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398d7a46-b343-404b-b57c-5249a2685940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa94ef0c-09df-419e-9665-98a1deab46eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c70eaa-ab2d-43b6-869e-34146864a211",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72304f8-fa19-432c-b0f1-84db7546a73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "088eae72-78bd-4b4e-b3e2-36858d597997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41bc105-9273-4a68-8b2f-5b5acef02884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d7228d-4040-4ee4-927f-9853c75271e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93efdc2b-3a64-449e-ad68-6c5025c01016",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1a03f-381c-41ca-8591-2cfa1ae4e3ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3f863a8-0113-4a90-aed4-96377d5250bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a864f0a-7ca4-4842-8d0a-6c871bc0f2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41db613-543c-4bbc-9e3f-6e9341156d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a906c7c4-1dd3-408a-8f45-1c63defea82d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5b3c8d-b8b2-4dee-8e62-ecc817e70478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2c97c96-3c0c-4289-bb38-eea3ace54799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd5309d-8c05-4404-ad9e-558d9edec553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469bd53d-bad7-4526-bdd6-8743d3721998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7ed266-2328-44b0-8953-ca1dc44e07d3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4877729d-3ca1-4482-9487-57266718019f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5430aa58-e149-4509-a55c-e594b445136a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d45c9a-a178-40dd-ad47-287bffe1167b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd53b97-7638-444e-b245-8aa820ae2ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d895803-3ef6-4f9c-b47e-9d197f161172",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2505f1b-3c72-444d-a415-1b574c5998d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96c9a64-4b91-4276-bbb2-2d4d56175708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2790f4f1-5388-4f71-bebd-e29cab4aadfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d448cb5-8320-439b-ad0b-fc85af488690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd1724c-39b9-452c-a879-6daec9d666d1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5dacd8-93a6-46ce-adb6-dace9b008b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c88d6610-29af-438a-bc18-f82c4867ec21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eac8060-62d3-449e-bf8e-00e8868e818d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c17f27-31e4-4b97-89c7-ec756ba1f826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96af24d9-d407-41d0-a3ee-1c76989d5e8f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3022588-9f65-4b2a-812e-bee80218d0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbb9e24-5a3a-4882-a278-94b8fff55eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025c65fc-e433-47c8-82ed-41359bd2bf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd62ded-a26a-429f-8475-92d85151c19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c231c3-fcc0-49bb-b636-3eee8927da2f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dfc60f-de69-4018-a0db-7ce9f901ca48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8371af05-87c0-47a3-83f7-c201a7b97b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e627f9-2580-43a9-b20e-d7d4c61bd281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec648f45-4e98-4561-9550-f2b34e472618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491cd6d1-3660-4c3d-9b02-1ce87e128d4e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c39a3f-e781-433a-968d-9e501e99d5c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a836a35-4243-48b4-a29a-66c9d5d75366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e570ef-0d29-4821-91f0-04b3b04927f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d19c1c9-ae3a-4a59-8c09-ea3a1c4c2e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bd290d-11f5-4fc6-aa01-3e7232b79a67",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df99fb7f-56ab-453d-9df6-e360497fddac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06574db9-c1fe-4543-acf2-c71576d6bd7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90346e1d-8994-4f38-a8ab-046bd6301fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba50688c-7c74-49d6-83f6-365b9cdf0deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d614a4f-2d1f-46db-8ce4-20a99ac6ca50",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d79896-126c-4938-bbe2-d7a76b6f6284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70af5b83-aa8c-4ffc-a35b-3b6c4d3a59ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eedcfc1-343c-486e-964f-8b2c2d93e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43814134-d2ce-426a-922c-c0b4c9253671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0b1766-03d5-4af4-83ba-7e138ab18177",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88398eeb-47f6-4cd8-bfd1-8da8fec32aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d93c749-8775-4881-86f5-3327d19fd536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b70b8e-9b66-418c-8800-873ae534fdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90aba25f-69fe-46dd-a5c4-abbd9a98ba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06a9366-5adf-446e-997e-2eeb7aebc6b4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f109376d-5dfe-4fef-930b-df602855653b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8230f784-28d6-4817-bf4d-dbb6986d683f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d093b5a-0b60-40e6-bf8e-681ebd70a1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6d356c-9ea3-4690-a46e-90ff32795be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8953085c-237e-4707-a658-f3642c7807c8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444c88ea-bcde-4288-8c2b-5fcc2058c92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c46baf9f-6f6b-448f-847e-a8f2a21ce507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3676c69e-a294-4552-a24e-ab52ec318107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6eec9d4-756a-4a93-affc-0bf30aa56d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811e386f-d05e-4a33-abee-2071a24dede9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24613f20-08bd-4488-9877-020f23001d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2228e0-1545-4006-ae69-4b0b3c4aa114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c54353-5bff-4e89-a450-aec1e11317b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30658496-fd14-48f8-9e17-ccfa3f562431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453cde06-d32e-4e7c-ab01-862f1cdda2ed",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b05639-38a2-4d1a-93f0-113a87bfe7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d1c12b-79af-422a-8fba-a328bcb50f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7dacf4-bb8f-4f8e-8da4-9060eac5fa54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de73942-b26c-44bf-aeb1-1721a6e7ee85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2649c8a0-a9ef-4ba6-bc97-86ec11dd757c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3427049b-5c2b-4ea6-afd9-4728c8b297cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ecbec5-9edd-4d4b-94d6-d60b4da831c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e4dbe0-4a7e-4693-b59a-42d616afca91",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699e987f-c3fb-4b70-8aa2-dac64a019d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72790f7-110d-4065-813d-6fd1ef299ee7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733d5d37-6786-4f2b-b740-70722fa59695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4abeff-30e7-408a-b7d4-fb3577cf5b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cab733a-e5c2-43b9-9f29-a0334eb5fb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eae082d-ba91-4ad9-a330-3bf76b7e6f7a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2333b6ed-3b3b-4818-9589-49f151875ee3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f081f403-113c-45e8-8c38-5b9ba1b917ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0fb0b29-ef97-4fa9-a2ea-32fd34ae70da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7056914-9e05-4209-b1dc-2d2896615cdf"
                    }
                  }
                ]
              },
              {
                "id": "e0f0b95a-0d81-4e7e-ae27-8c7a9bdda410",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "770f7c89-6f33-4d0a-b726-0642d658c736",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c240065f-52dc-4176-96f2-0b8edbca3b2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3eaf62d8-a2a3-4693-a2d9-d6a027ad4119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1126a33-b3dc-4240-bfd4-98a30a1050cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38d5f22f-56ae-4bef-8c6b-93c30daf8cf6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bfc0dc1-288d-406a-93a2-12cbb3f19833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe4973c0-6025-48c9-a9a9-941b8e4a5451"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "955e878a-71c5-4802-9a6e-636da1be4600",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d24aa56c-6496-4eb6-bc61-0e13e0cfc26e"
                    }
                  }
                ]
              },
              {
                "id": "954aeca1-cc09-4bb5-894c-7ccc44e8c6e3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "deeb3d46-3c15-4345-b47d-98e5f6a0ec1e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c0be8c-32a3-4ec5-8e82-fb0d914f294f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fe0a6fc0-bfe3-44ba-ad12-5e4a5a631061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5102cda7-86d6-4729-b50c-99c889838920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02154edb-d953-47f8-b04b-b13e9681d92d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c33dbfa5-a68c-4189-9336-6297545977df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c87bcdd9-d305-4bb5-a116-8f6facf6d887",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "621a1574-43e1-46d2-aa37-c3b1e9b10b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea3643e6-0a11-4079-a233-77e98263459c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37867c1f-2a6f-42d1-903a-68dbd3032247",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcdefcd2-7d49-4195-9f81-e6d2aa76399d"
                    }
                  }
                ]
              },
              {
                "id": "003b737a-baef-44f0-bdbe-58fb9fc0541e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53f3badd-6ce8-447b-b6a9-95a4395aeab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c650623-9400-4dc5-b132-dace9e8b5816"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe759853-3065-407d-bdc7-b1b719980b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "930a7b39-f220-4b7c-86eb-d0b0ef09572b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c611741-b83e-40ff-b7ed-e858f0eb622c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bd8495e8-bca5-4ff8-aff0-a8e615591f37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7633ed9-3c52-47c1-bf96-19cd640c9fab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "861d4966-0c31-4fc0-a0e6-b85c2b17fd93"
            }
          }
        ]
      },
      {
        "id": "7d26b6d8-89fb-45d4-bcec-6302cbfd11e3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fd5bff78-ed95-4abd-9ec3-02399101a61a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15783eb3-e08e-4ec3-9893-77633679f20f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae81889b-b6c1-4421-a60a-5073c8f2982f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc4389f-e5a2-4854-a5ac-6174f08f9f2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca05c747-b37d-4a15-be56-520f76841856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea48741-f1f5-474a-84bd-cac1442f5492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b65cd2e2-51f8-4f87-b0be-52785166bdb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d25be96-531d-4326-88a5-878e877620e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "313dc7d6-c7fc-4fe2-8f6d-6985b9c3967e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d4ef083-bd09-4cb0-9d29-af6a9bee5b95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42a4e782-2d3c-4ac7-8cb6-2fef9e2238bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "494d36e9-3af0-4398-97f5-f9cf0d8e6222",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "da8051d5-a1d6-4c6d-905a-03a9223669fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d211baa1-e972-4319-ae78-296b42515d31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3ae41c7-78b4-4f89-b361-8cab20e17e10"
            }
          }
        ]
      },
      {
        "id": "e52a81de-68c2-4d22-b701-e35d95c225e5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8ac3ca61-db00-4add-8b4c-64dab6e47fa0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9184877-de9f-4bbc-b77a-1ce70701e50d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ad61d5f-1033-4a98-8aed-bc6d628c18d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feebbfe9-9e5a-4853-b121-3bb3abe93ba5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd1a9175-5f63-4c0a-976e-4b1b62fac101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05912797-6e9b-4c74-8406-e46c1d612c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7bc137c-a2a7-4b1c-9405-8a47fd615382"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b818a95c-860b-4563-a329-0265ff43af50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23b6a5f2-0870-4a02-9c44-637888fc61ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ded4900b-03ea-4db0-983c-d5e368a41e51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d14694d-b8b6-4337-b1b1-413a4b075f46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c48a684-3678-44a3-bc85-530936cdb70c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df61527c-6790-46dd-9cab-95d8b7fa7c60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaeac4bc-f7f1-43da-84a9-54df732b6156",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de8c0355-8058-4d83-b12d-1372c86051c4"
            }
          }
        ]
      },
      {
        "id": "dd5fc4b9-2f71-4afb-afd2-abb5a53e5f4c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f53b1f78-4678-493e-9b4f-115d6ec719b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c77c00e6-d1d1-4e7f-b138-784b6b250dc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2eda07bf-5849-472a-94f8-9bd75c693396",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cd27dd-08d5-4f87-b204-166660ab98bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0bfda5e-a5fc-4e08-9bc7-ff2fe6f5445e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4b19ae-92c4-4811-9c0b-f099abcf2a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36194730-d404-46a9-801d-da93c7161671"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4970837e-afdb-465d-b459-383cedb7d8ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef35a544-0042-4963-b4fa-0ba89c5c2dd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d7c62d5-6173-4252-8494-172c90577e47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de20f5a1-eba6-4168-9180-99c48c4bd2a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed75d00a-7a0d-47f7-97b0-e17179102a4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c14c33e9-233b-44e8-ac87-10156d4a23a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b33a2b6b-c7b1-409b-bda1-2b126a1fa660",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6dff61b-a1be-4384-b318-a65acfe9b513"
            }
          }
        ]
      },
      {
        "id": "b67a763f-814c-48d9-8d19-7964314a69cd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e9761a0-971a-46ac-ba78-cc4e911b0f77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56623ac0-5e7a-4ceb-b19b-8b714a4b2a51",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "118df4c2-cc50-4f15-9e53-e3a7e7db67de",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02f5701c-7f08-447a-bd90-2e0ab13ee428",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7c7cee5-a472-4f5f-b3f5-4ec8f3961e42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.89436619718311,
      "responseMin": 18,
      "responseMax": 272,
      "responseSd": 21.221570127650793,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690764153145,
      "completed": 1690764173807
    },
    "executions": [
      {
        "id": "f3b26585-2253-4b74-bfc6-4bd33d17f523",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a499f24f-a68c-45f7-a72e-5741ca7ef683",
          "httpRequestId": "7ae50ca5-1bc0-4c8d-9c15-789d06a87c69"
        },
        "item": {
          "id": "f3b26585-2253-4b74-bfc6-4bd33d17f523",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6e2750a4-e591-4fa3-8f61-e997795013cf",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "80124523-655e-4a21-a6c4-679f0c4bfc03",
        "cursor": {
          "ref": "b834e566-9649-41cb-94e3-f7f0010e706f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6758cf21-adcf-459e-9c21-ff750dbfd41f"
        },
        "item": {
          "id": "80124523-655e-4a21-a6c4-679f0c4bfc03",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6c1f3fe1-ccb5-4ac4-9e4e-b79de54ce1e3",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "7d22775b-f504-449f-9743-50131e5e326b",
        "cursor": {
          "ref": "880363ee-41f3-4da7-bff4-9e33db80279c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2728bdf7-b249-4be6-b02f-70f0d7fd6f17"
        },
        "item": {
          "id": "7d22775b-f504-449f-9743-50131e5e326b",
          "name": "did_json"
        },
        "response": {
          "id": "0a739622-6da7-4e27-927a-9751e021f3ee",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd71dda-18b5-444d-8305-3f663a63347a",
        "cursor": {
          "ref": "e7b04ddb-20b7-46a8-a848-4dd65e693e50",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb20c406-2dab-4b96-ab2e-1d7cc1fd18c4"
        },
        "item": {
          "id": "9bd71dda-18b5-444d-8305-3f663a63347a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8f345d05-4f95-4f97-bf4a-1f33fc55bfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd71dda-18b5-444d-8305-3f663a63347a",
        "cursor": {
          "ref": "e7b04ddb-20b7-46a8-a848-4dd65e693e50",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb20c406-2dab-4b96-ab2e-1d7cc1fd18c4"
        },
        "item": {
          "id": "9bd71dda-18b5-444d-8305-3f663a63347a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8f345d05-4f95-4f97-bf4a-1f33fc55bfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe50002e-1cb0-490a-87ec-4149185227c7",
        "cursor": {
          "ref": "0d1198ea-058c-44d1-91b5-e3ff786ee7bb",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "96165f8c-9f64-4e97-8694-158c98cf6207"
        },
        "item": {
          "id": "fe50002e-1cb0-490a-87ec-4149185227c7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0c3408e2-9a73-47ab-8f43-7e6224771631",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60d7ac2-bb46-4cad-a7eb-89685c8c1a6b",
        "cursor": {
          "ref": "89c5491d-e2e3-4d21-9634-04a6ffb73978",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6468799d-8212-434a-a082-61590d52221f"
        },
        "item": {
          "id": "d60d7ac2-bb46-4cad-a7eb-89685c8c1a6b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cfe5ce08-ef93-455b-87bd-7248c94f3847",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3b9a94-909f-45a9-a4e5-6edb946cbf5d",
        "cursor": {
          "ref": "a1bc952f-842c-4931-a519-77af454ff592",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "21843e7f-4dce-481f-aa5d-b6b9b16efb7d"
        },
        "item": {
          "id": "df3b9a94-909f-45a9-a4e5-6edb946cbf5d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c221e3c1-0d7b-4c48-9cdd-40b6e44e90a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033fa8c0-cd48-42a2-824a-f60bf30e3284",
        "cursor": {
          "ref": "b6769286-d94c-4974-a753-64d9a4c73dfe",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3a079d72-f911-4908-894f-5264456711c4"
        },
        "item": {
          "id": "033fa8c0-cd48-42a2-824a-f60bf30e3284",
          "name": "identifiers"
        },
        "response": {
          "id": "7d3020e6-6a42-403f-9655-320c3405f321",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7643713-3fad-4eff-b8c5-1ac99dc3a83f",
        "cursor": {
          "ref": "0750fa0d-f747-4931-8f1c-7af66883c882",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5711a053-933e-4741-9798-08dd7ccdc7de"
        },
        "item": {
          "id": "f7643713-3fad-4eff-b8c5-1ac99dc3a83f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f17acdee-3fd5-4b5d-8200-d6569903209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b335a606-9b0b-4255-be5f-2098e5483fbb",
        "cursor": {
          "ref": "2607ff32-441a-4688-ba26-c79f398b9532",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "450a23d8-1177-4e0c-ab3b-31f454f6e004"
        },
        "item": {
          "id": "b335a606-9b0b-4255-be5f-2098e5483fbb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c406b5fd-778e-494f-824b-52720efa0433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55d4dee-890e-4580-b54f-fd769368364f",
        "cursor": {
          "ref": "db4f26a4-d46c-4c01-8697-2cfb4847c1bb",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3f115142-2bcf-487b-a9e0-194751b90e5c"
        },
        "item": {
          "id": "c55d4dee-890e-4580-b54f-fd769368364f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e661e1c0-064f-496a-bf1b-b9f361173851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4eaef5-19fc-4aa7-ac5b-25878a205d45",
        "cursor": {
          "ref": "815fc4ab-ead3-428d-b315-89276b3c19ee",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "45956598-2901-4ea6-ba82-873e8ecd1343"
        },
        "item": {
          "id": "7e4eaef5-19fc-4aa7-ac5b-25878a205d45",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fc14a716-4189-4132-b855-46bbdb6a118a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b978ab9-fbaf-44a8-97fc-3c2a40200c12",
        "cursor": {
          "ref": "f282c717-2e2d-4d24-9ee5-2e2e45d35c77",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0547e596-5abd-4076-9815-ba132e90f8fb"
        },
        "item": {
          "id": "9b978ab9-fbaf-44a8-97fc-3c2a40200c12",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8d8bc639-99fa-4e7c-b0ac-de197fae2ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4837dfa-f360-4937-9646-75cca6f34d22",
        "cursor": {
          "ref": "2e47c913-eb9e-41e9-bf58-3f98d443ff2b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ac4bbfcc-5604-4eb3-9f23-22df9b917d96"
        },
        "item": {
          "id": "b4837dfa-f360-4937-9646-75cca6f34d22",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a030e7c7-7a88-4253-8122-08e808886f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de975a7-a883-41ad-b589-d21a16cac352",
        "cursor": {
          "ref": "487f40b5-5477-4241-bbda-adc9c1c3c1e9",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a3e7b408-1412-4fbc-82c1-009ca75d4cbe"
        },
        "item": {
          "id": "8de975a7-a883-41ad-b589-d21a16cac352",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cdbb297b-9719-47ff-bc10-59fcb8190de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac06b94c-f7f6-473c-b4ff-5dd42a58b87f",
        "cursor": {
          "ref": "eac202d7-7be3-4bcf-8996-79897a1688e3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5e3c411a-abe1-41e6-a856-d0ce295d360f"
        },
        "item": {
          "id": "ac06b94c-f7f6-473c-b4ff-5dd42a58b87f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "91e13848-bef2-4b4d-932e-fa5a9009aec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3624b4-c504-4d20-8a52-86ab186e9224",
        "cursor": {
          "ref": "5d2cb805-545c-4514-8989-d195cc8fd3f1",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "47617869-07b8-42f5-a267-912537e67b2f"
        },
        "item": {
          "id": "ba3624b4-c504-4d20-8a52-86ab186e9224",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ca24d185-27c2-4d4f-a764-23f49add54a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2c337d-18a6-4ef1-a627-f13c9656f1c6",
        "cursor": {
          "ref": "8aee9765-2275-4d31-881b-bc89c6a270ed",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4bd041ca-ac56-487b-af79-698873abd0ad"
        },
        "item": {
          "id": "7f2c337d-18a6-4ef1-a627-f13c9656f1c6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9e274aee-cfd0-4fa8-89b6-5703e720036f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5c0024-0597-4bac-a793-862c7a96b0b7",
        "cursor": {
          "ref": "cdf83820-89f6-42d4-9023-2ce3bd862f7b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "227abf16-70da-4e1f-8670-4884e559efa5"
        },
        "item": {
          "id": "1e5c0024-0597-4bac-a793-862c7a96b0b7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6ce3fd13-b3f7-46d2-aa25-c019056423b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c20af8c-8aef-4123-8a61-aaf525fdc9da",
        "cursor": {
          "ref": "03164606-a4fd-452d-9c9f-9184638ffbcb",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "18e65eea-25bd-427c-a2c9-24d20795862d"
        },
        "item": {
          "id": "8c20af8c-8aef-4123-8a61-aaf525fdc9da",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6355c49a-a465-419b-896e-c6a6d2275584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38037d63-4be4-4119-b197-8a77d7a3b41d",
        "cursor": {
          "ref": "24335ee1-fbaa-4514-a4b7-e724751ebf9d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e617e9c2-9ae2-460f-b8cc-7bc9223c145a"
        },
        "item": {
          "id": "38037d63-4be4-4119-b197-8a77d7a3b41d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d105445f-6b73-4279-b317-eeb38e621d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bb5489-18c6-438b-a0f0-ee401453187a",
        "cursor": {
          "ref": "3e4df14e-11c7-4c42-ba20-442eccd8e890",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e6591207-e033-42e9-8292-b939c9bd1e8e"
        },
        "item": {
          "id": "86bb5489-18c6-438b-a0f0-ee401453187a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "25f23278-3f22-4519-bdec-2e0c138e5a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe8b71b-0258-45b9-b1bb-9b03f4925180",
        "cursor": {
          "ref": "0aa2ea03-0e7b-4208-8126-b66a736c7e95",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8568b50a-5556-458b-b164-c3b7e92d0889"
        },
        "item": {
          "id": "8fe8b71b-0258-45b9-b1bb-9b03f4925180",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "467e67f4-b093-4296-8482-e99824d9879c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965e75ab-6925-4e33-aef3-5443ee529080",
        "cursor": {
          "ref": "4d3abd42-a2da-4778-8864-d4db7451542d",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d8a75102-0ba5-43ba-8069-1f1f47c2ed0c"
        },
        "item": {
          "id": "965e75ab-6925-4e33-aef3-5443ee529080",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bbc20de2-a4d7-4f37-9ff5-201f4743d956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1feed6a-41b6-4e41-9b9b-29ec79ce824a",
        "cursor": {
          "ref": "7d71ea19-7ce2-4495-ba24-4e2f7bf0de17",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "da84f1ce-34de-4953-a284-6a141b02bb2c"
        },
        "item": {
          "id": "d1feed6a-41b6-4e41-9b9b-29ec79ce824a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "96ff86b1-c5a8-4865-9d29-b99a3e3a9bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd626d1f-b147-4995-8fd3-b541543d76f2",
        "cursor": {
          "ref": "70818453-682a-4f73-aba4-d2262ce9914f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d8057374-a56f-4a30-b87e-9833501e9a5f"
        },
        "item": {
          "id": "cd626d1f-b147-4995-8fd3-b541543d76f2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "47c02ce4-caaa-41b5-b991-493987859d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5e9db5-a308-4046-a494-1d05091bfc45",
        "cursor": {
          "ref": "587c5ceb-1617-4de0-bdbd-cb88c0de3735",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "245f63eb-121b-4e84-a845-fe7830f5e580"
        },
        "item": {
          "id": "2b5e9db5-a308-4046-a494-1d05091bfc45",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8f1178ab-54d9-4952-a590-5be206041fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaa302d-28bf-4485-998e-45124efec7a7",
        "cursor": {
          "ref": "02d2e75a-ee15-4e33-9ae2-8f8a8831135a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d0166c6f-0f67-4def-a6a4-9ca5c7e4f732"
        },
        "item": {
          "id": "3aaa302d-28bf-4485-998e-45124efec7a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2930a0ea-aab5-4847-89b1-0edce65efb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6818df6f-e620-4417-9869-ab14e72ba242",
        "cursor": {
          "ref": "8864ed27-2d1d-43a2-951e-aa7f54f4dd25",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "64e27b8e-8a73-4373-82f0-09ac8fe4cf1f"
        },
        "item": {
          "id": "6818df6f-e620-4417-9869-ab14e72ba242",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4a67756b-d2d0-47df-8b9f-b2808e31f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bdb319-e2cd-4cef-9124-a87bead55efe",
        "cursor": {
          "ref": "50dadcac-b05c-488d-93ce-fa8edef55ffc",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8472bb2f-c1c7-40f5-8462-d43486cc0be4"
        },
        "item": {
          "id": "47bdb319-e2cd-4cef-9124-a87bead55efe",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "340d75fa-0c39-4200-9f22-d75fdbebf91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb1a829-d535-44b8-be6d-a046dd2f627a",
        "cursor": {
          "ref": "e7f7128f-ef7e-4595-8ffe-ad50928aff79",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b6e57fc1-7a07-42b5-8382-ddaf8b1c4e1d"
        },
        "item": {
          "id": "bbb1a829-d535-44b8-be6d-a046dd2f627a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "30fc6264-42f0-44c9-a960-1574671a2179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e93ca0-99cc-4050-ace1-78eb406a54a5",
        "cursor": {
          "ref": "c00239a4-9751-41b7-9be4-8a0d734bbd36",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "13462358-325e-47ff-89b7-ca8165989bd9"
        },
        "item": {
          "id": "39e93ca0-99cc-4050-ace1-78eb406a54a5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e00ccf67-780e-48da-a4f0-b8c4fd09a9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ccc9c5-e2f7-4cb5-973a-8bec9c6a2460",
        "cursor": {
          "ref": "0abdb3c2-de86-4e3a-86e5-b2ad2274d93c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "928794c5-6f34-4151-a5e2-e52e605c65a6"
        },
        "item": {
          "id": "97ccc9c5-e2f7-4cb5-973a-8bec9c6a2460",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aba9dd02-fd07-464c-84a6-167189b832a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2606005a-7a88-4729-b719-109b97e50125",
        "cursor": {
          "ref": "1ae6b9b5-4f5b-45ad-8b3f-9481a3e3f207",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6a7e0679-c763-4f96-9c6d-e7dd2a7a0076"
        },
        "item": {
          "id": "2606005a-7a88-4729-b719-109b97e50125",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0a9e6a0b-3e3c-4490-9453-f6120557717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2387530c-f8dd-4ac5-921b-50d7ca9d0132",
        "cursor": {
          "ref": "82728fa1-9520-4d32-8c63-9576249ccfda",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ddcca69a-e603-4f46-91c5-782d945bf223"
        },
        "item": {
          "id": "2387530c-f8dd-4ac5-921b-50d7ca9d0132",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "06554a78-1cc7-4a39-903e-6515d37bad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994a0750-7ff6-4165-9eff-56142e4dff97",
        "cursor": {
          "ref": "79809301-09a8-4d46-971c-7652015bd6f0",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f57baf2c-2b0b-4d10-983d-b14509b98f42"
        },
        "item": {
          "id": "994a0750-7ff6-4165-9eff-56142e4dff97",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fbbb175e-7f6a-414e-aa81-5f7c2c6bf6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcce0b9-a2b9-4cd0-b127-956b5db28b08",
        "cursor": {
          "ref": "ea66944e-8292-4d29-9002-17f15f6661de",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5b1237ff-21a3-4945-9e52-863216981ded"
        },
        "item": {
          "id": "bfcce0b9-a2b9-4cd0-b127-956b5db28b08",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "da268e00-ae2a-41fe-a066-d707eae28ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9ce033-4428-490e-b47c-3b8449312927",
        "cursor": {
          "ref": "a2956a60-5b93-4776-9290-add15d85f181",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e6faa872-deeb-4e22-9389-ed8dbe9998af"
        },
        "item": {
          "id": "aa9ce033-4428-490e-b47c-3b8449312927",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ecd99425-4b82-441c-bd4d-33fb89b9457e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e05ab0-f440-4cad-a323-911ba3325b6c",
        "cursor": {
          "ref": "c3d72165-7246-46ff-aa10-c406f30eeb45",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0a59a8b3-21e1-4839-8f82-e00801170888"
        },
        "item": {
          "id": "52e05ab0-f440-4cad-a323-911ba3325b6c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b25f34a4-dc42-429d-ac57-c5e1571182a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129838ff-cfa6-4555-8d2e-15e615d34cf7",
        "cursor": {
          "ref": "275796a3-a3ea-4a0f-9620-851a614f3200",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1758361b-c06b-42c2-b7ac-e919d884a7fa"
        },
        "item": {
          "id": "129838ff-cfa6-4555-8d2e-15e615d34cf7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3ac3e360-32aa-4780-9ba0-7078bc6663f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ec72b1-d299-4a11-8f17-8014e1b4265d",
        "cursor": {
          "ref": "33dc2387-6e43-48a8-bf34-1e4db4936788",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cf90247d-fd9f-4add-9228-361e3b44b3f3"
        },
        "item": {
          "id": "58ec72b1-d299-4a11-8f17-8014e1b4265d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e56bc62c-2a6f-45e0-bd50-1b784ded3109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e9c036-5c72-44f5-abc8-f489c357f560",
        "cursor": {
          "ref": "491a3e9f-d960-49cb-8c37-3d52307c4f39",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "62a04f24-d259-40c9-9ed4-248007c93722"
        },
        "item": {
          "id": "03e9c036-5c72-44f5-abc8-f489c357f560",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "75bf5ff5-5883-4031-a0a2-a5c55d4c7e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a41af80-593e-4630-9a3e-59fb65a6aa1f",
        "cursor": {
          "ref": "c5971729-f028-45b2-869d-2205f7019128",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1582add8-46fc-4191-afab-aec595e1fa0e"
        },
        "item": {
          "id": "0a41af80-593e-4630-9a3e-59fb65a6aa1f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "623aeba5-e885-497c-a4d5-f3cb66f1a6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a76ac52-0946-4009-8749-02c5ac68afc6",
        "cursor": {
          "ref": "5144aa50-58a5-478a-a9c7-20432e913ee7",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "59a11d4c-73a1-4a3c-9775-dcc86e1ea025"
        },
        "item": {
          "id": "0a76ac52-0946-4009-8749-02c5ac68afc6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7548b186-2de4-4154-8f95-aa8d0c0ab5ed",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5246d04a-6d4b-486c-be69-95b5a73fec7f",
        "cursor": {
          "ref": "ef51af41-6c88-480a-be39-0399ee68207f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "03ccce9a-5544-4ae8-8426-82515a9797ea"
        },
        "item": {
          "id": "5246d04a-6d4b-486c-be69-95b5a73fec7f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "24e06fdb-77a8-4569-a95e-69228c715203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912a941f-9cfc-4207-a216-ca2453b01e97",
        "cursor": {
          "ref": "9f5bebdd-bbb4-4fc2-94d5-4739263f4f34",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0effd216-4de3-4e07-bd7a-172576b7a3b6"
        },
        "item": {
          "id": "912a941f-9cfc-4207-a216-ca2453b01e97",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6ec92ff5-e0bd-4bd4-abb8-4f6fcd537ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63d509f-d4bc-4866-a83e-662e4d6acfb4",
        "cursor": {
          "ref": "735c5e8b-bc10-422d-a3c9-efec801c0ea1",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0d2a1c39-614d-4e2b-80ca-c0ca3a5e2bf6"
        },
        "item": {
          "id": "b63d509f-d4bc-4866-a83e-662e4d6acfb4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cbee2812-c022-45d8-aa3d-eed565971b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84710525-1850-49f5-b252-ab1e05256ecd",
        "cursor": {
          "ref": "c71013b6-b65a-4cd1-bf78-010a87f8d8ca",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "93a1567a-800d-4020-9f9e-72e342e958b0"
        },
        "item": {
          "id": "84710525-1850-49f5-b252-ab1e05256ecd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "190032ce-1032-4692-a882-f834808fe98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a8c0d0-7c81-4392-852d-d2e1ee09adb3",
        "cursor": {
          "ref": "b83b8c84-fa2d-4b28-b6a9-24da979d112a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6c99ee7a-8dcc-4f8f-8e08-8b216ebe30ae"
        },
        "item": {
          "id": "e9a8c0d0-7c81-4392-852d-d2e1ee09adb3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0c23b60a-a31a-473e-a0ef-a5262f07cc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e446c05d-c5f6-42de-94f0-6fde3d057053",
        "cursor": {
          "ref": "36eaffdb-313c-4b3a-9daf-b1c8689eb437",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ffb46784-36d3-4d89-8602-810aca02aa6e"
        },
        "item": {
          "id": "e446c05d-c5f6-42de-94f0-6fde3d057053",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "30262538-9701-4db1-9a03-32a792075f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebacea57-9c4a-4e1b-a440-59875d77a557",
        "cursor": {
          "ref": "ee48a7f7-31d1-442d-b5cf-279f478f8422",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0bd718f7-c924-45ab-93e2-f92153aa33f0"
        },
        "item": {
          "id": "ebacea57-9c4a-4e1b-a440-59875d77a557",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f6727258-8765-4497-b081-77e604700086",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47afe7ef-64c7-46fd-b4f4-f93ea5a65bbf",
        "cursor": {
          "ref": "659cb412-8404-4537-87a0-7fb40f1c054c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9c94b4c5-ff83-4d2b-88b2-201e89c4c5f8"
        },
        "item": {
          "id": "47afe7ef-64c7-46fd-b4f4-f93ea5a65bbf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c53023c8-d81f-43aa-8a0c-785775984140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cca9c58-04ba-4e3c-959a-0f7bc542c920",
        "cursor": {
          "ref": "fd3bff7f-f4c8-4ce9-a778-7c5edf4919eb",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "215dfd65-10d5-4957-b5fd-2b420f308868"
        },
        "item": {
          "id": "5cca9c58-04ba-4e3c-959a-0f7bc542c920",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8da3ce8e-fe5b-44e5-8509-8cb935267fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6997793-1c5e-49af-b167-5409469c155b",
        "cursor": {
          "ref": "5c86259f-ea36-4f15-8355-b636e072983f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "14b0dc9e-cb7e-43bd-a159-9804620cbfd4"
        },
        "item": {
          "id": "e6997793-1c5e-49af-b167-5409469c155b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2e714c3a-60a1-47a2-adaf-c8dbb93efeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14205b8d-874c-4723-92fa-cad46160ea44",
        "cursor": {
          "ref": "41481f83-3cd3-4432-9bf0-7496dd0348fd",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0b0af95f-f867-491b-8775-96a04973160d"
        },
        "item": {
          "id": "14205b8d-874c-4723-92fa-cad46160ea44",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "513c016a-7a21-4822-b812-30271aad3ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e601e36-4468-456b-a780-98426cc40247",
        "cursor": {
          "ref": "be93c1d8-2221-49eb-b1dc-298efe70649f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "53f01adf-5577-490f-bf56-d067ba9d8b4d"
        },
        "item": {
          "id": "0e601e36-4468-456b-a780-98426cc40247",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0c3e8aeb-2ba7-44f7-8bc2-36cfc9d5c6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fe6b17-583e-466a-9254-ef35926ac964",
        "cursor": {
          "ref": "4be4c823-f1bc-4af7-953b-5a1dfcc506a9",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "56fa5e6e-627a-4c96-8609-51d3de525439"
        },
        "item": {
          "id": "49fe6b17-583e-466a-9254-ef35926ac964",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "24ef0fd8-4b38-41a8-b21b-cd8153d834c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7a69d8-81c0-4088-8082-b6ede97121ab",
        "cursor": {
          "ref": "e5a9b16e-7d39-4e77-bdf5-67e3a975fae0",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ae8b0fdb-0c03-48db-9dcf-dbdac143ee16"
        },
        "item": {
          "id": "8c7a69d8-81c0-4088-8082-b6ede97121ab",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b01a9b64-898f-4d87-84f3-8e5286d0a64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2262bcfe-0660-4c98-9f33-1db556421a53",
        "cursor": {
          "ref": "6ee60894-3af8-4ef8-a0f7-49f5dbef8704",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4ff73880-3e25-4876-8f49-5cb16114a8bd"
        },
        "item": {
          "id": "2262bcfe-0660-4c98-9f33-1db556421a53",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bfc09b87-8b08-478c-b9a2-ee23f81080c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d38ba89-5dbb-4887-9212-3495d9a97ed2",
        "cursor": {
          "ref": "b9405021-7612-46c8-9bb2-d91d3d0fb401",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "72ba6fe5-a682-462d-bb62-f1a9c79613e5"
        },
        "item": {
          "id": "1d38ba89-5dbb-4887-9212-3495d9a97ed2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8696d950-4e3b-4818-ba96-3f6719bafef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86da9a29-1297-4d67-93c7-0e2977eef4c0",
        "cursor": {
          "ref": "cc180525-5d76-4240-8f33-0ccc5aebe517",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "08aafc63-9af6-4ce6-b4e8-8c816e02af8f"
        },
        "item": {
          "id": "86da9a29-1297-4d67-93c7-0e2977eef4c0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e269482e-75f0-4f54-beb0-57b8e00b20f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a05c55-8542-435c-a571-4f30f48ddfe9",
        "cursor": {
          "ref": "db69df00-f5d5-4b77-89fb-8d23477dd280",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dd2509d7-492b-40ac-9cba-36744a73eb36"
        },
        "item": {
          "id": "85a05c55-8542-435c-a571-4f30f48ddfe9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f5e0195e-8572-492b-a1e7-757c5d6edeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4750a12-3ef8-4a53-a791-ae7409445653",
        "cursor": {
          "ref": "16c2ac45-0b89-4caa-85ff-6c2a9a108bc1",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7094b33d-4aa9-40d0-a178-4a27ca0620d3"
        },
        "item": {
          "id": "a4750a12-3ef8-4a53-a791-ae7409445653",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b93d3450-a146-4d8f-8825-118b4f75bd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae968f7d-1942-42f3-8cfe-3e72f46771a3",
        "cursor": {
          "ref": "59aa96c1-5a62-4d58-9c8d-4a915ce23573",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f232e90b-ae00-4f51-97ca-851bc9bf8f9c"
        },
        "item": {
          "id": "ae968f7d-1942-42f3-8cfe-3e72f46771a3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f61f3e8a-1641-41a6-bcaf-aef908c76495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61183e35-de74-4700-93d6-6e0b54c0d5f3",
        "cursor": {
          "ref": "a4a13e82-6d55-4de9-84ba-09d57da47420",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "de070b08-fac0-4e83-86ce-ef4d89a45ff9"
        },
        "item": {
          "id": "61183e35-de74-4700-93d6-6e0b54c0d5f3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f6534f66-c2cc-4186-93f3-d32bfab5be1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238ced73-4cd8-4e8c-ad9f-0ae1b370e5ba",
        "cursor": {
          "ref": "3a4d2586-d591-4f10-a164-53b198b7666c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "574f4659-9458-4a1c-9d77-9dfc00e0b227"
        },
        "item": {
          "id": "238ced73-4cd8-4e8c-ad9f-0ae1b370e5ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b712f813-a0cf-4dbf-b79e-af9d1a0f306a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86edc3d3-5332-4046-a735-1d92fb008038",
        "cursor": {
          "ref": "b8232739-a2c4-4d3a-8c19-cd13ae7d9b07",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "98dfd766-4a09-448c-ba6f-d010788712c5"
        },
        "item": {
          "id": "86edc3d3-5332-4046-a735-1d92fb008038",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "554ab951-48db-4924-9e84-e41f3c254c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fe0a11-f4e0-4f8e-8f97-2f16d508434d",
        "cursor": {
          "ref": "f8ebd743-e9d1-4132-9b9d-2a673b556b04",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bca0b19c-48fd-488c-9113-67babcdf51ae"
        },
        "item": {
          "id": "e2fe0a11-f4e0-4f8e-8f97-2f16d508434d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "58dd1230-7649-4f92-b873-23b19cbb6a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f45d935-fcd1-405d-8176-c0bef926ea6e",
        "cursor": {
          "ref": "fdbf0806-fd08-4298-bd82-9bf18ef84331",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3bea790d-50e4-4079-997c-90e0f92e705d"
        },
        "item": {
          "id": "4f45d935-fcd1-405d-8176-c0bef926ea6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bf53c333-baec-456e-8c88-9a51a85cddff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26da5ccf-2b44-44bd-bcb3-23ff4ff232f8",
        "cursor": {
          "ref": "c21f42e0-ff5a-44e8-90b2-c4f4665f9ab8",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3a0c640a-3448-4926-9d27-ca8e93c1bad0"
        },
        "item": {
          "id": "26da5ccf-2b44-44bd-bcb3-23ff4ff232f8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d0f4a556-cf76-48dd-adcb-60b4503f9ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40555404-f342-47b0-a11d-abe79f5805bb",
        "cursor": {
          "ref": "4f314d5d-05a6-4bdc-84e7-570036458145",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d248d56a-661e-4712-b16a-c11a98d481c4"
        },
        "item": {
          "id": "40555404-f342-47b0-a11d-abe79f5805bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0f73d332-c800-4f4b-9d95-5565114723bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08b297f-8777-4c7b-9cc5-6b8495b0e30c",
        "cursor": {
          "ref": "1a495cb1-edc4-4847-8dc2-f8ea0157c5a6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f3966bde-131e-4364-a583-670a570dfc33"
        },
        "item": {
          "id": "a08b297f-8777-4c7b-9cc5-6b8495b0e30c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "004be996-16ae-4dc2-9f88-969db480bccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96acb5a-1e40-434f-bb5b-c629279751f2",
        "cursor": {
          "ref": "66289138-c06f-4233-b17e-e4474fff441b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71264735-1568-42b5-9304-c9cd2c96dd8b"
        },
        "item": {
          "id": "f96acb5a-1e40-434f-bb5b-c629279751f2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "07b5654d-2fc7-4c92-aa6b-79ee218e527f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a4c9a0-8fab-4145-b1cf-e4f7eadfba7e",
        "cursor": {
          "ref": "02c97076-364c-49b4-a6b0-604a2dfe42b6",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "25dd480b-eaa5-4511-a27d-ba16661cca23"
        },
        "item": {
          "id": "23a4c9a0-8fab-4145-b1cf-e4f7eadfba7e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6cf7b93e-da02-406d-bc3b-354a3a5b7f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66869bf9-2557-418f-ae6f-b0acfde227d6",
        "cursor": {
          "ref": "085c210c-9a72-4742-8558-48976a190482",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fc8f1ffb-6fec-4c97-bf48-9ee5d6e1db20"
        },
        "item": {
          "id": "66869bf9-2557-418f-ae6f-b0acfde227d6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ae4743fa-df23-4324-a3d5-5156cef06ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e08317-4b48-45c9-a34e-7c82e2c1f034",
        "cursor": {
          "ref": "c8ec1bc6-52a1-4d0d-a789-71dd9dbae786",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7c9bf39f-60d7-4b87-9b11-05a17227c04b"
        },
        "item": {
          "id": "b2e08317-4b48-45c9-a34e-7c82e2c1f034",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ac659fdb-1ef7-4046-8e13-426da8df8ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7923b253-d5b8-493c-91aa-de20c5d4a28c",
        "cursor": {
          "ref": "3bd008b4-d9c4-4e1d-987b-06e71c8ef0c4",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "92f2424b-d8f5-4eea-a3b4-0f2dc4a66400"
        },
        "item": {
          "id": "7923b253-d5b8-493c-91aa-de20c5d4a28c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aab9b0d9-e385-4c2a-8137-5f0723b91746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceb9c9e-d0c4-4e8d-b2ca-1d3d03b77ce1",
        "cursor": {
          "ref": "ce712d82-2ca2-424c-9f6d-cc57d8c57e09",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d337e110-d14d-4019-bdee-23664df79dda"
        },
        "item": {
          "id": "fceb9c9e-d0c4-4e8d-b2ca-1d3d03b77ce1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5907c608-fdcd-4755-b41d-fcf91de470b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a822c5dc-4436-43e3-8a39-976b2dc159f3",
        "cursor": {
          "ref": "945b3940-f3ba-43fd-b026-15d5a1252323",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "97e0476f-c60c-4d31-b2d8-5b25108ce610"
        },
        "item": {
          "id": "a822c5dc-4436-43e3-8a39-976b2dc159f3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "99796d63-d253-45d8-b196-405206e97c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d199dd-3c1e-4b65-ab96-74d8cb8d1fc6",
        "cursor": {
          "ref": "4e58ddc1-bbc9-40e0-96db-784ecf3195f5",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6fef4815-15b5-479f-adaa-a0d654d37ac0"
        },
        "item": {
          "id": "54d199dd-3c1e-4b65-ab96-74d8cb8d1fc6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d9aa67b8-69ef-443c-8489-a44182730cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2092293e-388e-445e-988c-ce3917affdee",
        "cursor": {
          "ref": "85f47985-8562-4e03-bd53-549aec56f4bc",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "05f4353c-e7a0-4214-bc30-69e63775e467"
        },
        "item": {
          "id": "2092293e-388e-445e-988c-ce3917affdee",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aada2c20-2134-42f6-994e-3dcd517bc3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac955096-69f3-4a87-b835-48dd2ffe1681",
        "cursor": {
          "ref": "3934452b-050d-4c89-8223-e233e6f00752",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "04d23b3a-475e-49c5-b1de-a0fa6d7d1286"
        },
        "item": {
          "id": "ac955096-69f3-4a87-b835-48dd2ffe1681",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b3b7f840-444b-4fd6-8643-edc1df9f4c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb689e5-77a4-4239-9adc-a032f95ec138",
        "cursor": {
          "ref": "a1937a0a-c0e5-4dcd-aa1a-990e688c112b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d3f62537-6aa9-4261-b004-106db31c419a"
        },
        "item": {
          "id": "abb689e5-77a4-4239-9adc-a032f95ec138",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "13365267-b65e-410d-9d22-ebddecd9aaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb60b8aa-5156-4f88-b34a-73903acec245",
        "cursor": {
          "ref": "3eff914c-e8fc-4e9b-bd0b-d2cedab097d0",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "25c5fcbf-bce4-492c-93eb-83a21a3b143f"
        },
        "item": {
          "id": "cb60b8aa-5156-4f88-b34a-73903acec245",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "978e7862-a951-46b2-925b-e2ef1835d6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb030168-206d-45ba-bdb2-c4ba41a7b7ef",
        "cursor": {
          "ref": "8e4c0782-605d-4820-83d8-44ec0f61c523",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "873a4606-e4c1-4171-bbcf-8a29d49f9c77"
        },
        "item": {
          "id": "bb030168-206d-45ba-bdb2-c4ba41a7b7ef",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2a49c202-746c-4ed6-8bee-da35630f8dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0645f81-6ad5-4380-83bd-cb84f05800d9",
        "cursor": {
          "ref": "cb088f8f-ee9c-4f06-93e8-84db510688d1",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5581fd73-15ca-4052-b8c1-25005342f821"
        },
        "item": {
          "id": "b0645f81-6ad5-4380-83bd-cb84f05800d9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "70d1846d-04b1-449c-9017-d42a01e54715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bd3f04-64d6-4fb6-86f9-4dc63bda813c",
        "cursor": {
          "ref": "19141128-fc1b-40d3-8595-6c0ed93f4fcc",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f1b8b7ab-88de-4313-9da5-9f8824c8cf10"
        },
        "item": {
          "id": "c7bd3f04-64d6-4fb6-86f9-4dc63bda813c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cf23a51f-6a3d-4ef2-abe5-5bdf0e6633a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78921bb-cf29-4892-9807-a4efc0b4d7a6",
        "cursor": {
          "ref": "4e6264d5-714a-4aa3-97ac-9c2031a4dcfd",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3d29caa-3c78-4fe2-abb4-60a59e8ec4cf"
        },
        "item": {
          "id": "e78921bb-cf29-4892-9807-a4efc0b4d7a6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6805530d-59ac-407f-9196-2c5209099266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ce04cc-7aaf-472c-b0b6-825af7076ead",
        "cursor": {
          "ref": "5056e92c-2d98-4e4c-95dd-b2386a032ebb",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "01c49246-7440-410a-947a-6aaf9134db37"
        },
        "item": {
          "id": "d3ce04cc-7aaf-472c-b0b6-825af7076ead",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "91a16fb0-fbd3-48fc-bd4f-b889a69fb9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec8b752-377c-48d6-aba7-40c7b333d195",
        "cursor": {
          "ref": "6de84925-4a56-47e5-b727-b832626968fe",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7b047c68-ee56-433c-9787-ea073348f127"
        },
        "item": {
          "id": "0ec8b752-377c-48d6-aba7-40c7b333d195",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3cd208df-004c-4c05-b5d9-5809f582712c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe9f6c5-157f-4e5e-9b79-5123e7903b7d",
        "cursor": {
          "ref": "54db0605-7e89-4455-b60d-7af79ca9afb9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5642da4c-6fe3-40a5-82f8-d901e57be32d"
        },
        "item": {
          "id": "bfe9f6c5-157f-4e5e-9b79-5123e7903b7d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cc03ea06-d223-4560-9a0a-4b51158c3415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e0361b-79d6-4497-90f2-4b77d498032b",
        "cursor": {
          "ref": "dd5cc8ff-ae9b-470e-bc54-5811e33de9cb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1f875b72-3772-461c-941c-6bbe8551bd83"
        },
        "item": {
          "id": "23e0361b-79d6-4497-90f2-4b77d498032b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8b4e320c-9fed-486a-b3ed-1820c179a927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0e1566-de30-48b3-8c40-f441bc594bc8",
        "cursor": {
          "ref": "1860199b-b474-49b3-b691-b3a81fef88d7",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "82fcf129-8f23-4f4d-9783-847644d5a8f5"
        },
        "item": {
          "id": "5c0e1566-de30-48b3-8c40-f441bc594bc8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2414d0ed-184d-41da-963c-6f380a4fc366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2953d0-0599-43ec-9e1c-e4814bc9e1d8",
        "cursor": {
          "ref": "44243c4f-6f73-4378-bb00-e80598f1ddba",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b756a04e-8d70-46ab-9820-0a233641fa2f"
        },
        "item": {
          "id": "ba2953d0-0599-43ec-9e1c-e4814bc9e1d8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "482ac0c4-acb1-45fb-b43b-dfd430c184b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117d50a5-a59e-417b-b24b-9e4b51d939a7",
        "cursor": {
          "ref": "0cabd682-39f5-4877-9f7a-0e124058e32d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "78c6894b-6eae-4eed-ad44-7b5515311d7e"
        },
        "item": {
          "id": "117d50a5-a59e-417b-b24b-9e4b51d939a7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bc38b014-35f6-41c3-9e47-6971e8c0d948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd99366-9a8a-461f-8a56-42ccef7ba189",
        "cursor": {
          "ref": "a3bf8e5c-8c9c-4672-aa57-5226bfed280c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cd9246f3-1d88-4846-83f9-e393e1f8a6ab"
        },
        "item": {
          "id": "1dd99366-9a8a-461f-8a56-42ccef7ba189",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d4ab6d65-78b3-44c6-8911-0fd5cfb1afbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816b9098-3033-4359-8ad2-dfdbb5a2a41d",
        "cursor": {
          "ref": "8564286f-f575-47c7-a9fa-475c927e8b92",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "87e437f5-b279-4c4e-a063-488562787486"
        },
        "item": {
          "id": "816b9098-3033-4359-8ad2-dfdbb5a2a41d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cd09528d-e1b9-4441-9ab7-e067e2294a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6301319-4dee-402d-bcdc-9d4c69d78030",
        "cursor": {
          "ref": "a7d05b9a-762f-4db7-bd3b-731e1244c456",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "099e6a15-e4a7-4c9b-af64-ceb1c938cd6e"
        },
        "item": {
          "id": "d6301319-4dee-402d-bcdc-9d4c69d78030",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "31fd4597-eccc-4dbe-a22b-f750c4bb0a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c6404f-8e4e-4e47-9ed6-5c7f5c6d9b33",
        "cursor": {
          "ref": "3257b3ef-06cf-465e-a188-cdb063318987",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ce40970d-be27-489f-86d8-cfc64c9a4a2f"
        },
        "item": {
          "id": "c8c6404f-8e4e-4e47-9ed6-5c7f5c6d9b33",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ca8d6d68-c09b-4854-8f4b-10d940fad118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28885a62-2566-414b-8e11-c6cecc438dd3",
        "cursor": {
          "ref": "f05ff3b7-865d-438c-8e40-0d454a96c887",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "51f3c87c-4bb8-44f1-87e4-f6164c0ab74b"
        },
        "item": {
          "id": "28885a62-2566-414b-8e11-c6cecc438dd3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9602276f-4e25-4570-9fae-6f2b13a1cd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c77907-32a4-462e-826c-818a865a9a3d",
        "cursor": {
          "ref": "358d789a-4021-4029-ba78-4dfd8cd6f22d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6b670fb1-5ffe-44ca-a369-bad4a7933a57"
        },
        "item": {
          "id": "c9c77907-32a4-462e-826c-818a865a9a3d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aefa1180-9764-40ed-a3f7-05b6f011806c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5f7258-8a66-4ce0-b367-be7accf60183",
        "cursor": {
          "ref": "3f4353ec-378b-40f7-83ef-51ed1844823a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d031a5a9-c429-41b9-ad94-04544a395af4"
        },
        "item": {
          "id": "0a5f7258-8a66-4ce0-b367-be7accf60183",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0e98cb21-6947-47a3-8994-70e47a98f0fa",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "199a78b5-162f-4920-9618-3758424903b0",
        "cursor": {
          "ref": "c7f8f671-14e5-4820-b176-b7e6bc6aafc0",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a8c044d7-309e-45d5-951f-efb16e1bef27"
        },
        "item": {
          "id": "199a78b5-162f-4920-9618-3758424903b0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7b8bebef-e5ee-4f38-9455-ac1ca0490682",
          "status": "Created",
          "code": 201,
          "responseTime": 194,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1421d5-b598-4d6f-b81d-9cb4cf31972b",
        "cursor": {
          "ref": "fb917675-9ea0-43bf-a37f-965b469fb31f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eeab9284-1a53-48cc-ae35-bcd9e2e6f0c0"
        },
        "item": {
          "id": "4f1421d5-b598-4d6f-b81d-9cb4cf31972b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7366233b-86c8-4f53-a842-b5a1a5d88e9a",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf067da-0b62-44cc-b533-acb85a6e11dc",
        "cursor": {
          "ref": "dbc90f93-4316-47dc-9738-1fa149c3ceee",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6162011a-cb26-493d-a668-94ec753d4b78"
        },
        "item": {
          "id": "2cf067da-0b62-44cc-b533-acb85a6e11dc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c8f38a37-40d5-443a-9997-7f3408d90b11",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3751aa83-908e-4aa7-bbb2-a6d53317c3ed",
        "cursor": {
          "ref": "8f6ec733-d356-4faa-8a7f-ef21babbb701",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0d3eb8d0-b822-40b2-b1c8-71bae27dc3ba"
        },
        "item": {
          "id": "3751aa83-908e-4aa7-bbb2-a6d53317c3ed",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "14a1b404-db2a-4c60-8b5f-0e8146b84036",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3f047f-1ca0-40ba-af3e-fa0a2d02fe96",
        "cursor": {
          "ref": "ec8ac5bf-9af2-40a8-a26b-33a5049201ff",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "af850508-c30e-482b-85f8-f218a89f90be"
        },
        "item": {
          "id": "1f3f047f-1ca0-40ba-af3e-fa0a2d02fe96",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5e827bbe-a3cd-44ba-94a5-71720522ae20",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba820d44-61d5-4440-b8d1-1fb06c72e37e",
        "cursor": {
          "ref": "d5460e4a-9c11-427d-bc3c-421871c61958",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8ccf3645-1ff8-4fc6-9a02-6087bae06410"
        },
        "item": {
          "id": "ba820d44-61d5-4440-b8d1-1fb06c72e37e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b7e570fb-c49e-4f00-905d-e9fbd16ea3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c22873-9770-4bcc-b1a0-1c031ae5028f",
        "cursor": {
          "ref": "81fd241e-cff8-4243-9a50-ca34ca72e66a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a4c365d8-ac05-46f4-9276-ad6f8db77f2c"
        },
        "item": {
          "id": "95c22873-9770-4bcc-b1a0-1c031ae5028f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c3106c66-d2b7-4c27-be7c-dfcfbce52192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e34195a-f13c-474e-9163-3294033488ed",
        "cursor": {
          "ref": "e66e6570-cfb5-4e0e-b9b7-4c76df548b48",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c0430464-a572-4c15-a206-adc9162d5f0e"
        },
        "item": {
          "id": "4e34195a-f13c-474e-9163-3294033488ed",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fdb96b08-2c96-40f0-b2b9-7cb9d34fa80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c803813-2da6-41d9-9d06-9ee5e204fe44",
        "cursor": {
          "ref": "30e9331f-5217-49ab-a64b-ed5066080793",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1eff0122-fb8f-41f7-86da-fa55ffb76559"
        },
        "item": {
          "id": "3c803813-2da6-41d9-9d06-9ee5e204fe44",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f1b78406-4655-4c20-9821-cd5182b57f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0a48fb-b832-4414-8ac7-c1e2815c7f44",
        "cursor": {
          "ref": "d37741b9-3aab-411d-82cf-bfe55687f991",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "af79ca0d-7731-46e2-a554-e3086212509f"
        },
        "item": {
          "id": "4f0a48fb-b832-4414-8ac7-c1e2815c7f44",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "474c11f1-4724-41f4-8ebe-440dc183ee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d2dab5-b0d6-4935-8665-288fee92e835",
        "cursor": {
          "ref": "e30c040c-26aa-47d5-bfde-15683bf99150",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "02d3959e-a9f4-44d7-a1a8-d7e81bc5d7bc"
        },
        "item": {
          "id": "62d2dab5-b0d6-4935-8665-288fee92e835",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e681c5f4-3a41-49ce-896a-4830748e1b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab957c60-6e41-4037-b10d-2cfd56b95d9c",
        "cursor": {
          "ref": "c7ae9e77-b9be-4a66-9f8a-4a2c58b2fbae",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fb064e40-fc30-4110-a219-6a9940aab6e2"
        },
        "item": {
          "id": "ab957c60-6e41-4037-b10d-2cfd56b95d9c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c1c1e37b-b0dd-4dfb-923f-4e1d65258e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fedb9c9-f1d2-4538-a940-4a77cc15f31b",
        "cursor": {
          "ref": "bc48ac80-25ce-4cf1-98bd-d6f5e233b41e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1e908fc0-31d5-4c58-9cec-7eab934ea4af"
        },
        "item": {
          "id": "7fedb9c9-f1d2-4538-a940-4a77cc15f31b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8d37731c-2ad3-4ebb-82aa-3575ed42c92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c04f7d-c537-4eb5-bf50-d9568744d2da",
        "cursor": {
          "ref": "89811c1d-41c3-43af-a412-7e994304fa00",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "51176f7e-659f-466f-b575-46f52a5868af"
        },
        "item": {
          "id": "d0c04f7d-c537-4eb5-bf50-d9568744d2da",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3e319cb3-11c2-4466-bd47-96a5cb113d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c366fe-db26-43f9-b3d4-2f882e1b597d",
        "cursor": {
          "ref": "cdad387f-9f32-4f36-b287-0e430c6f1476",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "47bab524-526d-4f49-b65e-cd3f761ad767"
        },
        "item": {
          "id": "d1c366fe-db26-43f9-b3d4-2f882e1b597d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0855a457-3945-453d-acac-e393a4c7042d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349e44b7-9fe5-4c09-812c-ded4f3394c7c",
        "cursor": {
          "ref": "81ce1064-3b9f-4640-9fe0-88821e126f4d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3b7d2a6e-7992-49d1-bf2c-6fe369ba0589"
        },
        "item": {
          "id": "349e44b7-9fe5-4c09-812c-ded4f3394c7c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8d67fa15-de01-4dd5-a28b-c5d3d12fb58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a02408f-ed46-465a-8b4d-d6d3d370d225",
        "cursor": {
          "ref": "dc56cd30-e854-4eb6-bb84-922abba39386",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "db29b762-dc05-41f8-8166-9101e0a6c9ca"
        },
        "item": {
          "id": "6a02408f-ed46-465a-8b4d-d6d3d370d225",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "65b2c6c8-340e-434e-9009-2d503c0b7613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9281d11b-01f4-48ba-96ac-2fb300b99fe6",
        "cursor": {
          "ref": "2f64f797-7251-4b8c-b109-69b6176946a8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "74f359f7-ee2a-4a78-8acb-21bce7354910"
        },
        "item": {
          "id": "9281d11b-01f4-48ba-96ac-2fb300b99fe6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5f917c9f-9845-4c31-884d-1943bc8cd75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3093574f-9c14-43bb-8618-e001864c11c1",
        "cursor": {
          "ref": "fec9e37c-bea6-412f-aa89-5a159673de64",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ae28963f-3db4-4ca1-8fef-1230839c5e65"
        },
        "item": {
          "id": "3093574f-9c14-43bb-8618-e001864c11c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c024254e-70a4-42f8-86e4-9286e408dd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d67508-d2f3-47b1-a8a2-080a3c6860b3",
        "cursor": {
          "ref": "ad214134-da45-4858-81ea-dcacc26b443d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "50d1b07f-8a8e-4ead-b860-7fa3bffc3a7d"
        },
        "item": {
          "id": "f6d67508-d2f3-47b1-a8a2-080a3c6860b3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b8125380-e319-438f-8c0d-7c28ba10e110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4adf6e-56b7-4fe6-9a09-5c269515d6cb",
        "cursor": {
          "ref": "2d5c5067-12df-4d6f-90db-48acaad0c18b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3554d413-b6d8-4709-8b1f-d1357196fb33"
        },
        "item": {
          "id": "1a4adf6e-56b7-4fe6-9a09-5c269515d6cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d436f740-e871-473c-acdb-1543f63c2f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968e48da-d6ac-4ce6-81de-2c29ecbd0eeb",
        "cursor": {
          "ref": "355b5486-57a4-458a-940e-034def58fd98",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c7f050c0-05ae-4a19-8ddd-fb009c8c7a29"
        },
        "item": {
          "id": "968e48da-d6ac-4ce6-81de-2c29ecbd0eeb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1bf6e3a5-3a02-44b6-bd16-40ef1746ba4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4490cd6-4b79-414f-96b4-0557fc09c9c8",
        "cursor": {
          "ref": "6a88858c-c7c4-49ea-b602-10df8cd87d49",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "241e07b3-945a-4389-b36a-b40f773f1105"
        },
        "item": {
          "id": "a4490cd6-4b79-414f-96b4-0557fc09c9c8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ba7f8947-8ad2-4090-8b31-cbd24df84549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f736ae2b-5e5b-4913-b389-4df241ca943e",
        "cursor": {
          "ref": "0c053c03-57ed-4e34-b0e2-81d18631331e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eebbd2c9-34f7-438d-8c5d-b8dc08130b04"
        },
        "item": {
          "id": "f736ae2b-5e5b-4913-b389-4df241ca943e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "55a34e02-cd8f-4c28-b7e1-12c80b584551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670a8d3c-362b-4a83-94a0-94ae0c774fde",
        "cursor": {
          "ref": "6e0ba06e-897c-4ee4-872e-d3dd3d3fe521",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f91678c0-32e9-44fc-84f8-e2b3f4540370"
        },
        "item": {
          "id": "670a8d3c-362b-4a83-94a0-94ae0c774fde",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ffff6b8-e751-44cd-99c7-9b4df0e92c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34f7a61-fb94-49ad-9f83-310f69e16e69",
        "cursor": {
          "ref": "d67e0a30-866f-445c-a7db-8de02ebd7cc1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "87ef8f2b-5c0b-4e9a-84d8-0d4d57260bc9"
        },
        "item": {
          "id": "d34f7a61-fb94-49ad-9f83-310f69e16e69",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eb26c82d-cf68-4fa3-adb8-a642a13e0df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48497d1-fb25-4bc9-bb4b-7c7cabec049a",
        "cursor": {
          "ref": "b4d2172e-9e94-4f93-88bf-365335cd43b4",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e55aceb6-91be-40b3-9ab9-5f1cdde5b405"
        },
        "item": {
          "id": "b48497d1-fb25-4bc9-bb4b-7c7cabec049a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "74e60f68-f597-49e4-88e2-212b1464f35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a193537-6e07-4cc0-baba-15cfca536cba",
        "cursor": {
          "ref": "ff0a2883-f36a-41c7-a7dc-17ef48f3026d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d492bbbb-3761-4aa1-b4e2-6b9d70e48188"
        },
        "item": {
          "id": "5a193537-6e07-4cc0-baba-15cfca536cba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "39fd2f28-7af1-4cdc-9d8d-8fc4c4aac34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5facb84-44d7-4972-9fae-d8830b1b5548",
        "cursor": {
          "ref": "5b687877-79dd-4fbf-9aa3-37b0a2fedc6f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "15fcad25-0812-41ac-9fc3-f6ace2b2aeb1"
        },
        "item": {
          "id": "e5facb84-44d7-4972-9fae-d8830b1b5548",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bdead894-2154-4271-bc32-7fd4b9e5ba89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ab12cc-a78a-4218-8601-90b5deb863a9",
        "cursor": {
          "ref": "e1e9abcf-7671-4e2f-89bb-619c12fa3f79",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "78b415b7-9185-4925-b912-90b1424ed2d5"
        },
        "item": {
          "id": "b0ab12cc-a78a-4218-8601-90b5deb863a9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b291bbfd-7fae-4a02-92f7-d17c214b2749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c19a5d5-6396-47cf-b887-e0641e770b3c",
        "cursor": {
          "ref": "5ae007b5-212c-45d1-85f1-4fb4d7564011",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1584016b-c4ed-4457-a17c-79450bc69788"
        },
        "item": {
          "id": "0c19a5d5-6396-47cf-b887-e0641e770b3c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3eb6622a-8f8f-465f-898c-47494da96be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac653f8-04a6-481d-a627-7a54ed67da7f",
        "cursor": {
          "ref": "c4b62cb5-42b4-490a-8184-089f576dc729",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d2d8c6fa-2a54-441d-8242-1372d8eb6a32"
        },
        "item": {
          "id": "9ac653f8-04a6-481d-a627-7a54ed67da7f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "752fc7d1-3d73-450c-b742-47ce62d8b9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35b7b6d-e6ad-4182-8827-c27d58aa7cbc",
        "cursor": {
          "ref": "8b9b474f-6c74-4668-8cf5-401c586949bd",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fb7b1f41-011e-4536-b15f-b1cd69c9b46f"
        },
        "item": {
          "id": "c35b7b6d-e6ad-4182-8827-c27d58aa7cbc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1468f4db-fe67-40d4-89f1-e2c969553243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0713c6e-c3eb-4aff-89ab-a655637d6dd3",
        "cursor": {
          "ref": "9825f6f7-5740-4e6d-a88e-9ed6fb6c1080",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cd52a52c-d7f0-4740-b462-033cb1e01069"
        },
        "item": {
          "id": "b0713c6e-c3eb-4aff-89ab-a655637d6dd3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ed13df36-f051-42ae-a95c-86f819254079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4ef16d-c385-44cc-ada0-0866d5aedbd1",
        "cursor": {
          "ref": "0c57ae61-8595-4b5b-9418-6e1e166de9a4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bed8c576-c6a9-4125-9ab3-4c65fb1ef2c4"
        },
        "item": {
          "id": "0b4ef16d-c385-44cc-ada0-0866d5aedbd1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1196832f-f753-4145-86e3-4d5e4b684219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdd882e-2216-4a37-a688-fd9fb13171fc",
        "cursor": {
          "ref": "1c649c18-d074-41f7-b031-71bc774d3299",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7ead57c5-4555-4ce8-bf3c-df181429fb04"
        },
        "item": {
          "id": "acdd882e-2216-4a37-a688-fd9fb13171fc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1b138046-247d-43df-ae49-89dead99f92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032a3c68-dd43-4775-bd2b-4054c0fc1e91",
        "cursor": {
          "ref": "e2f6bc47-0a2d-43a0-9bdd-4bb31864cbec",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a02a9177-bc7a-4f8e-84c1-d8bb81466a6a"
        },
        "item": {
          "id": "032a3c68-dd43-4775-bd2b-4054c0fc1e91",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e94ad1f5-1475-46f8-9b9a-05a524f53734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49130d07-3ac1-4513-b148-ff02ea4a25cd",
        "cursor": {
          "ref": "8a274f8a-37fb-4a00-aa73-b3c02fcbb3ef",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2b4cb9e2-6891-4b2e-977b-e604db5a1bd7"
        },
        "item": {
          "id": "49130d07-3ac1-4513-b148-ff02ea4a25cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "56dc0e79-5298-4ccb-ae1d-013bb97207f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d423b5d-c475-4db0-a639-73c8941fcb00",
        "cursor": {
          "ref": "4085f0c3-8853-407b-84d2-0143810a268e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "92bb45b1-2765-4824-9cca-6996a9dacce0"
        },
        "item": {
          "id": "9d423b5d-c475-4db0-a639-73c8941fcb00",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8576ce9e-9f69-4e24-90e3-91818d0cf83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748ed573-2412-4087-9b5b-c754309e4e9d",
        "cursor": {
          "ref": "cfb7c635-934c-4627-a398-2d98541dfc05",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e694ed82-6736-440d-b583-11cc8d47fc6f"
        },
        "item": {
          "id": "748ed573-2412-4087-9b5b-c754309e4e9d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "65d12bd3-78d0-4fe4-bf3c-e7aef04d9a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3855f36e-9fbb-40ce-b206-02716173d643",
        "cursor": {
          "ref": "d46de36e-6639-46c1-802f-2e2b19700275",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "530a92d9-5256-4ecd-807f-6179874be242"
        },
        "item": {
          "id": "3855f36e-9fbb-40ce-b206-02716173d643",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6eae9415-fc6d-4dd7-b45e-66a66020ea03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7888a660-2e90-4bdd-8ed8-aad9139949dc",
        "cursor": {
          "ref": "c371c632-506b-49a9-aa87-e07bf9ebed17",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0f38d224-8b54-4fcf-ba7b-d203301b2596"
        },
        "item": {
          "id": "7888a660-2e90-4bdd-8ed8-aad9139949dc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d073a6d8-79b3-48f7-85a2-b565182670a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21445645-f5a3-4419-95ae-b78fbb8fdb45",
        "cursor": {
          "ref": "e2e54781-9164-4bc6-aa56-658ae1acd86b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d425bbb2-cabd-42f8-8ef5-1e75fb672941"
        },
        "item": {
          "id": "21445645-f5a3-4419-95ae-b78fbb8fdb45",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "06d5767d-227d-49f9-932d-f928106dd4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7010a1-0b0c-4d02-8e37-8894cc059e2a",
        "cursor": {
          "ref": "6743b3cc-ee24-44f7-b0a4-5f2c4cc2dd19",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8b159412-36be-4da6-b56a-fee19e843416"
        },
        "item": {
          "id": "bc7010a1-0b0c-4d02-8e37-8894cc059e2a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c08987b2-fad5-4bc9-a34a-b2232ba21da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de822718-bfaf-49bd-88fa-ea19a480993d",
        "cursor": {
          "ref": "a06e0a11-5560-4966-abe9-d8f0b765411d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e4774b6b-86e0-4de9-8333-ba6baa93ddad"
        },
        "item": {
          "id": "de822718-bfaf-49bd-88fa-ea19a480993d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "757f35ac-c137-4664-a2e2-e038abb1a01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeeac1d-111e-43e0-99d3-c858ac22934a",
        "cursor": {
          "ref": "5e98a88a-623b-4cea-bf62-f6d0fb2e6b00",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "80fe5773-14b5-491c-bb9f-52b0e7873064"
        },
        "item": {
          "id": "ebeeac1d-111e-43e0-99d3-c858ac22934a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "12206d57-22bf-4d35-9e8b-2b7b19af29ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74917563-979b-442a-a987-07b359e6d995",
        "cursor": {
          "ref": "152aef40-ff6e-4ae2-8897-7fd8a1f3e55c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0318bd29-0949-4798-b3a2-e715cb44a209"
        },
        "item": {
          "id": "74917563-979b-442a-a987-07b359e6d995",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4647cca8-8885-4704-bf4d-2bebfa515f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6736ba60-ca8f-4c7f-9009-6978f7ebfca3",
        "cursor": {
          "ref": "2819bc91-84e8-4fa8-b4ef-56a9cbabb0ac",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "62fb1b33-01df-4089-ae0f-91f5adee9267"
        },
        "item": {
          "id": "6736ba60-ca8f-4c7f-9009-6978f7ebfca3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "24f1388d-adea-4c96-b6f5-4b41c11f1877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc0b9fb-67ef-4e6b-b0d6-af26f286d73c",
        "cursor": {
          "ref": "30e01523-07e0-49c2-9f43-0b53a36071d9",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c82512ab-7309-4ca4-a3e5-0f996851d6bb"
        },
        "item": {
          "id": "cfc0b9fb-67ef-4e6b-b0d6-af26f286d73c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0064451c-29ca-41e7-9254-66060a153b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7e38c6-93ab-441d-9c6d-f0d3a0be8bf3",
        "cursor": {
          "ref": "b764e994-8000-421d-8785-c8a520ac66fe",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "faccba90-a753-4cb8-9071-86d2bf0e579a"
        },
        "item": {
          "id": "be7e38c6-93ab-441d-9c6d-f0d3a0be8bf3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "28047b5b-2d29-4323-b0cd-bc2472227653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b834a1-79f3-4e90-bbad-98557d467ec8",
        "cursor": {
          "ref": "fe11d670-0e95-4245-8a9b-a050a8b00883",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ee35346a-a7f4-4f7a-bab4-160fe6e0e1bd"
        },
        "item": {
          "id": "35b834a1-79f3-4e90-bbad-98557d467ec8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "42f8c2d1-fb31-4c08-9b0c-6a27f1205325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d58876-3fad-44c6-8efb-8b6fd873e4e8",
        "cursor": {
          "ref": "baef9b15-ed42-4547-bc14-8ecd3955e7b0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "99a7ec7c-790f-4fd0-b9a2-4c7406cceda5"
        },
        "item": {
          "id": "40d58876-3fad-44c6-8efb-8b6fd873e4e8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "efab72d6-5f9a-423d-b65f-5f893b3339fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d32f46-cf5c-4b6c-b581-ed145bf9c855",
        "cursor": {
          "ref": "e4ccdfe7-c24f-4147-9404-e6e84ca62997",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1031d41e-792f-4dbf-91b1-083d2d4c71fd"
        },
        "item": {
          "id": "a0d32f46-cf5c-4b6c-b581-ed145bf9c855",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b985fd54-d76a-4827-8e26-dda929a7dfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea610d4b-7da0-4829-9c01-aef055f14a7e",
        "cursor": {
          "ref": "aa41accd-98b0-44ad-a52c-2b0b1007e31e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "068d90e8-1230-442f-82de-7122dfcc2c5d"
        },
        "item": {
          "id": "ea610d4b-7da0-4829-9c01-aef055f14a7e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f559c7d-20d7-47e8-bb50-29fb1a69234b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88c7cb1-dac2-4ed7-84b8-f35ccfff8551",
        "cursor": {
          "ref": "228c262f-c343-4148-935d-ca891cdd9b11",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e134ffad-755d-4176-9cfb-99c81e4ab41e"
        },
        "item": {
          "id": "e88c7cb1-dac2-4ed7-84b8-f35ccfff8551",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a814428f-9422-40c4-ada3-00624312918f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d71bd78-c4e4-4219-80d7-3c878c156c78",
        "cursor": {
          "ref": "772b1c52-17be-4288-b14a-e9702d59d581",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "907674f9-c503-45f6-af59-1cb801d85221"
        },
        "item": {
          "id": "7d71bd78-c4e4-4219-80d7-3c878c156c78",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b343db75-80eb-4a1c-9698-914df092acc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068d5ca7-9a44-423b-8223-ec804ec28cac",
        "cursor": {
          "ref": "fdce21d4-afd2-4652-a781-00b7b85ab3ae",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3c58551c-b07a-4973-93a2-59c14454c5c5"
        },
        "item": {
          "id": "068d5ca7-9a44-423b-8223-ec804ec28cac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6d484fa4-dc2c-4aaa-b034-410f9986cddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0c6bb2-603a-42fb-9fe5-f106be337ebb",
        "cursor": {
          "ref": "770efa63-f261-45e9-9bbf-79868a8f64f3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d2b669d2-dd92-47da-8c34-7ad53a45ce68"
        },
        "item": {
          "id": "ae0c6bb2-603a-42fb-9fe5-f106be337ebb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ee817299-0f8a-4089-97c0-ea59ac4b6b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3a382d-bf76-4e54-9dee-4011f4744b7b",
        "cursor": {
          "ref": "245bf00b-351a-4971-8c3a-7f9076d40123",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "79019fc9-7be5-47db-a8ac-d818aa232b0e"
        },
        "item": {
          "id": "0e3a382d-bf76-4e54-9dee-4011f4744b7b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5def8699-1674-4289-bef4-5f38de42ebef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388c6f4d-4147-407e-959f-a4a8a4bf2efb",
        "cursor": {
          "ref": "dd9b7781-998f-42b5-9351-c6ef9ec61f2b",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6eecc576-fb89-4c51-a02d-eeca69dc7d19"
        },
        "item": {
          "id": "388c6f4d-4147-407e-959f-a4a8a4bf2efb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6dd96ce9-513d-4d90-8c1f-dc1ada74b095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9458f5-1880-478e-a0e8-4fd842089d76",
        "cursor": {
          "ref": "4167d433-b48a-482d-adf8-92de1bfe9cb6",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "40ee8452-4bf5-4fa9-9e46-2c248416a26e"
        },
        "item": {
          "id": "6f9458f5-1880-478e-a0e8-4fd842089d76",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d2e2be19-74f2-4355-a705-ff27d381187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d50fe25-81f1-40ad-8ba9-cad7903a3759",
        "cursor": {
          "ref": "2786a5d5-2027-4d19-8522-a3b4f0a1cfb9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d0e6022c-b703-46bb-94ea-2408b6ce23e0"
        },
        "item": {
          "id": "8d50fe25-81f1-40ad-8ba9-cad7903a3759",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8af8be8e-e94d-46f8-ae54-d5501f3f9f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf366d5b-8dfc-40af-b18c-cdde3a135316",
        "cursor": {
          "ref": "c48f6543-8ba0-4b76-be81-09e5d60f2078",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "937bcac5-db1a-4a48-b8f6-558f85b766f3"
        },
        "item": {
          "id": "cf366d5b-8dfc-40af-b18c-cdde3a135316",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "50137fa4-ca4f-45d3-8aa0-24b0606cb565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d6ab7e-9813-42ed-814b-029e113af1c6",
        "cursor": {
          "ref": "9ca952e7-02aa-4c5f-97dd-70b29ea0ed83",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5775745b-993a-4846-9161-29c20297f2c3"
        },
        "item": {
          "id": "c5d6ab7e-9813-42ed-814b-029e113af1c6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9880de4-e46a-415b-919d-0962335ccf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5fee44-0aaa-45f8-9c48-9e75d8bd8f85",
        "cursor": {
          "ref": "737c055c-2b94-4387-9445-dbc449fc906e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1d0c85c0-9e35-408d-8538-7bd5b780564d"
        },
        "item": {
          "id": "fe5fee44-0aaa-45f8-9c48-9e75d8bd8f85",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "248e7156-9e2d-45da-8005-35a410c22a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051eb50b-b20c-48d1-bae9-9dea0e098540",
        "cursor": {
          "ref": "8dff29bc-d7ef-497c-9532-0f6cb4a277b5",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "74041418-cecd-444f-bf77-6e5d952f145e"
        },
        "item": {
          "id": "051eb50b-b20c-48d1-bae9-9dea0e098540",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1b566b60-a81b-40de-9951-d3024ecf91ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02c991a-19d1-45d9-ae59-a1c85e417d2f",
        "cursor": {
          "ref": "98e9e6c7-d491-49e2-8a9d-61f08d374d88",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "954525f0-66b8-4d34-aaa3-6ecc34dc0900"
        },
        "item": {
          "id": "f02c991a-19d1-45d9-ae59-a1c85e417d2f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "800fa1a9-f310-464d-a3dd-6a7e65ca672f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b2a7b3-1edf-495e-9f5c-0a5b9ecfd515",
        "cursor": {
          "ref": "89dc3c8e-851b-4b5c-aec5-7d96c26b24ce",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7d1e6c47-1456-4ec9-8680-96f25f3f5837"
        },
        "item": {
          "id": "68b2a7b3-1edf-495e-9f5c-0a5b9ecfd515",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d34d8ea8-0856-4b3e-b230-1ecc0f138600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5110d4-6a2c-43fe-a83f-aa9d769d0a33",
        "cursor": {
          "ref": "7ae2d1a2-5644-4077-a7cd-cf08b4e1f604",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9c31769c-fef0-43c8-a3be-e294618cecbf"
        },
        "item": {
          "id": "ba5110d4-6a2c-43fe-a83f-aa9d769d0a33",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "10ab7cab-489a-487b-8b61-b10d79d43b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0172b7ca-9b01-4662-b232-1b960eef4720",
        "cursor": {
          "ref": "011575d7-a13b-4c4d-ad6c-5c2ba47baedf",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dfe91bd5-e07e-4a49-a19a-5559d8346580"
        },
        "item": {
          "id": "0172b7ca-9b01-4662-b232-1b960eef4720",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "83c64302-acf6-4f7d-a5a4-5be4639540f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86424d40-2ac4-4c2c-b830-e690f3d148a9",
        "cursor": {
          "ref": "60f208f7-bcae-4dd8-8fa4-729c9c396ef0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5b0faaac-b496-41b5-bb02-557821ed9376"
        },
        "item": {
          "id": "86424d40-2ac4-4c2c-b830-e690f3d148a9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a2632007-e07d-41a0-a0a5-0785859fb790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca30423-ce90-4e16-b354-0b032599e073",
        "cursor": {
          "ref": "257567ce-0e77-4200-b1ca-f86e5e11de5c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e76bc9ed-335e-4cc7-890d-6a3a397301f2"
        },
        "item": {
          "id": "5ca30423-ce90-4e16-b354-0b032599e073",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7fb6a241-a345-4155-8679-e627ffe61b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28048815-be3a-4575-8386-d8b7c8264231",
        "cursor": {
          "ref": "746beb41-0942-4f2d-aa0b-1cb180e8515a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aee7a7a8-9003-4c48-b7fa-6e02d4df3105"
        },
        "item": {
          "id": "28048815-be3a-4575-8386-d8b7c8264231",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cbfa1c7f-54cf-470d-89b3-e8c34753112a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574e47fa-cc12-46bb-98c8-70b832bb2d87",
        "cursor": {
          "ref": "f5482a50-0973-4b20-92d9-b6b48eabdf4a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2c4d12d3-4efe-488e-b2fe-6ba494882549"
        },
        "item": {
          "id": "574e47fa-cc12-46bb-98c8-70b832bb2d87",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "48048fde-ab51-44c3-837e-97aeea02e5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b7a79b-ecb4-402e-8505-c6b1c75b04f9",
        "cursor": {
          "ref": "3cd33f4b-956d-4382-9021-817b1fb3534c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "55007137-c979-47fd-8f65-b5c55744145c"
        },
        "item": {
          "id": "a7b7a79b-ecb4-402e-8505-c6b1c75b04f9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a9dddb34-5def-4feb-b3c4-1fe8245131dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe62af26-7a5b-4176-a722-32e1682c7a4d",
        "cursor": {
          "ref": "90d6d0f7-c8c8-4fea-b111-fc56ce181668",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9506a115-b435-49f0-b20b-7f652cd20a88"
        },
        "item": {
          "id": "fe62af26-7a5b-4176-a722-32e1682c7a4d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b0271be-39ad-4eae-a3a0-7101ea92a9b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce2724f-e057-4282-b6f5-097ec6a78ce4",
        "cursor": {
          "ref": "f28eef75-7474-4209-a6c5-ba9fd702eeb8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c5381cd3-0e8c-4896-8a0e-49af1884efb4"
        },
        "item": {
          "id": "cce2724f-e057-4282-b6f5-097ec6a78ce4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9ec500e7-796b-4f73-9d47-363fd485d70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e05ccc-0d4e-45e8-ab3a-3122b552b1fe",
        "cursor": {
          "ref": "20454691-6de2-4ab0-b040-52fdc88143d4",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "69c122a3-008b-49fe-a8e1-327d251ac47d"
        },
        "item": {
          "id": "73e05ccc-0d4e-45e8-ab3a-3122b552b1fe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "12ef6da1-3b97-4839-bcf5-f3ec3aca86be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2b9a9a-13ef-4de5-962c-5a15f31f80ee",
        "cursor": {
          "ref": "69bfaeed-6751-4b16-812a-1194b2162d8f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c65f9042-012b-4b24-81a1-404935a47234"
        },
        "item": {
          "id": "df2b9a9a-13ef-4de5-962c-5a15f31f80ee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "05a236b3-435e-4c3a-bc5e-c761dcbb1024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052440d3-406a-4dd2-a42a-0183e1ace045",
        "cursor": {
          "ref": "148dc249-0367-412c-8bca-fc321d6806bf",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e0e7e1a2-d8e8-45dd-a3b9-f02b18d1df6d"
        },
        "item": {
          "id": "052440d3-406a-4dd2-a42a-0183e1ace045",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3902f8da-e124-48f6-8528-d390f4217aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375e0da6-4f03-4180-a825-167a595c3452",
        "cursor": {
          "ref": "6861f5dc-c0cd-4825-b9d9-98b7796da053",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d1f2e4d2-602a-486b-9983-a05bd84a6141"
        },
        "item": {
          "id": "375e0da6-4f03-4180-a825-167a595c3452",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5874c66f-8fff-470e-a2e8-80e02900a9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1818ad5c-3794-4081-a878-b44dacf3c390",
        "cursor": {
          "ref": "6177a2eb-4dd9-4ef3-9f2c-fcd2885f92fc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c898056e-7517-4064-88b9-8c419e8a91e5"
        },
        "item": {
          "id": "1818ad5c-3794-4081-a878-b44dacf3c390",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "14f70800-ed23-4e24-a326-5c82fc8785b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a324457d-06b4-452c-9f7f-ac16f6969915",
        "cursor": {
          "ref": "b44e8235-0882-4fe8-aed0-0f0bee65de4b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fb6059e6-617a-4c41-9805-05c978b09705"
        },
        "item": {
          "id": "a324457d-06b4-452c-9f7f-ac16f6969915",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "472629cc-636f-4c3f-a74b-6138612b2fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48860c92-39d1-4147-8fd6-5937a7ee1e58",
        "cursor": {
          "ref": "6d9259f7-8d1f-4748-8c61-ca24404a07bf",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "78db702b-ef56-4d08-b62e-b6f365800bd4"
        },
        "item": {
          "id": "48860c92-39d1-4147-8fd6-5937a7ee1e58",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1a1a7e0d-c22e-4b09-88b5-477f811c5eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1470e012-b17e-4f6a-94c0-3e265c918f4e",
        "cursor": {
          "ref": "3f756208-1b14-4d6c-8cfa-ab990fa8bbe4",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "87158656-9ed5-4984-84c2-5e0d3464503f"
        },
        "item": {
          "id": "1470e012-b17e-4f6a-94c0-3e265c918f4e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d0742fe3-778c-49b3-bd51-09a5411c48ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf88c86-5ff9-4305-ac1f-99bcee359f54",
        "cursor": {
          "ref": "c21cee48-38bf-40e5-9601-6f92c00fa159",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cd5a150a-f471-4e24-ae42-92ca376e3ec9"
        },
        "item": {
          "id": "edf88c86-5ff9-4305-ac1f-99bcee359f54",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d705dab9-67ef-4bca-a223-d00b160229b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b2634b-bc32-43cb-90d8-9bdf9c479148",
        "cursor": {
          "ref": "fb5a8ad4-755e-48a9-8087-5d21b26c6eae",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6c9667c1-3ba5-4d14-bb20-50e12726838e"
        },
        "item": {
          "id": "f0b2634b-bc32-43cb-90d8-9bdf9c479148",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5fa8769e-7bb7-43c7-b041-773acd979fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496de3fd-dab1-47ca-a855-48a4880da3e6",
        "cursor": {
          "ref": "8db77278-9690-427f-93ce-154b23e26768",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8259f0dd-40a1-4598-a144-adbeeac7647e"
        },
        "item": {
          "id": "496de3fd-dab1-47ca-a855-48a4880da3e6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "47510137-e132-4c30-8e25-840884d18127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ccd660-baad-496f-be68-dea37544a2ff",
        "cursor": {
          "ref": "d65ba6b7-34f1-4fad-940c-2aa29f45cf89",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4b8a2f72-1d9b-4aef-ad94-9d918c643fc2"
        },
        "item": {
          "id": "98ccd660-baad-496f-be68-dea37544a2ff",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "86ddc8c3-1802-44e3-9c3a-7953682fb0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397eafdc-0665-4d5f-8e92-d14657577122",
        "cursor": {
          "ref": "856751ba-be7f-4db3-83a6-45722a1e41d8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c6da36d2-e89b-4e9a-aae3-5442c77968d4"
        },
        "item": {
          "id": "397eafdc-0665-4d5f-8e92-d14657577122",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a601a7b4-d2b2-4477-8119-bb09bf54575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7aef9a-eae8-4b17-b865-f78888b409cc",
        "cursor": {
          "ref": "c0c96ea0-f1a3-4b7d-80ac-6acc73891bef",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "56d136ba-fcfe-4156-98b2-1c26b8248ce4"
        },
        "item": {
          "id": "1b7aef9a-eae8-4b17-b865-f78888b409cc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "735541af-92e3-45a2-b47b-8c4aaae517f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99516a07-91f7-4ac4-8353-deaefef53621",
        "cursor": {
          "ref": "2fc74957-4749-4fa8-aef5-4531edda4784",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fe37ee9a-04e6-486a-b072-08ba6a2ca3cf"
        },
        "item": {
          "id": "99516a07-91f7-4ac4-8353-deaefef53621",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "32d48dcf-be29-4fda-9162-69ac185afdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a7083f-d79b-44f5-83d2-59210ef348e5",
        "cursor": {
          "ref": "2b27203d-7ef4-4341-8a65-4acee6655572",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "18922841-1379-4830-b59c-8f19998b67e7"
        },
        "item": {
          "id": "55a7083f-d79b-44f5-83d2-59210ef348e5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e039ce85-2478-4e27-9a70-b636dba09157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371c67ec-4bd2-4602-ac12-deca6b9b8bad",
        "cursor": {
          "ref": "c2e896cb-541c-4e21-9b1b-bf4cb3e17f2d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4ea1a1d3-e492-4d76-87d5-045f6b955d3f"
        },
        "item": {
          "id": "371c67ec-4bd2-4602-ac12-deca6b9b8bad",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7e680a95-82d2-4594-a002-a0765ada8fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa92dd57-b8ca-4b2f-888c-041759dc0207",
        "cursor": {
          "ref": "4d5e2ecd-75de-492a-b5e4-7e492b019602",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "561ba88c-096a-4c0c-a747-fb97f300466d"
        },
        "item": {
          "id": "aa92dd57-b8ca-4b2f-888c-041759dc0207",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0b89f407-05a9-4904-88eb-a48b64075ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b881b11-7958-4166-9ed0-ac3bd63e3d9b",
        "cursor": {
          "ref": "09d62427-6643-4ef3-92c8-ea07a5c1f24d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f9e0f04b-a1f3-4c03-b28c-f2d05853dcc4"
        },
        "item": {
          "id": "1b881b11-7958-4166-9ed0-ac3bd63e3d9b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "609fcd07-2092-4a48-8a31-32546ad565a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a49a90-f835-4c2b-8c46-f0f18c462b92",
        "cursor": {
          "ref": "00ad449a-fc43-424a-a156-37927bf91c6d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9ec843bd-b0a9-4a37-8def-bc377c0eacfb"
        },
        "item": {
          "id": "91a49a90-f835-4c2b-8c46-f0f18c462b92",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8db344c3-e72f-4888-8d0f-4f179c7b0b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2c802e-b49a-46a2-ba54-da9390ec4d05",
        "cursor": {
          "ref": "0cb8b154-4d55-4d0b-818e-ab978bff544a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b238ef3c-1fba-4694-89c6-05d46a16924a"
        },
        "item": {
          "id": "9b2c802e-b49a-46a2-ba54-da9390ec4d05",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "71a68bf6-46e3-4119-a346-36ca8c122748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a6ed35-818e-4718-a310-8c4a46b6f349",
        "cursor": {
          "ref": "5adc9c8f-b6c0-42ea-9f2a-e7706073e4ab",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d77573ac-507f-46fa-9f19-0ac2b8cf1d6a"
        },
        "item": {
          "id": "50a6ed35-818e-4718-a310-8c4a46b6f349",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "41743c4c-1bf9-44d8-b85f-967a34ebe4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd91304e-0a67-47b0-b544-35cf5f64696b",
        "cursor": {
          "ref": "1d166897-a8ca-443c-a51a-5479cf3f225f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8931deb4-9a66-4c9c-af1c-4d5991b4fccc"
        },
        "item": {
          "id": "fd91304e-0a67-47b0-b544-35cf5f64696b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "94a11ff3-860a-47ff-b3ae-aa57df2740dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652cc6ff-c7a9-4991-8f87-bb2fd7273bd5",
        "cursor": {
          "ref": "03f25c3e-8fff-4da5-b253-ff411d571788",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c964a14a-15d8-4542-ac30-122e3cb6ebd4"
        },
        "item": {
          "id": "652cc6ff-c7a9-4991-8f87-bb2fd7273bd5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "75640ef0-9adc-4936-a7f3-5aabaa124325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba182539-b276-4524-8d92-ec378aacd554",
        "cursor": {
          "ref": "548b2452-3b8e-457b-bebb-c8cff11aba63",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "08ab06ef-7a27-43f5-a556-4700ec21f5f7"
        },
        "item": {
          "id": "ba182539-b276-4524-8d92-ec378aacd554",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ff4d2e5f-7d5d-4aff-83dd-1fe3f89a5497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcae14a-877f-4b93-b682-22bb40c1533d",
        "cursor": {
          "ref": "bf9b8620-2fbe-47fe-a102-0f0f1297751d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5c678542-7606-4522-aea8-30da1cf8b0d2"
        },
        "item": {
          "id": "fbcae14a-877f-4b93-b682-22bb40c1533d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5bcc3303-7e47-4be9-b6fc-337cba1d2915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9707dc-5778-4889-b153-f67cbb7935bc",
        "cursor": {
          "ref": "45d8aac4-099d-41be-ab8f-ae2c743c5a36",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d41239dd-31d1-4d29-bd5b-bfa39825d2ab"
        },
        "item": {
          "id": "5d9707dc-5778-4889-b153-f67cbb7935bc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "664d528a-adc0-4b65-9bfa-b24ad0bfa1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a5db30-941c-43c5-9a3f-49dbdac5837f",
        "cursor": {
          "ref": "849822c1-f1bc-4f22-bd27-b9a95238c111",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d0cf5131-67d5-4588-a1ef-4d6bc2cd2fa7"
        },
        "item": {
          "id": "91a5db30-941c-43c5-9a3f-49dbdac5837f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7b568ed2-74a8-4f1c-a7f8-9e6a806ef9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c65be8f-858e-4882-9573-2fc40e89440b",
        "cursor": {
          "ref": "f9919d6e-3962-4c6d-b660-8c4a48e2c79b",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ead0a898-60ff-42ce-b53d-662f7db538a4"
        },
        "item": {
          "id": "9c65be8f-858e-4882-9573-2fc40e89440b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1eb4be87-3f63-4bc1-bae2-90d07aae14bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ed41cc-ca17-40b7-ac4c-44690f373c18",
        "cursor": {
          "ref": "b07dcbcf-46cc-4bc8-99ce-86c898bcbdcd",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a9f591a8-0a69-48ca-9bcd-412105a3c745"
        },
        "item": {
          "id": "85ed41cc-ca17-40b7-ac4c-44690f373c18",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "492bfe46-dcbc-45af-b626-ffddb2bb2652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b655b1db-ced0-4f68-b773-5d2ed78cbf89",
        "cursor": {
          "ref": "da0b8297-236c-4acf-943b-f4d4d07e64de",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2f3d5bcc-ac9a-420d-afeb-3f0c809433fd"
        },
        "item": {
          "id": "b655b1db-ced0-4f68-b773-5d2ed78cbf89",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f8f48688-d590-4e6a-aa0a-f0913bb5f250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1275265-3543-4561-9604-942b03f39326",
        "cursor": {
          "ref": "c4c362a2-5652-44ac-80f2-f22ebd5abb3d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3cc2e7d1-4d0f-4629-bc88-81d0a9301ded"
        },
        "item": {
          "id": "f1275265-3543-4561-9604-942b03f39326",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "00e4cf7d-6d5b-49f3-a6ac-a80c4b55033a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd2b74c-59be-4186-b7a1-9688ebbdf8d0",
        "cursor": {
          "ref": "3b5fbb2e-3b67-4d59-b4af-2fe9aed16da4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "af8cab98-bc63-46c6-9a6d-2e44394d3f24"
        },
        "item": {
          "id": "acd2b74c-59be-4186-b7a1-9688ebbdf8d0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fde364aa-518f-494d-829d-844cf1559bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77dcbd4-2727-45b3-a8cd-3722e5850b33",
        "cursor": {
          "ref": "58d04c37-7068-46f4-8d1f-e5838c46333b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c3855153-bc6f-486b-94d5-b41173bc670f"
        },
        "item": {
          "id": "a77dcbd4-2727-45b3-a8cd-3722e5850b33",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "02bf6c51-165e-44bb-80fd-13a89ae19b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbc4dea-a959-4915-8d35-e1a1a3e75f9c",
        "cursor": {
          "ref": "797f32a6-56a9-429d-bfd6-e3b2f38c2912",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4560b64f-a093-4477-b7de-0ac0f45b1075"
        },
        "item": {
          "id": "dfbc4dea-a959-4915-8d35-e1a1a3e75f9c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a2e3345b-aa40-4500-8523-0cc814742f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e13d042-86e8-47a7-b512-d7a6a78cc221",
        "cursor": {
          "ref": "b4d4bda1-84f7-45be-886a-1434047707d6",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4789ef2f-c00f-49d1-9390-39b73800bd93"
        },
        "item": {
          "id": "0e13d042-86e8-47a7-b512-d7a6a78cc221",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9d8d9357-0038-427f-8d3c-6624b29b9b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbb1f3e-29b1-493f-94cd-e561fe915b8f",
        "cursor": {
          "ref": "dfaec8d3-7398-4856-9843-169247085bd1",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b16c96e6-ca11-41aa-ad17-7cf9ca6de2df"
        },
        "item": {
          "id": "bcbb1f3e-29b1-493f-94cd-e561fe915b8f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fa5f7be1-dd96-47b6-aa35-e4bede5ae3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f198c531-6127-4502-9349-2a6d6dffd970",
        "cursor": {
          "ref": "0d3efecd-6d07-4265-848f-192cf95ae8b2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "29a4bbc8-69ad-47eb-8c42-6aa6645d32de"
        },
        "item": {
          "id": "f198c531-6127-4502-9349-2a6d6dffd970",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "21e1d7e7-396f-42a1-a61f-b7c0683ef4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2201e409-f52e-4d2a-aa2f-a8c17d60175d",
        "cursor": {
          "ref": "b4b8fbd7-c675-4319-9763-9c63da5d76b8",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7cf70ed0-3d58-4f97-903b-9e1814626eac"
        },
        "item": {
          "id": "2201e409-f52e-4d2a-aa2f-a8c17d60175d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "958b69c6-3671-42a9-9e4d-bb1539669ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981b32af-abb3-49a5-8090-31d781fc2052",
        "cursor": {
          "ref": "0069b90a-458a-45e5-9c12-34cb2231aa7f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "78a99299-8326-42f9-8e8b-0c1812fbae43"
        },
        "item": {
          "id": "981b32af-abb3-49a5-8090-31d781fc2052",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "828cf7be-392a-4fed-9a66-8cbb1d5432b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12665dda-4cd7-4d20-960d-c7b88c84a54b",
        "cursor": {
          "ref": "d86c38b7-f2f7-4743-849a-47f594b20fef",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "27e3bb5f-b5ac-4d61-bb50-0d3a9f611bf0"
        },
        "item": {
          "id": "12665dda-4cd7-4d20-960d-c7b88c84a54b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "65f37110-0b52-4973-8326-51f86bae2dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887c25df-b90f-4fb2-84c1-a02ba0287477",
        "cursor": {
          "ref": "505bbe93-6385-4d6b-99f9-bd690d735fbe",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "10562ad8-c5b1-40fe-9fda-ea46354062f1"
        },
        "item": {
          "id": "887c25df-b90f-4fb2-84c1-a02ba0287477",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b4709860-71e7-46c6-a15c-3f4bc8852dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98df3ab3-2bff-43a3-b37e-8cf3eb7100d0",
        "cursor": {
          "ref": "586e5f6d-c5bc-4146-83b6-bc75eac63cd6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6d07bee7-d826-4bfb-9c49-1112a6995ab1"
        },
        "item": {
          "id": "98df3ab3-2bff-43a3-b37e-8cf3eb7100d0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4207c8c8-c140-491b-8b27-d014387c5e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bae2941-844e-4b52-a0e1-397b98db2fd3",
        "cursor": {
          "ref": "a593f5e3-f530-4528-942f-7f39fd463180",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "eb8d733a-4507-418f-a0fb-b747e5f4342f"
        },
        "item": {
          "id": "3bae2941-844e-4b52-a0e1-397b98db2fd3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "648396e0-f78e-4459-849d-adf2d5dc1480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7a9ddf-f8c3-4ae7-8958-90f03c826088",
        "cursor": {
          "ref": "c39cea48-47e1-4522-9e50-461983722bbf",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b222eb31-8b0e-4ae2-94fa-2f1bb724ae9e"
        },
        "item": {
          "id": "7a7a9ddf-f8c3-4ae7-8958-90f03c826088",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f7bbeafd-61db-47c2-9d06-0dcd91561dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57676709-41b2-434e-a852-78ec15af7126",
        "cursor": {
          "ref": "5765bdca-3279-4546-8a6a-228e5b951d85",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d49b64c5-ed7d-4ded-a318-a4d2fa5b40df"
        },
        "item": {
          "id": "57676709-41b2-434e-a852-78ec15af7126",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "565f8f76-7b03-4b26-b2e5-8436da2e974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc7b7dd-c98c-449a-ab72-aa4971508011",
        "cursor": {
          "ref": "c77e76cb-33df-4f8b-a55e-9ea23f88dbaf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "19ee3294-4b1d-4312-8530-f1028d4999bf"
        },
        "item": {
          "id": "5bc7b7dd-c98c-449a-ab72-aa4971508011",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d78f89c1-f0d9-44b9-b12c-b7b19facb681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd92836e-31b0-4483-b021-8bff7a0ed67e",
        "cursor": {
          "ref": "5d636c4c-1342-4de2-ac88-18f8d3191efa",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9bd207ed-9f97-4c20-92f1-3f7136910009"
        },
        "item": {
          "id": "fd92836e-31b0-4483-b021-8bff7a0ed67e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "08df5351-acec-474a-ad0e-150c372d3b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8745cf7d-d7cf-4104-89c9-247fbf76a6be",
        "cursor": {
          "ref": "a38e507b-9aed-420a-96b7-70d62cea76a7",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0c7aeed3-4870-4121-801d-5f0083ffd269"
        },
        "item": {
          "id": "8745cf7d-d7cf-4104-89c9-247fbf76a6be",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c77b5d4d-c8b0-4b89-b9f3-7f3a17ab942f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d770bc-939c-45d0-9082-8095105543f8",
        "cursor": {
          "ref": "aa5c888f-be63-412b-a58f-de9da57be789",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5347a2de-9917-451e-9eaa-3558250629f6"
        },
        "item": {
          "id": "18d770bc-939c-45d0-9082-8095105543f8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a7fc234e-b968-4ea6-ab63-03fdc14aa140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1865fa-bf31-4256-a3d7-e4282fca8f0d",
        "cursor": {
          "ref": "3d2d2aba-893d-4ab5-82ee-463a421a22e8",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "151310ec-d75b-49b0-a9b7-5e3a88a36f42"
        },
        "item": {
          "id": "5d1865fa-bf31-4256-a3d7-e4282fca8f0d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8e68277f-389e-4c88-a1d2-9aa1e174000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41a11db-793e-4fe5-8967-a75797be0006",
        "cursor": {
          "ref": "9cbec8d5-e537-40a3-901a-7324e1f18f2b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e434507a-146d-45e9-ba53-cdb4306e8ea8"
        },
        "item": {
          "id": "a41a11db-793e-4fe5-8967-a75797be0006",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7fda7cc8-0444-49f3-b99a-38944a2f6f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53d91c3-ed55-4976-9608-0efc7a25d22b",
        "cursor": {
          "ref": "58ba1888-8b4a-4b4a-8d64-e181aa38c4d5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c9db96a6-2392-4488-acfc-679f24be8fe4"
        },
        "item": {
          "id": "b53d91c3-ed55-4976-9608-0efc7a25d22b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fc9e423d-7e1b-4bd6-8ac4-f70d3a5ac8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9289a47-018f-4662-b6db-d9ca7189c6f3",
        "cursor": {
          "ref": "dd956aed-f2d0-4373-a42b-5c09580a94f0",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bb89a3a9-f516-4132-8a06-78e8960aa7d2"
        },
        "item": {
          "id": "c9289a47-018f-4662-b6db-d9ca7189c6f3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "57cd9de4-9237-4a77-b491-42a6117d8a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cb0784-86c2-45a7-a7bf-d479334a6d07",
        "cursor": {
          "ref": "bae87cde-0e7e-4f4d-b00e-44a0333c93f4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f913ec62-f20c-48b0-a326-216fa282f012"
        },
        "item": {
          "id": "a2cb0784-86c2-45a7-a7bf-d479334a6d07",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cc99eb77-0af9-418b-afc2-0f53712691b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604c52e4-cf90-4c40-a065-b6414d262be3",
        "cursor": {
          "ref": "5eed89b5-2264-464b-b1d5-2847f160f945",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d4cf9138-4d5b-4590-bc68-c11833e7a358"
        },
        "item": {
          "id": "604c52e4-cf90-4c40-a065-b6414d262be3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "91a7e053-4f72-4530-9f9c-8755058028eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1ee9f0-f249-46d5-b4e2-5f54dbe0e31c",
        "cursor": {
          "ref": "ddb83c86-666f-494d-bd11-6efaa118dddb",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9c835985-62b8-4196-8e96-ade30ab019ab"
        },
        "item": {
          "id": "9b1ee9f0-f249-46d5-b4e2-5f54dbe0e31c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ec27fbe1-d7d6-4f28-a660-71aaac018d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf67ff99-a7a9-4c45-a4a4-5f7b717ef8b5",
        "cursor": {
          "ref": "2cb1300f-812d-4f3a-89cf-2e3e4649488b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2955cc88-e6d6-4d64-b3c3-982201429fe8"
        },
        "item": {
          "id": "bf67ff99-a7a9-4c45-a4a4-5f7b717ef8b5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8691a8d8-afa5-468b-b54e-59145adff88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa9bf70-caa3-4570-98ae-90a43f9a8582",
        "cursor": {
          "ref": "db449964-56a0-41c2-b2c2-8d2e89edcf6c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0f544e05-83fc-4df5-b66e-1192cc98a440"
        },
        "item": {
          "id": "6aa9bf70-caa3-4570-98ae-90a43f9a8582",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4ab7229c-feab-44e6-b0a6-4e3dea398a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f529a82-58db-45ed-9911-94c7ad870976",
        "cursor": {
          "ref": "6e8b2ce4-0a71-4cc4-a2be-e0dcc4131b99",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e00507fb-1579-4819-be0e-5aa81da75ebc"
        },
        "item": {
          "id": "4f529a82-58db-45ed-9911-94c7ad870976",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "af2455c9-11bd-443e-9527-64e80c15a9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fdc124-e487-4248-b10b-720af1e25ef7",
        "cursor": {
          "ref": "0e21853e-7dcb-4181-af04-01be1a2f2bd8",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6c7b3d18-3f81-4c3b-9c12-ca26133f6aac"
        },
        "item": {
          "id": "62fdc124-e487-4248-b10b-720af1e25ef7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7f85ca75-150c-4045-bea8-803df0f018c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb7e107-dc69-472d-a6de-ebc9ef8aab8e",
        "cursor": {
          "ref": "a8d921b5-ef05-4061-a438-41b96498f452",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7cbef1d5-3f96-48cb-84ec-aace9cf6e960"
        },
        "item": {
          "id": "4bb7e107-dc69-472d-a6de-ebc9ef8aab8e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8fb51306-b610-4bb7-9515-fde5d261c2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50494a9-3711-4abe-944f-16bdda51b853",
        "cursor": {
          "ref": "0ea13e4a-7f73-406f-be0b-144f03e0cf25",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "41b0d00d-75b5-4f98-a3fc-ddc956b047ba"
        },
        "item": {
          "id": "e50494a9-3711-4abe-944f-16bdda51b853",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6b9d249e-c437-42fb-9de6-c09603c69e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f99818-5c45-49bd-a4d6-e22964a26f2d",
        "cursor": {
          "ref": "423dca67-7167-43d8-890f-85fd8a6c211a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9abc858b-09c4-484f-8244-ff89253ef0b0"
        },
        "item": {
          "id": "61f99818-5c45-49bd-a4d6-e22964a26f2d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "487f70f6-645a-4cbc-a6c8-d8a2811f3864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1308848-20cb-4803-8533-93f1753ce04a",
        "cursor": {
          "ref": "3946f5eb-44ea-41a4-bccb-c865ed4a37bc",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3ffe8b31-b64a-4d35-9f6c-f4077f17e7a1"
        },
        "item": {
          "id": "b1308848-20cb-4803-8533-93f1753ce04a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "135c9b32-e93e-4982-82f9-239cffc52b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a040941-fd43-4bf9-b559-3f44ec5dcce7",
        "cursor": {
          "ref": "51e03d3e-9a27-42e8-ad97-3123fa79ce92",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dc9f3ba3-d718-4526-b090-0d3b092a7e7a"
        },
        "item": {
          "id": "3a040941-fd43-4bf9-b559-3f44ec5dcce7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0663668c-261f-4bef-8f21-559f0170cf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc5797c-e5c9-4dc7-b737-914b0346c083",
        "cursor": {
          "ref": "d190854b-df58-4dad-8398-95a0df13263d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "559460eb-0471-4c18-84d8-610d2d1498af"
        },
        "item": {
          "id": "9bc5797c-e5c9-4dc7-b737-914b0346c083",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "487d18d5-e21d-43c4-a395-644c4e59ef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d02594-0808-434f-8328-e5998d93a43e",
        "cursor": {
          "ref": "d7eda7e4-ab75-4c51-888d-5136afe151f3",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b16b8da9-d908-48a1-a76d-f02f7892a67d"
        },
        "item": {
          "id": "b6d02594-0808-434f-8328-e5998d93a43e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "db68d223-0d49-4c59-a756-c73227b84cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84296357-5ca3-48c8-b1cd-804be3cad393",
        "cursor": {
          "ref": "6e2f1391-5c27-4dee-9a60-6dffdcd96207",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b64eb7c8-d36c-444a-8940-af1e7fb34420"
        },
        "item": {
          "id": "84296357-5ca3-48c8-b1cd-804be3cad393",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e0e2856d-ad23-4168-be92-4a4c57cae446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3ac5d6-2766-435f-bb4a-11375f36173b",
        "cursor": {
          "ref": "51d35bfb-c862-4267-a3be-2e74c96fbf62",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4b183f4f-f5f9-4e9e-8e46-0eab46004c72"
        },
        "item": {
          "id": "ec3ac5d6-2766-435f-bb4a-11375f36173b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7d98ab16-3fa2-4626-b76f-28c24b649689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0b15c4-9795-4c7f-abfc-49ae1d805894",
        "cursor": {
          "ref": "1040cc30-b03f-4040-831c-3df7ff701a79",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4082e924-c0d1-418e-afb9-efa969cadbac"
        },
        "item": {
          "id": "0c0b15c4-9795-4c7f-abfc-49ae1d805894",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d2ba6ce7-9a44-48fe-8026-f23d1b540d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35391cca-666d-4105-a0ee-8f4c129e093f",
        "cursor": {
          "ref": "6e338542-c01e-4a56-b364-101b3b70fc9b",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "49e72308-42c1-416b-a9b9-58148bc7c079"
        },
        "item": {
          "id": "35391cca-666d-4105-a0ee-8f4c129e093f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5f3414e5-3486-4d43-8bd1-1d15508bedfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc48e3a2-ab92-4090-841c-5ccaed25298c",
        "cursor": {
          "ref": "69d57a44-2184-4302-a7a2-541ade99aa3d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6c4a89a2-8904-4471-91c4-34791943a035"
        },
        "item": {
          "id": "fc48e3a2-ab92-4090-841c-5ccaed25298c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "25f624e4-dbc4-4bab-98b1-d22e7428bb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15efe27c-2731-4a34-8a02-96b5b47df1e4",
        "cursor": {
          "ref": "f1c3b99c-778f-4902-a43c-be1f896ed7b1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e42ffc3e-83bc-407c-b6c3-20e671e223b4"
        },
        "item": {
          "id": "15efe27c-2731-4a34-8a02-96b5b47df1e4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0fc79ed1-e299-4764-a691-3f1c0ea7d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f835bf80-66e9-4214-9a0b-d564042c19bf",
        "cursor": {
          "ref": "39076335-6866-4b7b-97ce-60e2bdd72f20",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "13aec030-ade9-49f1-8fd3-8ee14d124c6c"
        },
        "item": {
          "id": "f835bf80-66e9-4214-9a0b-d564042c19bf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2525024c-4ce4-4b94-8d7b-6738ffd3e382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2016945-46dc-4497-8301-0c5078539514",
        "cursor": {
          "ref": "7ccef7e6-53c2-45b2-a189-058e81718690",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9ad2cc7d-5c84-4340-b97c-bf66155ca198"
        },
        "item": {
          "id": "b2016945-46dc-4497-8301-0c5078539514",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "639969d0-a9bf-4ad8-8c24-c2368e21390b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ef0e94-2947-4326-ae5d-7f17f226222a",
        "cursor": {
          "ref": "fffaecf9-59d7-4e57-a5eb-32bc10bfe534",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5970cee0-bcfa-424c-953d-1f187dd14092"
        },
        "item": {
          "id": "a9ef0e94-2947-4326-ae5d-7f17f226222a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "25620439-9c4b-493a-82d9-9a4e05e10d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16efe0e6-4f7d-4179-bbf0-88a648e63cb4",
        "cursor": {
          "ref": "85b41e0d-d7d3-462e-b7f3-a3a731dd4ced",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fc4c4f82-4dbf-467d-99dd-9145b8df1a24"
        },
        "item": {
          "id": "16efe0e6-4f7d-4179-bbf0-88a648e63cb4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "95dee9f3-6ab8-429d-855e-bacc989aee55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c70eaa-ab2d-43b6-869e-34146864a211",
        "cursor": {
          "ref": "05af7842-b1e1-42c7-98f7-4ec7c914447e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d0408df4-12cb-4979-b99e-c1aa780d1a93"
        },
        "item": {
          "id": "94c70eaa-ab2d-43b6-869e-34146864a211",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9c5a54b9-9b44-4fec-b884-5eec6e805ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93efdc2b-3a64-449e-ad68-6c5025c01016",
        "cursor": {
          "ref": "d5a30404-c4b3-43c2-9c14-c36ad6204400",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "60b28ece-75cf-4810-8f60-b077f7b0c237"
        },
        "item": {
          "id": "93efdc2b-3a64-449e-ad68-6c5025c01016",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "48f83ab3-a5cb-4e87-9524-590a3c0a2b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a906c7c4-1dd3-408a-8f45-1c63defea82d",
        "cursor": {
          "ref": "2274ec16-bc65-4a81-96da-f496af9366d0",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6ea8f915-f4fa-4eee-971e-46b64fc1e3f7"
        },
        "item": {
          "id": "a906c7c4-1dd3-408a-8f45-1c63defea82d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "24f3aff6-491c-4d69-902c-f66a966c5e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7ed266-2328-44b0-8953-ca1dc44e07d3",
        "cursor": {
          "ref": "b5d66933-aab4-4bb9-8272-3d53fdc2b0b3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "73e6c850-59ba-4ce7-882a-da2bba392c4a"
        },
        "item": {
          "id": "6a7ed266-2328-44b0-8953-ca1dc44e07d3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "710323b7-5dde-428f-b7e6-678554d2b63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d895803-3ef6-4f9c-b47e-9d197f161172",
        "cursor": {
          "ref": "23e04a66-ec1d-4af9-8a4f-7b0e10b67c21",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "301d7a13-6f5f-494b-be78-8753e5dcc18d"
        },
        "item": {
          "id": "1d895803-3ef6-4f9c-b47e-9d197f161172",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bdddf23d-4330-46d7-a1ca-3e65ad80e287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd1724c-39b9-452c-a879-6daec9d666d1",
        "cursor": {
          "ref": "0ed4748f-ac18-4f2d-8ffc-ab97bf36534d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "94969867-bfbc-494a-a69b-1623964705c3"
        },
        "item": {
          "id": "0fd1724c-39b9-452c-a879-6daec9d666d1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5ae0da72-0494-471a-b1f7-dcc603842cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96af24d9-d407-41d0-a3ee-1c76989d5e8f",
        "cursor": {
          "ref": "132c0352-0d75-4b1a-9cfd-09990eb04e50",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "92c5cdfd-f45b-4765-aefe-1a55e0dc7a16"
        },
        "item": {
          "id": "96af24d9-d407-41d0-a3ee-1c76989d5e8f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eb066dbe-615d-44cd-9c9e-5567fc7fa09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c231c3-fcc0-49bb-b636-3eee8927da2f",
        "cursor": {
          "ref": "f78d2db6-86ab-4aa3-9b99-89b61fd288fc",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d6031a70-d4e0-4e3b-8ca7-d40d4a3e1fb5"
        },
        "item": {
          "id": "56c231c3-fcc0-49bb-b636-3eee8927da2f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "72468b19-bcbd-439c-a02c-5ec56252d677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491cd6d1-3660-4c3d-9b02-1ce87e128d4e",
        "cursor": {
          "ref": "80a4adcc-3235-4593-9fe5-15b22b6218f6",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9f95480e-aeab-4f06-bd43-c76ddf938f09"
        },
        "item": {
          "id": "491cd6d1-3660-4c3d-9b02-1ce87e128d4e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1dcb2010-ad88-4e57-bb04-dbeab9dc21e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bd290d-11f5-4fc6-aa01-3e7232b79a67",
        "cursor": {
          "ref": "a235a72b-ffe1-46b1-aab4-8bdd17929489",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0fa60c14-3963-41f6-82e2-a25f9f05f7f4"
        },
        "item": {
          "id": "47bd290d-11f5-4fc6-aa01-3e7232b79a67",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2c659701-45b8-438f-a5e4-58bef310854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d614a4f-2d1f-46db-8ce4-20a99ac6ca50",
        "cursor": {
          "ref": "7d5d8648-e8f7-474b-989c-5312034e529c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "21bb06f8-6453-4092-9eaa-0711371ac8ee"
        },
        "item": {
          "id": "6d614a4f-2d1f-46db-8ce4-20a99ac6ca50",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3ba15135-38c8-4904-aa34-804c2c30f356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0b1766-03d5-4af4-83ba-7e138ab18177",
        "cursor": {
          "ref": "9f4fbdb4-d433-4e40-b81d-25870dc01dd6",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9193ce54-1ce1-46ed-8e55-44d70c996ec9"
        },
        "item": {
          "id": "ac0b1766-03d5-4af4-83ba-7e138ab18177",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "92a76100-ec8e-45d2-b6c4-bd3f888c2db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06a9366-5adf-446e-997e-2eeb7aebc6b4",
        "cursor": {
          "ref": "83a7b397-b636-484b-96f5-f5337bbbec2d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dd578030-9743-4646-b6ee-ffb58222fb59"
        },
        "item": {
          "id": "b06a9366-5adf-446e-997e-2eeb7aebc6b4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "26c2d841-7f3d-45ad-8e45-626df998175d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8953085c-237e-4707-a658-f3642c7807c8",
        "cursor": {
          "ref": "90eee7d0-fdb5-422c-a401-7b1b154780f3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dd55d193-ef01-4a92-8944-ded2e31ed724"
        },
        "item": {
          "id": "8953085c-237e-4707-a658-f3642c7807c8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1dc14184-7eb8-4ef5-a1d3-48fa7088fdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811e386f-d05e-4a33-abee-2071a24dede9",
        "cursor": {
          "ref": "5f9a3097-58bc-4456-9827-316198a60010",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f20e4ec2-c691-46d1-880a-12ff6e64a187"
        },
        "item": {
          "id": "811e386f-d05e-4a33-abee-2071a24dede9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "11939ce6-a72b-455f-a535-77df8c03e7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453cde06-d32e-4e7c-ab01-862f1cdda2ed",
        "cursor": {
          "ref": "d7f0f45f-5c2b-4bcb-ad1c-b19bbd64a15b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d13241f3-31cb-4bc4-8d09-ec03567709ca"
        },
        "item": {
          "id": "453cde06-d32e-4e7c-ab01-862f1cdda2ed",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a9a914a5-614d-4363-86ce-71f13c926492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2649c8a0-a9ef-4ba6-bc97-86ec11dd757c",
        "cursor": {
          "ref": "56def401-c621-4e12-a681-8ecc2b53b2aa",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "22461817-f7f6-43c9-a2fd-4d8c0e86cde7"
        },
        "item": {
          "id": "2649c8a0-a9ef-4ba6-bc97-86ec11dd757c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4e8c89bf-bb24-4f12-9d89-4f1238967fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72790f7-110d-4065-813d-6fd1ef299ee7",
        "cursor": {
          "ref": "6c343daf-9c06-49a7-baf7-c5248015b9b7",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5de45907-6a9b-4cd8-b04b-30b66d184f79"
        },
        "item": {
          "id": "a72790f7-110d-4065-813d-6fd1ef299ee7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ccf77931-25c3-4735-9c6f-b6877fba7f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770f7c89-6f33-4d0a-b726-0642d658c736",
        "cursor": {
          "ref": "848562fe-3157-4e6b-9687-c76936ff2440",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d484c915-dd27-4d10-b2a7-122379d79561"
        },
        "item": {
          "id": "770f7c89-6f33-4d0a-b726-0642d658c736",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "869e0c05-9b8d-4ec8-9bdd-02bf911820db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeb3d46-3c15-4345-b47d-98e5f6a0ec1e",
        "cursor": {
          "ref": "dcb3a404-190c-47fb-ab9a-670f01e8c19a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cfa4f71a-8f73-41a7-8a7b-6379f25d31b3"
        },
        "item": {
          "id": "deeb3d46-3c15-4345-b47d-98e5f6a0ec1e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "47f06014-fcb1-4877-9f72-2a0b370d357a",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87bcdd9-d305-4bb5-a116-8f6facf6d887",
        "cursor": {
          "ref": "6e68ada9-19ae-4787-aa2b-6d66694e4bdb",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6a40c319-18e4-476a-b904-df1ebd45cbf3"
        },
        "item": {
          "id": "c87bcdd9-d305-4bb5-a116-8f6facf6d887",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6923651c-e753-4466-b78f-20348d1f7c13",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "003b737a-baef-44f0-bdbe-58fb9fc0541e",
        "cursor": {
          "ref": "14aeb6c2-1597-46a9-80ad-5f1882be1b2c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6a735f89-4f4e-485e-ac19-c6e843a1952e"
        },
        "item": {
          "id": "003b737a-baef-44f0-bdbe-58fb9fc0541e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1334ba74-48d7-4408-a24d-8f44978b92ca",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae81889b-b6c1-4421-a60a-5073c8f2982f",
        "cursor": {
          "ref": "6f9a5a8c-3fc3-433f-9477-16fb8b5569ac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6df886ec-6943-4a63-ab62-1c68b10a99d5"
        },
        "item": {
          "id": "ae81889b-b6c1-4421-a60a-5073c8f2982f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d21ecea-a33b-4595-8e9e-8b20c06796ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae81889b-b6c1-4421-a60a-5073c8f2982f",
        "cursor": {
          "ref": "6f9a5a8c-3fc3-433f-9477-16fb8b5569ac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6df886ec-6943-4a63-ab62-1c68b10a99d5"
        },
        "item": {
          "id": "ae81889b-b6c1-4421-a60a-5073c8f2982f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d21ecea-a33b-4595-8e9e-8b20c06796ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad61d5f-1033-4a98-8aed-bc6d628c18d7",
        "cursor": {
          "ref": "fd576a7c-1354-46d0-86bf-24d9100f3ff1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d07ec254-9733-4fef-b9b4-8c86f464ca48"
        },
        "item": {
          "id": "9ad61d5f-1033-4a98-8aed-bc6d628c18d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c7eda559-fd3b-42f0-bd4e-5471e1624260",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda07bf-5849-472a-94f8-9bd75c693396",
        "cursor": {
          "ref": "a2132891-e57b-44a9-94ed-db3cac62bcc3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "47b93f3f-f09e-4d2b-b0e6-af33d7b09921"
        },
        "item": {
          "id": "2eda07bf-5849-472a-94f8-9bd75c693396",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "629cea14-0de4-4ad0-932a-4a7479006d2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}