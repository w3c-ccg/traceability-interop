{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4ba614d1-7c9a-4087-bb50-d4756008d913",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9ea52460-1c52-4267-af7a-f7a79cae31c6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33f5ee77-bbb6-4945-a937-89b0b4d5a137",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "27d04c6d-3a24-4871-b9c7-75e64f10ca4c"
                }
              }
            ]
          },
          {
            "id": "baa2b153-da5d-4023-b4c2-8048c4402e20",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8499ec32-01b2-4edb-ab4a-fbd877deceb1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d288474-eba0-45f6-b693-7ecfb00b1bc2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eeaa4b8c-edaa-4261-8131-e0a79a1e2f49",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "612774c9-2e9f-4bc4-8cd7-7141b954deb6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d13ccde-80be-452b-9379-ed28795c79e4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcdb9318-79c0-41ae-acf9-e5a104145f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e0b36c4-01bc-4a10-a014-790418f6a6dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7dd4612-9cd1-406b-8157-b61bef8fd16b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49017dd3-41a2-43c3-a8fb-7f5094ee570f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "092389ec-24c6-4093-b4d1-9f3007d34373",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73c7b386-a66e-4439-badd-cd330b5c6fff"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "165f1a97-9a9e-4328-a639-0f4ec6b6a969",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "778221ce-1610-4619-9608-3b35504a5554"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4038589-5f6e-463f-82ab-4af4fd6ec45c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96785044-660a-4d50-917e-38d75e2ca711"
            }
          }
        ]
      },
      {
        "id": "bb38366e-a9d8-47ed-9ee3-dbc3dca32b9d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "15e67171-cd86-4502-b945-f98bceb19683",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be5375b9-331a-4107-a327-9a25fc525611",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35a05b77-5187-4b7c-98c6-acb67c580d5c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19285036-b2a9-4130-91ea-bb8dde4539a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca1aaaf9-4c78-47cf-beb0-53ea37833468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1acb5b-71b8-4731-ac74-b01027e451a2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ccfae7-9387-4335-9bb9-e8fc6e70068b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80c79afa-7f20-4611-8d51-eb5eace89511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cedf4b-826f-4fa7-99b8-1f7c8192375f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7157724e-e70f-4b94-8ba3-092eef250d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08f4d92e-14f3-4186-8dda-a5c25f482980"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c85cb5f-bb07-499e-9490-6cae0fb5cbda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a959fea2-bc9c-495c-8f26-f33d28ff5c8f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4af87d-fdba-4497-82c1-f94a10f4b6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad1eacb7-63ed-46b0-bf0f-c8c949924341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d6cd12-d60b-4dfc-9093-7c8debacdff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf60159-b4f3-49bd-8dd2-faebf50845fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cb6d4350-3a2e-4833-a299-f1a3175daff4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7796401-c76d-4c2f-9f0f-71b4d0fb409b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25c13bf9-6474-4519-be70-7a19a9d048f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ad13fc0b-abeb-4368-a3c0-30cacde07b6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "965283ca-fdd2-4ad4-8f2f-7458c4f17562",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fe04a2a0-1180-4f81-b2ff-1a036c8a3141"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee198e75-86a0-4393-9b4d-1e69060771b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7b3189d-fd0d-4d96-b2d3-b2a78e6b2e6a"
            }
          }
        ]
      },
      {
        "id": "ee6974df-f7b5-4209-b2c1-ea37eb346f23",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7a63b6ab-2a0d-4a25-8d83-8bf70508d2d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1218f7da-502c-4e85-bd0d-fc378d7549a2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d260de0c-015d-46cb-9e80-d4674b93545f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3042128f-db23-4dec-b746-49aa986acf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdf8723-915a-43bd-8685-188b337c3dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007668e2-6883-4ccd-b4a8-2c9941bc01fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea98cd9d-2694-49a8-aaf1-2c1b34229128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebe0908-3569-42e1-8847-7b70eab56f45",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4014d665-4a5c-4f29-8333-eb58d32757fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8ce1cc-eefd-4fff-b8ec-018f7e9ecdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4cb0b5-259e-4d4c-84c5-09f25dcf9a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "536ad706-5770-40bb-bb5e-d5b59257a3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aac55e-66db-4f0f-8841-4567895563be",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3dd1a0-3ab4-48a2-9213-feeadfbb08dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9178a38-5080-4034-bcd4-9f68de49fa96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c60a73d-8557-4325-beb9-85ea80aaace6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f181d38-0ede-45f6-9a50-5c5292ca3e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4485950-0622-4071-8d36-d446da53b714",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897f9e83-67cf-4ef5-8d00-790aac8d0343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798d47bc-7398-4977-8239-23ad0257b44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d264674d-1994-449e-b07f-5c10878a48e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69404328-ed40-4978-9704-6a8c2dc65fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71fc09b-3c4c-4645-b3b7-830517e32797",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3694fe9-405e-4c22-8e97-d9715c4417de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8fc96e-21da-4f46-8668-26eb83af4fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42748d99-828b-4615-8ee5-0c31c0fec66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5086aff-e8a8-45a7-952e-bed0182396ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1abbdf6-c7b1-4f63-9253-3ad845461724",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a97c780-f15d-4c2d-a302-73cc500f2539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a340b27-a092-49ba-a851-142648d052c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b43dc-aec9-4ead-a0e5-0ddd9bdc34b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1276c289-9a7e-4b95-b662-8f575aec4be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1739f8fc-6d23-44cf-a7f3-1e73594cccff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c76d7e0-f9d1-4fc7-beb9-b63d5d60b509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf8e8b3-9774-4a20-bbba-7a68a96a592f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a5cd32-a41a-4722-bb52-96968b352787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "979f03ef-f22b-4831-8364-0c7a2ea69c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42ba337-801a-49cf-b264-3eaf6999ad87",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a09758b-5ea2-40a5-890e-4eeaa3ddde0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9454c665-8fb7-4db6-ab56-4bcef4906cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b48140-d9c5-4e73-a3bc-14ffe9eb1d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5dc2654-1134-48a9-bc3c-e5396a3e468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2246cae-46a0-481e-9b29-af330bd63ed9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04e5de1-6b4e-4f6c-b690-a1fa91d907e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5db5cb-da31-4c41-9b49-92b6e44f29a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1986fb59-4edd-442e-94f1-a27804a0b104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a09ccf3-a166-43e4-a1f8-afdec343aeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd47861-5354-41fe-b2c0-e9d5d9959342",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273388b8-8ba4-465b-821e-8bf5767799b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef971e7-2dad-46ee-8167-a2931c1b1bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2063b12-84ea-4f46-b356-b29f223bfbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db71a7b1-b035-4f95-a0b3-3d7d6f276b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57384215-d177-4419-b0f4-09460676ff78",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6772311-150e-46f4-8cff-5abf63adf997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8184873-0d47-4ef3-b846-49eb323bed66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279de6bb-13ea-4a73-bced-7162756bdb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed35acc8-e152-4c4b-94ec-a55fa7f74901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a608aa-c750-46a4-8d18-e528fc913f0f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e37bcd5-843c-4dba-a983-eccb951c9a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da53a71-9412-4574-b069-05769aee4e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b789b2-4d06-47c9-83e7-ea786f478d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb4151df-8bd7-4db1-b37d-e25bb0e6e6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753d3622-ab25-4057-8ae0-d8ac4258ba8c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5ee006-9777-4345-a31b-93576c2d8033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73aecf6d-3d43-4819-970d-5fd58e789648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eb447a-3c5f-4189-a1cf-89422154ba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3584554-7b4e-4684-8a70-d0353ce9424f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cdb0a9-924f-4801-b31e-134e727a460a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2ecc37-8ab3-4a47-bdbd-8c594f7ff9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f317afdf-fcab-4a67-812a-b39da1750e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b882ee2-a70b-42ab-befd-dec5ef45821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c949ec7-306c-4a31-a124-59b2b0f38d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbb4263-bf86-4b1d-abb4-24736aca6aa3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69b8863-cd85-489b-889c-ee746f3b6e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4da013-f398-4ae9-8401-1d9c88465a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de5ea5d-051a-4083-a27f-38782789bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9012fc80-0bf3-4746-b3e9-9cb7e3d410aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30d3a5e-d906-4347-9695-ee7fde5f1409",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bbf916-32c8-4b3e-a09f-b90f101c22b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2c98a4-75f7-4080-9d15-f3b60b74f5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0759019-3155-42e5-80bc-d81b67a07154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c1fecbe-58a7-4eb4-ac73-43b5d06f47a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ed1dc4-2e6e-4633-8847-ddf0750f8753",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0df255-18c8-4e1e-aecb-f156296842ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd054f1b-cd18-4c01-a3e8-bd920e02d857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8046d96d-52a3-4c62-9b09-0a6ebf2d2949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb307eec-1c3c-46b7-9052-0d7f423d9351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fc761f-731b-4043-a8dd-8ec73aea1cd8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c23a66-b7c9-43c6-8f3f-cfde3ad50840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbbcd77-8880-480c-87bc-abcdf614dac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca74128-4235-45b3-a971-0d199279da13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2761c65c-dce6-4b8c-9146-080f3c5f132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c01735-29e3-4565-b947-c3085212088a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b54c238-4c83-48dc-9366-92d9d56c377b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5200c6-a3ba-47ec-8aa7-56ba6b6609ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f695b198-1787-4975-8d2a-04122db3e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bf5fe1-d2e1-451a-b64f-381a063ee4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e7bb97-d36f-4f4d-b745-b53ebff5c61b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5fbab0-6d82-4d63-a637-778d93195242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b33cd1-ab92-4c1a-9dc9-12df602e16b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d05740-1e9c-46a3-8f09-2d76032681a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b32bee-684a-4908-b65c-c102f1493474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55dfa7d-9e0e-4c70-929c-36724df8667a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f997d329-42c3-4b27-a3cf-e33e193547fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27342c25-085f-41ed-acb4-28b4b3e7d558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ff9ff3-6c82-49bf-9918-4c704efc0573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a739742b-de6b-4252-af1d-86d9fd6d5d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf230627-e3e7-4eb3-a143-eba9ce6205b3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3a8d17-9316-423f-b368-38a3851c568d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56906134-c2c8-4eba-9391-baad22e18139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc36fe5-3ca5-4fc6-8093-868a3aa873fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03d80416-6208-416b-b024-d54c9f4f4d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e6688a-b49a-4ee5-9ddc-af69fb2fd70e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d82773-bee1-4134-a3c8-41781b0b0841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c586fd09-76b2-43c1-9681-7bc1f9cccc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7281601b-3fd3-4383-94ba-5b7e9f033c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf4cbe9-2c82-4265-b529-c98a82569b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136a60e8-5844-4bb2-9a70-6d339ff891c1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbc1d6b-1f66-4dcd-9cd9-9fcb241271d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8d3e4a-759d-4880-9675-4f836b10f095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15255818-4569-4317-bb51-f2c7a059b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "93db4ab9-8fc7-4118-8eac-a1915b72cae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d16ca3-0c90-4f86-b02b-1b2c9413b9c3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f28aced-e5a8-4f1f-ad83-d3ab2a3182fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a886fa-f508-404d-97bc-7467effa958f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d215a4-7995-4bab-a12e-f0dad5d79dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65654da4-9495-4521-9e7b-c0f747ff6eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5606b7bb-907d-4668-9a33-37bd66079824",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b3222e-3589-4bb7-8a5a-56bad786ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abd9cbb-7529-463f-bd6f-05182c7fd05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1410460d-24f3-456d-8166-d38e6efe305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb90743-d8cc-405d-a18c-b97c8d3bccbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f532f36-83cb-41bd-b377-d62475c080c1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1960a9-268a-4ae0-9ed7-a29f0efaf163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18deb2f0-3a47-4edb-b969-c3dd4e390ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd32fa5-0ab8-40e9-ad4d-37ea7c62167d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "626128c5-078e-4cdd-8814-1c62cf524c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c3cb4e-4959-44d2-b6c6-9dfcb6627723",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dd7497-1d74-4459-9b27-ab68d70adc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006cae78-f42f-459c-82b9-35332f6447c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd73e102-0433-4f72-bbcd-fc05ca9337a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5e1557-361a-4b94-aae7-19bf898e1f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344218d6-f968-489e-9ceb-4bc61fd6b0c2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26374b59-174f-4485-b3a2-1b3459f99131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cf7092-49ed-4792-8622-429e83cd0374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e80dddd-9eb8-456b-8d28-106173c80385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9568e1b8-ffa1-4f50-b880-8d6266ce0c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b8a6e-f4b8-4e88-b92f-e7f9355b55c9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85b4097-40e8-4bfd-870d-6a4e4dff48da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0dd7dd-c2a5-42b3-a932-8f4af07317f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a3c00b-beb5-4a38-a1e7-992da96f903f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd0e0e9-eb9a-4b9a-ae24-dd1c53c25109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a22d9db-75f3-475e-9010-d07807e0da65",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a2ab3c-0c88-447d-be7e-c74afa49bf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0111555-c2bf-4b74-8f30-93c998d5db6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4c4ec4-87c3-4054-9368-2c5059b31158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "939f6e7b-6611-4f7d-8fb1-9cd8bedbe5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5146abb0-a930-4e7d-899c-b30f6ae6c02f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72290b49-cc44-4da2-ba87-be1179730c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50ae040-fe11-4547-8c5e-3923498211d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea31593-0f57-4e5e-b4c2-60e89193b865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48159654-190f-4aa9-8f78-df46b8d901a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b11e6b-a224-40cc-ad48-05ba146a107e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b850284-07f2-460e-9d05-ff7f60038d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd52c7b-a9fb-4592-b71e-a2a08693bee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30619b1e-93f3-427c-9883-32bbaabe08b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d83b2f-f767-465f-a216-6d4bfaa9a31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9328640b-8bdc-437b-b2c6-bbb27f4c31d4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caf6b7f-6bf6-4c77-b379-6ed7747e781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41a155f-befa-4b75-b6d9-7e45e3bbee42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d86a56-6bf7-4944-8d1e-19d8b5786a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72af8755-29a5-4ca8-88b5-92fa26d88558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1c090a-e3e1-4b23-a7f2-5ce134e0be83",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d1ced-18af-434a-8ab5-b7e2ce6f9fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595564b3-66ea-4035-b05f-55fa1e9ccff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adeca13-c2f2-4b77-ad9f-9e6fdba7bd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2db80eff-c5e5-43ba-9301-970c1c4f9b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c3e266-0906-44a3-9e71-1569c6daaece",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083f5851-c4f1-46e5-a0f8-0d0ef12a8e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8873d990-61bb-438c-a5dd-e312f5897bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932219f6-d35b-4dd0-9ff5-02ac704ad912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17e63863-5662-4cf0-83c1-163221598145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4dca51-1d0c-4e38-a8fc-1a67956f4c4c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8744021-cca7-4fe7-bf96-6a968e416508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd22862-ff72-4a5f-bdcf-c32d103d05ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77285aac-c6a2-4d05-89eb-047eecf87101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cb0576-e7c6-4ef7-a521-5a5563ee60ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a91bfad-8c34-46ff-bb86-a3bd23894564",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d7ed53-4aca-4594-b1d5-d16f72ed268c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4ba736-53bf-4baf-9f02-fd98b9c473c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1c9426-82d3-45b0-bad8-8a722cfad661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74e99598-41c2-430a-b67c-21fdfc0a3276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bebd89-47a2-4f6b-872c-aea8cb1af251",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c37cac-c0c1-45e6-a661-6ce8bab1024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083d3100-e479-4a56-a246-aaf3a0bbe36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4342da39-b969-4d80-b59d-e0b911fedf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63296f59-7990-46c7-937a-9572110051a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea268a7-2376-4f05-a753-c8012d9e77f6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645c760f-9549-4af2-9b4d-77b9f98551c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740b59e1-600a-4d38-ae14-9f1ccb26d537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dcc55e-fa8d-4a15-9281-1d2b80ef6c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8addeb-0842-45c3-9c07-14c90e463397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518ddd75-37eb-4556-9e61-6aa01d240a53",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f13cc9-dc61-4580-a516-7033a8e8c7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037fe57a-a0cd-4267-84b2-93ab65b9dd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e91927-37aa-4dee-9651-7035e4d5875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "860cbf76-d61e-4152-88d6-2b12ae1a03e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be739061-8938-438b-a123-24c5338549be",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98482ed3-e14f-4b3c-b676-1a8961bf7529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba686ec-bd3b-4aed-853b-34700c390df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93904e7f-35b0-4bae-87b6-968000511524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "06d199a6-c899-4d66-86c2-ea4b24076c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ddb8d2-22ad-427c-86f6-7e4f42b1d28d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dafcae-7d06-45b0-bb6b-922a82a0c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640e1993-e0ee-48a0-bb7b-1fb6a0cbb413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24226c67-c09c-43ac-9892-92fc5dd868d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "72c0ecfe-266d-475c-9da4-9f3135938f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe8b8b8-ffb4-48ee-945a-bff9fc473c54",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a60a347-2788-4a4f-89a8-16a693fb7364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0faf33ec-d3e4-457f-b3ac-ea22f8452671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702fc032-f74a-4cb2-81e4-6226c78a4ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "95da6df2-a04c-4a0e-b8e3-4ba3d6a85fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612f3386-a98b-4df3-b1e2-bab9c6147e35",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35815884-d3eb-4663-8ca2-a7ee2fca7dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5ca872-a017-44ff-b069-8276f6a638db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1102fdad-146b-4f16-9f64-51ae47b3a7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb26fcf5-e0d7-4239-9146-d3462109c7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bc35b0-4465-42f8-ac2a-21a9ce3b8790",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911e4b4-de5a-4e23-9bf7-3f60f65b68b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9492e0-a74a-43e7-a7f3-fd81c37a8b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fca68c3-e6a9-456a-b0a2-c9e032232ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3144dd04-2369-4732-802a-0bf5c874e9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdac1b0c-4157-43ae-8f9d-e3e6f7393809",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51da8a78-f542-46d0-a2bc-3074bcab9844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7ed55b-2f6d-4f86-b989-0d0fff0865d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793d0f44-ee19-4715-a2d6-4c42ae0738a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4d8f22-62f8-4b12-8133-8405d80c9f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c4de3b-13b4-4b3e-b437-1a073e7daef9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0c0e77-083e-4d19-822d-4d2f73be7732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca31d60e-b238-45fe-9cf7-8db2301ffd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdde878-b488-4d91-85a3-f87552943744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0eca654-a4a1-4b50-888d-c4af4d2bad99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90bc6c0-c7ff-4427-8896-c9a1aa18f0a5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b63ff6-7710-4319-a484-7ed4059213ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1106041c-da82-476d-a777-01ff9b8b4240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c79b767-aec6-4502-9687-9e3629c21af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89ea7187-db6e-49a4-9daa-2b666fccf366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05c38ef-2c6b-4413-9706-a05e2061d7b8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d43164-efea-4f5e-80c6-93e12e6fcc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26106fe4-ada6-44d3-9982-7a5e9213b483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9930442a-066b-4a02-a2da-2c7d949e1d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "585395c7-7436-45b5-a19a-5331c4348aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26587a7b-eeb6-49a6-8052-32cd3788f207",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b04a81-42b3-490d-b89b-a3c56f7e20c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6afdc1a-587b-4500-970b-0e45e4a5fa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626f6c08-f965-4bc1-99f2-ff5b5d3b7471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4737874-b75d-4f34-acd7-7e788912da3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3637f512-2ef5-404a-9b6d-4f58501874e3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec110f42-df6d-4d0d-a914-7d286af9b32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b03ee8-9d29-48db-a6cc-db4b06f486f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac653190-f80e-4d93-abc9-9be0725b0452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5852f78-cf97-45aa-9dc6-e594962f6204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b222593-cacd-4f65-98c7-4dcdfba76850",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881abf85-22c9-4241-92d5-cd7854e867d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc222417-7315-4058-89b2-1730bcf4ed02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3133f180-26b1-485c-8462-230fb2a3b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b11f10-7070-4ffa-ab02-57d1b7babbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83f7841-7fcc-41ab-afc4-e1e79ce90987",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80b92ae-165b-481b-8525-128ebbcb684b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e135be-0b15-4e86-aefe-5ba9879a5dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff7f7b3-8080-47c7-bfef-8b8f05cafaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb7da0c-3931-405a-8b74-dff450b557bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723d85db-db21-4cc7-a8d3-a3ec91d1ee99",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156af529-42a9-4387-875b-fa7eb745def8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb4d277-d8f3-4719-958e-e3b9b71f222d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaeb1bb-97b4-4a2a-aa21-6e1cf328b9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6118b7-42dd-4239-acd8-451554c184dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a390522-74a7-4718-8669-25c0555c70d5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16c52f5-8701-4db7-bfb5-77dff1fe29fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a27e6a5-c4ce-42ba-94b4-dedc626cff54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a38a437-3d86-4b94-9a00-04e1b1fd4a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee001f3-dc2d-43ce-bc9e-b06788c37287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd21ecae-2f43-4019-8c39-94e7f3e9c38c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c06865-3510-438f-9f53-9d478d456d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5b8099-abe9-41c6-b34c-2bc1daea63cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9adf26-b57d-49af-80e4-b1db37060a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3944341-9c1f-4f80-a4fc-4df667361d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404ff05d-0a65-4d79-9513-4e2aec5ad8d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56f0731-b6d8-4e6f-be35-49b54ac21695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9181a1a-d1e2-4f1b-9b4d-7f8f324b1662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956446b9-0ea1-4da2-9024-a0cd968fa6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c483dfbc-f3f5-43e5-970f-e3677d9d8aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea1f07b-47da-46ad-b6bc-3429f6b8654f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e617425-a2b7-4dc5-9b48-b18ecfa06b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158f638e-5bdc-43b4-adf4-7b93e4e4b62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded7f233-d3c2-4980-99a4-184412fa19ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26292f96-d0f5-4cdb-b64a-8b639a28cfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812d59a1-e0db-4966-846c-89a0c5d25c87",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7001232e-3513-4c2d-a558-34a93a7a3fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2d727b-feb9-4e16-a55d-5ae6fb3cf4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0926f05-acc9-466e-bb00-bd1d08d1abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2932c91-67a9-4218-bc7c-f75842fff7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4f8782-54f2-4047-9b4d-7522bd4415a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a66c3a8-d3b0-42e8-aefb-5c33f1c95407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d47b28-221d-4d95-a4ae-6cd5727ebbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c63341-c48f-4d66-baf6-2f33f253b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6da4f18-c3e6-4aa6-a7b4-84dc96b11b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7011229f-7589-497f-85d7-198b05511db5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89e0d8a-5e1b-4975-918e-bcfe9a900cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7fca94-a6ed-467e-833f-cf885c2933e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66ee620-f948-466c-8b53-97e2382d1510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb90488-065b-409d-ad85-79ad2be9d6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4ce846-c311-4b13-9cca-d8e99fd697ee",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5228831-ec09-4cdf-ae7a-0aecfb0de5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11aec72-3f30-4295-b196-61f36f50d307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b131088-0c6e-404d-b1b9-3addeca33d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c41ddbe3-72ce-4805-b193-4708e2699b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681deaa2-2554-4250-82a2-01213603be21",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cab35a6-09be-4d82-86ad-5d053e010a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e2aae6-00eb-46d1-a6a5-14229e2e7cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618e3562-578d-48c2-b407-d369adc36666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72240fef-83ff-48a6-a356-6e148572bb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09511eb-9085-4fa8-b3f8-f2b87c3a10f8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e58fe59-0c4a-418e-93a0-1cfb54dc2f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4a6ecb-5cc7-4236-bf7a-77f2292de5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce19e3bc-f2d7-49c2-ab6e-21a9b2274ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7a0366-af21-47ee-af3f-6e024401c028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f28ab3-faaa-4cdf-8554-3984fa692c77",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cab9fa-7761-4fc6-8c49-b8a95591d5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fedeec5-23cc-43b1-887b-c6519e0b2a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b14634-ef34-46f9-89b5-4c074e7bcc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd51c25-d306-44e2-863f-839b2a4ad2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b85ec4-f7a6-421a-a9dd-04c3a8123ca0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bde7f0-1353-4fb8-b9e7-2bbb623a85a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576a695d-82e1-4e9e-90b2-86d1856ebfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f762170f-9885-4a98-8a30-36d319edba53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a19b746-6f05-40ae-a885-d26255d1ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5b2798-0d39-4a34-8dff-5270458dfeca",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5a5353-4184-4c87-8741-ca6e14a748e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35fcee2-e5a6-425e-a6b6-2e01d80a9d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc2e74b-1153-46e1-b0f0-53bf69b5201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6cce63-41d2-4cda-aa65-4394698d5171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9d9f24-e07c-4a7d-932a-874a0a8effe7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e34099-6fe2-4082-aa19-f5923ae02781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbf586a-83ad-4af4-8dda-d57105205a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f79271b-9d0b-462c-b53d-a06897ab826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2947fe-ecb0-406c-86a3-887dac4a15a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabcf0d4-0981-4233-bc6a-3377ef154655",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd33b230-4326-4ded-84d8-62c583d49281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ff2060-f862-4315-a895-ef255ac4c4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23b4add-ec99-442e-9f5a-30384d9a8c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "547bd072-4c47-4016-b40f-ea5c97db0f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6481f581-7c34-4d66-aa65-13780d8c4980",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2627d2a2-da8b-4bfe-9ff6-b93d1ae28ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b35ef3-e9a3-49e6-a927-071bc66c9217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f637831-2a5f-47e7-b974-3dc09e054fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63315c57-ae1c-4caa-a8ce-35d4c284d6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee73925-1ce0-40a9-82dd-c1bd4519e901",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3487ce-e2b7-42e3-9230-c3a994a57371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e393106-b772-41d6-a05b-979b6e2ff516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb37788d-af66-472c-890b-a412e0d1908c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5cf5c6-1d22-4a40-8093-10a970ca302f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e71b7a0-41a7-422d-96eb-33cd5c56977d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeecae59-fbe9-4f4d-9e8e-27530d7ce7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641f2a1d-65b8-4915-8abb-242c391483f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dd587e-273b-478c-8f9c-7961c7e7770c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80a399d3-bda4-4752-b198-9c26434b4b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c4277a-434d-4f04-913d-8e7ba909fb76",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc986a1e-f9f6-476a-ad45-7140cb3813e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09050ec4-fb86-492f-8114-97e7479c8128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70c9e07-99a4-4949-9555-f136a25b58d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "846439f3-8fc4-4bcb-a443-12b86a5ed6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0911a61f-2192-4ceb-8b95-577a4ed179d4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6028a3e6-e347-4950-8391-46b59f8f4fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a67024c-b926-4d8b-ac17-eada9431c748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2734b5-9dbd-416d-9da9-9cdb539bbcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "455f50ad-7a32-464c-b6ed-2dfe3db38ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995f6b2c-517a-425c-91e0-911f5012e2f1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde19887-741b-46ee-afa6-22682ce737b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e54939d-b4d1-4be8-8300-f3f57e9b0802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116d5933-7a22-4da4-80df-954e129334b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3ad9c6-6265-4db3-a00e-6b2297c6be64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd342b7-ea59-46f4-bca7-01a40937a328",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be4a5a4-cd4f-4676-af7c-4dcad0e4f095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff96047-b626-47c8-bff7-35498d503c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f14174a-65b3-447b-bf55-24e498a2b0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4b7a74-ea77-4104-8c89-fe6312fa7e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af35cc7-473c-4c0e-938c-0a474080e430",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3ae3ad-d600-4047-b295-6f72e959a5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca1d7e8-b1e6-452d-8ed6-5653a4837ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91da6379-333c-4b59-b366-a840e229a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7cc550-1303-4850-8c3b-eeb6ad1325d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a261be4d-fb7a-413f-864c-d45a0ad89615",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf4c64e-427f-4997-8aac-2f627e9e6973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4d5927-d23f-4257-a241-c37d6128faea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7eeb90-da53-4a19-99f0-32e2aba80ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "620a91e3-f700-41c2-869c-f5955f274510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3095bacd-9a53-4b4c-bf86-58fcefba34ff",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1cef1b-db52-4b7e-b879-4d89f056a53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e57fbe-9b8b-40a5-962e-9e676ab9b8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a93827-5772-4e2e-b14e-3e6be94dc217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6306090b-7f93-4fdf-b200-63dbf3a73aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6847b1e9-b777-4598-81de-e43524b80c4c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96e5aac-6f8a-4e1a-8804-e647b721c13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b215efbf-b385-4d22-ba8e-99d368b583d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b297b4d-a39b-4d94-9870-1a90a8644de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54c39fb2-2ac5-411d-9b1d-bd1fcf929f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dba2d5c-e8b7-4fb5-9973-d216686edd4b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc81e43-c3ea-4164-95a7-6abfc8507ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b424ce3d-d8d0-47f3-8e08-cab0d87fd653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d79610-c5a1-425f-92e5-f8c5244f4a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0834d0c-3cd2-49ae-9b88-fe5c171060df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ed2942-ee71-4498-be8a-825e0c83c860",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b50e2aa-062f-453d-834f-b043b19cdf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7163a8-ed81-48a5-a763-c8fcc67254cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ed0e4b-85f4-432b-8f78-bf11d6cd2518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb6564d-85b2-4729-9013-52dbf62f0e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce47176-4b0f-48a9-aa2d-97915401b47f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6555f11-3e92-4007-97e8-1dca28536f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4878069d-2f94-44a7-ada6-9f0a2347913a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780e9090-73c8-4e82-9e35-5c7d7be35847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a4aa9e-e8ea-4b1e-8187-48ad3f76256a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eab411-e170-4a4f-84f1-014d47c9f196",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598b2ad1-e953-4555-b22c-c7c07fdcc82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b083ae3a-db90-4082-afef-f31e1362cba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d632131b-6479-405e-8019-5ccb76057508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "622a1529-c0ab-42ec-aed2-1435e46a3959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc43975a-fb63-47c7-9445-21f9fa7bcfdf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218c7469-9b63-4ce9-b3b4-3d502919aff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3832f1e0-6e18-424f-aab7-fd86393de570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d628f9-07bc-43a1-8ea9-ba5b2ea91656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb34d75-d854-42f3-99e4-8bc6c0362269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f2319c-93fb-4bbb-9eaf-ba4c67b80207",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff596fe-f04c-4025-aece-6e8b3ca8b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860c1480-cdbe-4436-b578-5f1c0ea11f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d83478-1c49-4dae-a702-c0d026562b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b164334-f98e-4a5e-a943-e21f9b66eee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d66bc4c-34f8-480d-b25a-579661f8139d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae4afef-5129-4dea-877e-90fa7bff1f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cd0c5d-8400-4693-a480-790e3d58ba49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045dcb4a-7ef1-4110-8d45-de6c85b45efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b49b77d-5d60-4f38-bb08-1e1c6dac3468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3eb2093-c5c9-4951-8374-5d572ac83a84",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc089948-0323-4a36-ae42-ff7d8d8bdc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb83e01-c79a-4ebf-b3f5-63ddb1fb2566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e0c4f6-785d-4a9d-8eb7-a95b6ac52254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b79debd-7b31-44c0-9484-deceb0835485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c4db6f-c7f8-412e-b616-8b58b2afb13a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790d1ba5-ba5d-40ae-9e16-9faec9ab643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b979d2-bf5a-4736-94c4-10c20cb9f1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b7f2e3-cd20-4e64-a6b1-82ac63b6c510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b827183a-1707-4904-81f0-9ca7a973459d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439d236d-849d-4002-8c71-f5891745a5af",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d392735c-777e-4fc1-933a-020f510cc7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b15108-da0d-450f-bd57-012a83220821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf38350-7aba-4eeb-821c-7fca4f237437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e1ad3b-0256-4ae9-86b6-3350145f4bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddf1e23-84e5-4ce0-9e60-5d1c4d51cc85",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd59045-bfa5-456a-8deb-76018acd7d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0952ce9f-53e4-4c00-9536-abdd583b5a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2df0b95-eec3-4f89-8a80-809edad8c8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "29bebdb9-7535-41f5-8b82-0da129e86023"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d50753b-e8eb-49f8-b9fe-ec8eb2b66f8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdb146a3-03eb-44c6-8826-735600aeb1ca",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c9661b-cb04-4515-8fcf-1737dfda42f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6175a307-49ed-45fa-97f8-3dd736f5fca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2363d97d-444f-45ea-84a1-7e234bebc533",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6643643-db60-4f7f-ad2d-483a007f8281"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbc3ed24-3989-4cce-b25b-7ba6b5a9ecde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4844875-e2fa-418f-9aa2-20901009a343"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4576bad1-1a00-4fc1-8b06-dd206ff91dbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25cb1f85-27dd-44b9-b973-e03eb7a0b534"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d99d6576-3f7b-42c5-b9ec-17f26bfbc9f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a97c570-523b-430a-9994-280bcc349893"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a26f163f-f2e2-407e-b876-e254895ad522",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1ee58d4-c6ed-47a3-8303-0dbd9bce1308"
                }
              }
            ]
          },
          {
            "id": "f69064f6-03cc-4f6d-b608-81787c8209f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77639dee-2e55-414b-8c92-874b4d9f6a23",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c4f6e14c-e33e-411e-a85e-e2473c1ed81f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c0a931-b99e-4971-939e-4d726fa873f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "987b0ad6-93d8-40ac-adb0-be82a3e3775e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e96292-74de-4863-a2e7-c83066a1ce80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3c5dba-c6e8-4cc6-a883-3632ddc148aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac954e9f-afd6-457d-b35e-23e8de853d8a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e5b5e44-fa09-4438-9dc2-3cf322a62c58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "674916a0-1160-426c-a488-7f429d08dab1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7261986-3798-46f3-a8ba-75b3a398e0f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "221a51b3-565e-4d4a-9309-959f296ff8f9"
                    }
                  }
                ]
              },
              {
                "id": "dc2138ac-e0f2-48ba-82d4-ac7458b95b35",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64cd3811-5ab0-413a-89a8-578a0d7997fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "658c7155-8e1a-417b-a3ee-5b016dc95431"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b143242-9b96-49d7-83c0-71b97965409e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24f9b136-5d49-44cf-9d54-607996a064fd"
                    }
                  }
                ]
              },
              {
                "id": "12602371-30ce-45aa-97df-ce354a4fb902",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0cdb57b-8d90-4cab-93a0-4fd63fe32c99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58875c30-7726-4495-9f9c-3def1b964b14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "524bec61-6966-478f-bceb-94be7a5ae3d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c76e8e74-5914-480a-a52b-c2155bcd1b27"
                    }
                  }
                ]
              },
              {
                "id": "6114dcf1-d69c-4b5c-a252-6d0e2a23c56b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5b7d6f6-9772-4042-88b6-3f2f742b18cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8c7fb5a-4079-4836-b138-29d3e4d61fd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df2556ab-64e5-449e-bd4d-9117e36c6907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dc1c5626-a41a-421e-a884-dd83cc4b1241"
                    }
                  }
                ]
              },
              {
                "id": "7e83fc76-b30c-4bea-93da-92025b486d61",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7a4d3f0-212f-4776-9375-da481923fcf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dfbee76-ab6c-4e95-af8c-cbbc683f6669"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ea0f481-7a83-4d69-8822-1971e8f1305b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "872f6645-6455-4628-82f1-fcbc5edbc23d"
                    }
                  }
                ]
              },
              {
                "id": "b33a9b9c-94ac-4f5e-8831-1dc1daf555cc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05fa71ea-8dc3-435a-92b7-5a455c690cf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ef91483-3d68-4862-999a-a2a7bc8c5b9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da1bb613-6353-4f92-974d-f852d170877a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85b7cc5a-65f7-431b-97a0-e9d1e037399e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6e78565-8388-4d40-8b3a-51818e46e06b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a53a2320-e90a-4a17-a93e-f9b6b1bbda4a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "228eb8d1-98d9-49c1-971a-18cafaa5b0a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3461a5e-ff70-485c-bdf8-9f6753435a19"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61fb956b-95bb-4d35-a768-dbe5b111e718",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a6daccd6-712f-4a44-bf20-ec025d1df0f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a2f7066-4827-4aa5-939a-d0a4743aeff3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9ad4da6-7469-44ab-995e-fb19d9f58e10"
            }
          }
        ]
      },
      {
        "id": "25a753f1-b094-417c-ab9d-d858239a8457",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "14a209b2-4cde-4dfb-aac6-f77546f94e29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f94773de-1f76-4118-b00f-0608b70834fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "125a174a-f113-45f5-936e-d2bf68893926",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3afcbb6-f2f2-43ea-9129-0a2f99e6d48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e38a387-f782-4a7a-9e09-d27aee58c92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de24c98e-eabd-47ac-b517-256662e96485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc2a20a-f1be-46d3-bc87-9b54015dc1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512ad75b-8ac5-4a67-b700-21122b31cac3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0c5e17-ac33-4c5d-9970-5aa9ebf1b7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88134748-d464-4671-aeab-2751be8d4e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7711209-8ffb-46aa-a099-f541b170f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e3ebbe-8df3-4117-805e-5a1eaea55c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18df0ea8-9bd5-42e7-926d-2e27d464b1a3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db3bcbb-86d3-49fe-a86e-917a92e0ec57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1557a7-5503-48be-a5b7-94807ceec717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34f2212-a47b-4134-a4ac-d7e251fbcf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9debd90b-7589-4706-8958-7557e868224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39ecbe3-aed0-4b75-95b1-eabe405020dc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5b5d22-ecca-40df-8ee0-134c58d7159a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3acca5-275a-4f05-82b4-35ec40067548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb0ac2c-f1c5-4c4a-8cac-3e68bdc7c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83c37018-dfb9-4136-b2ea-9c60048f2b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f0ef9c-c676-4b1f-a344-a93dc122f37f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb00c2ab-fb32-4c6a-b00e-95544635ca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d0673b-fdc2-4c49-adeb-287e3c5733a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b79f9ec-9718-4f54-b44c-a2b992e41be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e790740-d8c9-4097-a426-e1f84b8d8f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77aa3aa-26e4-4166-92d7-510eaff4b139",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f1e84f-2628-4d44-a78b-88d7ca0f488b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535a0836-a1f8-4360-8831-244bf6051328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035314e6-fbcc-49f1-b02e-d6067b6bcd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f76caa2-6253-4a32-9f67-2b2c68471116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dd3c48-43d6-4e8b-b5cb-ad5f6961e4ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8915150f-c17c-4fe2-af18-88baf04f0ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d513ea-6323-454d-83f4-5ed67dcd527e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756bff30-c61c-4ef7-9dde-a16920635143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "48e7a74d-9a35-43e2-997b-fb995cc50c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13a299e-0d48-4cf8-a7ce-2217b06dd53f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff2aef3-8d02-46f5-b6aa-28d733c0bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd74a6f8-60f0-46f6-ae82-35d42f233f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10ef1d7-66e8-4730-85a5-50095a60f09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1428d2-064e-4831-9227-848cee8bc960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5ca015-48a4-4d27-b038-fa046c4fc9a0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16daa679-8a80-4b79-874d-a39320d99a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bafb99-3bb7-43fb-89a0-9c1a3775eb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3bc0db-a8a6-4c08-80d2-35e27141f756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6c4ee6-cd04-4820-bafb-b2f50a0ac5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d5b945-40a0-47d0-9557-dd4b3cd79c7c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62e4426-d8e9-4b9e-90b4-0ae07f64b59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191668f6-abc7-440a-a04d-9d2653201f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c858eddd-ef6e-40ea-993b-9fbca1ff0f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7812638d-2ddc-4670-a508-dfc7762408f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbfddfe-d715-444f-8b07-aacc21161af4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d2fa0-88e0-44b9-a4bc-ebb48d9809cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a142c1a-6ac5-45eb-acab-5b2d816d7b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995da1da-e962-4dd1-97a1-053129b3914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3aed70-9b80-4fd4-abf2-5a701c2ed7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d95ed9d-f40a-417f-9545-ee554fd46c61",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d3d075-859a-407a-885d-0ce200855e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7deffa1d-c673-4fbc-8a02-150be6eaed54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc89caa-a131-497e-9c35-9059a7a39611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "937a8e4b-dc4f-4397-9702-a872380a4260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebb1ee4-a736-4b9e-8672-3757037e08b8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f729d6d-a750-41a1-b97c-58086543f677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b618cd5-0a26-4248-b7bf-d637969cd6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdee377-30d0-4c3c-83ff-22f8532a1e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a30315f0-3558-42c3-92c8-ce7dea055b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e7b538-83e9-44ea-b859-2539dc885fa1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daca0e31-2a4f-454b-930d-ef1987882bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce46d35-a409-4777-9db1-78a824e2dffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdac430-bed0-45e7-8277-5098097807cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fa8853-462e-43ba-a6fd-dcc60cf852e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0dc8cc-1fe6-4a8f-a538-a441885796ae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f5a1da-74f1-4b57-b6fc-bea0bf7f9e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6a5ff6-204d-459b-9791-733053aa1442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa2c50f-b61c-4d13-895c-70c084858847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa4d1c4-9d99-4cc9-b883-4c7970f96477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cf0565-ddf0-4d14-baaf-654923a7d379",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b65771-ec13-4031-bdac-5cb7de502f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61b97aa-1ad2-49b7-876c-26af72759ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5089f7c5-d6d6-49c2-bc18-29245e6b0f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17bb8db-d9c4-4504-b46f-8f210aff9637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bdd143-1406-4ca7-a744-4db68eff776e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1d6e4c-9994-46d8-bf85-e8d301395da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5f6079-170c-470f-9a91-e75d5a625cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd804d3-59f3-4699-ac7e-38987c9c4f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca7c34e-83d8-46a4-bca2-4d0dbbe7255e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03f5602-a580-4acf-a201-86bf960e080f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0eec54-96c4-4daf-a134-f80b11724b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970a9a91-d5da-47da-ada8-58a991d6173a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63db66c-a480-45ef-91f7-c63f0aa0cfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "610b7ad5-8b33-4e06-a19d-560ebc930955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff554204-e25f-4fbe-b411-c44f73dba12f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5879c402-31a7-4322-8e0c-efa8fe0a1ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bb8b86-8ec0-4daa-afdb-1c609f9c23cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ccadb1-2de1-4f90-8039-3316f4673c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5269416b-45f9-4eb8-9a8c-066abc7ba37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ba9822-7c40-494d-bfd5-167f661c821a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39066959-16dd-48b5-9aa4-7b54e58a4f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f44408-d2b5-4f61-8d29-4ac00b3624d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e54982-2d1a-434a-89ff-ebf5ccc764e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12e6dc69-bf95-4e44-9857-bd2e0f0f2e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a9783f-d2ee-414a-8402-24b03239beb7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b0094-51db-4687-97db-ee0977ec9db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50049163-0c0a-4163-87ac-c04c6090e4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3477c727-8c46-4239-9284-87111d48f1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0f743a-1f5b-4519-8d85-7cd7a12b258d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cbfcab-dbc0-4a3b-8fe4-c6312bf5397e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0e5b7d-2e86-443c-b2de-bccb27f92863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8891b299-0d2a-4875-af87-35415dbceb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af90c85-4524-4681-85c0-cd9c1e6c4150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "571a9702-2f85-4050-8772-f2b36109700d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61d758e-fa16-4964-ba21-7c562d44db51",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ac3a99-b485-42fd-9bec-d61ed8fabf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944682f7-ace1-4d51-afd2-f59e5421af51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bf9c3d-472c-406e-8e53-b158b818b1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "918fd14c-ec3b-42ef-be86-2592e017f7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4cf131-f29b-4303-a5fe-d64e944fa1e7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd032c2-68fa-4f90-a7a0-fc6879a2f35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5009a8c1-6ba3-42f3-a59a-60c1253a5a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3f32ad-e6ea-433e-94f1-6cc953028224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c73fa0-d632-4099-a6bd-b9b5f2ac095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fe329a-4e12-4703-8153-a4c86679c008",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06ab4f9-63c1-4d17-a830-e2ddbb4c9a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91cb666-3f9a-495e-80f2-9e7cb5f58f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5489fcf1-cb1f-462c-91fd-7734b6b9ad6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d8138e-1e96-4339-a6cc-bb39698cbecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8026c441-3c86-474d-85ca-e504c10529ae",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce2ca2c-0827-4f22-87c6-7d6cd7f06208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e5b89a-7ea2-4b08-9444-b7c8e361393b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c47af7d-b6d8-4266-84e0-c80f79ecd1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a47070f5-d9a8-406d-a8b5-70814aa3c302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c22a61-4e57-48e2-8b1f-03c1f1ecf077",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12005b88-d3d4-4458-877b-3e35d8fb889c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cbb539-dec4-42e6-8bc0-96a8fc844eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94264004-ec6b-459f-9f0a-9e81d2d12368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f70c97-5615-4741-87da-d841f7c20fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9428b19-452a-4153-988a-daca5cd2a0ad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a724b2bc-70bf-4f99-a2b9-1114c85ad333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56625e02-44fc-4a65-81d4-50787f2aa593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc1ad3-5957-403f-a263-93ccdb44dd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22dfddc3-33f6-4d67-8ade-95165bc77dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b1bbcd-aa37-48c8-835e-a0839a0af6bb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b658d04-f5e5-4d27-8ce1-9f4f6dc5884a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f3abbd-d671-48e4-aeab-bc8799873d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dbb71d-e296-4353-8879-2e44e2771022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a72f50-ee1d-46cf-9504-908e31dc929e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54ffacb-d31b-4624-8d7b-ecd5acfc1fcc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eddb88e-7d83-40e5-a2f1-ff101a81e885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f191b0-585b-429b-b072-c84a30ee0f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad3c7b-3918-4c9a-ba70-26dc6b147957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3d0ab8-004c-473e-b529-5f46b05aa454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc68d656-2eab-4bf6-90db-80c8a9a0b9da",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e459af4-57e1-4965-90f7-fb70d13dbfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ebcb1a-76cd-45b6-a119-33651da6abf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b827b75-55f3-488e-a08b-e3e18be5847a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea606711-0fa7-4148-928c-34ae4f872f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a31afff-7e50-43d1-8705-d14672ead15d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41c802c-5591-403d-9d4c-3f801258390d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0290cbb1-1917-4e8d-9070-0d74fa2e13cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08d5047-1cb8-4031-a2fe-35821e725dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc0cff6-c762-4caa-b2a8-00d95f610949"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b2880dc-8275-4988-a028-eb22596caf85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1e1180a-2327-4c2a-aac0-d645c939f654",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162f13aa-7607-479a-b6b3-a5b42ea3af45",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f42fb6c7-c05a-48d3-b6cc-1aa1f762c200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50314033-0a5d-4092-a980-fbe9b99154cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abb8faaa-b934-4ead-9c34-0900c5357c30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e41573c0-22c3-40bd-a16c-35ff99f5cfe5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6e71f45-0dc8-4a08-8b99-03272aee85c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cb856da-12d9-4352-96bf-2131ed9e3117",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fddd3cd-d910-4bcf-aada-9aa7f8e120a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74ad136f-60a0-4d49-a2d7-9d0d79fecd05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "197872dd-96ca-47a5-be33-b2ed6fd70ec1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a48ac5bc-7813-47cb-8527-7c734d06063a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "568d3547-309f-4e48-af46-cc3ff065690d"
            }
          }
        ]
      },
      {
        "id": "a77b71c4-e69e-463d-bb0a-1679a84e74af",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a820c9ba-a7a1-421a-9aa1-f6d0da2bd7e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47647cfa-f178-4417-81e5-d1e0afe34fc8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d997ea2-3abb-4bd6-b299-4736a10bdd26",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6433ee26-720b-4497-abaa-8600445d5a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b25040b-976c-4e5c-8fe4-3f6ae62aef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468ebeab-cd3c-4bd9-ac27-085208511bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56106686-3cfc-4467-950d-a0b7e57ff6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74db701-0a8c-4ba7-9bf8-beadeefa89dc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fe8b90-ab4a-4eab-b981-941207d92d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c58919-b87e-48ac-ab1b-d544dd285740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abdda32-5002-4d10-a669-17da047f29a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f939073f-946c-4d51-b80a-1d3650216df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a71ff23-4817-4a8f-9af5-dfd01c208ec3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95152920-9fda-408f-b7a4-bb9c70f94d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d999538a-eac2-4cc7-ae8f-d6e06191f37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125e538d-41b0-4ec3-ba7a-1036daa197d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "967482bf-0493-427d-9363-4af813baca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21aebb7-f4ba-4cee-9bca-4fcacaf48186",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61968f1-03b0-4f38-a9dd-78841ce1ae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975976c7-9522-45f2-8c6a-109ffe466e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8442a9b-d857-43df-99f7-1551b6ae6051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97fc8647-926e-4d62-a7dc-bfb00e742436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2141a32-ee99-46a9-89ee-dde3e50e0224",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0b25a6-73e0-4e06-b45c-ccfc56819ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0034e0ea-8c6c-422e-b013-228efc0f0a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8f89d6-4792-4460-9406-5cfac0101d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef800b8-8fa1-463a-afc0-bc85e5b94dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d82072-7d2a-4a83-aca1-0bcdb9a89ece",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bd1c36-1474-4d79-be6d-23dd8840ee4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04e6d14-8c00-423e-b771-d1dd44e5a41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6594ed88-2e12-4951-8f27-e59e4fa2d441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6062481b-5037-496c-8c85-00e7e176fd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b8714f-3f86-4d3b-99e7-79bbb321250d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd7d066-0604-49f7-bcc4-032ba85072fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3775a98-3c37-4976-adb3-9aa619c189f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c070e22-51c1-4016-a7a3-49a50ea5fbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "666862ad-0258-428e-b180-ca2106fc2a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa475b4-9e03-4b5d-ac15-be23dfdf2d37",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c475be-c36d-4d28-8d5f-d53928f080f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591c0ea0-394c-4a11-95e9-6b5a096fad50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e01ea3a-ad8f-42f5-b8e9-d99acac2ada5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02aa0a8c-3508-48e1-a45a-42448d93de81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f534a-59a1-4fae-b6bb-c98aa8919760",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bb8181-89b9-4509-bd19-856ab35f2c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b0ff47-329c-45ad-826c-087c8b7a5ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2e3cd7-d48d-4018-bfa0-8a8be57f259a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f4f83c-b078-4c47-882b-bfd05a48c909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca759ce-819c-4165-8eed-5f4c00411485",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5b6720-7a3a-487a-a9c8-fca63f97d469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1445030c-99df-44cf-b769-da68311cfeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409f134e-32dc-4bf0-b8a9-e605c1a09a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d804876-dad6-418d-af7b-daeaff2afdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5695ee93-f409-4221-9adb-73bb1661ab21",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ed8857-88f3-49b7-90d2-acb4fcb1a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364de6e0-02ba-4346-9c23-64e882e1f1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60354cf-97bb-476e-986e-96b473bbf53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa41027-0519-4cfb-a45b-a19a185df6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2795a44b-6216-45ca-a2a5-581fbce177e9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e432f8f1-28d9-4718-81ba-076d893b4ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f1801c-c240-407a-b48c-ab9d90e50708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c3c7ab-f4d6-40b9-8ac4-0bef8663d5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8b67a8-0a34-41f0-a58f-b7b4b470260d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6faee54-e0cf-462e-bc33-dc78f973b375",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b1eb4b-0404-4792-8843-b0e214f05142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe29bca3-56f6-4706-9ae7-adcad08e9fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5867b71e-5dc5-426c-b428-4d194a3d263a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f95f24-a404-4ceb-bd6e-8e03a8ad3fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5166062c-f70f-4894-8e29-647217e40afc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad94a16-d1dc-4a7e-8513-6cc6ce10e6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2296d352-4fb6-4d36-a6ec-ef8b1b6eb985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de4b014-b8fd-41aa-a523-096f39605132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd671e2-2289-426d-bb43-cd4c65bbdd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f584825c-f36e-4660-b9d7-d2f8cd3dd199",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08981f7a-adff-4156-81c4-aebf8918f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cd641e-f069-4409-a09b-8219c2f5fcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f86e91f-5187-4235-9da1-d858cd424f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9fd3ed-e21e-40e6-880b-f69a3ffb7c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6512b5c-4fe7-444a-9dcb-c90c3ced6481",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027f14e1-f07d-440a-b707-076e0b05f60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a822007-f571-4639-9e9b-827095991543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b97a37b-0490-43f6-bfd7-46cae02b1085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0747e5-e894-48f1-b961-6e190b14594e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5418fc06-8127-49a3-9bf7-bf2d3b89c31f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcee4a15-afb8-434f-beb8-7f8c02c1d35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8dd5cc-4593-4447-bbe9-9d6657fb0a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c6ed28-56c9-41fd-9008-d1f03e0eca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12427fc-30da-4b6e-aba0-f700651aa267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732a633d-8d65-480e-bcb7-57836bb81505",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7fbb54-f9f3-4973-95f6-69d75e44a049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f3d1b1-09ab-4bdf-a506-8b8166d330cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e8524a-a1af-4e68-b0aa-8ae3ea4248d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9a5af6-5a91-4bc4-ae39-e428ea44dc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca604b4-6cd2-485b-963e-c5dfc3a9708e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d43706-7352-407b-a73c-0fc25f6a6e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b747f879-a573-4e6c-9996-deb62a1d7cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9ab3e5-f20d-452c-a292-f962a11c973b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9914859d-e489-4a3a-ac8e-87a047e4d396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e797122-9d6c-4512-a309-25a01ac5d9bb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82f0202-beb6-4bf7-80f3-b5dac9906f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632cebf2-4c50-43a5-840d-ce092bc7fe0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b25e12d-7ed0-4599-a26c-e9a5bfe1516b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07258161-1134-430a-b6f6-766988ad5f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81b6850-61d3-4f76-826e-a412a48abff9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a602d81d-fa6c-466b-995a-84b23dcc5fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03256e13-fb63-4b9d-84fd-5742bfeb67bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2671eea-3ddb-4134-8cc5-d10d586f5fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae179470-c066-47ba-988d-45a6e0639ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b32542-3ebc-4e6c-978b-92591781d0ba",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95c592b-42a2-41bf-82f9-e70e46aac200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8961e122-7638-43ec-b836-efbf1cb0344a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d16dfa7-3064-4af0-bb74-98929d5d4cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee45200-1480-4dd4-b660-86ef6f9f8c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2768e4-5aca-4b6e-93e1-034d0fdc2c9f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0347d511-581f-47d7-b54c-2a08c20f80bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0425140a-d7a2-453e-bf73-a93f55a245a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091f3073-2c2f-4509-8bf8-615d725091e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "530a4085-a785-4daf-aff9-937dd3f71011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871f3bc3-3c66-4734-9377-3dedaed5b1cd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb721d4d-9724-46d9-8e46-e5852605337b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8173e4f-7195-472b-af62-3bf51f54c7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a7a501-19eb-45b4-a6c9-476cc58efe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b68d28-7dc2-4f49-aa77-66c918b3a88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdcdf34-e19a-4b69-aea7-38a925be5b5b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0211bd76-f23f-4e1a-acc4-6dc71537c2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd45d305-1f62-4401-888c-dad618a3af2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a5b940-204e-46c1-b4c4-2d6104432519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b36f3a-e701-4426-9dd0-30517a5f18fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1531e4a-7f42-4e3f-96a2-2c6c3d1cf640",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5709f15-776e-413e-98cf-13ba784b9f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2248c9f-e189-4504-b086-4a7f80769f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645d075d-2a0b-4f00-a818-8834509ec974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0164e3-76e7-4761-b269-11833a90246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ca9eb7-74c0-4845-87ed-bf2834b3be9d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96753d79-c6d9-41c6-a6ff-4a8fdfb28c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be9e50f-5ceb-4f2e-9a7d-8c376a415add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7518d2b-454b-40e4-bfc8-4c53eee8e4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa19a205-ba6a-47d6-b4ae-3a9a6336d2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d76e0a-830b-4fc1-ae72-40ec5bee73cb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb15bb2-9d3e-43d7-8521-b20cfac337da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ff1d10-2cfc-4736-ab33-8ee04bd7ae02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1334378a-213f-4895-9b93-c1585d90701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b725252d-ca6e-4f0b-998d-a90698cfdca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0290f6ff-25ff-4479-ba90-b225be4da164",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2fb4cb-d21d-462a-b779-090e8e513f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3c4225-1f56-4618-acfc-1d1bdb64d403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f9bb29-3e42-4e13-94f8-1db2c735ddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "256033c3-7501-49d8-a103-7a5eb22fc9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4887e8e3-9215-4256-bd57-e1ef3d23ac0b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cdb76a-6883-44ac-aac3-02551fba7950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1dd629-b422-44d8-a43a-39274ae18048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea14b35e-23c2-4329-a116-dfbfe28850f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62149a97-2ba3-4084-be29-29c50c673a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e8bb35-9512-4556-8a6e-278d9ff44395",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcccf41-0a50-4bcb-9ef2-dae70bb2a473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb70ab7-7dcf-4a39-a85b-b98a3932b01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13322374-9074-44c1-bb15-95d95dd9cc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "244a8fdd-2044-4a74-a643-77a69f85591f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caf561b-c504-4457-b38a-32b6036a0014",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edf4cd5-54d0-49b3-b23e-d7427ef36006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a124c0-adae-47c3-85ce-e631f0fd494e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9702d822-5d7e-439d-ae70-9cbc5e767d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4eef88-fd28-4ed3-8f98-fe742bd14bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13db0ebb-f3cd-4a32-91a7-607182a2ed74",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a20420-56bd-4214-84b1-04883908abdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0885091e-01a9-45dc-8814-71981f706195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52498b8c-4a6c-4a82-bf7d-03a2ab69ffb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "013418d5-92b6-4e46-8328-6110d60030e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31f995e-a752-4b39-baf7-b6a1f7130865",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f97a780-cc8c-4d5a-aed1-09d7a04f28ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0788fb-50ef-4a08-8620-0a059d5ab980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f05e984-c466-421c-a3a2-4e4df8904c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2092ebcb-3a27-4b25-89d9-29d09fa367cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab44528-5b0c-4156-91d2-a390252ca278",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff598bb-d866-4927-92c4-0b4269db5a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc383e8-8bd1-42b7-9ae7-d16c5fbf3d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e8272d-cad7-4d54-a794-e60496e14555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "537c586d-1c68-42ff-a7c1-dcd40743a3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57748ed5-079e-4906-b3de-f6f028193a87",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc552f8-a7d5-43ac-a2ac-35c758e71786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f2866a-aa05-4b4c-bad7-be4f51b340fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb16671-748c-40df-a735-a36f60e8d33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "826546ce-db2a-43d9-ba66-c90419d72716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a609ba-46d5-4a1b-89ec-3701ee5587ab",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b225f3-5999-4bfb-9ebf-5f23f3726a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f48259-d11f-4c2a-8a38-8cf0f7c3c976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8a6c5c-2bec-4e04-b560-c12e709953b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a5162b-2879-484e-a920-10e48051d818"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3bc01a6f-67f2-4af3-9e18-ea74ada84a07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e31cd836-c431-47fa-b784-8ebd60baaf88",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d664f430-603f-469c-b477-e489d260a286",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7557deef-fb3c-4684-aef4-a2a960ac0a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6fccd1-daa7-4566-a31a-6b19cef22fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cac21a20-022a-4e83-8857-e0dae0935cf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77bbd6f8-3d86-4761-bb95-e1867fa96523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8967bc80-4f8c-4f0c-b960-34ba50599914"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b51d0878-0d41-4df7-a750-7070476ad9d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2f075ed-dc58-4bba-b4e9-ffd1ce7482d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d95f3c0-b954-4ec9-9602-57faded24f42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e886730f-5d9d-495c-9900-bb90ce533d14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffe2f299-1395-40f3-8f9a-b11cc7e21510",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95b152ed-510f-4233-87fa-1043404529d3"
            }
          }
        ]
      },
      {
        "id": "3463b48d-7824-462e-a3b5-80b5864fb4be",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5d05343d-0ed7-4906-abd8-865b52cadada",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ca831c1-97bc-4bb2-bc96-a8554a449407",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96a785b5-29b9-4061-bc71-ee7e091e4aa4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c6ae81-444c-4b74-97b6-a89be941d85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e7bf28-80f9-449a-a2f5-edd3878b773d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df737f3f-fd7b-4d3e-88fe-ce114a7418b3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe3bd42-588a-4b25-8889-30827ddf072d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68887e4-79da-4526-adbf-6edc69b18f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a094ffac-937e-4068-8d0f-41e3b2ffebd0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a095dbf8-7e63-437b-9033-534179a37712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36228fcb-cabe-4e48-a07b-2d7771361262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c018647-7026-4d9e-a3a8-32f96d861cc1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b258c35c-768d-4451-b639-a688737151fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacc3fb4-4f30-4986-b8ae-555d532b6ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e72c940-db5f-40a9-a191-3cfd4e6e2e19",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb698c5-528e-48bb-9422-125b2da62624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9566fd08-47eb-41dc-800e-5293a490644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa7ff51-7757-40b3-92af-ba3feca30185",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e34004-cf6e-4c7e-97ef-af7eb7ff1ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61af4de0-321b-4464-b8f5-67f282f325fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ebf05-2951-44b3-84c7-e30baa697614",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcecf70-a30e-445c-827f-b4f6c2b43ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8365416b-1c79-45c2-b7db-13f5a9c89c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9177a705-2cca-429e-9f62-dc13af6ce634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38f4bc1-706c-4170-a251-c4e306ef3132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf2285d-e7e8-44a0-b7bb-9d32ba4d791d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c8173a-f3ba-4997-8dff-6e5e2135f63c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250595a3-7caf-48f8-89d0-9aa9489693e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2387c75d-e89d-4ab6-8d9d-f2486c0160e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5065e8a-3343-412f-8b9c-7b121f08bbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ee8d13-5d39-4813-8380-ac9146011c50",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361fa3c7-af7b-4b29-a808-00d0ba4ef1f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847313b2-714b-4cb0-92a2-d02843ed3861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecef9067-f889-4d57-ad6f-c2847eb6a602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a713b05-bde5-41f9-a2ca-827e46d7fe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30a4c72-7ec7-4aae-8e2b-5e09341f39c1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190cdc56-69bd-4559-8c7f-c0451098f79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950bc16f-65e8-4155-aa86-48d858b89952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31ec9c2-d0c1-4518-89cb-9dcb4fd66100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fde650-b6d2-4852-8dc4-daad084a6ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a87c47-96ab-450f-9b67-a35c418bdfa8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8300cb8-1e00-4353-94ad-d6ca68a26561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3be1f8-1484-4bb1-bb0c-b65980962f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26f9ec9-67de-440c-bd4c-99f84584fa7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed402a0-2c35-4426-85a1-9226f162b7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a24f67-61b4-447f-aea3-3e8e605475f5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1629a27-5b81-49b8-a17d-53c2ecfe7073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193f21b6-49ad-4b73-ba4b-c10a88611a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f061fc39-2e37-479c-b283-39000032472d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050b2385-7e47-47b3-b171-32b28a864235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62be51ce-3457-4d89-9406-851c4823795d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662bb78c-6940-4085-ac19-234df93772c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b100546-0794-46c6-b4ed-53113a14656c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9ccea2-0c78-49cf-b9bf-4f7ff77f5579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8aacd0b-cce6-4cd0-9953-4129200ce8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78ca653-4208-409f-91e1-a0071f73c08d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844e1229-2e9a-48f0-a0f2-551a33199954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5816a65-9394-4e15-a150-ac015be5b2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3326570e-b1c4-4ea1-81d1-c981cc01f4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec479eb-07ba-46a9-9f5e-b684558cd405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e33833-aa17-42b2-b629-4ebd6805ffea",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae2326e-f573-42c0-b6e6-46938e120397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4801024a-b4b1-4fee-b350-c222cbd67a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce7e05f-fb4e-491c-8a5a-bcaa8b497d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f42e931-df63-472d-aace-c3783f4f8233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d68e972-beaa-4bd5-a6b7-229e96d66fc5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2ef62e-694d-4794-ba42-1e7f0d6f693e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440bfb34-a8e9-4c74-9aec-95945461c5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24decfe-ed85-4d4d-910c-fb35a3f7590a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9821e70e-efb9-41be-8b80-c1b6c2055a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae29b37-a9c5-42a1-90bf-df5102b28c49",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cecd49b-8df6-4cef-929b-5162b050c0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c689ce-a73a-4058-8e2f-e29be88cca04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b7ae06-3ea0-46d1-9682-57a089a45ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1ee253-883b-454e-83ec-bd81bceae44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430e69e2-6f23-486d-8b2d-6402f8f1e93d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d58128-3611-4142-9ec6-76e38ab5dbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb2c59c-dfe9-4065-8b20-3ef2c80c7079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9c9a2a-5e54-45ca-9e99-9d83c5843d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579bfa3b-ef64-49c4-9d55-04b5afc2e931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8c465b-8453-4c5c-b2d5-2bc483a2a4b7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d53c45-ff11-4513-9c3c-22e786b610e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23f34d2-5c45-4d79-8f5d-0a3d8d59b0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82512b0-c7b5-4862-9e2b-a9d909b0333b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8e8331-9e15-465b-9ab7-fefd26fdee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f865b3b-156b-4e98-8b1d-17556d56ba9d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c37ff32-ce1e-4cbc-aa8b-3d2d2da18b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520f0471-494f-4544-9d25-99abdd0299e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9077a810-b2c2-4e8f-983a-8f5a731aa539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4e48c1-1e9c-42ad-a812-deffa52a3e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa05de66-e2f0-415e-98d5-cc7af16d200f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c56546d-3afa-4bbc-91e6-01d386bc5a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02c1c1d-f78b-4a82-a0e0-fe44da485cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c3db5b-aa3c-4c33-8b78-a4e953d4b8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89acb877-738d-4962-a422-6022a83c9643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b99106c-26b4-4dcc-8a9b-6f4c6a8aac48",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742c3fab-13f3-49e6-a1a8-a63569a3c0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0a92af-b45d-4e0b-bb56-402b310560d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd75a60-104f-4c2b-93f5-211c7b4a2b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d095995e-3096-4584-b088-7dab31ecaf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0b9400-c954-4ea9-9df2-94f6c588c132",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052671c0-2680-4160-afcc-2441b836e50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02eaee1-9bb2-482d-a304-991aa4155f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e031b9-a360-42d0-88a7-eb56f723f1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972dad6b-372a-4a80-903f-2fa29e957913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec97bbf-0306-41ac-84b4-da6f65c5d8ef",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95186db-5bd5-4a30-afa6-eee62e2c57b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ff7ee9-30aa-4511-a012-6d839596df84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb000137-4d0d-4739-b749-0dd260bfacc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa77a324-fdbf-4a06-9fde-7a03e88290ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b81888-2541-45b2-8992-7151dce9a951",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25590da1-bffb-45da-a2b5-0f0efe64745c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff56f82d-2ab9-453f-a346-ec6a265f1576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebe1ff8-9301-4ac8-b0f6-9122281c4ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f368569-0915-4476-9da6-2ac58ceaffa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16af9a1-ba5d-4864-b893-be4a1369bc9a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4616a3da-4200-4125-92b9-b36571195d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c7e44d0-95c3-49d8-bb91-31c8e6ef2b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed7e354-07f4-4d4a-a49d-cd5c8a279bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b918d6d-46df-4a0c-bf07-0d2c4868fd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df267ac-6241-4b65-b9f0-6386bba6ac82",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e650636-c182-4bca-9b79-38727bf808aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cecce714-7520-4280-8dae-09741a88a56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b40ebf-291d-404c-8aa3-a3cccfd3cc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f99b87-f4b4-4626-a033-e8afa56c9e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b222e69-4506-48c6-8d9e-5c799e702287",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d9a924-d4a1-4f22-988d-563da489d73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a49fbae-1a07-4c03-a226-321fd097ed6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a53f40-1360-41b9-aa14-3a77519f23a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cb84ca-b16d-4fa2-82d8-57fd8ddc318c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c61e01-2886-4ef6-b0cb-c7766bc13f82",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6760e9-43ce-4ed4-bd86-5655d19396fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8814246b-80d4-4b77-b48a-9ea390f1a6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c634fd-cf8d-4af1-a97c-4012c1a36f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fa5c04-1549-41d1-b43c-b0b3e9485280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cba0ae6-fa07-4acb-9486-b37b1a1b53df",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee36316-b8f1-4ae7-90b3-54cdebdfcf06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30795b38-0431-499e-885d-af052d6aa70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5a9f37-041a-4f17-b78e-c4df203e8b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66146d3-7f32-4474-bb85-2a68bf01ef12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4a7210-b4e6-4ebd-ba72-200ab395d4e2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e665fb89-769e-4a0e-8567-a85fea5496b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf374ef-39c1-4dc2-b844-c2399cd4d626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca8de82-85f8-4bf1-b0bc-2f9b4780a34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3ddf2c-aef7-4823-b42f-697602432dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3bae5a-49d8-4644-b1ad-640f4f9f2a06",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1a53e4-8fe2-4803-b67e-143cba68a6ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7e5367-a2aa-43fe-b2a3-c5e5663cef1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67910d2-6ba5-4554-a8e1-ef86ce6ab91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e2b526-5d0e-481a-bf82-7c8a7b5bb5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34ca1f5-9a9d-4ec5-8ab7-1c9a79e0bdab",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad3edc9-adfa-4c22-ac1f-cf1b741a35b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5dffba5-dee7-4457-9c5b-4aa6dd6a9cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cacc7d-f318-4da4-9b1f-c9c8a630b325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786d3638-32bb-45e4-845f-4af772059036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf50581d-d251-4e89-8d43-e05449f61c75",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee74869-90b7-47a3-9ae9-4a78f1832be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db59fc8d-7da5-4c0f-a2fa-ee093221f5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb94acb6-5be8-4f6f-a285-7aed92a1c176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ac49cc-17fe-4e13-b880-f8f994372b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e21e19-02ba-4cb8-adb2-69ef51e4e9a8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0e24b3-e25d-4a8d-ba4f-f9c77bf0ab0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6314acde-230f-4f06-9893-8ea901fd9b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7242b4f4-2bb5-4893-81b8-5545136b3880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54dab59a-299f-4874-9885-568e47d6a154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbce02c5-a7ff-4901-b113-50f499969207",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d312c791-bce0-4e07-bd7d-164cb1f63fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d98ec0-a452-47a9-8805-cf16dfd8a4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4aeadd-d680-4399-bc11-ace6eaa0e8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6aabc5-f535-48fd-b21e-260061dd16a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a6aff3-3d00-438e-af53-ba0edffa20df",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5665f85c-e93a-4b54-9293-4df4f3ccbd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253156ee-a11b-4b85-895a-018cf9c4cd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c8fba4-1c83-49d8-b872-2deb7a6aae94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a290ecb8-31c6-426d-b466-f7aacef7fa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2d548a-c571-41dd-8f42-1459f608c709",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e12236-97ae-4ccc-b5fa-96e0569aa854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d20d62-d8db-495e-abee-154f4c21c9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acea2fb-11cd-41b0-95ed-50c8b1dd6f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc65ebbf-628e-49b2-8921-e67649fc8b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526eaae5-b671-4332-98e1-44c551b15bd6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37d68ef-fea7-41b8-8502-62c50e481326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99335aa1-c53b-4c53-80fd-f3546021a06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb411e2-f6b4-41c4-8abd-25fcdfb7c339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ae8be8-b07b-435c-8cbf-57f2f10e223e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcae0604-facc-478b-82f1-8cbb2c61876a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f7af4d-8028-40d1-b1bf-3fc4fb1f146e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fc2d35-9169-4fdd-8292-1fd1a3201eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0892a72-97cd-48b8-b6fe-b896cbf842ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f6cb32-8817-47ee-a150-297df7fb91f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c36ba3-df5e-4906-81a5-9c4a1caf082d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4134c969-74a0-4516-9140-b85330563af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f4167b-62f6-4234-8fbb-85a4cb6ea1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b24501f-a255-4c8d-8fbb-8e8606aca661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8008a5fd-a136-4dec-927a-6ef07d6f173b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10031a3-9dd6-40f6-98a3-10ef53b45695",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a5fd86-0bdc-4ea3-8fc8-b33edb48cbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd30439-5299-41a0-ab35-0b7fb0f8bc56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff87592c-0c7f-41c6-a27e-582f6d643ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef67218-dc96-4009-b905-20169e14660d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ab6df8-1557-4d2c-9a17-8c5d2d8cd025",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d27ff4-eadf-4e7b-81e9-bb11fc655d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6231ace8-eb9a-46c1-a77b-0fe3177cabde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd04522-34a7-45fb-a358-ec7144ddfba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a351862-81be-46e2-8833-b2dd803a72fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe16d32-4063-41f5-a516-9cda137d6234",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cff03b-738a-4bd1-a051-43dde85478ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c02a72-1fcd-4ee5-9013-059a8b512cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a42e9c9-5651-4a0a-80a1-98710598b14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b6ab98-1665-4f53-9f89-5e6023f3c986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fcb71b-4bf9-4798-b7d7-642b07dc768d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c644ae83-d772-4dff-8be4-574db7958fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a92d005-1fb6-4a9c-9d3c-98f7304cc8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160df3c8-105a-4d25-b47f-ccc774e218a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a28b8a5-4ed7-40a1-bc3b-817ef48d69f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d3f6d1-9a7a-46a3-b285-e3b265cd7a14",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b307e5cd-bfc4-4bb0-bfd5-f0ab7f27321d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e39f01b-0d46-40f2-b7fc-6f02fce87075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3822d8c2-871a-492b-885a-c086059bbe48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773cdb43-434b-466d-973a-869b5d55033d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fc36c5-c483-456f-a2d8-5b4dcc8ff239",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bcec7a-73ea-43b8-9261-885fd0b2b930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600d9868-daeb-480d-8793-ead3925a7c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc54b574-629a-4a6f-92aa-21df358fa9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d9a0a7-bb07-4e40-81a0-f6b359cc4273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06044e13-29d2-4d6d-8e3d-a9bec91b2d61",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cf675e-572f-4272-a739-702a3b9b9bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed05ec8-0152-4544-b172-851c430cdbaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a96b7e-6f84-4289-a3ba-76742f481b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42fb5d6-e283-445d-b284-ffa3aa916dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c103e1-b140-43be-b7a4-5e146704ecc8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3a3cb4-2843-4f0c-9233-3f3ba5ef3bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64094fac-ed80-4b1a-a09c-52fe7bcbb6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbd13af-f8f7-44dd-aa3e-7640e09fe90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b900d7c-1274-46e3-8c5a-8c311a49bca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205b4d79-b3ce-4c0b-8e90-0d07b01aa545",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0021dd30-afe2-49a9-9005-356ec6065172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f9d83c-a1dd-4cd1-bcde-422259155eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3432c9-2c4c-46c8-9405-4a3e48d1ff3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54cb63f-c324-4cc5-9631-a107f0c2299b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609525a1-345b-4905-8343-74f91cabc2a4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0da802c-9f16-4af6-a377-839299dce147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f5a3ef-91a5-4669-8784-97481c063fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01afdb0a-96c9-4600-b0db-6e8513a4be9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6525b20-66c3-4bc9-b809-f570c4596aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428bb769-4ff2-470d-81dc-54914aa811e2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2739a6-cfdf-4640-9fd4-6af6a70b4cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df74dd9-2574-43e4-8b1e-920f20eac4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ce8b21-e517-4552-ae0a-3642ace58912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6af2620-cd17-4216-9ab6-09ee5bfb615a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f353ae45-b9e8-4155-9bac-5a2099a07fde",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff7db48-ee73-436e-8ac3-575b285d3d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f08ed7a-f1c1-4f23-827a-71e67fd9f337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bb6c01-57bb-4d06-9604-02ddbd8bb140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d41b88c-9d60-4f56-a1b6-343dbfa4b349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f50e8a-b6e6-4a54-8548-80ac195af19c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190e946b-6fdd-4d23-a1ed-2eb2c0a8e4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d045e6-e086-4fd9-a395-dbe65ff8e6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f710ce59-a5c8-4816-9161-574d0b060268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37bdb77-0c94-4d5c-b743-0476f6ddbaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dc101a-067d-418c-a07a-1f97fa3dde13",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9b9481-45bf-474d-a1d9-b54edfafc60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66375f97-2730-4f37-bfb8-a73e6f607e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f9fe99-9411-43a7-a9f7-95fab2f838cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718ce837-e57d-4fb6-a5f4-c0eb1ed6d0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99397ca7-d46f-4ef0-896b-e9e308512c61",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffb8378-3f68-471b-8b10-9324ecd68ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34888d6a-d6ad-4812-8668-bd2d75e9c29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7fffa1-f736-4dce-a1a9-fcc92dc3e707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe99e8c-aec6-41ce-9ef3-140a006b47d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d227dbdb-d71c-4162-ad5c-b5dde55f6248",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcebc95a-1080-4e1b-9522-dee0d1a0d311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86eaab02-9a1b-4d3e-b2fa-9a9029dcf620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b4430d-ee02-41ea-88d8-268121a897eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98be1b93-4c91-41a5-b5ba-2d862ce77751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8322ae-4ff2-4607-8929-efec628652bb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bb3e7c-203e-4253-bf53-dc7343be4d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c94eaa-0cef-4e42-a4c3-d46cef9e5dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fcd70e-18d1-426a-90ba-2e9105039447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb40f48e-3dc6-4b70-865a-15c2e4113d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdd17cc-e3db-46d5-8822-13b4ffdea178",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a838dd-2207-41f4-937b-03e77664a01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a51d13-50f2-4f7a-814b-698666870c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d709a2b-effe-447c-b6df-72f6480f16a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479bb019-6721-482b-917c-28f0c5557381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e9a0fb-9134-42bc-a2d1-da1d64c5a12d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16eb204-2cc9-4874-a0ca-c9241f7296be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee741b9-a82e-4054-841f-98d5ab57efe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a23f99d-9b33-4790-868c-b67bd742198e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a134d68-d42d-4483-b29a-d433a2f96b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1954e9e-c838-462a-afb6-09bdf7c679e8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0636f5a2-4c6f-430c-8216-13364e8bec69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeba9594-8c3b-4791-a3ed-b24598e529fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37681779-cfc5-4194-841b-5c67b6d43c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f53639a-df6d-4d68-8d39-31d709f8a594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f576ed7-0f57-4bf3-8f55-4a028f7fb655",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b495d37-580f-467a-a878-970b0d35b716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2af7bd8-24bd-4e28-af5e-15522ee98002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41664ff4-320e-426c-9d2e-4901a9ee981b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40304ff1-40e2-4bdf-a245-d6f4ce6d07b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3b4613-d50e-4241-af81-81595fc48487",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfa9ec7-2234-435e-9462-077b0199635f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1664aacb-59b5-4c4d-b26b-76e8070fb131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ade79b2-b091-4076-99c2-e54060dfcc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfab22b-fd61-4833-b6f0-d74077ed9ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c1a8e-47d3-4299-8a9b-1f22df48d73c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401d88e5-6582-4286-89aa-8f041643970a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1100bf9-baa5-46b1-a998-dc4606928d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8e34cd-e4c7-42df-bfa9-34f06978c6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0fbf07-af45-44ae-8ec3-21e6f1ad83de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb8cb1c-7e5e-4fa7-824a-f8f34557e52e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab551db-64a7-49c7-acda-01899071aa37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21abdf99-563a-4ca9-a72b-09a12b11672f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f54296-1578-48cc-a20a-c6aa4e35b138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713edb09-3fb9-442b-b131-90fea12fdf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ce1371-98f5-4c46-8904-b02aa02c22bf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422ecf62-f365-4e00-ac92-a55a3d624128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c082270f-1538-40d4-a38c-8e682aed6bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c45a48-91ed-41b8-bb9d-537b5ccd9f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cade04b-32c4-4a7f-be21-6c0a29854593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dcfe94-2c86-4b84-8cd8-080e7d9fb9e4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b82e2-8568-478e-8a3a-b604860ec793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36e5e6e-9f52-41fc-aed4-7c4c2717072e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07cfd59-c4e0-4b88-9c9a-9734d48430a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac1bd67-80e5-46a0-8375-c6183af0178e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3608ac-23df-4f3b-b1bf-bb45f07b7ebd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1b9e44-d5e8-4918-a8cb-b582bdc855cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3bab701-641a-458d-86fc-bcd3c9784c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a10b1b8-3639-4ac3-b692-0bacb0db75af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c2ca0f-cdbd-4ae2-acc9-72cb33645070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d475888-a9ab-40c0-b37b-83ec27ca6edf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d11bc37-6beb-4a7b-9e8f-8b4cd2d9429e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f0a0e07-0944-4b36-8034-ae13725a8f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3abf21-4a09-4dba-87b0-e26802ae9df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace37c0a-13b8-43cf-9af8-d5016902c2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3f17fa-262e-4a9c-80c7-29106f23b450",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccda251-a7bc-400b-9de2-75af5fde5128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d638ce-70b6-45b0-adde-66cea013f814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924a03ef-25f7-4027-b369-6bd522afa694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1ee3c1-f024-422f-939f-177a446f3f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567b1a17-0ced-4cbf-88a6-728690082da7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4de41fd-7898-4b10-a011-2342e34f6cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8528137f-3b2e-4107-8dbf-6199f8ba3b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b0b8f6-a347-4bbc-897b-79e9026a020d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab8a4fe-c265-4c37-9997-80de10969ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eb3706-332d-4e9c-86cf-3b2a8747fbdb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627e2a8e-1e9c-4552-aec3-a976bafa42e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d225ef-d4e4-45df-8fee-ec72eb99b9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff15527-d199-45df-ba35-24483e0de34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff4ae16-1dfa-4214-9456-8828f40c9a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e382e8c-54e0-4cb8-a932-bb4d8c282c46",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46e9337-4a00-489e-8648-3d7997c32db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54a3355-a046-435a-8bf8-2093eb1fae7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c56ba73-36a1-4d44-aa78-1f7dd081d901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e9d516-7a6c-41fa-903e-3e38a5c15961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c4f504-9cdc-464c-b36a-c9a2c8c157f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a98591-3dc4-460a-aa7c-fb45fcefbf14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74e2519-f54e-4e76-a751-0a693b2a0436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37acf824-288a-47a3-a64c-8b627d1abecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69aebe35-77af-4f04-a319-652f5d1efb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f34b31-aa21-41dd-9e08-cc447f79d01d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1bab9b-ec68-4ae0-82af-6be201ffc3f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc573382-5939-444d-afed-bffb413f68b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68a3d81-434e-4828-9f47-57dd96bb5452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c2a1c9-9381-4ef1-beed-9042fdd1c27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4421c447-0f9b-49de-b64b-2569ff0f89bc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e79f11-93d5-4b06-9371-a4fb77326ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "669a8b08-988f-49c3-88d0-b0fd8e5ac1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17e66d0-b87a-4db2-8b40-53dd986d370d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8171cd-71f7-45a9-9bbc-d74e29aa0659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f12707d-2eaf-4fe7-9ee1-2929de52f8f4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c85e3d-c265-4957-a750-c62305b14f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fde9690-426d-42a5-8c64-efdf6fb123d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbde60be-854d-48dc-af1b-81ce238b8f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08acc5ab-c2f7-495c-bc35-2dd620110d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ec379a-ad0e-453a-adf1-ce3c9118c982",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398e53db-cf83-442b-adaf-3d67df2a74af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9960207a-e23e-45dc-9812-d9bb12ff5598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafb6d8d-92d9-4e73-9feb-86ad3558ff97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbaa224-25fa-47f4-a6c9-de2f6c377523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811f8cb4-bf59-459c-a46f-eb83b089a16c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8282f14-37a5-44bf-bc6c-e65190a3955b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c09b57-ea07-452f-afd4-d7fa6e8d9ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd18de4-451a-4b5b-a427-7919b9eefd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a89b44f-2021-4c5d-bd26-d98114c6a1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c90402-1dd0-4601-832a-f275703acdd7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948c3174-c2a1-4902-abee-94046f09af72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e52fea-795b-448b-89a8-1d93cf783783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0613eaff-739e-4be2-a7fa-85ea93c6e8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912b569f-4541-4a9f-80f8-103b8e751d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1113b0-0421-4f00-87a1-ec1f49160b50",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed59a6-dd3d-4b78-8bf8-8851b3208eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aceeea0-25ae-4052-b771-e481bb62caad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c338fb-5503-41cf-b2e5-145e275af5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8895aa5-060e-4690-a803-1dba37a94458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb58c2c5-f68b-4016-807b-d618ea21d1fa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b33f26-8f2b-4073-ba9d-ac4e18bbd4ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062fda60-ea8e-4ecf-900e-a4b008bc8538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb71b35-5755-4bc2-abcb-85847ec2f909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db83453-9afb-422a-80d4-0ebadb7a581a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecfc730-752d-4f29-aeab-7cac80585cd0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83faea5-09ca-479b-957a-3915f5fb36af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93156e1-214d-4924-9d4f-8361e1ae5d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfc510d-a0af-4100-bbb5-e766cea94d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec8fcef-fe67-4f13-bada-b62ae2ac451f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e47b4a-e635-4145-bbdb-2c8dee1eb4c8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcaac4e-70e2-42b9-9359-e792452ce8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334f65a2-ac77-493b-a4e4-fce49016097d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea69245-5977-486c-a0aa-4335d94b5f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd84a5f-c3ae-4a88-ad3c-d22c625d8d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d245f7-ec89-412c-b1ed-5c0a3b4ef778",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745c6daa-51c0-45b7-a9e3-c2c5ae5e3859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca8952c-a5ce-4271-b4a9-e6542b727478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3573ae54-ff9e-4546-945c-7a685910c51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6becb3-0fa0-4b87-859f-e7d01720bd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d59c27-9f13-4d65-9b78-206120e15ede",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ede3dc6-48c5-452d-a882-945d145505fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f806d2e-1cb4-4cef-9eff-25aa0ae1b9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c77c64-46b9-42ca-a055-f155bc587a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fda447-41b9-47bf-8ba4-fce2abcf6288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540184af-4dc0-453d-8474-2af1da7ba3e6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231c25a8-fed2-4b9b-bb91-45e48c6ebb4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2ad0a6-512e-4816-bf6b-8b927ae033c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7ec339-0941-458d-856b-40d412ff7465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea96507-4c9a-4fd2-8079-a169282d4009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afff2f69-f753-4ed4-adc0-652ccbb26098",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb13d56-0554-404d-865b-4eb10e53f707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34033d63-3f34-424e-882a-b506bdeadebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f811f1-dd25-408c-95c4-caf3384caf62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf619d4-2fbf-4339-b9a3-6ab3d58e20fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0cb738-63df-43e3-af98-398c1e79250c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbc9cf6-5bd3-4110-a871-90f01cf322cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e942e3b-c066-4561-8b1e-eb27674e949b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ccbd29-47e4-41ec-95d9-60aec6f71e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31a555f-e52d-4722-b5b6-41b078e1bbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd50400-8275-4fd0-ac0d-570c0ac28aac",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af837453-da4b-4398-84c5-91e6691d8da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e8b2c4-27f9-4b5f-99a6-ce5e30e69bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde7c615-5034-420d-9805-a56b292778fa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7d5b6e-0d6a-457a-aa99-934404d4f2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675feea8-d887-44aa-92d7-67b397069c76",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f0c4a5-4d1c-4451-b32f-0156f7fc3285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd8008b-20d5-49bd-82d1-b6c0cb5fdc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175c201b-a446-409a-8efd-d2edccac35d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c65194-1228-4adb-adec-a303846d1fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c444023-ee75-46d1-a1f5-aec906f56f53",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7ed89e-0ca6-4339-80b6-fadedf29e70b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4062c060-2817-43f5-8849-4f7eb0d20f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e25077-f3dc-4247-acb6-96f53ea872e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01adee39-198c-43e7-a963-12e53f359890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566aceeb-3035-4be0-8a0c-1b4fdb90d312",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf07bff0-24ce-4c1b-88eb-0e03fbefc4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564d2e6c-92c4-47a1-b99e-4dc880c131e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a33001-6619-474b-a7e2-c1f2832bb5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1605dd4-ad45-4f65-9743-e1edcd83dc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b610a0-cd48-4d50-8314-4509981ee88a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae3d122-0aa3-4986-b8c2-eacd99c509e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9262b256-9bf5-4817-abd8-398a6ac3ec12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b102bed1-21ab-4f59-8a80-c7892b956f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0daa1a-778f-46a7-9c1b-aa5936fdcea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04d4834-2706-4cf4-86ca-859cd21b587d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7effc987-0b36-462c-b135-9b8eaa0981ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb62328f-6b21-4cfd-8b88-4ba1af16b25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a72738-e25d-4e03-b671-b2a1f33399cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83ab652-4900-40de-894c-0d3e9f45a510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b024bf8-db23-495f-b5dc-f177598877fe",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401c334f-3bcc-4fde-b562-24d70d9291a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337a21a7-20e4-4b26-9781-fb31653dd898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9ba15a-5e76-4f1f-b67f-537865684b01",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f33c47-6cce-4a8a-aa46-9c9a3acec841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2556c81a-aa79-405a-a214-55e24dcfdc53",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27946cd6-bb5d-471f-a34b-10669c2f7610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a3cf58-48cc-4a0b-a210-8ac48fbf81b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5045aa8-dddc-4d03-bcd8-7e15cc753ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469cc28e-4f07-4abe-94f4-50727135cad9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d7e78b6-a36c-440c-9dd6-556432909bd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5edd0224-c533-4a94-8fa9-6b5e9569714b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eb822ee-f766-42b5-bebd-2d65d86e7c55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e146fdef-00f2-452a-b734-407e706d81fc"
                    }
                  }
                ]
              },
              {
                "id": "519ab5bd-7738-4c1d-9cae-2097c7da9e12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d0c714a-b98b-4e7c-8146-7ac9fe63d687",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595a4cef-3b3a-40e4-9251-aa744a2bcbc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a329af48-5125-4d8f-b4f0-f042c1dd537b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f917720-faec-4885-ad52-0867fd8a9d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54cee7c5-b506-4f74-b31a-8befeb8e9426"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c7f1f8f-1d88-4340-ab31-29ebb2eda017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b64d00-5c0e-410c-87e5-c612e1d0ac12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "583aa1ea-321f-4d48-b22d-510bdcca56a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3e948a5-d667-450a-a050-9f3d41aadbc4"
                    }
                  }
                ]
              },
              {
                "id": "73e70853-fd9e-4a7c-8b96-3b30933f70a5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a85cf26f-a010-42ef-a0a8-2a23386e931a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154f02ae-f6c8-4ebd-9d19-a04287cf7129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f7a49800-fdb0-453a-8d3f-58598af2126d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21baff39-eebe-41c7-9de2-c4629dffb596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8832a0-494f-4f64-9673-41d1286500b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66b1a422-6c86-458e-abab-a14d21ec6f51",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b1d2e38-de4e-4381-be48-d300e50a168f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fab335f6-0029-47df-b74f-09f14af91d5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "59c4a5a9-4e34-47f6-82e5-9586bcb4785f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4503b02-49c5-47e6-a05c-7bd27ce3be06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "094fd60c-a387-4b38-ba39-bb8b16117ee4"
                    }
                  }
                ]
              },
              {
                "id": "ab0fb9f0-3f73-4e5c-8b0c-b2387c6b153a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e91e967e-5391-4352-b6e2-ab21036f0beb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a913eaf0-3baf-46f7-9041-aeed6e666d77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71cf410d-55a1-4c01-ae7b-12a9ef2d2146",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a101e45a-073d-4a54-8fea-0d803c8d9b2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "883d1f99-8ea7-4fb9-b6f4-a0ed21a1e467",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "da77b8e2-63ce-49f7-97cf-e7224eb18901"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dabc4fe-77c3-4ed6-b743-ad3d3deb74c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "978b17d1-a6b6-498f-a5d8-6dc9443e4eb9"
            }
          }
        ]
      },
      {
        "id": "28160176-f160-40e3-a6df-585a68bfc86a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "184d4efb-691f-4203-a6d4-72d3327bcc3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d21bc13-7931-464f-b0b8-2e38b756efb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da3ca1d1-b60f-4940-9ba6-3ab1c3040d66",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f21512f-9c4b-46e8-a10a-4cd0da88e098",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d14ac4d1-3291-4166-b129-a986738c4d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31418208-c690-4363-8de9-9a1b460a712e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbaacf03-67e0-4d3d-8273-17f99cd18220"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "202f1a83-c0be-4ee9-87b2-8b6af8c7c7ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e69320f-7fd8-4916-adf9-7fdd80b5532e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b8420c9-1961-4f31-a65e-98b25bb3758c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c791703-e946-4481-aad7-d78445803fef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a16035f-2462-4611-a149-5627f110efd8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8d9c108a-d4eb-4239-bb5c-0b9c268ded9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b88b031-a009-481f-9873-fb7f284e1b6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81d48f31-cf12-48c2-80a7-85df5c903074"
            }
          }
        ]
      },
      {
        "id": "17b25e97-52c7-4c29-8554-b5296356d176",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "46ce41e7-ac05-46ca-b209-58e0d38b75e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d7c3ff7-69cd-494c-b40a-5adde01dc671",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6abf4212-6e4e-462d-bb75-71cf00d345e4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c96e787-0529-4859-9b22-9e86b73a6af9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeb9b87e-1df0-436f-ba41-853de513546e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab11e40-37c6-494b-bd9a-bb2368ce2182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d302d5fc-d22e-4f7e-975c-34d3a48dd695"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e17cbe2-2b3e-45c0-87c4-3febc1a36a21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efe2d4dc-4d65-4e78-b2eb-3ed244fab216"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9be60d86-9612-4240-a3fa-811338f36944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12e1bafe-abe6-413d-bdda-8503f4644aa0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc6906ec-79c7-449f-a84b-45d56fc7f508",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c0698689-09fd-4574-805a-82ed54b0084e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3c5179f-39c7-475c-aa83-030e20980dc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f195d80-48c6-4c2b-9c91-dec2a76ed9e1"
            }
          }
        ]
      },
      {
        "id": "d1821858-0ac7-432b-8acf-0456ac601a03",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b81eb90f-e52d-4f08-b6fc-a5bedcf26e5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "259d4e19-3141-49c8-8a32-812622d06f3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "faf6f6f2-0d7b-4390-b0cc-46563a924275",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c91cc1-b0d3-414e-bdfd-c77f51af5169",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8bdce52-2c0a-4939-8719-ab36ed21f5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf94c67-69c0-4839-ad44-64a671385f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f008354-800f-4c2b-bc50-ef7908f81cde"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a157aba-dcfa-47af-ae5d-12aff52cf649",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3412dc5-11c7-405e-8cac-98744fdae20d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44bc8bd7-f654-440c-91b7-a21ce5c2885a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9c21bc5-25b5-4935-bf98-730b5301f180"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc714e38-ffd0-42ca-b104-16e1c0f04cd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8e4820e2-61f3-47fd-b3a2-d36164569069"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7679d23c-a2a2-4fa4-a460-42cb70aba12c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "088fa2b5-b84e-4df5-bce8-496785c23ce8"
            }
          }
        ]
      },
      {
        "id": "145803f8-e898-4c3a-a992-013e91dfca9f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92042830-fe51-4806-87d1-241255fbf318",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcd2d897-7172-4a64-a940-c601f82631b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0c9b75d5-e808-4a37-ad8d-1ad494a2825c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa5186c6-96cb-4cbe-8cfa-ef96d24056d7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5491687-8b45-4c03-8436-a104beb7f678",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.23859649122806,
      "responseMin": 6,
      "responseMax": 269,
      "responseSd": 25.457620472766614,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707698085529,
      "completed": 1707698102718
    },
    "executions": [
      {
        "id": "9ea52460-1c52-4267-af7a-f7a79cae31c6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bf498c44-73a0-4157-b56c-72d99021e716",
          "httpRequestId": "a15522a9-30d2-49d9-a926-a2da9de77a41"
        },
        "item": {
          "id": "9ea52460-1c52-4267-af7a-f7a79cae31c6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0940d60d-eaca-46a2-a7c2-54cf501cbebe",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "baa2b153-da5d-4023-b4c2-8048c4402e20",
        "cursor": {
          "ref": "3139ddca-81b2-43ba-93cc-d00d6a7a8092",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9afaedb1-25cb-42c5-be23-4bf47f38df2f"
        },
        "item": {
          "id": "baa2b153-da5d-4023-b4c2-8048c4402e20",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d907cc91-943e-415d-bd48-9f5a4c01f998",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8d13ccde-80be-452b-9379-ed28795c79e4",
        "cursor": {
          "ref": "01c534c3-29d2-4b34-ac20-7c79ca05b650",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7fb57a97-8fb8-4b6c-b4ce-416f1695aa2f"
        },
        "item": {
          "id": "8d13ccde-80be-452b-9379-ed28795c79e4",
          "name": "did_json"
        },
        "response": {
          "id": "2bf27b25-1281-401b-8b33-f721d9dbcf87",
          "status": "OK",
          "code": 200,
          "responseTime": 233,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a05b77-5187-4b7c-98c6-acb67c580d5c",
        "cursor": {
          "ref": "3df91d5c-4cee-4067-b09b-c2beabe596af",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f555a236-bfda-435e-be0d-f6dfeb88cca7"
        },
        "item": {
          "id": "35a05b77-5187-4b7c-98c6-acb67c580d5c",
          "name": "did:invalid"
        },
        "response": {
          "id": "dc14a41e-cd98-4e8d-938c-02153569782b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a05b77-5187-4b7c-98c6-acb67c580d5c",
        "cursor": {
          "ref": "3df91d5c-4cee-4067-b09b-c2beabe596af",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f555a236-bfda-435e-be0d-f6dfeb88cca7"
        },
        "item": {
          "id": "35a05b77-5187-4b7c-98c6-acb67c580d5c",
          "name": "did:invalid"
        },
        "response": {
          "id": "dc14a41e-cd98-4e8d-938c-02153569782b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1acb5b-71b8-4731-ac74-b01027e451a2",
        "cursor": {
          "ref": "e760f73a-8995-4c22-9035-38ab6eaf4a52",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "290b4069-a359-418c-b141-2ad994c3e805"
        },
        "item": {
          "id": "df1acb5b-71b8-4731-ac74-b01027e451a2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe186142-aba7-43e4-a805-b0dce1631207",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cedf4b-826f-4fa7-99b8-1f7c8192375f",
        "cursor": {
          "ref": "d1764cc2-6854-4358-8d3a-ff069e2a3e63",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "db59abf1-e2c2-45e9-9188-accca3e4162d"
        },
        "item": {
          "id": "a5cedf4b-826f-4fa7-99b8-1f7c8192375f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e02159d0-bc0b-4651-afe6-2fffd0b022e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a959fea2-bc9c-495c-8f26-f33d28ff5c8f",
        "cursor": {
          "ref": "6edb67bd-0c9b-4486-8491-36c3f7511b8e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e14bbd1d-b4eb-4eb8-80cb-7c0e0f5cdafc"
        },
        "item": {
          "id": "a959fea2-bc9c-495c-8f26-f33d28ff5c8f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "67ad6254-37c6-4d80-a22d-7f061b55e1bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7796401-c76d-4c2f-9f0f-71b4d0fb409b",
        "cursor": {
          "ref": "373747c2-472a-4dfb-9e13-1301d995c33c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7a561f0f-db6d-465b-990a-50a443224598"
        },
        "item": {
          "id": "c7796401-c76d-4c2f-9f0f-71b4d0fb409b",
          "name": "identifiers"
        },
        "response": {
          "id": "82204ce0-8189-463c-a673-001e89ace84a",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d260de0c-015d-46cb-9e80-d4674b93545f",
        "cursor": {
          "ref": "4889655c-b5d9-4d80-a8aa-f084d7a34060",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3509d760-cfb0-4df9-be1b-993a61187bba"
        },
        "item": {
          "id": "d260de0c-015d-46cb-9e80-d4674b93545f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3e2ab264-327a-4bb9-809e-2eb115829307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebe0908-3569-42e1-8847-7b70eab56f45",
        "cursor": {
          "ref": "41198d72-646c-41bb-ad0e-515e83d8d949",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ab6b7afc-09bd-443f-be98-0eb48dba0656"
        },
        "item": {
          "id": "0ebe0908-3569-42e1-8847-7b70eab56f45",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b309ad54-bce2-4ad0-aa0c-39e5278e6878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aac55e-66db-4f0f-8841-4567895563be",
        "cursor": {
          "ref": "932b186b-b1b9-4432-b5ad-e916ec5b8dfb",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b85247b1-8b43-471f-b44a-db7745bf6cfc"
        },
        "item": {
          "id": "f0aac55e-66db-4f0f-8841-4567895563be",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0611d091-3885-467a-8385-4f23956a35ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4485950-0622-4071-8d36-d446da53b714",
        "cursor": {
          "ref": "41d5c5f6-2fa8-422b-b594-b50fd1f31d5a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d8497072-8325-4220-83ef-4ce496acc157"
        },
        "item": {
          "id": "f4485950-0622-4071-8d36-d446da53b714",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1e63a54c-6b09-420a-89ed-94dc08895afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71fc09b-3c4c-4645-b3b7-830517e32797",
        "cursor": {
          "ref": "4ed49416-e9d8-4dff-828c-9b3c847fa08a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "010b81d4-605c-49bf-b4e0-e8931eef7c71"
        },
        "item": {
          "id": "a71fc09b-3c4c-4645-b3b7-830517e32797",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "26cf3069-15ac-45ed-8d97-b4e56dc38d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1abbdf6-c7b1-4f63-9253-3ad845461724",
        "cursor": {
          "ref": "79a82b9a-85b8-4e46-a164-c24f9f628cae",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b612b0e7-fdfc-499c-8aa4-9124890e052b"
        },
        "item": {
          "id": "d1abbdf6-c7b1-4f63-9253-3ad845461724",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d9d1dbcb-50d6-47e1-ac13-9ea9389ee8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1739f8fc-6d23-44cf-a7f3-1e73594cccff",
        "cursor": {
          "ref": "817310d1-dc0e-4d06-9ccc-0ba1b22b6996",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c411f37b-cc27-47db-893e-0637e1bcd03f"
        },
        "item": {
          "id": "1739f8fc-6d23-44cf-a7f3-1e73594cccff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "049fcc7f-d02c-4ec2-b251-baf1cca68e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42ba337-801a-49cf-b264-3eaf6999ad87",
        "cursor": {
          "ref": "cddfb602-59d0-4331-a448-a5e91b6b7860",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "979218a6-0bec-474c-91da-8433c5a296d1"
        },
        "item": {
          "id": "f42ba337-801a-49cf-b264-3eaf6999ad87",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f2161a93-7cea-4b11-b7aa-8cc08aa1e8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2246cae-46a0-481e-9b29-af330bd63ed9",
        "cursor": {
          "ref": "0f8cbab7-0e21-4549-8aea-aac069591c10",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5fb84f5d-e5b6-4d0a-bd2f-a1fc147ec04b"
        },
        "item": {
          "id": "b2246cae-46a0-481e-9b29-af330bd63ed9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bb1b3c52-3b40-4c08-9492-e47a51b20c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd47861-5354-41fe-b2c0-e9d5d9959342",
        "cursor": {
          "ref": "d5853d8f-a337-476c-a8ce-67067da1e296",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d3740dab-8f3a-4d92-84cc-d81f70f083a5"
        },
        "item": {
          "id": "8bd47861-5354-41fe-b2c0-e9d5d9959342",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bdd17d76-8507-4ee9-9c6b-43b9f0646411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57384215-d177-4419-b0f4-09460676ff78",
        "cursor": {
          "ref": "4dcfca68-8edf-4fe8-820f-b6cfc396782d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ef3feb35-35e5-4541-9c8d-c7965d5b17f4"
        },
        "item": {
          "id": "57384215-d177-4419-b0f4-09460676ff78",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d3b70a44-227a-46ad-9279-25cb4fcb40c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a608aa-c750-46a4-8d18-e528fc913f0f",
        "cursor": {
          "ref": "d37c4d39-b83c-4dde-9052-55a4e8e60546",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f8e9b5e6-c212-4402-93b9-ed0689e177f5"
        },
        "item": {
          "id": "33a608aa-c750-46a4-8d18-e528fc913f0f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f1881ddd-3651-4cc8-8577-173875f324dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753d3622-ab25-4057-8ae0-d8ac4258ba8c",
        "cursor": {
          "ref": "28d3e145-9659-46ea-846d-bc9c6553f0f9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "861621ef-77e4-4e12-b4eb-eef891ddb621"
        },
        "item": {
          "id": "753d3622-ab25-4057-8ae0-d8ac4258ba8c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dadc40ea-ae2c-4806-b2ff-824e21e66011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cdb0a9-924f-4801-b31e-134e727a460a",
        "cursor": {
          "ref": "18d4d380-d30e-45c1-a389-993b1f869bc6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3cab32d4-12ba-4cce-864e-c04191dacafd"
        },
        "item": {
          "id": "84cdb0a9-924f-4801-b31e-134e727a460a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b559ee82-f763-4cf9-b6d6-38fded5c4dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbb4263-bf86-4b1d-abb4-24736aca6aa3",
        "cursor": {
          "ref": "f8bd8746-18c8-419b-a3b4-ca1d32aba09e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dddc7473-ac9a-4ba1-9605-8a1383ebb69a"
        },
        "item": {
          "id": "1cbb4263-bf86-4b1d-abb4-24736aca6aa3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0222f8bc-636c-47bb-aa8b-48313c04cac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30d3a5e-d906-4347-9695-ee7fde5f1409",
        "cursor": {
          "ref": "d9994def-87aa-468c-904b-00d6816954d3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "670d5038-e71c-454b-8204-44347ddfc219"
        },
        "item": {
          "id": "d30d3a5e-d906-4347-9695-ee7fde5f1409",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "03989add-290c-4400-9dd1-da6d565232e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ed1dc4-2e6e-4633-8847-ddf0750f8753",
        "cursor": {
          "ref": "d375a8c2-64d4-4e83-8a6d-bdb906128eb6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad43321f-0969-4605-8623-b702895d867d"
        },
        "item": {
          "id": "11ed1dc4-2e6e-4633-8847-ddf0750f8753",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "be55163b-cef2-4acc-bc00-b162f70af6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fc761f-731b-4043-a8dd-8ec73aea1cd8",
        "cursor": {
          "ref": "b561a771-569c-4574-bc97-a947aef27631",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0b3dafb4-a996-4c16-84ca-98812a66e3ab"
        },
        "item": {
          "id": "01fc761f-731b-4043-a8dd-8ec73aea1cd8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "30122ecb-b568-4c32-864f-012813246ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c01735-29e3-4565-b947-c3085212088a",
        "cursor": {
          "ref": "26a5fa89-ac42-4047-bb94-dc3380b5d8da",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7c9a334a-0605-45b3-bbba-fa4d03a6ccc4"
        },
        "item": {
          "id": "a9c01735-29e3-4565-b947-c3085212088a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d574efd2-4680-4152-a6fb-cf2a33d86408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e7bb97-d36f-4f4d-b745-b53ebff5c61b",
        "cursor": {
          "ref": "4858a846-85f1-4203-9f47-433281ea6e91",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fcd9c075-c242-43a6-bca0-391994b5cf65"
        },
        "item": {
          "id": "c6e7bb97-d36f-4f4d-b745-b53ebff5c61b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b1087beb-ba3e-4d1d-a576-7376a5f9707f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55dfa7d-9e0e-4c70-929c-36724df8667a",
        "cursor": {
          "ref": "026b0ef3-5298-41a7-8062-482193e89ca7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "16e875fc-b103-45c4-a964-fdbe687a66b4"
        },
        "item": {
          "id": "a55dfa7d-9e0e-4c70-929c-36724df8667a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "38d87f9b-9973-403e-aa30-faa9389774b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf230627-e3e7-4eb3-a143-eba9ce6205b3",
        "cursor": {
          "ref": "9ba2a2b3-fdea-41ac-872b-cce3afacd4d2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "97a47015-37a8-4468-9a8d-4a2b76d346d8"
        },
        "item": {
          "id": "bf230627-e3e7-4eb3-a143-eba9ce6205b3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e58127c2-744e-4ed7-b48c-2be67db64b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e6688a-b49a-4ee5-9ddc-af69fb2fd70e",
        "cursor": {
          "ref": "f891963e-fa29-4bcd-8c6c-028caec25782",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "25b2580f-8880-4f6a-80a2-ea48018bac6a"
        },
        "item": {
          "id": "f6e6688a-b49a-4ee5-9ddc-af69fb2fd70e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d11e8196-0016-4d15-9686-cb04d7855e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136a60e8-5844-4bb2-9a70-6d339ff891c1",
        "cursor": {
          "ref": "4cb408df-650c-4a16-bb68-b582a6b7674b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a17b2db4-b45c-4331-9647-bc20d3700d20"
        },
        "item": {
          "id": "136a60e8-5844-4bb2-9a70-6d339ff891c1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7a6b2f94-7b71-4781-9a24-05b42ec8708a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d16ca3-0c90-4f86-b02b-1b2c9413b9c3",
        "cursor": {
          "ref": "7219a364-3758-4122-8321-222a6e966aca",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "43a80325-5a10-4332-97bb-614211a3c782"
        },
        "item": {
          "id": "e6d16ca3-0c90-4f86-b02b-1b2c9413b9c3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f73ff3ef-8990-4214-9bee-556e11d1dbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5606b7bb-907d-4668-9a33-37bd66079824",
        "cursor": {
          "ref": "4ac106a0-7494-4fb2-90d7-5a853f0a1098",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ee0b7932-4359-42d1-80ac-acaf29af26ba"
        },
        "item": {
          "id": "5606b7bb-907d-4668-9a33-37bd66079824",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c01fca39-4db2-40b2-bfbc-00174d7892af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f532f36-83cb-41bd-b377-d62475c080c1",
        "cursor": {
          "ref": "812c3ab2-23b5-4714-b799-61c6c52e071b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "85fc4aa9-5bc8-4ec7-9f43-5b7c4abb9769"
        },
        "item": {
          "id": "6f532f36-83cb-41bd-b377-d62475c080c1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4e6b67b1-ac13-45e4-a6a1-afb5ba9e7d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c3cb4e-4959-44d2-b6c6-9dfcb6627723",
        "cursor": {
          "ref": "20858af3-246e-4cc7-b9ad-123457a20072",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06281cca-c294-4b44-83f1-01f4758fdcd2"
        },
        "item": {
          "id": "82c3cb4e-4959-44d2-b6c6-9dfcb6627723",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7abaf7f6-58aa-47d9-a161-8422b2cb23a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344218d6-f968-489e-9ceb-4bc61fd6b0c2",
        "cursor": {
          "ref": "acf192f6-f671-4cd6-92eb-c2b4ff4f61b7",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e25e8a85-4067-4110-9009-2b4845415d47"
        },
        "item": {
          "id": "344218d6-f968-489e-9ceb-4bc61fd6b0c2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ecd220d1-4a5a-4477-8a74-c8792be146c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b8a6e-f4b8-4e88-b92f-e7f9355b55c9",
        "cursor": {
          "ref": "254c9749-db80-4710-a4b6-b188ddcf3286",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "67bb3749-6ba6-4b9f-8e57-56e84586b8c8"
        },
        "item": {
          "id": "794b8a6e-f4b8-4e88-b92f-e7f9355b55c9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bd026aef-88a0-4559-9f83-8a2ce4143fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a22d9db-75f3-475e-9010-d07807e0da65",
        "cursor": {
          "ref": "43f1ea08-0174-483c-8516-4c6b4883b5b1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f94d3853-fafc-4912-ad7d-3ed418299a96"
        },
        "item": {
          "id": "9a22d9db-75f3-475e-9010-d07807e0da65",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1c00f07d-6cd8-4c34-a43f-8929abf4e805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5146abb0-a930-4e7d-899c-b30f6ae6c02f",
        "cursor": {
          "ref": "c5ace0f0-20fc-4230-80b2-18d3bee56aa5",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9efe9a73-de09-410a-8407-9aa525e4ab82"
        },
        "item": {
          "id": "5146abb0-a930-4e7d-899c-b30f6ae6c02f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4a32629f-3165-4d99-a0ae-30eef58782fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b11e6b-a224-40cc-ad48-05ba146a107e",
        "cursor": {
          "ref": "0b3b8d63-79ad-42fe-8e6a-c31b1de83a50",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "050ea655-8a31-4a46-ad01-51809751a59e"
        },
        "item": {
          "id": "d1b11e6b-a224-40cc-ad48-05ba146a107e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "969692d8-6a6a-4840-9582-496e83fa6379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9328640b-8bdc-437b-b2c6-bbb27f4c31d4",
        "cursor": {
          "ref": "577b540b-e518-4c91-add1-812d66b68727",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b2a1c3c4-dc42-4c48-86ab-6000eaf1a2e3"
        },
        "item": {
          "id": "9328640b-8bdc-437b-b2c6-bbb27f4c31d4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "14c374e0-89c5-4137-8a56-1e2188c3f801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1c090a-e3e1-4b23-a7f2-5ce134e0be83",
        "cursor": {
          "ref": "ea78657f-b309-4f2b-9289-09f3e5ef64f1",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2cf49bef-85bb-4847-8006-380fdb7a1ffd"
        },
        "item": {
          "id": "5a1c090a-e3e1-4b23-a7f2-5ce134e0be83",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "981d1c60-8778-4074-8a1e-cd4b5e46886b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c3e266-0906-44a3-9e71-1569c6daaece",
        "cursor": {
          "ref": "c6e0f1b5-3c43-4be8-86cf-738b1f93cd29",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8d97a675-c76d-430c-bd89-c1ea9e1e344a"
        },
        "item": {
          "id": "07c3e266-0906-44a3-9e71-1569c6daaece",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2a4db4b3-1977-475d-8531-9de2c8bdb50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4dca51-1d0c-4e38-a8fc-1a67956f4c4c",
        "cursor": {
          "ref": "36d56dce-81b3-4e5c-9b07-80aee3a4b604",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "265407fd-15db-4532-acda-8fe46435af39"
        },
        "item": {
          "id": "0b4dca51-1d0c-4e38-a8fc-1a67956f4c4c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3823c1af-ff09-4b20-af9e-f8b42a870e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a91bfad-8c34-46ff-bb86-a3bd23894564",
        "cursor": {
          "ref": "f96d4359-5dd2-485a-a9ba-e0006e1efba6",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1e45b1bd-b750-437c-9a6f-a3d01fc9d773"
        },
        "item": {
          "id": "1a91bfad-8c34-46ff-bb86-a3bd23894564",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1da1e2ac-bae9-429c-9206-45092fa0032e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bebd89-47a2-4f6b-872c-aea8cb1af251",
        "cursor": {
          "ref": "7b1cc248-3c99-44dc-801f-1d43e238340e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "57f7653c-f883-4b48-b43f-b8159a87b706"
        },
        "item": {
          "id": "c4bebd89-47a2-4f6b-872c-aea8cb1af251",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d9546c05-d4d3-4d64-9719-eb63b1af4616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea268a7-2376-4f05-a753-c8012d9e77f6",
        "cursor": {
          "ref": "67874363-43f9-4b67-a688-bbd9c1eb306e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fcc43322-a7e2-4e03-ad0b-64572f286a71"
        },
        "item": {
          "id": "5ea268a7-2376-4f05-a753-c8012d9e77f6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6aee6287-5d16-4e8f-950a-50d36740a7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518ddd75-37eb-4556-9e61-6aa01d240a53",
        "cursor": {
          "ref": "9f7da01e-f4f2-4fac-b608-27cc645bf68e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7b1d4328-c09f-4d61-bd0e-ae3d9ac203ec"
        },
        "item": {
          "id": "518ddd75-37eb-4556-9e61-6aa01d240a53",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "77a42db9-1da8-48bc-905d-4274bc661c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be739061-8938-438b-a123-24c5338549be",
        "cursor": {
          "ref": "c1ad68e2-72ac-4c9f-bd6c-a4df030b7358",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9b84544c-cb3a-4c3c-9ce4-0291280dffc2"
        },
        "item": {
          "id": "be739061-8938-438b-a123-24c5338549be",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "62b8f973-98f8-459f-9457-fc388b77515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ddb8d2-22ad-427c-86f6-7e4f42b1d28d",
        "cursor": {
          "ref": "5015c2a2-2397-49fd-bc45-f23757e3c2bd",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b7cf3a29-0fd1-437a-8300-cc122e64d30e"
        },
        "item": {
          "id": "70ddb8d2-22ad-427c-86f6-7e4f42b1d28d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d271ea1c-671b-4684-a94e-80ebb4658d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe8b8b8-ffb4-48ee-945a-bff9fc473c54",
        "cursor": {
          "ref": "d649b891-9c79-4230-beb8-72b1b9cd7ecf",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "338af8e4-539b-44e2-a110-28a9cc52a5df"
        },
        "item": {
          "id": "3fe8b8b8-ffb4-48ee-945a-bff9fc473c54",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f0ab0369-1b2b-43b6-a3ba-a24eb7b50b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612f3386-a98b-4df3-b1e2-bab9c6147e35",
        "cursor": {
          "ref": "836ee8f6-45e7-4140-9400-93aa28afc02c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fd52078f-f039-4f00-bc3a-d62944c0bc11"
        },
        "item": {
          "id": "612f3386-a98b-4df3-b1e2-bab9c6147e35",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "17dbc9b3-5887-4026-abd4-dd2b2b243c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bc35b0-4465-42f8-ac2a-21a9ce3b8790",
        "cursor": {
          "ref": "dd1216db-e323-4de8-b544-ae96d0e57f3d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cc24221e-8506-4453-bab1-50c93f4198b8"
        },
        "item": {
          "id": "26bc35b0-4465-42f8-ac2a-21a9ce3b8790",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a77e0e22-d140-47a8-b689-953a1515d754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdac1b0c-4157-43ae-8f9d-e3e6f7393809",
        "cursor": {
          "ref": "a060683b-7823-4935-9f83-1246181426c7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dd0689f3-fbe2-49b9-9ad0-6bcfb1748cea"
        },
        "item": {
          "id": "fdac1b0c-4157-43ae-8f9d-e3e6f7393809",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "68113f05-1d3a-4cc3-a177-216bd85ad344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c4de3b-13b4-4b3e-b437-1a073e7daef9",
        "cursor": {
          "ref": "79cfe008-b7c2-407f-bc03-81283f5ab758",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "11dd2e80-6049-41e7-ba69-808fbc7a8728"
        },
        "item": {
          "id": "40c4de3b-13b4-4b3e-b437-1a073e7daef9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a34d59f1-8d2f-465b-8e79-a6cb3b16e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90bc6c0-c7ff-4427-8896-c9a1aa18f0a5",
        "cursor": {
          "ref": "ee6f7f1c-8352-4d00-8cd6-756c841a2570",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b26bea97-d07a-4773-9263-8bfc0249d3fe"
        },
        "item": {
          "id": "f90bc6c0-c7ff-4427-8896-c9a1aa18f0a5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9ecb4046-8160-47c6-8cf4-d55926999a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05c38ef-2c6b-4413-9706-a05e2061d7b8",
        "cursor": {
          "ref": "dc0d4676-960e-4034-b3f0-1764339657fc",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "50664080-aef3-4588-8bd9-3df127a9255f"
        },
        "item": {
          "id": "e05c38ef-2c6b-4413-9706-a05e2061d7b8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4d8b0244-5c3e-4f66-b073-ac9c4927f7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26587a7b-eeb6-49a6-8052-32cd3788f207",
        "cursor": {
          "ref": "7360077b-161f-431f-8798-438608a6ba75",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b9bb62d3-e6a0-4fc0-ae0b-fc29f7e08a6a"
        },
        "item": {
          "id": "26587a7b-eeb6-49a6-8052-32cd3788f207",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "26c953f4-a2cd-4429-84af-b6486bb40bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3637f512-2ef5-404a-9b6d-4f58501874e3",
        "cursor": {
          "ref": "9c32eba2-a539-45bc-b79c-2e7f338eed11",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "de91c624-915b-45b5-ade5-ff2b427bd33d"
        },
        "item": {
          "id": "3637f512-2ef5-404a-9b6d-4f58501874e3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8d193795-0145-4905-9e81-b520653a92e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b222593-cacd-4f65-98c7-4dcdfba76850",
        "cursor": {
          "ref": "d2c44eba-1d72-49dd-bc29-ee8f4d532414",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fce0aaad-e898-4339-972d-d5c31c605127"
        },
        "item": {
          "id": "6b222593-cacd-4f65-98c7-4dcdfba76850",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a464fb26-542a-4de6-95fe-e24c671ba7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83f7841-7fcc-41ab-afc4-e1e79ce90987",
        "cursor": {
          "ref": "51ff3b97-2b4d-4b4a-8c28-aeb885fe7e68",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "97b0b88a-8276-4496-931f-6183eb8c0c15"
        },
        "item": {
          "id": "f83f7841-7fcc-41ab-afc4-e1e79ce90987",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fe8a2a54-b0f7-4090-9adb-8f0afea69e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723d85db-db21-4cc7-a8d3-a3ec91d1ee99",
        "cursor": {
          "ref": "e89825fa-749f-4bef-a1de-856e43010dd4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "499e76a2-6f36-4d69-b675-dccede524490"
        },
        "item": {
          "id": "723d85db-db21-4cc7-a8d3-a3ec91d1ee99",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6bab709c-3133-4e0d-bb16-d88a0bbfa042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a390522-74a7-4718-8669-25c0555c70d5",
        "cursor": {
          "ref": "9d1fd182-96a1-41be-8ce8-72080f061b1f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "df35fb0c-f32a-49cd-8ae0-23ee32d045e1"
        },
        "item": {
          "id": "1a390522-74a7-4718-8669-25c0555c70d5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f100b51b-37c3-4a62-af62-c691579f4dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd21ecae-2f43-4019-8c39-94e7f3e9c38c",
        "cursor": {
          "ref": "1c19efc9-dac2-45a2-b8b3-27e6b71ff829",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7e66c071-5764-4335-8905-f8863c2dc61f"
        },
        "item": {
          "id": "dd21ecae-2f43-4019-8c39-94e7f3e9c38c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fef87d9f-1d9a-498a-8918-ddc1a22aba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404ff05d-0a65-4d79-9513-4e2aec5ad8d9",
        "cursor": {
          "ref": "813197f0-4f04-4f14-9235-d16ab9b8e1a7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "37c6f235-4116-492a-9c44-1b81b1ad8637"
        },
        "item": {
          "id": "404ff05d-0a65-4d79-9513-4e2aec5ad8d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "84abeb73-f424-4883-9fe5-dc40683b32a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea1f07b-47da-46ad-b6bc-3429f6b8654f",
        "cursor": {
          "ref": "299bb9cb-c670-47db-b365-0a695f42c077",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2a7992eb-c7d3-4c47-bd01-a1cf1eb964c2"
        },
        "item": {
          "id": "cea1f07b-47da-46ad-b6bc-3429f6b8654f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "95088363-896f-4426-a02c-3cb49b9e8e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812d59a1-e0db-4966-846c-89a0c5d25c87",
        "cursor": {
          "ref": "9c0bdd77-a9dd-4d39-bd99-2912c43ff186",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b3580f8f-5cd1-47e7-b0c3-3e67d7f05dda"
        },
        "item": {
          "id": "812d59a1-e0db-4966-846c-89a0c5d25c87",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2b63c34c-707e-4f3f-8147-ddcc3ee7e99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4f8782-54f2-4047-9b4d-7522bd4415a1",
        "cursor": {
          "ref": "0097aa84-a141-41a6-98e4-18fa9a122cba",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a44f773a-5190-423f-b42c-c68a4b14f3f4"
        },
        "item": {
          "id": "6e4f8782-54f2-4047-9b4d-7522bd4415a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4aecaa92-852c-4614-b881-e82d050305de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7011229f-7589-497f-85d7-198b05511db5",
        "cursor": {
          "ref": "21a608ec-dadf-4b74-8ab6-d7d2ccc715be",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bcbc01b5-e7ba-4d99-a043-47d9e6027178"
        },
        "item": {
          "id": "7011229f-7589-497f-85d7-198b05511db5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1c58758c-1ec2-4731-9f0e-f1253caac656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4ce846-c311-4b13-9cca-d8e99fd697ee",
        "cursor": {
          "ref": "7fec3d61-8b9b-47e9-9303-40de13c3a1f2",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b08fa87f-99ed-45a9-83fe-4cbaef57b310"
        },
        "item": {
          "id": "7a4ce846-c311-4b13-9cca-d8e99fd697ee",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "248b3ec1-d23d-4418-99d5-bd73927a2b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681deaa2-2554-4250-82a2-01213603be21",
        "cursor": {
          "ref": "47d839be-c8f4-470b-9d48-bba59c87e757",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c8fb4fc2-5886-41b6-81d3-86290f654f3f"
        },
        "item": {
          "id": "681deaa2-2554-4250-82a2-01213603be21",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9be4a371-0b21-40a5-9636-440a643a7fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09511eb-9085-4fa8-b3f8-f2b87c3a10f8",
        "cursor": {
          "ref": "a43307a6-08f0-4db1-858f-8ba98c452c8a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "877b0614-b3d1-435e-be5d-c3c3516f85b8"
        },
        "item": {
          "id": "e09511eb-9085-4fa8-b3f8-f2b87c3a10f8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b6104957-c2cf-43be-b47b-47900f20662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f28ab3-faaa-4cdf-8554-3984fa692c77",
        "cursor": {
          "ref": "7bf5de4c-b790-4190-be46-d8bd774d8838",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a32b9d1c-cb34-4efe-893d-d2521f913bf3"
        },
        "item": {
          "id": "d2f28ab3-faaa-4cdf-8554-3984fa692c77",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cd32d3eb-f9b9-4756-be3f-8364c9175bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b85ec4-f7a6-421a-a9dd-04c3a8123ca0",
        "cursor": {
          "ref": "401c37c4-e664-46d3-8745-dada999505a7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f3a109bc-c762-4d14-af43-1416df507b77"
        },
        "item": {
          "id": "d9b85ec4-f7a6-421a-a9dd-04c3a8123ca0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0a2cd9e0-06d2-442e-bf38-61b139dc8bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5b2798-0d39-4a34-8dff-5270458dfeca",
        "cursor": {
          "ref": "4badde6c-9b24-4ea1-b1e7-3ba00e6186a4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e9aecef8-5c7c-4b5b-908c-1dd3f0570e97"
        },
        "item": {
          "id": "7a5b2798-0d39-4a34-8dff-5270458dfeca",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f30a70b3-f2af-400e-8247-425d5842024b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9d9f24-e07c-4a7d-932a-874a0a8effe7",
        "cursor": {
          "ref": "88296390-dcc7-4247-aab0-56f184e38089",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2cc73d26-337c-4ea1-bef1-6230d6353a2b"
        },
        "item": {
          "id": "4e9d9f24-e07c-4a7d-932a-874a0a8effe7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0be2d711-381f-47eb-a472-af4d481fba20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabcf0d4-0981-4233-bc6a-3377ef154655",
        "cursor": {
          "ref": "85512e17-50d1-40fa-8b66-946cfa03b919",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d5c7a34c-757a-4109-bcb8-1eb07851581b"
        },
        "item": {
          "id": "aabcf0d4-0981-4233-bc6a-3377ef154655",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fb622d98-ec49-47f1-afa3-e7e6fd2620a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6481f581-7c34-4d66-aa65-13780d8c4980",
        "cursor": {
          "ref": "c6f44a85-0c68-4631-9b60-8198d5b5ee31",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7a8b43dd-6185-4020-95b7-975c28d22036"
        },
        "item": {
          "id": "6481f581-7c34-4d66-aa65-13780d8c4980",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "57443f4f-2a89-43a9-9372-a8b87d36d46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee73925-1ce0-40a9-82dd-c1bd4519e901",
        "cursor": {
          "ref": "7d36a18a-4406-41ab-b5ce-5142a0173670",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dc27e52c-a7ea-4d6a-8d22-b5983466419a"
        },
        "item": {
          "id": "4ee73925-1ce0-40a9-82dd-c1bd4519e901",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ba400f6a-af0d-4a12-84d2-c36dd69e6661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e71b7a0-41a7-422d-96eb-33cd5c56977d",
        "cursor": {
          "ref": "809a6391-df0f-42f9-95f6-cdbe6582ae10",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "67761e84-876d-4b3c-b168-65d0e87f736a"
        },
        "item": {
          "id": "2e71b7a0-41a7-422d-96eb-33cd5c56977d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3a4cb091-4891-49b3-a1f1-ef34ac720e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c4277a-434d-4f04-913d-8e7ba909fb76",
        "cursor": {
          "ref": "e641cbc7-5310-4a6d-b42d-c2fa5cbd278c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f84bd284-99d5-4718-9ced-629a5b4a28a0"
        },
        "item": {
          "id": "31c4277a-434d-4f04-913d-8e7ba909fb76",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "74b06903-c1de-4465-9c2b-da12e6e25536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0911a61f-2192-4ceb-8b95-577a4ed179d4",
        "cursor": {
          "ref": "b1380967-9531-4a0d-a632-a85369165890",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "54809ddb-9c34-4c03-a07d-63a7d1ec4b77"
        },
        "item": {
          "id": "0911a61f-2192-4ceb-8b95-577a4ed179d4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "130f3d74-f3af-4f29-97ef-f5f226f4b035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995f6b2c-517a-425c-91e0-911f5012e2f1",
        "cursor": {
          "ref": "6ce5e27b-8ba9-43f8-b0ac-b38663c2caa5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5c08d6ba-e7c8-4934-8ced-ff592d47808a"
        },
        "item": {
          "id": "995f6b2c-517a-425c-91e0-911f5012e2f1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4b13aa75-1fc1-4c95-aa23-617f791320ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd342b7-ea59-46f4-bca7-01a40937a328",
        "cursor": {
          "ref": "2f68ea41-0578-4b6d-907f-2d65eac8a528",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5a1261f7-806b-4d6e-b8d1-9795856486fa"
        },
        "item": {
          "id": "cfd342b7-ea59-46f4-bca7-01a40937a328",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2aedc229-129f-49e1-9ba6-b76bfa21cbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af35cc7-473c-4c0e-938c-0a474080e430",
        "cursor": {
          "ref": "6e8405c5-a6e9-4063-a661-c2417c8b55a9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "04b08ba5-f886-4f43-b9b8-5e45d12d5285"
        },
        "item": {
          "id": "5af35cc7-473c-4c0e-938c-0a474080e430",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5af8ae38-b789-48d5-9b81-bcf81f8280de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a261be4d-fb7a-413f-864c-d45a0ad89615",
        "cursor": {
          "ref": "dc00a3cc-9145-4ed7-ae48-1eed0ab94953",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4399704d-24f0-4597-9f95-084be3cf99a2"
        },
        "item": {
          "id": "a261be4d-fb7a-413f-864c-d45a0ad89615",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "57efd2d6-823a-426b-b26b-c4be93ef07c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3095bacd-9a53-4b4c-bf86-58fcefba34ff",
        "cursor": {
          "ref": "9d8d8a75-f126-4dad-a337-1f665b90ba91",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dedf74a6-08ac-4d4f-9e72-7a41125b58fd"
        },
        "item": {
          "id": "3095bacd-9a53-4b4c-bf86-58fcefba34ff",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "00cd5076-6830-4311-a996-1a2937227bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6847b1e9-b777-4598-81de-e43524b80c4c",
        "cursor": {
          "ref": "549ad28e-880a-4db9-bdf7-4d728fc613c1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8eef591f-f941-443f-b985-cedb8696c483"
        },
        "item": {
          "id": "6847b1e9-b777-4598-81de-e43524b80c4c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8172acdf-1d1c-47e5-8a82-0b6f8db3b189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dba2d5c-e8b7-4fb5-9973-d216686edd4b",
        "cursor": {
          "ref": "ca9c66d8-30bc-49e2-bd3f-ad4a8c8e50d0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1e3fd663-db97-45d7-b5c3-59081a10a650"
        },
        "item": {
          "id": "3dba2d5c-e8b7-4fb5-9973-d216686edd4b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "734733e0-fa06-4756-ac92-ad22cb7631fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ed2942-ee71-4498-be8a-825e0c83c860",
        "cursor": {
          "ref": "5cc498ee-8f03-4ba0-9808-40373019c178",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "677cfff4-79ce-420c-bb67-14c75ab4dac5"
        },
        "item": {
          "id": "b2ed2942-ee71-4498-be8a-825e0c83c860",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fb40587d-7d84-4d27-9abe-34b27365a4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce47176-4b0f-48a9-aa2d-97915401b47f",
        "cursor": {
          "ref": "848cfa9b-461d-4988-8bcb-ae2de845ede6",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1ab07d5a-673b-4c2b-8007-2d763604638b"
        },
        "item": {
          "id": "3ce47176-4b0f-48a9-aa2d-97915401b47f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8aacb89e-f5ca-4f4d-9e75-e5409c197ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eab411-e170-4a4f-84f1-014d47c9f196",
        "cursor": {
          "ref": "05cd3727-8da3-46ec-ae67-7a9f7e37da3a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "71656a85-17b5-4759-bbca-7706d2475200"
        },
        "item": {
          "id": "72eab411-e170-4a4f-84f1-014d47c9f196",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "916587ee-905a-473b-b840-eb06f7e9a231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc43975a-fb63-47c7-9445-21f9fa7bcfdf",
        "cursor": {
          "ref": "e34116f9-c795-4793-afa8-a05cf8015c03",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b691f40f-6b07-4174-bff0-884beeb5cb44"
        },
        "item": {
          "id": "fc43975a-fb63-47c7-9445-21f9fa7bcfdf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6706130f-7db3-479f-8b3c-3914efd60791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f2319c-93fb-4bbb-9eaf-ba4c67b80207",
        "cursor": {
          "ref": "5080f4f7-91e8-4a57-8018-0eee735ae64e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f8fc7825-3e31-4d83-939a-8368f53cc2b0"
        },
        "item": {
          "id": "a5f2319c-93fb-4bbb-9eaf-ba4c67b80207",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c4ef9607-f006-4a7a-81f1-70cfc5adf416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d66bc4c-34f8-480d-b25a-579661f8139d",
        "cursor": {
          "ref": "342b7be1-4d23-43d3-beac-a0f05a932e5e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "40d1e941-96eb-4545-afa4-1c063e8441a6"
        },
        "item": {
          "id": "9d66bc4c-34f8-480d-b25a-579661f8139d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d71863e0-0871-4a65-980e-f81711b69ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eb2093-c5c9-4951-8374-5d572ac83a84",
        "cursor": {
          "ref": "24ac9d9e-865d-481e-8cf0-08dd700ac92d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "91b1be8c-0731-4c4c-94d7-afcb11e714b5"
        },
        "item": {
          "id": "c3eb2093-c5c9-4951-8374-5d572ac83a84",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "570bcff7-58bd-4651-a185-9a4d8ab1c743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c4db6f-c7f8-412e-b616-8b58b2afb13a",
        "cursor": {
          "ref": "c2541dca-b812-4f1d-8e43-37a7edcb8a76",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "87fe6ac6-56de-4d84-a651-7cc18f653fe4"
        },
        "item": {
          "id": "64c4db6f-c7f8-412e-b616-8b58b2afb13a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2bd6dd28-5e7e-45ed-a9e2-bd641e785e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439d236d-849d-4002-8c71-f5891745a5af",
        "cursor": {
          "ref": "bb98db6d-fc7b-4cf3-9894-9e2c3ce3eebf",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "840342fe-a795-4bb2-9b14-6c669362e072"
        },
        "item": {
          "id": "439d236d-849d-4002-8c71-f5891745a5af",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cecec031-5282-4d76-966c-58368b7a1c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddf1e23-84e5-4ce0-9e60-5d1c4d51cc85",
        "cursor": {
          "ref": "41df8b84-82b4-4ce4-941e-a277a003ef5e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b201aad2-4c80-4f12-bfbe-6aa6534352dc"
        },
        "item": {
          "id": "dddf1e23-84e5-4ce0-9e60-5d1c4d51cc85",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2c38e04a-a801-456e-aae8-a9063755c6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb146a3-03eb-44c6-8826-735600aeb1ca",
        "cursor": {
          "ref": "89070d90-e9a1-4131-ae26-b518116278ff",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "608c5dac-9954-49a1-b505-d5af8fde3bec"
        },
        "item": {
          "id": "bdb146a3-03eb-44c6-8826-735600aeb1ca",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6056e861-89f7-46bc-87d7-7970edd3d960",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f6e14c-e33e-411e-a85e-e2473c1ed81f",
        "cursor": {
          "ref": "e7fd5042-9d59-48a4-92a0-c5f28440e790",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0e3979ed-d099-4dd7-8c5b-34437ffbe2e9"
        },
        "item": {
          "id": "c4f6e14c-e33e-411e-a85e-e2473c1ed81f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "eb152fac-ee86-4e7a-997c-54848dc08ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ac954e9f-afd6-457d-b35e-23e8de853d8a",
        "cursor": {
          "ref": "f8ca3e5e-915e-4e27-b392-3b7f2523ef2e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a676fa18-2cf6-4cee-b000-75746abcaddc"
        },
        "item": {
          "id": "ac954e9f-afd6-457d-b35e-23e8de853d8a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b7120164-3146-4985-af0f-53b2816d58b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "dc2138ac-e0f2-48ba-82d4-ac7458b95b35",
        "cursor": {
          "ref": "72f6b7c3-7bda-48e5-80b8-5524022d816d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "909e966e-7d39-49f8-b855-080419024698"
        },
        "item": {
          "id": "dc2138ac-e0f2-48ba-82d4-ac7458b95b35",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fd6b2eb0-e811-4130-a5c6-01afd34d17bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "12602371-30ce-45aa-97df-ce354a4fb902",
        "cursor": {
          "ref": "dad5eb44-6fa6-466b-8926-5a809fa55957",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "36664670-36d1-4a76-934c-5b58e909c09c"
        },
        "item": {
          "id": "12602371-30ce-45aa-97df-ce354a4fb902",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ea98c838-7c9e-4665-882f-347381c7871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6114dcf1-d69c-4b5c-a252-6d0e2a23c56b",
        "cursor": {
          "ref": "4232688d-196f-4182-ad7c-d794424319d6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c2a58cc3-1c9f-4a47-9984-e170392042bd"
        },
        "item": {
          "id": "6114dcf1-d69c-4b5c-a252-6d0e2a23c56b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "71052a6e-b102-42ec-8fad-162044ee8624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7e83fc76-b30c-4bea-93da-92025b486d61",
        "cursor": {
          "ref": "d9801e6b-5daf-41f1-9eb0-fbd069a9c32b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "979075da-4105-4d81-8daf-221698fb61bb"
        },
        "item": {
          "id": "7e83fc76-b30c-4bea-93da-92025b486d61",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "551391f6-8c85-483a-8636-8d040ba27ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b33a9b9c-94ac-4f5e-8831-1dc1daf555cc",
        "cursor": {
          "ref": "e24f0c5f-2841-4940-91c6-f2822b79cab0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cc6ac3b9-a428-4012-a375-0769562fc8c7"
        },
        "item": {
          "id": "b33a9b9c-94ac-4f5e-8831-1dc1daf555cc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7b1774ce-ce88-4022-9eca-bb53ce245ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "125a174a-f113-45f5-936e-d2bf68893926",
        "cursor": {
          "ref": "3ef70d9e-b747-42e3-af8a-e5224577d2f5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2d4e230e-d233-4cb2-97cf-6c76dceb1bec"
        },
        "item": {
          "id": "125a174a-f113-45f5-936e-d2bf68893926",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e2f64a8b-d133-48a4-a3d3-7a2057faf82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512ad75b-8ac5-4a67-b700-21122b31cac3",
        "cursor": {
          "ref": "dbfba1d6-c609-4199-b863-323cb500bca2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d9a3652d-6dd9-48a5-a804-bcf986f5c96d"
        },
        "item": {
          "id": "512ad75b-8ac5-4a67-b700-21122b31cac3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "55aa1842-85b3-430e-95df-88a783d44f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18df0ea8-9bd5-42e7-926d-2e27d464b1a3",
        "cursor": {
          "ref": "4757ea29-3088-4455-9c99-91e060de17ec",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dab5a3d2-f050-4a64-8e82-ae7f1e45b7a1"
        },
        "item": {
          "id": "18df0ea8-9bd5-42e7-926d-2e27d464b1a3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "06847fda-29df-431f-b1de-667dfcd1e175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39ecbe3-aed0-4b75-95b1-eabe405020dc",
        "cursor": {
          "ref": "b5629352-63ea-4fe5-8050-760204e37d68",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "efe12596-d203-4594-a5c1-f815cc9e8e5a"
        },
        "item": {
          "id": "a39ecbe3-aed0-4b75-95b1-eabe405020dc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c728b250-a965-42a9-ba62-1355df79b17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f0ef9c-c676-4b1f-a344-a93dc122f37f",
        "cursor": {
          "ref": "a3d5dcbc-ddcf-4261-97ae-537ba4253b1b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e580efc6-e643-4120-b7b8-05c2a9555f16"
        },
        "item": {
          "id": "18f0ef9c-c676-4b1f-a344-a93dc122f37f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "65122567-1f6f-4ce1-846a-80fbef02d57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77aa3aa-26e4-4166-92d7-510eaff4b139",
        "cursor": {
          "ref": "03d0ae21-8ff2-4714-9d9b-2cedfb53bf8c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f0e88914-14af-4b76-a872-21f419011a50"
        },
        "item": {
          "id": "d77aa3aa-26e4-4166-92d7-510eaff4b139",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "84c3124e-e597-478f-8659-e4031cbe268d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dd3c48-43d6-4e8b-b5cb-ad5f6961e4ea",
        "cursor": {
          "ref": "57382445-e493-4bc6-a06c-5bbb4a397ca8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa264a9c-c3e3-4389-9164-6831a3e3f557"
        },
        "item": {
          "id": "c0dd3c48-43d6-4e8b-b5cb-ad5f6961e4ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c8ef5b4d-997d-41cb-a018-83222c7ecbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13a299e-0d48-4cf8-a7ce-2217b06dd53f",
        "cursor": {
          "ref": "8d8a3bc9-03ec-445f-bfc8-d5e84c468eb3",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e092e384-95a8-440d-9384-75bf53f1e875"
        },
        "item": {
          "id": "a13a299e-0d48-4cf8-a7ce-2217b06dd53f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "75f9953e-12a0-46cf-94c0-88a24ea18295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5ca015-48a4-4d27-b038-fa046c4fc9a0",
        "cursor": {
          "ref": "256204c0-8289-4040-87a1-de7e3557b33f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7b701fc9-c7b5-4bb6-80b0-099764cef00f"
        },
        "item": {
          "id": "bc5ca015-48a4-4d27-b038-fa046c4fc9a0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "01edce4e-b636-4294-b4c3-22736badc291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d5b945-40a0-47d0-9557-dd4b3cd79c7c",
        "cursor": {
          "ref": "31a32875-1a04-43ef-8f90-015091b0fd91",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7045e497-7c00-4096-8d96-d85c9dd4de8e"
        },
        "item": {
          "id": "07d5b945-40a0-47d0-9557-dd4b3cd79c7c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "df466ebf-e594-4d00-94ed-2866d0d85eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbfddfe-d715-444f-8b07-aacc21161af4",
        "cursor": {
          "ref": "76832240-de16-414a-9be9-d5f5606024fc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a916f83d-dc06-4e68-84d8-d0c1756aef79"
        },
        "item": {
          "id": "dfbfddfe-d715-444f-8b07-aacc21161af4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c7581617-03e5-4ac9-ab50-b8dd3f99431a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d95ed9d-f40a-417f-9545-ee554fd46c61",
        "cursor": {
          "ref": "724be270-8ca2-4ca7-918a-1862c48d8dc2",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "273f7d96-0e96-4230-81f8-3cae3b499015"
        },
        "item": {
          "id": "5d95ed9d-f40a-417f-9545-ee554fd46c61",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "267a74fd-c405-4e3e-8c0b-31c62a0e2e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebb1ee4-a736-4b9e-8672-3757037e08b8",
        "cursor": {
          "ref": "426cc137-e48d-4a46-be2c-c4849825a95f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2e834f7c-e0b9-496b-bf28-16c8cb5f6f63"
        },
        "item": {
          "id": "cebb1ee4-a736-4b9e-8672-3757037e08b8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1a6df900-e991-4608-81d9-ce4cdedef8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e7b538-83e9-44ea-b859-2539dc885fa1",
        "cursor": {
          "ref": "62cfa078-6db6-4cdb-baf2-d93299f6772e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "45944e0c-43ac-4c1e-97f1-a08f5afd2c06"
        },
        "item": {
          "id": "c6e7b538-83e9-44ea-b859-2539dc885fa1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3cc30769-2ecc-4c70-aa01-e5384ba0a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0dc8cc-1fe6-4a8f-a538-a441885796ae",
        "cursor": {
          "ref": "f0304603-eae4-4099-8ce0-300808921e7d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fa19c3ab-dfe8-48fb-bf19-4ce0ad05fd97"
        },
        "item": {
          "id": "0a0dc8cc-1fe6-4a8f-a538-a441885796ae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b3621d87-c936-4117-a295-af66bdcdb544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cf0565-ddf0-4d14-baaf-654923a7d379",
        "cursor": {
          "ref": "7d00de15-af6c-43d4-bb94-df5448e3971e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7e5666b5-cd5a-45d5-8d28-d9c51b150c1a"
        },
        "item": {
          "id": "85cf0565-ddf0-4d14-baaf-654923a7d379",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "640bcb09-3b6e-4ca2-a55b-f01fad7419fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bdd143-1406-4ca7-a744-4db68eff776e",
        "cursor": {
          "ref": "d7dab072-932b-4adb-8333-7bebd0f0ff0f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c7e3d8c1-d72b-476d-a1ef-a33298882f9f"
        },
        "item": {
          "id": "40bdd143-1406-4ca7-a744-4db68eff776e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "58ff3920-1c9f-40f0-bc8c-3e29a2f19f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03f5602-a580-4acf-a201-86bf960e080f",
        "cursor": {
          "ref": "b56e81f4-8b8d-4498-90a9-f337198ad450",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "23864d9c-8cfb-474b-8905-533a5cfc1855"
        },
        "item": {
          "id": "f03f5602-a580-4acf-a201-86bf960e080f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9b60efb6-0081-4101-9463-80f025bae73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff554204-e25f-4fbe-b411-c44f73dba12f",
        "cursor": {
          "ref": "f179b20d-d705-4512-a1ae-6681874e74c6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "15f5c8cc-af19-48d9-b288-399aae899f99"
        },
        "item": {
          "id": "ff554204-e25f-4fbe-b411-c44f73dba12f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8ca9f2ec-9393-49f9-81f8-a546e15f0606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ba9822-7c40-494d-bfd5-167f661c821a",
        "cursor": {
          "ref": "e9a03896-75c2-4533-a13f-0ab4db9ac6dc",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "74d87e76-b9e2-4f91-a662-974e77c1df59"
        },
        "item": {
          "id": "92ba9822-7c40-494d-bfd5-167f661c821a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c5464a8e-8c29-47ba-b0ae-4921b6143650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a9783f-d2ee-414a-8402-24b03239beb7",
        "cursor": {
          "ref": "c0d135d0-5a52-452b-bf76-82fb113e6a74",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ef5d1602-2688-4453-bd00-7b200e9672ce"
        },
        "item": {
          "id": "c8a9783f-d2ee-414a-8402-24b03239beb7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "916ae9e2-cb86-4e3e-a957-e711585e0521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cbfcab-dbc0-4a3b-8fe4-c6312bf5397e",
        "cursor": {
          "ref": "4782ac5f-1613-4602-9f5c-3771149382f4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "638fcec6-280f-4a5c-afcd-994772779394"
        },
        "item": {
          "id": "c8cbfcab-dbc0-4a3b-8fe4-c6312bf5397e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bd106d10-30a5-4464-913a-c80c9bc8b3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61d758e-fa16-4964-ba21-7c562d44db51",
        "cursor": {
          "ref": "b4fe9092-f920-4bb2-99cd-97941511b049",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "200f752e-fe9c-4cca-b77a-1741f083fb34"
        },
        "item": {
          "id": "f61d758e-fa16-4964-ba21-7c562d44db51",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "12b0af2a-0217-49f2-a200-d5507e6b59af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4cf131-f29b-4303-a5fe-d64e944fa1e7",
        "cursor": {
          "ref": "19d57d91-3f70-42f1-bfce-73cd7aa87023",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "21b20334-0f3e-4fd3-b8e2-2014f094e6ad"
        },
        "item": {
          "id": "ef4cf131-f29b-4303-a5fe-d64e944fa1e7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "750875d6-1dc0-4535-8c18-5ca3203d54d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fe329a-4e12-4703-8153-a4c86679c008",
        "cursor": {
          "ref": "2a2371da-07a4-4117-baed-219ce28dbcec",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9c3ba4b7-afaf-45b4-8ae2-a95395abfc83"
        },
        "item": {
          "id": "94fe329a-4e12-4703-8153-a4c86679c008",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "887c862c-0f0f-4ec8-80fe-0e19b5e8a0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8026c441-3c86-474d-85ca-e504c10529ae",
        "cursor": {
          "ref": "07c56e56-8191-4adf-aa5b-23b43425e814",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "baf0d41b-6cff-47bd-ad20-b218259cefdf"
        },
        "item": {
          "id": "8026c441-3c86-474d-85ca-e504c10529ae",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6a9dfcba-4961-4ddc-995d-006f15302c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c22a61-4e57-48e2-8b1f-03c1f1ecf077",
        "cursor": {
          "ref": "a68f69fa-46e6-4e12-901b-8559283a5644",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "521f404f-1798-461d-aedd-ce761b01b5c3"
        },
        "item": {
          "id": "a8c22a61-4e57-48e2-8b1f-03c1f1ecf077",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "120fbe5e-2b3e-4d39-bfc0-e05afd6df5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9428b19-452a-4153-988a-daca5cd2a0ad",
        "cursor": {
          "ref": "da5670a2-ddd6-43c9-9a07-d31038c734dd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3ea77517-23b9-4bb4-9b94-af5799875e45"
        },
        "item": {
          "id": "a9428b19-452a-4153-988a-daca5cd2a0ad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "100a3282-804c-4566-a4e6-a8d3812040c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b1bbcd-aa37-48c8-835e-a0839a0af6bb",
        "cursor": {
          "ref": "77f1bbb9-e3df-4e9f-ba08-b49884b4ff7f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7397bf72-4578-4f1e-bac3-616f93b87aab"
        },
        "item": {
          "id": "26b1bbcd-aa37-48c8-835e-a0839a0af6bb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9decd4ba-3ee2-4de9-b55a-f4f9168774c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54ffacb-d31b-4624-8d7b-ecd5acfc1fcc",
        "cursor": {
          "ref": "2324c704-a114-49eb-a6d9-800562caee46",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "87ae27e3-691f-4339-8ca0-9843a06e887e"
        },
        "item": {
          "id": "f54ffacb-d31b-4624-8d7b-ecd5acfc1fcc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "efe5a65c-6f87-4a14-90ad-11880005a334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc68d656-2eab-4bf6-90db-80c8a9a0b9da",
        "cursor": {
          "ref": "3a18a270-3e9c-430a-87eb-4ae6aac248ac",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "076f6fe1-34cf-4a01-973a-a93a4db8768f"
        },
        "item": {
          "id": "bc68d656-2eab-4bf6-90db-80c8a9a0b9da",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68c2aa31-bd0e-4982-8eeb-29cd33bcf8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a31afff-7e50-43d1-8705-d14672ead15d",
        "cursor": {
          "ref": "e86b59ec-7f25-4de0-8a60-3400fdc68c02",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0fa8a75b-5af2-4c30-9c6c-1b38cefcad9d"
        },
        "item": {
          "id": "9a31afff-7e50-43d1-8705-d14672ead15d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c3c89436-51e3-402c-ae1e-daef5ae42e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e1180a-2327-4c2a-aac0-d645c939f654",
        "cursor": {
          "ref": "a879ce45-4398-4e63-9686-f0024616a6c9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "25e9bba7-ab61-4c89-96ef-e21874241d9d"
        },
        "item": {
          "id": "a1e1180a-2327-4c2a-aac0-d645c939f654",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "01bf0539-43e3-4dfb-a68d-e0648827f72a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d997ea2-3abb-4bd6-b299-4736a10bdd26",
        "cursor": {
          "ref": "e60ad3cd-0557-4265-ae7d-9a4d764e7be2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a15854d5-9d8f-4228-abfa-d00a29f652f4"
        },
        "item": {
          "id": "6d997ea2-3abb-4bd6-b299-4736a10bdd26",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "72e82f87-9ea9-42d5-8fb2-64112a3173bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74db701-0a8c-4ba7-9bf8-beadeefa89dc",
        "cursor": {
          "ref": "9e0c2968-bfc0-46aa-ad37-e11c694e60e8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0790aab6-a485-44f4-bad3-16fdec139381"
        },
        "item": {
          "id": "b74db701-0a8c-4ba7-9bf8-beadeefa89dc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7b2936d-c343-43e6-8f83-2b75bc823ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a71ff23-4817-4a8f-9af5-dfd01c208ec3",
        "cursor": {
          "ref": "e7312f5b-b87d-4c1f-95d9-979f94704288",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "178fa0e4-6179-4bb9-aeee-22979bc43a29"
        },
        "item": {
          "id": "8a71ff23-4817-4a8f-9af5-dfd01c208ec3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c4fa0b4d-5d33-4fb5-87a6-9bd70fafccec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21aebb7-f4ba-4cee-9bca-4fcacaf48186",
        "cursor": {
          "ref": "e8310bd1-d74f-4dc9-8b2c-f9b2fe0fde88",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "112b5d32-9f74-4ed5-9f5f-a085866c222d"
        },
        "item": {
          "id": "c21aebb7-f4ba-4cee-9bca-4fcacaf48186",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9b1e2616-8b74-4f16-b1dd-92a318a32189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2141a32-ee99-46a9-89ee-dde3e50e0224",
        "cursor": {
          "ref": "8b632762-d1c0-455e-9b80-7e264cbd365c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "25d8bbfe-c004-411e-bc8a-9ad633ee6672"
        },
        "item": {
          "id": "f2141a32-ee99-46a9-89ee-dde3e50e0224",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f5617413-e19a-446d-8f35-7280e7a6f9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d82072-7d2a-4a83-aca1-0bcdb9a89ece",
        "cursor": {
          "ref": "83998c8a-9a4d-4b64-9f37-5afa0f4ac933",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b50294d7-2c86-4c92-b9e7-cafa3062969b"
        },
        "item": {
          "id": "46d82072-7d2a-4a83-aca1-0bcdb9a89ece",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c521795-473c-4635-a07b-8dea65922ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b8714f-3f86-4d3b-99e7-79bbb321250d",
        "cursor": {
          "ref": "ed463d78-9ee7-4cc4-b8bc-7f9b3c725ac1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bc82b2ec-6b52-4972-b882-de701738c059"
        },
        "item": {
          "id": "b8b8714f-3f86-4d3b-99e7-79bbb321250d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "03e5d951-f471-41e2-9d81-31c6f9678c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa475b4-9e03-4b5d-ac15-be23dfdf2d37",
        "cursor": {
          "ref": "5c939386-f59b-4e85-8124-a00f79d5a8f9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a2e87cca-ca58-4128-9051-235cdb92d148"
        },
        "item": {
          "id": "8fa475b4-9e03-4b5d-ac15-be23dfdf2d37",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b8a1949-e30d-4cfa-97c2-87c51b40820d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f534a-59a1-4fae-b6bb-c98aa8919760",
        "cursor": {
          "ref": "90e61cb1-afda-487e-9f6d-0cfee15adffb",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a4b46e7b-8869-457d-b073-3048b5d10f5c"
        },
        "item": {
          "id": "f29f534a-59a1-4fae-b6bb-c98aa8919760",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c12bfc3d-08fe-4b59-a49f-38cc891cd894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca759ce-819c-4165-8eed-5f4c00411485",
        "cursor": {
          "ref": "7639a854-6518-4b26-b661-f830a911c0d2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2f761942-a6ad-4eee-b3bc-23463408ad49"
        },
        "item": {
          "id": "cca759ce-819c-4165-8eed-5f4c00411485",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e3455dfd-6225-4737-a47a-ddc0941d4def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5695ee93-f409-4221-9adb-73bb1661ab21",
        "cursor": {
          "ref": "54290ced-874e-4404-870a-0dab3663bb46",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4ec5e6a6-98dd-4c1a-a2d8-bd0c87aca3de"
        },
        "item": {
          "id": "5695ee93-f409-4221-9adb-73bb1661ab21",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "92db22c4-7a55-4a80-8453-a7f33909b3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2795a44b-6216-45ca-a2a5-581fbce177e9",
        "cursor": {
          "ref": "99add687-b9cc-424b-b075-17699439f262",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2f8ddc65-8d67-4ade-a6e7-e26354df9cff"
        },
        "item": {
          "id": "2795a44b-6216-45ca-a2a5-581fbce177e9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "73170e30-5b4a-4922-9aff-1ccd5dd57ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6faee54-e0cf-462e-bc33-dc78f973b375",
        "cursor": {
          "ref": "dfcfc06d-a075-4a70-93bf-121fe048e2ac",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9046a6ea-8d4b-4620-93e6-0c47f7cf4075"
        },
        "item": {
          "id": "c6faee54-e0cf-462e-bc33-dc78f973b375",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "54c717c0-c3bd-497b-b0bc-9f2dc1f05c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5166062c-f70f-4894-8e29-647217e40afc",
        "cursor": {
          "ref": "9bdf2cc9-41ab-4176-87f8-e7ad11fa77e4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3931ce8b-3e8f-47b6-bc44-2adc2d46b53b"
        },
        "item": {
          "id": "5166062c-f70f-4894-8e29-647217e40afc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3b826566-a4b6-460e-a70f-608d61cb5f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f584825c-f36e-4660-b9d7-d2f8cd3dd199",
        "cursor": {
          "ref": "b432b06b-28ee-45da-84ba-104d7470ad87",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "00be28b6-833c-4af7-85f5-02a9e5768659"
        },
        "item": {
          "id": "f584825c-f36e-4660-b9d7-d2f8cd3dd199",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "017da170-3294-47cd-86f9-d41eb9307404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6512b5c-4fe7-444a-9dcb-c90c3ced6481",
        "cursor": {
          "ref": "7ea129c8-b964-4288-8580-9b8c603bc56b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "03fc27fa-7eb4-461d-a21c-29a47517fde5"
        },
        "item": {
          "id": "c6512b5c-4fe7-444a-9dcb-c90c3ced6481",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fe867459-8337-48cb-9987-a62d6bff10c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5418fc06-8127-49a3-9bf7-bf2d3b89c31f",
        "cursor": {
          "ref": "fc0c3a2a-ca13-4bb8-b71b-e87c1a3de9b5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d1018b50-237a-4aa7-a874-b327f363096b"
        },
        "item": {
          "id": "5418fc06-8127-49a3-9bf7-bf2d3b89c31f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87e30696-82c6-4700-9844-691be4a0cb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732a633d-8d65-480e-bcb7-57836bb81505",
        "cursor": {
          "ref": "13c05a3b-9e91-414b-9a96-28e1f07acac4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a67125ba-9f2c-4f24-b4dc-ff974241422d"
        },
        "item": {
          "id": "732a633d-8d65-480e-bcb7-57836bb81505",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "27f4c8b2-70d3-4b18-b05a-bf284a74be3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca604b4-6cd2-485b-963e-c5dfc3a9708e",
        "cursor": {
          "ref": "31fdfeb5-1496-4330-9d0c-9ead36d65ef1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c1a3ef54-b72f-446e-9a82-066df4fbb70b"
        },
        "item": {
          "id": "eca604b4-6cd2-485b-963e-c5dfc3a9708e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "30d46ba4-51b3-4847-b5be-7400c01f98a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e797122-9d6c-4512-a309-25a01ac5d9bb",
        "cursor": {
          "ref": "3acb1dfd-826a-45e4-9f86-adabf4b794f0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fd616b3c-2630-45f1-b727-780019648551"
        },
        "item": {
          "id": "3e797122-9d6c-4512-a309-25a01ac5d9bb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "697e3319-4dfd-4e89-bd8d-339ea70bec77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81b6850-61d3-4f76-826e-a412a48abff9",
        "cursor": {
          "ref": "5c51454e-e546-4b1f-99f3-500d78604df0",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f311d84c-fe2c-4911-932f-b585137de7b0"
        },
        "item": {
          "id": "a81b6850-61d3-4f76-826e-a412a48abff9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2f503872-586a-404a-a93d-4ebb52a8f1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b32542-3ebc-4e6c-978b-92591781d0ba",
        "cursor": {
          "ref": "3c0b08a7-eabc-40cf-8cd9-6cb406ace028",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "17d4935a-203a-4d0d-a611-8fdc14b38078"
        },
        "item": {
          "id": "40b32542-3ebc-4e6c-978b-92591781d0ba",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bf9344b8-f4cc-4b82-9c54-9375a58449ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2768e4-5aca-4b6e-93e1-034d0fdc2c9f",
        "cursor": {
          "ref": "b34085ed-72df-4810-9073-a04ad3400b80",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a2058f8a-ce11-4f70-821e-86ba943ada26"
        },
        "item": {
          "id": "4c2768e4-5aca-4b6e-93e1-034d0fdc2c9f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9face418-f33a-4ac1-9020-3669555d02e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871f3bc3-3c66-4734-9377-3dedaed5b1cd",
        "cursor": {
          "ref": "14fba836-701f-4f30-94f0-9a52026749f7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "33a9afb5-6459-48bb-887e-7eaf35c03052"
        },
        "item": {
          "id": "871f3bc3-3c66-4734-9377-3dedaed5b1cd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "903a7c82-e33d-4c25-adb6-d5e875921ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdcdf34-e19a-4b69-aea7-38a925be5b5b",
        "cursor": {
          "ref": "66a96a6f-79e8-4efa-89e7-77804ee049ba",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "baf9e7ee-2c64-4e72-a51f-365da487dd89"
        },
        "item": {
          "id": "fbdcdf34-e19a-4b69-aea7-38a925be5b5b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e728b418-6cc9-40dd-bf83-41addbdfca18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1531e4a-7f42-4e3f-96a2-2c6c3d1cf640",
        "cursor": {
          "ref": "f8ad1a84-2331-4c1f-b30f-672811c23bdc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c7c6eccc-1f12-4793-9fe4-e7232e306792"
        },
        "item": {
          "id": "c1531e4a-7f42-4e3f-96a2-2c6c3d1cf640",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ba620d31-e246-4e2b-9f1b-07020597a8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ca9eb7-74c0-4845-87ed-bf2834b3be9d",
        "cursor": {
          "ref": "72661601-45f8-44ec-99a3-0016fcda54c1",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f1f7777f-7f9d-487b-bbbb-7475a4e79397"
        },
        "item": {
          "id": "04ca9eb7-74c0-4845-87ed-bf2834b3be9d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4fe2337f-ac84-4a12-b833-28c66a2a2a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d76e0a-830b-4fc1-ae72-40ec5bee73cb",
        "cursor": {
          "ref": "37d6a959-ed95-4aa4-bb52-66174fa67e22",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dad69cc2-d786-4380-bc00-8060d09d3631"
        },
        "item": {
          "id": "39d76e0a-830b-4fc1-ae72-40ec5bee73cb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "adad5f0e-9c1d-4235-9042-c54048ce3aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0290f6ff-25ff-4479-ba90-b225be4da164",
        "cursor": {
          "ref": "ad8eeb35-1d15-45e3-b9fb-4b45a85ccd70",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3c21a5bd-c56a-4953-be05-06cb30969b24"
        },
        "item": {
          "id": "0290f6ff-25ff-4479-ba90-b225be4da164",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0f861472-f14b-46d5-b169-5ee9fb8063dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4887e8e3-9215-4256-bd57-e1ef3d23ac0b",
        "cursor": {
          "ref": "9dda0e7d-6bf6-40c0-879a-53a5bae51dc5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8d359dcc-9856-41d1-b693-e5221138ec47"
        },
        "item": {
          "id": "4887e8e3-9215-4256-bd57-e1ef3d23ac0b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a7d839f-6518-4371-826c-62bb8a6b8e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e8bb35-9512-4556-8a6e-278d9ff44395",
        "cursor": {
          "ref": "61ca825e-624d-4c9f-8f74-4f0ea24bd1fd",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1fae5b85-0916-40a6-a308-dc108c6a6885"
        },
        "item": {
          "id": "c7e8bb35-9512-4556-8a6e-278d9ff44395",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7e1a2ceb-5e24-4450-9e3d-4bd9e38ab3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caf561b-c504-4457-b38a-32b6036a0014",
        "cursor": {
          "ref": "310f5f58-a0af-48e8-9d7a-b455491f129f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c972507f-0a76-4757-8f2e-44a7d6f878f8"
        },
        "item": {
          "id": "6caf561b-c504-4457-b38a-32b6036a0014",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7405c1bc-2291-4afd-9402-992b031a0ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13db0ebb-f3cd-4a32-91a7-607182a2ed74",
        "cursor": {
          "ref": "edb0a8fd-9277-4e2b-81ad-0266da4987ff",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5a977c6e-f4a7-4453-8439-67678a702f7f"
        },
        "item": {
          "id": "13db0ebb-f3cd-4a32-91a7-607182a2ed74",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6cab3448-ee96-47f0-bb2a-d54cdf30fe0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31f995e-a752-4b39-baf7-b6a1f7130865",
        "cursor": {
          "ref": "b1b89fe9-7c15-4b6f-a46f-a4bcf092b341",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e37dcfc4-1571-4d18-b4f8-42f4cdad5810"
        },
        "item": {
          "id": "f31f995e-a752-4b39-baf7-b6a1f7130865",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b999e532-fbf7-4ed4-ae04-c9055e6724da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab44528-5b0c-4156-91d2-a390252ca278",
        "cursor": {
          "ref": "a41bbc17-c60e-4c1f-b619-6f091c8d5edb",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5a06289a-973f-4742-ad70-54ec3dab35cd"
        },
        "item": {
          "id": "9ab44528-5b0c-4156-91d2-a390252ca278",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4fa7797c-8870-447b-92d6-16b843df9c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57748ed5-079e-4906-b3de-f6f028193a87",
        "cursor": {
          "ref": "7cdbfc18-1bf5-4a7b-8822-a532fba3c3ab",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9808ca5f-dbce-4f2a-91a6-30a4553cf912"
        },
        "item": {
          "id": "57748ed5-079e-4906-b3de-f6f028193a87",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3dc58eec-4c39-41f8-af24-d46b7f70ae64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a609ba-46d5-4a1b-89ec-3701ee5587ab",
        "cursor": {
          "ref": "f486f997-0566-4bca-aac1-eab2954fe912",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6f9f49cc-0e35-47dd-b182-c6f254589f4e"
        },
        "item": {
          "id": "d9a609ba-46d5-4a1b-89ec-3701ee5587ab",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f1f18bed-ba27-4f12-9912-252bfa3a3a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31cd836-c431-47fa-b784-8ebd60baaf88",
        "cursor": {
          "ref": "add96479-a40a-418b-b751-effd66aeea38",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "899b9842-ee55-48f3-b768-41dd61491644"
        },
        "item": {
          "id": "e31cd836-c431-47fa-b784-8ebd60baaf88",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c33e93e6-46be-4bc1-9985-6ba8753fd5c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a785b5-29b9-4061-bc71-ee7e091e4aa4",
        "cursor": {
          "ref": "0d3740ac-2992-4e8e-a09b-c1b63583fbd2",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4e1a4179-ecaf-46e6-8d08-950aa8ebdbd6"
        },
        "item": {
          "id": "96a785b5-29b9-4061-bc71-ee7e091e4aa4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33cdf5c6-4617-4795-bffe-d30cfa7ad0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df737f3f-fd7b-4d3e-88fe-ce114a7418b3",
        "cursor": {
          "ref": "5694e68b-1aae-4290-8286-8d82c055aadd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3ed4439b-fadb-423e-adbd-821141c9db56"
        },
        "item": {
          "id": "df737f3f-fd7b-4d3e-88fe-ce114a7418b3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "250df01e-cb7d-413d-b9e8-5ea172c02b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a094ffac-937e-4068-8d0f-41e3b2ffebd0",
        "cursor": {
          "ref": "084876b0-7b5e-4d9c-8be9-a531713dd21c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e0aa4f37-7e46-4c10-969d-59deb4bdbeda"
        },
        "item": {
          "id": "a094ffac-937e-4068-8d0f-41e3b2ffebd0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4cf22cec-fd55-4f0a-9a37-ae56974951a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c018647-7026-4d9e-a3a8-32f96d861cc1",
        "cursor": {
          "ref": "d4954c29-cc65-46bc-881a-56f454789c90",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c25a0754-2cf4-4b10-b4d0-5fafdffe4db4"
        },
        "item": {
          "id": "4c018647-7026-4d9e-a3a8-32f96d861cc1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "651625e0-65a5-42a8-8226-aca59d5c4c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e72c940-db5f-40a9-a191-3cfd4e6e2e19",
        "cursor": {
          "ref": "a8268991-12e4-4989-901f-2b988bbab85a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "82752951-2109-4c4b-8c8d-ee1f04c8a4ca"
        },
        "item": {
          "id": "4e72c940-db5f-40a9-a191-3cfd4e6e2e19",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5e5eca8e-3b28-44c2-981d-505d3f1f5ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa7ff51-7757-40b3-92af-ba3feca30185",
        "cursor": {
          "ref": "1368b557-9ff7-48f2-8e03-b219673f401a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "887d1465-0a47-48c0-ad4e-fda2c9ee5d7e"
        },
        "item": {
          "id": "faa7ff51-7757-40b3-92af-ba3feca30185",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9a6f7cb1-0c75-4587-a6eb-e3d136ac37f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ebf05-2951-44b3-84c7-e30baa697614",
        "cursor": {
          "ref": "30f2761e-8e6a-4bfa-ab04-76df67725ba2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a33bf928-9bd6-422a-b8ef-a0bbd627f4c2"
        },
        "item": {
          "id": "754ebf05-2951-44b3-84c7-e30baa697614",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c5960805-c4c0-4112-82c9-7628380caccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf2285d-e7e8-44a0-b7bb-9d32ba4d791d",
        "cursor": {
          "ref": "6f14dbfe-1695-475d-b89b-bdeb69319866",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cb11acc8-db55-42e9-9025-8a71f2cb21bb"
        },
        "item": {
          "id": "1bf2285d-e7e8-44a0-b7bb-9d32ba4d791d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7b6f4213-7477-41bf-91db-6a235767aa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ee8d13-5d39-4813-8380-ac9146011c50",
        "cursor": {
          "ref": "1ae143a0-b9d0-490f-ac82-af75b2b0ae24",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eb588c89-12cd-4a4c-aff5-d0a8349d612c"
        },
        "item": {
          "id": "83ee8d13-5d39-4813-8380-ac9146011c50",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "72f560e0-26ea-40a7-bc5e-c9f5bd3be3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30a4c72-7ec7-4aae-8e2b-5e09341f39c1",
        "cursor": {
          "ref": "8c706ed2-3150-4469-9f0b-43b0b395150c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "56d0a950-4b05-4ccf-b92f-915c0131cf8d"
        },
        "item": {
          "id": "d30a4c72-7ec7-4aae-8e2b-5e09341f39c1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e4b781cc-1274-48b9-8ea7-55912e989d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a87c47-96ab-450f-9b67-a35c418bdfa8",
        "cursor": {
          "ref": "9174cc4b-739e-4c27-88c4-060b9c5d6c25",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e96c1066-fa7a-468f-9fe8-62f0a5bdfcd6"
        },
        "item": {
          "id": "35a87c47-96ab-450f-9b67-a35c418bdfa8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6fad73b7-f93b-4854-802a-758175fff69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a24f67-61b4-447f-aea3-3e8e605475f5",
        "cursor": {
          "ref": "d06cae78-b790-4153-bfa4-b773d4df6738",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "77407448-868e-4ebe-ba26-431111976299"
        },
        "item": {
          "id": "a6a24f67-61b4-447f-aea3-3e8e605475f5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cc5b925f-0aa0-4f3a-9da8-b3a0ba04eb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62be51ce-3457-4d89-9406-851c4823795d",
        "cursor": {
          "ref": "b36f90f3-93f3-4407-8424-4cbc8176a562",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fb2a720d-2d33-4991-b061-ff9a475b8db4"
        },
        "item": {
          "id": "62be51ce-3457-4d89-9406-851c4823795d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "67253a31-5233-47c4-bf55-059a20c373ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78ca653-4208-409f-91e1-a0071f73c08d",
        "cursor": {
          "ref": "88e96569-02c4-4180-8878-d0180214c2b6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f7a5be23-0dee-431f-ac92-c30ca7eadcbd"
        },
        "item": {
          "id": "f78ca653-4208-409f-91e1-a0071f73c08d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "59c6f2ee-2895-47d0-aa2b-69dbaf453880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e33833-aa17-42b2-b629-4ebd6805ffea",
        "cursor": {
          "ref": "583be9ca-4e96-49ec-a7fe-1a02924a6e81",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7b436b41-b1aa-4616-b841-619b20a6b0ee"
        },
        "item": {
          "id": "33e33833-aa17-42b2-b629-4ebd6805ffea",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "845b0e4e-245f-466c-87e8-212cab3f7825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d68e972-beaa-4bd5-a6b7-229e96d66fc5",
        "cursor": {
          "ref": "c4771d9d-26db-496a-8c66-f60653680568",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4e5a851a-90fc-4f3f-88f7-50c5fc640447"
        },
        "item": {
          "id": "6d68e972-beaa-4bd5-a6b7-229e96d66fc5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "20372e7c-785a-4c81-8566-19332a90ac9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae29b37-a9c5-42a1-90bf-df5102b28c49",
        "cursor": {
          "ref": "bcc963b6-cd40-421d-b044-0de5fff52ef2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1f8f3760-ab1e-47b0-99cc-08f9038b3110"
        },
        "item": {
          "id": "7ae29b37-a9c5-42a1-90bf-df5102b28c49",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7a524f7a-a914-4c32-8829-be2751141a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430e69e2-6f23-486d-8b2d-6402f8f1e93d",
        "cursor": {
          "ref": "8c278097-d0bb-49cc-9754-6ce7a33c7710",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3123e1b6-28d5-4ec2-9dde-3f173d8b2ae6"
        },
        "item": {
          "id": "430e69e2-6f23-486d-8b2d-6402f8f1e93d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f32aa16c-f6ea-4e7c-9d69-4ab5c218efe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8c465b-8453-4c5c-b2d5-2bc483a2a4b7",
        "cursor": {
          "ref": "d731317f-cb3e-49b1-a9ed-3ee1689881d0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4bedcd53-a7dd-4c1d-ae72-a593ac653abc"
        },
        "item": {
          "id": "7a8c465b-8453-4c5c-b2d5-2bc483a2a4b7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9fc135eb-7214-4acf-8f68-5441d8c20118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f865b3b-156b-4e98-8b1d-17556d56ba9d",
        "cursor": {
          "ref": "54ef40d1-f620-4b5a-bcd3-393927deb966",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "30707fee-e551-4794-9937-385193ad563d"
        },
        "item": {
          "id": "0f865b3b-156b-4e98-8b1d-17556d56ba9d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "943ae2b5-7bfa-4801-9e2e-7f4f88e4c825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa05de66-e2f0-415e-98d5-cc7af16d200f",
        "cursor": {
          "ref": "32e55b88-c9b8-4239-845a-dfd941fc1409",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "890b3bc3-9fe0-462f-844d-339656327d55"
        },
        "item": {
          "id": "fa05de66-e2f0-415e-98d5-cc7af16d200f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d7032b34-6f1a-4dbf-a3f9-c9f74bce31b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b99106c-26b4-4dcc-8a9b-6f4c6a8aac48",
        "cursor": {
          "ref": "7af5d078-01d2-4a30-a26a-fa01bb4d5ce8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d5263e79-eaf8-4473-84a6-9438db62ab13"
        },
        "item": {
          "id": "1b99106c-26b4-4dcc-8a9b-6f4c6a8aac48",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dd47bc44-fd1d-443b-aa97-7d09f47c4a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0b9400-c954-4ea9-9df2-94f6c588c132",
        "cursor": {
          "ref": "8859a898-2356-4ffd-87ad-64e48f650dd7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "19ef909c-d171-4233-a5dc-540423b1fb87"
        },
        "item": {
          "id": "7a0b9400-c954-4ea9-9df2-94f6c588c132",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "99c4cf3c-8aac-43c3-b9cb-dbd5ec9c3ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec97bbf-0306-41ac-84b4-da6f65c5d8ef",
        "cursor": {
          "ref": "c99f743b-1f31-4643-9c0b-be6842eedbb6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9f82a045-fada-4824-bf3b-031871e23c16"
        },
        "item": {
          "id": "5ec97bbf-0306-41ac-84b4-da6f65c5d8ef",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e2ecd86d-0dfb-4c15-89ef-1e80200fb14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b81888-2541-45b2-8992-7151dce9a951",
        "cursor": {
          "ref": "2ea46269-5390-4211-b621-867f7f645b19",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "693b4c3b-847d-46a2-943a-8bf7bdc4894e"
        },
        "item": {
          "id": "08b81888-2541-45b2-8992-7151dce9a951",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "376b9089-b609-4dd9-85da-029f3306e694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16af9a1-ba5d-4864-b893-be4a1369bc9a",
        "cursor": {
          "ref": "6b49ac66-4675-4c7a-9ee8-5c55c3aadbba",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "093d7fcb-23f4-426e-bb57-ac8612f83238"
        },
        "item": {
          "id": "a16af9a1-ba5d-4864-b893-be4a1369bc9a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8d32a42f-4114-497b-937b-0539e71ea886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df267ac-6241-4b65-b9f0-6386bba6ac82",
        "cursor": {
          "ref": "171e39ed-764f-4305-9552-c498181624b8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c9b65c0-c526-46e7-8e70-e99e152c63df"
        },
        "item": {
          "id": "6df267ac-6241-4b65-b9f0-6386bba6ac82",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ffcd44dc-83d5-4355-a7fe-e572996b535c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b222e69-4506-48c6-8d9e-5c799e702287",
        "cursor": {
          "ref": "c10dd8a3-b452-442a-a052-ea015d14159f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d5cd33d6-a58a-4b69-b270-e3b0fc7518c5"
        },
        "item": {
          "id": "8b222e69-4506-48c6-8d9e-5c799e702287",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "737c10c1-48ce-454c-99c3-4e9e86d4f8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c61e01-2886-4ef6-b0cb-c7766bc13f82",
        "cursor": {
          "ref": "12730299-8f00-4b90-842f-d26ebb7a62b6",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "04f8aa08-83da-4f48-aac5-6c5dcbfeb1e1"
        },
        "item": {
          "id": "b1c61e01-2886-4ef6-b0cb-c7766bc13f82",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "393a6511-114d-45d3-bceb-81aba5f43125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cba0ae6-fa07-4acb-9486-b37b1a1b53df",
        "cursor": {
          "ref": "a0daa8f8-f780-4829-8d0f-d4d0478ff7b1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "405a42b8-2125-4d45-b62d-c9ffd8243011"
        },
        "item": {
          "id": "5cba0ae6-fa07-4acb-9486-b37b1a1b53df",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b04e1d89-35f9-4e8e-bbe8-17015d1d1459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4a7210-b4e6-4ebd-ba72-200ab395d4e2",
        "cursor": {
          "ref": "8e19b83a-1c27-408f-b28f-e0c6948f7779",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "62834390-bb48-4564-89ff-e61958611e7b"
        },
        "item": {
          "id": "0c4a7210-b4e6-4ebd-ba72-200ab395d4e2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "83db81cc-ad54-4694-a3cf-6a42443a425c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3bae5a-49d8-4644-b1ad-640f4f9f2a06",
        "cursor": {
          "ref": "1e97e6cf-dde9-4235-932b-049024ae7bad",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b4daf9dc-7e04-4be9-bcc4-7574759a6c8f"
        },
        "item": {
          "id": "dd3bae5a-49d8-4644-b1ad-640f4f9f2a06",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ef6c9cbd-bfd4-4fcd-8d1f-0975bebef1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34ca1f5-9a9d-4ec5-8ab7-1c9a79e0bdab",
        "cursor": {
          "ref": "77ef64eb-7035-4767-93c1-e353b795ca7c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2e0fc952-8b7f-490a-a2d9-0ce3bf75cd57"
        },
        "item": {
          "id": "e34ca1f5-9a9d-4ec5-8ab7-1c9a79e0bdab",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0b5cf46e-c5e4-423d-b5cc-1ec1d2861b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf50581d-d251-4e89-8d43-e05449f61c75",
        "cursor": {
          "ref": "8f86c20e-411b-48fa-ba66-1f4de57d550e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "51ebe1aa-9759-4dc8-b443-c481cdb72bff"
        },
        "item": {
          "id": "cf50581d-d251-4e89-8d43-e05449f61c75",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c4f6d330-7118-47dc-8239-54170f7391dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e21e19-02ba-4cb8-adb2-69ef51e4e9a8",
        "cursor": {
          "ref": "31b5b93a-ed6a-4e5c-a336-b30fd3098341",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d23bd52c-1e7b-4b6c-b854-7a86fa77c9cb"
        },
        "item": {
          "id": "b8e21e19-02ba-4cb8-adb2-69ef51e4e9a8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9eff7b8d-aab7-402b-949e-b576fbd708d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbce02c5-a7ff-4901-b113-50f499969207",
        "cursor": {
          "ref": "5cf014d8-373b-43dd-a0ce-209d9edc3016",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ceae1530-3eda-401e-af04-a94ecc29ad2d"
        },
        "item": {
          "id": "dbce02c5-a7ff-4901-b113-50f499969207",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "06bdff08-4397-4585-9454-061cf374bb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a6aff3-3d00-438e-af53-ba0edffa20df",
        "cursor": {
          "ref": "b9fdc038-4f0e-4cfa-bee7-6301ccecd2d2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6edba1f3-a11c-4aa4-9fa6-2ca1b66b6dd2"
        },
        "item": {
          "id": "57a6aff3-3d00-438e-af53-ba0edffa20df",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "abcfb3d8-607a-45fd-b077-2e66eb4fb09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2d548a-c571-41dd-8f42-1459f608c709",
        "cursor": {
          "ref": "72d4b35a-c742-4ff3-95f8-4b5862843086",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "00eba0f6-5ef6-456d-ae3e-2dab2faf6d87"
        },
        "item": {
          "id": "3d2d548a-c571-41dd-8f42-1459f608c709",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "28288852-68c1-4eb9-8895-5fc6afa8d742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526eaae5-b671-4332-98e1-44c551b15bd6",
        "cursor": {
          "ref": "34217a51-98ea-4222-9c84-d40eb8edb6c6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3fea3e95-fedc-489b-a821-88a5667cb5ba"
        },
        "item": {
          "id": "526eaae5-b671-4332-98e1-44c551b15bd6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1f2418ed-985b-4a14-82ee-8137b005b1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcae0604-facc-478b-82f1-8cbb2c61876a",
        "cursor": {
          "ref": "d71a13a8-69e3-476d-a6b5-a9e6eab6bd78",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e214508c-d01c-4332-983a-e917e023ed10"
        },
        "item": {
          "id": "fcae0604-facc-478b-82f1-8cbb2c61876a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "46310dca-1f36-457c-8308-5d94fe8b15d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c36ba3-df5e-4906-81a5-9c4a1caf082d",
        "cursor": {
          "ref": "9bb6c5fc-90eb-43b5-983c-8dfa481626e8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "347f41b1-7ce2-4894-99b2-5a658ba856c2"
        },
        "item": {
          "id": "b6c36ba3-df5e-4906-81a5-9c4a1caf082d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fdf75659-f603-4001-aab1-4d8875268cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10031a3-9dd6-40f6-98a3-10ef53b45695",
        "cursor": {
          "ref": "12898a51-5910-4137-a347-daeca1b7eb0b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "57e1c3bb-b6bf-4568-9696-3740eecb0100"
        },
        "item": {
          "id": "e10031a3-9dd6-40f6-98a3-10ef53b45695",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ad20d801-2819-4c12-823a-785a0d701c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ab6df8-1557-4d2c-9a17-8c5d2d8cd025",
        "cursor": {
          "ref": "5c73304c-cf91-4bd0-80dd-fed2525ed143",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a42bb48e-baa6-49e1-bfc2-057c66ca8490"
        },
        "item": {
          "id": "13ab6df8-1557-4d2c-9a17-8c5d2d8cd025",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3b802013-0a71-4b31-9ea2-1596e8c7e5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe16d32-4063-41f5-a516-9cda137d6234",
        "cursor": {
          "ref": "f7d1aa9a-92d1-4c6c-9ee3-cedb8efb27ea",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "19af2cea-e3e6-40a4-9a67-a0c865912bc9"
        },
        "item": {
          "id": "afe16d32-4063-41f5-a516-9cda137d6234",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2a80fbe6-3cf9-4d8e-86ab-12ef88047769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fcb71b-4bf9-4798-b7d7-642b07dc768d",
        "cursor": {
          "ref": "5f122e48-079d-41f0-8ee1-f43cc259adb6",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "394f171a-4d43-4b4f-b5f4-5ff278afc169"
        },
        "item": {
          "id": "c1fcb71b-4bf9-4798-b7d7-642b07dc768d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f28f0d38-9c6f-45d5-bc09-42a5da1e6c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d3f6d1-9a7a-46a3-b285-e3b265cd7a14",
        "cursor": {
          "ref": "b6499169-adda-4938-bbe6-c15e25197a03",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b5177fd6-3845-42d7-af4a-648afb1d520c"
        },
        "item": {
          "id": "81d3f6d1-9a7a-46a3-b285-e3b265cd7a14",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5dc3c99f-8d2c-4542-b6e8-42f7068d44e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fc36c5-c483-456f-a2d8-5b4dcc8ff239",
        "cursor": {
          "ref": "b6a95602-fe12-4979-8a54-bad184e0091d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "14be5cb4-8338-4b8c-883e-ed132aec15d8"
        },
        "item": {
          "id": "40fc36c5-c483-456f-a2d8-5b4dcc8ff239",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f734be5e-609a-48ab-8cf2-e34c1d951539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06044e13-29d2-4d6d-8e3d-a9bec91b2d61",
        "cursor": {
          "ref": "017d64f4-c5c3-4ff1-ae4d-c7554dfda906",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7684148c-ed88-4f3d-93c3-dbd57bdb8ef4"
        },
        "item": {
          "id": "06044e13-29d2-4d6d-8e3d-a9bec91b2d61",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "92576bdf-878f-44cb-8ef0-46988e235858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c103e1-b140-43be-b7a4-5e146704ecc8",
        "cursor": {
          "ref": "181935e0-68df-4251-be8f-df230fb813d3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3a86f2fe-2272-4efe-945b-50e3bbcc2088"
        },
        "item": {
          "id": "83c103e1-b140-43be-b7a4-5e146704ecc8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e919979f-6896-4d7d-a7fa-0d3f035ff6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205b4d79-b3ce-4c0b-8e90-0d07b01aa545",
        "cursor": {
          "ref": "cdf21ca2-1e34-4b86-823d-664d7feba3ac",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5074e34d-0cc3-4c9b-8c15-3a0cf225ddb3"
        },
        "item": {
          "id": "205b4d79-b3ce-4c0b-8e90-0d07b01aa545",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "da028860-2380-42ee-81c5-50cbe1f37bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609525a1-345b-4905-8343-74f91cabc2a4",
        "cursor": {
          "ref": "5fea0a9c-7a3a-4e0f-8d3e-3bb65f48cd89",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b5f37794-70fb-4e15-9e90-c7bb82c861df"
        },
        "item": {
          "id": "609525a1-345b-4905-8343-74f91cabc2a4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "17f208df-cc29-4c0f-9203-94efba11bdcf",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "428bb769-4ff2-470d-81dc-54914aa811e2",
        "cursor": {
          "ref": "91f4fdd5-e3e4-4cb6-b9e1-2704b44dd8d4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7627ccc4-7817-43bd-b618-5245f17e07df"
        },
        "item": {
          "id": "428bb769-4ff2-470d-81dc-54914aa811e2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f419ad4f-f051-4147-8af4-b6dd7a66a593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f353ae45-b9e8-4155-9bac-5a2099a07fde",
        "cursor": {
          "ref": "ccc8b7ea-bdd6-4751-bf26-55d2c6b9bd8a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d79957ba-488d-4f18-a6d0-639d79299c47"
        },
        "item": {
          "id": "f353ae45-b9e8-4155-9bac-5a2099a07fde",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3370a6c2-6af5-446e-8776-5ae09b4bdd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f50e8a-b6e6-4a54-8548-80ac195af19c",
        "cursor": {
          "ref": "a27ccf52-879b-4002-9433-d0de056abab9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "76c4760e-3a59-465c-9808-7e2baf3edee4"
        },
        "item": {
          "id": "64f50e8a-b6e6-4a54-8548-80ac195af19c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8735a3e1-a119-47cf-9f33-71123061079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dc101a-067d-418c-a07a-1f97fa3dde13",
        "cursor": {
          "ref": "39786e94-fd0c-4e82-b3d8-d517413f1b95",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f0765774-912b-48ff-8cad-ade6cfab03c0"
        },
        "item": {
          "id": "60dc101a-067d-418c-a07a-1f97fa3dde13",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7749ede5-196f-4829-b6a6-7f8e96d14f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99397ca7-d46f-4ef0-896b-e9e308512c61",
        "cursor": {
          "ref": "48748491-f656-429b-ab95-ab8e90c76dca",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a7874b9e-6bb1-420a-aec7-569ef82df0df"
        },
        "item": {
          "id": "99397ca7-d46f-4ef0-896b-e9e308512c61",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "32df9ff4-4296-4f7f-9ca1-97f76c16c5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d227dbdb-d71c-4162-ad5c-b5dde55f6248",
        "cursor": {
          "ref": "c74fdec1-3a95-4b86-8dd1-b254f2e66fcf",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f5008d6b-0520-4790-a2fe-c8949c4e1158"
        },
        "item": {
          "id": "d227dbdb-d71c-4162-ad5c-b5dde55f6248",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dcae7fb5-bedc-4330-afe3-d71fcc47db4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8322ae-4ff2-4607-8929-efec628652bb",
        "cursor": {
          "ref": "e5cda769-866c-4477-b305-a576e8756bfe",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "efd59f40-1fa8-40c2-8fb2-4c16d9a08c87"
        },
        "item": {
          "id": "3a8322ae-4ff2-4607-8929-efec628652bb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e3943b52-20f5-4e9e-8060-5cd50d999115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdd17cc-e3db-46d5-8822-13b4ffdea178",
        "cursor": {
          "ref": "4ff4cd0a-3ac4-4326-ba65-7d6fb84a135c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3fe39145-88fc-4cb7-9333-f08e36da4885"
        },
        "item": {
          "id": "1bdd17cc-e3db-46d5-8822-13b4ffdea178",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "39ea294d-67fd-4c32-bbb7-b03dd33e1e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e9a0fb-9134-42bc-a2d1-da1d64c5a12d",
        "cursor": {
          "ref": "89a826d5-2ede-442c-95b1-1211ce584a98",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1f0e1d2f-f475-421d-8e7b-7cd63e094f23"
        },
        "item": {
          "id": "a2e9a0fb-9134-42bc-a2d1-da1d64c5a12d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5dc355e8-342c-49bc-af5c-abbfeefbec0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1954e9e-c838-462a-afb6-09bdf7c679e8",
        "cursor": {
          "ref": "e43feeed-c570-4d56-8546-d91fe2c3dd80",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3e1b62d3-9099-4601-95b5-a5a4a305e474"
        },
        "item": {
          "id": "e1954e9e-c838-462a-afb6-09bdf7c679e8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a1a9b056-51d2-441a-b575-e317d6336111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f576ed7-0f57-4bf3-8f55-4a028f7fb655",
        "cursor": {
          "ref": "197b2f6b-c4ae-4f51-b02e-c4a2c9656a73",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7c43814c-7fdb-402c-a5d9-639716d97663"
        },
        "item": {
          "id": "4f576ed7-0f57-4bf3-8f55-4a028f7fb655",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "76c2fac4-0216-4e9d-8de6-9fea3d0b57ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3b4613-d50e-4241-af81-81595fc48487",
        "cursor": {
          "ref": "2a5dce30-6da2-4b81-aa6e-19ae5b8ca95f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "edeb12fd-ab25-4c0b-a9d7-960765224003"
        },
        "item": {
          "id": "4f3b4613-d50e-4241-af81-81595fc48487",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2fe008d8-fdbe-493a-9c71-337da0d37263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c1a8e-47d3-4299-8a9b-1f22df48d73c",
        "cursor": {
          "ref": "f8ba3c5d-1e17-42b2-a385-62021b95ab17",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a1bd1097-440f-4db1-981c-c9b009eb8eeb"
        },
        "item": {
          "id": "2d2c1a8e-47d3-4299-8a9b-1f22df48d73c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8a7616b6-8597-42cf-8585-6db8ca9fce17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb8cb1c-7e5e-4fa7-824a-f8f34557e52e",
        "cursor": {
          "ref": "d6484dd0-0dc7-4933-93cb-6534af4e61e1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2e9040b5-a6ab-4c48-a30a-a82ef4070188"
        },
        "item": {
          "id": "9bb8cb1c-7e5e-4fa7-824a-f8f34557e52e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dd5d8373-27b4-4753-a94f-07fddd96cbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ce1371-98f5-4c46-8904-b02aa02c22bf",
        "cursor": {
          "ref": "e982aecd-c4fb-4e91-82e8-fb76a3a965e6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bb5b5a8a-48e1-46c8-a8dc-d8139d9bc421"
        },
        "item": {
          "id": "86ce1371-98f5-4c46-8904-b02aa02c22bf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a026ebae-4970-4741-911b-41e5175b9650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dcfe94-2c86-4b84-8cd8-080e7d9fb9e4",
        "cursor": {
          "ref": "b5b01963-a5d5-4491-9452-32c5b74b2b67",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2cea3d1-5c48-490f-b38e-a313bf46c5e4"
        },
        "item": {
          "id": "99dcfe94-2c86-4b84-8cd8-080e7d9fb9e4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d0986af3-fb42-437f-b42e-554e3fe27de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3608ac-23df-4f3b-b1bf-bb45f07b7ebd",
        "cursor": {
          "ref": "7643c3c2-62fa-456a-abcb-0e5373268e8a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1fd1443a-20be-4e7a-b92d-6fb81a36c3f1"
        },
        "item": {
          "id": "bd3608ac-23df-4f3b-b1bf-bb45f07b7ebd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9f02e991-72ed-4e21-bf1b-770a21454d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d475888-a9ab-40c0-b37b-83ec27ca6edf",
        "cursor": {
          "ref": "1d8976ae-db82-4ad6-bdcc-e915a858f2d7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "67d9fff6-d3c7-489a-a4d0-a89d7a4d3776"
        },
        "item": {
          "id": "0d475888-a9ab-40c0-b37b-83ec27ca6edf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8618d785-49f8-4320-995a-764c4b4fa769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3f17fa-262e-4a9c-80c7-29106f23b450",
        "cursor": {
          "ref": "ef830711-6ff4-4709-8f23-11e44d8881b6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "84526f4b-fcdd-432b-baf3-e68c9ddf4ee1"
        },
        "item": {
          "id": "4f3f17fa-262e-4a9c-80c7-29106f23b450",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1895a054-eeab-481b-9c6c-0f2cc9966d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567b1a17-0ced-4cbf-88a6-728690082da7",
        "cursor": {
          "ref": "1d4c37f1-ceff-49c0-95d6-2518782e5a8c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9910490d-fb60-48c9-907e-2d3dceab22d6"
        },
        "item": {
          "id": "567b1a17-0ced-4cbf-88a6-728690082da7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e26136fc-7a6f-4575-96df-31b4de8c7cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eb3706-332d-4e9c-86cf-3b2a8747fbdb",
        "cursor": {
          "ref": "5fc3fe66-01b9-4424-9828-c9b65ed4fb4e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ced9fb74-4621-405f-8354-fe2fb1f5855f"
        },
        "item": {
          "id": "40eb3706-332d-4e9c-86cf-3b2a8747fbdb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "14f2398b-1d98-4d78-b7fc-4a24a63e97bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e382e8c-54e0-4cb8-a932-bb4d8c282c46",
        "cursor": {
          "ref": "26f3bcf3-be59-48ca-aacc-8ff3cd0647c5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "50c7d76d-4ff8-482d-889a-e5f05fb808bd"
        },
        "item": {
          "id": "7e382e8c-54e0-4cb8-a932-bb4d8c282c46",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1e95ad94-bb1a-4159-ac3b-b8493c3d0c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c4f504-9cdc-464c-b36a-c9a2c8c157f8",
        "cursor": {
          "ref": "09d03a20-3f4c-4101-966a-0ddde13d5592",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6bfdd229-b0db-4482-a342-806572e05e69"
        },
        "item": {
          "id": "e7c4f504-9cdc-464c-b36a-c9a2c8c157f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3645ff34-92fc-4f6e-9729-e99803ee2e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f34b31-aa21-41dd-9e08-cc447f79d01d",
        "cursor": {
          "ref": "749d14f4-68ad-405a-8081-701ae0102b78",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bf28178b-1561-46eb-aa82-f88679e53195"
        },
        "item": {
          "id": "02f34b31-aa21-41dd-9e08-cc447f79d01d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6c184f53-6646-475a-847d-35581d1346d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4421c447-0f9b-49de-b64b-2569ff0f89bc",
        "cursor": {
          "ref": "c8cb49a7-20aa-4a8d-bf17-c00a9749b08d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "753e52a8-eb57-45e1-8d27-397bcc331f37"
        },
        "item": {
          "id": "4421c447-0f9b-49de-b64b-2569ff0f89bc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "31501478-e1cf-47a3-87ed-4e5a6874c18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f12707d-2eaf-4fe7-9ee1-2929de52f8f4",
        "cursor": {
          "ref": "5203fb53-8f8a-40e5-89e1-f0635034e5d4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "72f44bc4-c3f8-4827-a2ab-b0771c61772f"
        },
        "item": {
          "id": "7f12707d-2eaf-4fe7-9ee1-2929de52f8f4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "05464bfa-f307-4999-ad79-c79283c1094f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ec379a-ad0e-453a-adf1-ce3c9118c982",
        "cursor": {
          "ref": "9949e74b-66d3-494a-b3ed-08bf2d9cb2f4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "71b55664-fa4f-4723-8f33-9276f0b1320b"
        },
        "item": {
          "id": "a8ec379a-ad0e-453a-adf1-ce3c9118c982",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1fb95857-a6e7-4daf-84df-3a780ec82ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811f8cb4-bf59-459c-a46f-eb83b089a16c",
        "cursor": {
          "ref": "7677c579-19cc-4c5a-acd1-e8f4d96746fc",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d2c19a53-0bbf-45f5-b35c-f27de8b1df74"
        },
        "item": {
          "id": "811f8cb4-bf59-459c-a46f-eb83b089a16c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f5b5c80b-c98b-4fd0-b682-5407c6755c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c90402-1dd0-4601-832a-f275703acdd7",
        "cursor": {
          "ref": "598a93c1-bc81-4f16-9646-26f6ea7080a5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2e6a5c66-1ca8-4034-899a-954df343115d"
        },
        "item": {
          "id": "15c90402-1dd0-4601-832a-f275703acdd7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7f7c4752-bd7e-4904-a71f-60f564e54bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1113b0-0421-4f00-87a1-ec1f49160b50",
        "cursor": {
          "ref": "6855812f-6041-4495-96d5-fa68b70d2903",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "06d89c09-c01c-46b1-838b-17b7cece8c8e"
        },
        "item": {
          "id": "1c1113b0-0421-4f00-87a1-ec1f49160b50",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7b6c5574-1d5d-42ce-b38d-fd2e7775cd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb58c2c5-f68b-4016-807b-d618ea21d1fa",
        "cursor": {
          "ref": "3848bc2a-229d-47fe-a08a-06087964d983",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "46a66691-1adc-4247-a099-a942d0fe968a"
        },
        "item": {
          "id": "fb58c2c5-f68b-4016-807b-d618ea21d1fa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b856eaac-3c53-405d-a549-04983cc8251f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecfc730-752d-4f29-aeab-7cac80585cd0",
        "cursor": {
          "ref": "1ff8fee9-6abc-40d4-b671-01fa7e93e637",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9ee24696-9e20-44c4-8930-c06e472e81c6"
        },
        "item": {
          "id": "2ecfc730-752d-4f29-aeab-7cac80585cd0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "24a39862-ebd0-497a-9329-6c59628899a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e47b4a-e635-4145-bbdb-2c8dee1eb4c8",
        "cursor": {
          "ref": "4b17ad5a-b1d4-4a96-abfc-1ccff33b60bf",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "eeedb93d-f848-4125-bafb-209ed7cfa372"
        },
        "item": {
          "id": "e4e47b4a-e635-4145-bbdb-2c8dee1eb4c8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9854a66e-f866-45b1-ad2b-c3587ab6d24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d245f7-ec89-412c-b1ed-5c0a3b4ef778",
        "cursor": {
          "ref": "ba5f5ef0-d21d-4eb8-af2c-6a95ce72c144",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f0c46da4-cc11-4732-a938-2cb5a1353948"
        },
        "item": {
          "id": "18d245f7-ec89-412c-b1ed-5c0a3b4ef778",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1dce5e99-7de9-4366-bce4-81aef9571248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d59c27-9f13-4d65-9b78-206120e15ede",
        "cursor": {
          "ref": "793c9df5-b998-45bc-8408-9291147570af",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "98829863-4e84-4a7d-a76b-12df2498efe6"
        },
        "item": {
          "id": "b0d59c27-9f13-4d65-9b78-206120e15ede",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "508be984-7463-4511-bac4-a6f903a15793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540184af-4dc0-453d-8474-2af1da7ba3e6",
        "cursor": {
          "ref": "56e762e3-5db5-4c29-bfaa-e79afe493a79",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e346051d-d247-40cc-9e20-f9a61c294e34"
        },
        "item": {
          "id": "540184af-4dc0-453d-8474-2af1da7ba3e6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dd636057-6214-4566-a390-9a073860b37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afff2f69-f753-4ed4-adc0-652ccbb26098",
        "cursor": {
          "ref": "2c98dded-d862-4353-9dff-a00224655014",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "86d22d0c-4ac2-40e3-bac8-6ba366373373"
        },
        "item": {
          "id": "afff2f69-f753-4ed4-adc0-652ccbb26098",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "47d6b313-8de4-4344-91a4-e9d6787472d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0cb738-63df-43e3-af98-398c1e79250c",
        "cursor": {
          "ref": "f8ffac21-4b8e-4b94-bc34-dc4cb0f7d889",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "14bc4b98-1f89-4726-b2e5-76d2783b8f38"
        },
        "item": {
          "id": "da0cb738-63df-43e3-af98-398c1e79250c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7cf0ba61-690d-43d4-ac9a-e5bd6b390574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd50400-8275-4fd0-ac0d-570c0ac28aac",
        "cursor": {
          "ref": "de4e865a-bb98-46c0-803a-d150fd35a079",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0c892154-3185-422e-abc6-060f3df82565"
        },
        "item": {
          "id": "0dd50400-8275-4fd0-ac0d-570c0ac28aac",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "510e2443-97c1-45aa-b2de-0bd4b2bc91ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675feea8-d887-44aa-92d7-67b397069c76",
        "cursor": {
          "ref": "9a696d12-245f-43c9-822c-d3920d649785",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5967b32d-8e86-4d12-a7ce-018f122ffd3a"
        },
        "item": {
          "id": "675feea8-d887-44aa-92d7-67b397069c76",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2eaab267-0b19-4fa3-acd6-c332e44065f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c444023-ee75-46d1-a1f5-aec906f56f53",
        "cursor": {
          "ref": "237249f0-2ad4-4f68-85a9-f8597893df4c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dfbc18c9-f5f3-42ad-85ba-7144b1b1abc6"
        },
        "item": {
          "id": "1c444023-ee75-46d1-a1f5-aec906f56f53",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6cba3025-8f3c-4891-b826-94df4fa76f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566aceeb-3035-4be0-8a0c-1b4fdb90d312",
        "cursor": {
          "ref": "46125122-4c80-4dfb-b016-4ba270fd60b1",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fbf27a90-f14c-44ff-9e85-34608967aad9"
        },
        "item": {
          "id": "566aceeb-3035-4be0-8a0c-1b4fdb90d312",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8130d959-c8c4-49d1-b584-de800356b61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b610a0-cd48-4d50-8314-4509981ee88a",
        "cursor": {
          "ref": "825fd0d7-5918-49d6-894d-dab0abf2cc5f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8d0a1b5b-2ba3-4885-a624-9b3ddcf0a846"
        },
        "item": {
          "id": "e2b610a0-cd48-4d50-8314-4509981ee88a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "56bc094c-7e20-45e5-9e9e-878265a22512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04d4834-2706-4cf4-86ca-859cd21b587d",
        "cursor": {
          "ref": "23570fd8-01d4-4fa2-843f-a8b6458b0c78",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3ac134dd-c2e8-4564-88d0-721c969d2234"
        },
        "item": {
          "id": "e04d4834-2706-4cf4-86ca-859cd21b587d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bf191b93-403b-4cd8-b9aa-1891413ca1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b024bf8-db23-495f-b5dc-f177598877fe",
        "cursor": {
          "ref": "7b19a70d-aed3-4d85-aff9-8fc82c050d8a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b15af3bb-cc56-4231-983b-f263005a77b0"
        },
        "item": {
          "id": "9b024bf8-db23-495f-b5dc-f177598877fe",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c404ba1a-d97c-4e26-bc7a-25c0e01ac677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2556c81a-aa79-405a-a214-55e24dcfdc53",
        "cursor": {
          "ref": "d83f3a05-0cb2-463c-977f-fa7374752974",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "192c2218-7a07-4bc4-a183-bea6e232db22"
        },
        "item": {
          "id": "2556c81a-aa79-405a-a214-55e24dcfdc53",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c1e7d784-08a2-4879-9fcb-14d5bfe04fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0c714a-b98b-4e7c-8146-7ac9fe63d687",
        "cursor": {
          "ref": "2552a171-bac9-4974-89e9-b3ee77aecc7e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2ec7758a-4eaa-4698-87cf-e1794a490191"
        },
        "item": {
          "id": "2d0c714a-b98b-4e7c-8146-7ac9fe63d687",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3be32e2f-eb41-4457-b243-884ea07dfdb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85cf26f-a010-42ef-a0a8-2a23386e931a",
        "cursor": {
          "ref": "4a152dbd-090a-4294-887d-6e0dd90d46ee",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5fd8383b-c74e-46b8-b8b5-0d80cbd400a4"
        },
        "item": {
          "id": "a85cf26f-a010-42ef-a0a8-2a23386e931a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b0680e7f-8056-44ba-8448-e30b0231a7ab",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1d2e38-de4e-4381-be48-d300e50a168f",
        "cursor": {
          "ref": "497b0c71-a2fe-4662-a796-4dbca8f66818",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0654ac37-357c-4502-88a3-ba67611d1b46"
        },
        "item": {
          "id": "3b1d2e38-de4e-4381-be48-d300e50a168f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f2dfd7be-b21b-4598-aea5-aa884b1b6b8f",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0fb9f0-3f73-4e5c-8b0c-b2387c6b153a",
        "cursor": {
          "ref": "b9861988-7d08-4b27-8d8f-87a347a68273",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3187e289-6071-4089-84da-31ae80296248"
        },
        "item": {
          "id": "ab0fb9f0-3f73-4e5c-8b0c-b2387c6b153a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6b221426-257b-4032-aebe-7d10815edcf6",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3ca1d1-b60f-4940-9ba6-3ab1c3040d66",
        "cursor": {
          "ref": "24e06498-a7a2-471c-9877-4c1e10e3010c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3af6c621-92bf-4868-8bc4-ca117cafdfec"
        },
        "item": {
          "id": "da3ca1d1-b60f-4940-9ba6-3ab1c3040d66",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8ad8f5d-dd2b-4b1d-9955-a1ef8f12c01d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3ca1d1-b60f-4940-9ba6-3ab1c3040d66",
        "cursor": {
          "ref": "24e06498-a7a2-471c-9877-4c1e10e3010c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3af6c621-92bf-4868-8bc4-ca117cafdfec"
        },
        "item": {
          "id": "da3ca1d1-b60f-4940-9ba6-3ab1c3040d66",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8ad8f5d-dd2b-4b1d-9955-a1ef8f12c01d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abf4212-6e4e-462d-bb75-71cf00d345e4",
        "cursor": {
          "ref": "b1f784cb-0d23-4915-b0d6-b4a5410e673e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "85a6da24-63c7-4dcd-8db6-1620297a6798"
        },
        "item": {
          "id": "6abf4212-6e4e-462d-bb75-71cf00d345e4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8bcc3fd3-4673-42e0-b82d-b76967710fc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf6f6f2-0d7b-4390-b0cc-46563a924275",
        "cursor": {
          "ref": "ce36aac0-cd6e-4dc9-8a39-7d3e0b25f0c2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5e065981-4658-42d6-86f7-750bb9015457"
        },
        "item": {
          "id": "faf6f6f2-0d7b-4390-b0cc-46563a924275",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "079d55ee-2dd5-4853-9f91-d8f6116a74d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}