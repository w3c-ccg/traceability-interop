{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c7edb7eb-6089-4294-8c18-cf2dd85369d0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "364048ed-7513-4be9-b3e3-ce624ea8db68",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d16e11a1-e862-47e4-b605-771267b5345e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a42e5a2-c990-4cb2-a018-44d1c78f1504"
                }
              }
            ]
          },
          {
            "id": "6fe8f2f3-6cad-4d4f-8533-ce9150cb43e1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa0c6cbd-68b9-4380-8f9d-7452396c7ced",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d4feca89-e41f-44b8-9efa-d9e0449b97cc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b0d43874-fd73-4a75-bc1a-be4140f55a9c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6498947a-85e4-4cf0-8d7d-99a64b620f65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c26c874-6bfe-49b0-9a6f-9e103c523e1c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "608841c9-0759-4adf-98f5-5ef957b14ee8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39990ba3-64c9-4a03-8a29-21dfa288c102"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32618260-a3db-4982-9eb8-1259f310ebd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5edbe62-a1c9-45fe-87bf-409ba5b2036f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e1113d6-1b68-4e96-9bfb-7ff582b52e84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28216e26-ff2e-43e6-a6bb-dcf129eaec6e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce0a9a81-0bd1-4301-8071-aea0a34de121",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cd61d463-9408-456d-919d-5e97531c2ea5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f6f803b-e2a7-4233-9973-3748dce22ea7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7136f19b-31f2-4de4-b046-0063bbb7a49c"
            }
          }
        ]
      },
      {
        "id": "c5ec8405-5251-4626-b87c-78e96d4ac38a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9400edfa-92c0-4842-8ad5-e287dcb34081",
            "name": "Negative Testing",
            "item": [
              {
                "id": "faf0ebf0-3f69-44e5-a6eb-3a0dd6c7b43d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd28ba93-9b76-4cc6-bf2a-74d7ead605d1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacd67a9-a25c-4a62-b95c-abc88777051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "937368a0-74ad-42b4-b940-97493e0b45bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778809b3-2b1d-4161-b4a7-5794ebe1c254",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e44861-9b76-4a6d-8892-62c55badf12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07032f3c-32fc-4662-be11-f869c2858738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c175fb7-4a0c-4e71-97ab-0be52f49f915",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c9b150-2785-4389-a627-95b139020156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e815ab6-499d-403c-a2a0-3386bc3729f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b15901c9-bd35-43ff-856e-96c6ea5c7cd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30f2e2a8-2905-40da-9fa0-3f588b77d3d7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb4d4bb-44e9-41b1-92ce-3dcc199051da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23a3f6a6-29dc-4e39-aa27-87201515745d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ed0e81-374e-4103-bbba-0691908335cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf644c6b-92f6-4a01-9b61-e997971b2981"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9f8d86f-1048-4c90-8025-a5bc66efae9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db266ee3-af88-4475-8227-6bfcdbd0d084",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abacd108-50be-4730-9db1-78ee20a6d164",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "73572648-7837-4417-8d79-282146aafa82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0d3a885-bf67-4323-8f52-1be195f96fd5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c143e59d-220a-4a9d-a35b-afa046312f52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5fdcffb-474b-4fb9-b1d3-2bf0ad67434e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61b252c7-7761-4901-91a1-c0535e50564d"
            }
          }
        ]
      },
      {
        "id": "688ebd46-a9ed-4894-a5c0-1387c911a752",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c41551a5-9e82-47c9-8efb-16bdd074cf5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b02a496-471e-4707-a8cc-18ef1fd5d2b0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1c3b1d02-fb57-458f-8c12-804d57d313d7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f961054-2cd9-4aab-9713-8eeaf98fae6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db4c411-a9ec-464a-8163-d52e08c67db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67387b0-a802-43c7-bae6-92d87f987ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61860e50-1bfc-41a9-9242-b7786ec717f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecebcd5-d47b-4e12-96ea-831644523a6b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f63ef91-0fda-42ea-9b3c-2676aa113197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6061a28d-16d8-4ede-8cc0-5f66eb13a7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cfe5a7-dc96-4c55-bccd-e3cacb2f1acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddb5d639-2736-485d-b7ce-12a60b1ec835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d98ab24-6c4e-4748-be2b-be78fe440fb3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae69321f-8898-41de-b469-48b7c609dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8eb1460-7bb5-45b5-8ea6-a789743dbce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4badbf3-f629-4b07-b1cf-8fb9ff4035bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e96954e5-9ac3-4ae0-a4d8-6a8efaa95760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6f3ab8-f1ed-4aba-86c4-b97000ed343d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793c5509-b20d-4703-8052-b91d942e5213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30349e6-720e-4ae2-9714-6b486df4ba69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e15ab0e-f472-48e4-aee4-17d334e0a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86bd3fcb-8979-4b95-8c96-af6e403d58d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f2ea37-c159-4338-9a37-47dde91d89d8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7b1e6d-9d77-4f49-a118-7c2bbedf4b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820ce7a4-aec4-492c-8fc0-5b3486038c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac222f3-83de-4656-bbdf-bc7abbf4b545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c96f473d-aeda-4f25-ae92-41008b593a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714f07d9-108a-4557-bac9-bac5ba025f68",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74c8c50-5bda-4db5-8a3e-7bc596f03378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4681cc27-5980-42d6-a1a2-c186a74fc9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8599faeb-142a-4f65-84f0-3c653017139c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cd8e6cc-23a9-41e7-aa63-7a270846614d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce7192e-c5bc-42f0-9c78-f9243de2f144",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9531bec2-1969-4e46-8e6e-25242c6a36a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341188b8-fac4-4ddc-bdcd-c85b0446a8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba619cf-212a-46b9-8e42-bfbcaf10d46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd89ab05-474b-4a99-a4fb-985b8a9fa6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c0334d-bd32-4ee7-b9bb-6c94e953b863",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139d55b3-c0f6-44e6-89c6-23ddc6370169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03f6333-e294-454a-8d76-19300cc5a3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b298f9-b1b1-45cc-8a5f-ed1d05c1c15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bf23026-6409-4068-9bfd-964c28cd4f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a8991b-4c63-4595-8bc7-33cb6ea3c8e5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bf76f3-4cc4-4f37-8171-90795b8e98c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e68e4a-6ba2-4cad-a4d9-7769f8014830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f1ed57-8fdd-40ab-8c83-a8bbf7408017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "066c17e0-f242-4397-8430-4a62776a4e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb1ed4c-6bde-401a-a38c-a145f5c672f6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756555b8-6bd2-4e79-9e92-8683c23c1c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca490a3d-88ce-4b62-bb16-59f72e5fd8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c852a39-a63f-41a9-83eb-8b7b5cc37394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3a8b94f-dc95-4ef9-9d41-e37e45383018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535830fb-5417-43e3-a53c-65563431de0d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaaf64b-3f56-4926-9457-3e995f46b7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d447c4-2646-4a58-aa83-7e7609c710a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9007996d-5f35-40a5-ada1-d75d358b294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f25d0863-01f0-4cae-b57c-b75ae4d9ca5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e06795-0779-4976-8523-2ec54f694a4e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f364e89d-37b0-4eec-b34c-0896e3e9d50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afffa2bc-1cc8-4332-b5c5-66f78559d827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93c3b63-d3fe-465e-b323-3e7ce587fb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdb10bd2-b5eb-43c1-8145-70ce41eaae7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f306edbd-4375-475d-97d5-b107f6dd7c2f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafff7ea-e3e4-4cc7-baa9-d32a400ad8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3074eb36-58c4-4a79-841f-8eda09eb8b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d7e927-63e8-485c-a512-d9b81aed415f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ffeb2f0-95db-4103-8baf-6a49832a44ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce43a4c2-9dbe-45c3-9c6a-2cdcfbebe38a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd855bce-49fa-47e3-bb9c-63bd17cb09cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db8831c-3635-4cdc-af2e-3029e5506f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b22df9-69a4-493c-9901-5e6ee0fa6c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88e53872-bdd6-4f87-9d22-835bea97a188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c38a094-03bf-4898-8767-5b1e08841c68",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa68a18f-7570-40cc-ad81-e1ab30e03c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409a41af-ee53-481a-8639-1ba57d0a52fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc76f7d-390b-4207-8d95-66b0761c5cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6d60f6e-6059-469a-b527-eab64506a5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeac436-a7af-469f-af8f-f2cfa48238de",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b1023e-9a29-43db-a69b-698d96e013e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b5a571-7243-465d-8e7e-f77b949c459b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8301c5-2612-48cf-ac16-ba1127d1baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21a4c48d-c1be-473d-af63-8cd6e136aa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687e7ea2-1dbe-4757-b9d3-7e95cf192cec",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31247b5a-52e8-4b6b-9564-346667e038c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28e1e17-040e-42a5-9f1f-992f30883c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400c62bd-e727-4c9f-89e2-4822a144f645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99e66920-c122-41da-a480-4f30a384dc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da14bc4f-35f1-4444-8261-e3088664e6e6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9164d6d3-44c3-44ba-879a-105802a0df6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464dbfd0-1625-4e1d-9e59-346d24482e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ddf2a1-5c12-46e4-b025-63769a9663f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "21cdd3f4-11df-4152-bd81-e8e197fcf94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b50569-b6c7-40d4-bd3e-64dd5b3268f6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb1d387-fc72-4c1f-9215-a5a0a7ddd106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852f2372-48c6-4539-b0bb-0dfb1becf09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fcfd41-59cf-44fe-a71b-7d19fafb7345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2947d3b-f06c-4f72-b105-e4fb1ea8fb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1587483-1573-43ed-9c47-d8e65132ddc9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e94dd9e-0866-4149-a5b8-7851adf48ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0bb87a-a284-4b23-b95c-3ea0da3094ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b14388-ae6b-49a7-acbf-6741497c03f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "109f3f58-2ed4-4411-b7e0-05abf1358ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2b0108-021e-4dd3-bc67-9c8c53e721d9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f136c662-8f7c-4fa9-9cc9-5bd65d4220ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d0ae2f-67c6-4052-848f-a1b5a0b08061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e74975b-ed4b-42b4-ace8-fc13ade7115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97125d74-643e-45e1-bd70-b9573583e962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94262ce1-744a-4018-a6fb-7129cf354495",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e503d9dc-103f-42b5-9644-2de698523e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8288c1f-7af9-4d17-a4fd-ee982c311442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6216945-acbd-49c2-8345-5aca707b5b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd76e4f-7ba1-4d47-8b59-fc1f20ebfc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a24df80-cb8c-4296-8b49-9b19187df910",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e0ab42-f65f-4c24-95fd-a9d288372af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7003cf62-1ef4-403a-9eae-926a408a28c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3240f6c3-0592-4d6c-985d-cdcccbd1b2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0726dc-0fc6-4d17-8379-723ed48673a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5195b44-0bc4-4b65-be68-e70be65626b4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8aa88df-3b23-434d-9d1c-cb376480a5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ae1c94-91a7-4353-ac76-4ff4bd93239c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40001e3-9161-4113-978a-6d5e1dee1f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "434f0f99-6e44-42ff-8a68-17c751f884eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02295ca6-73b5-42ab-96c1-5d0df452fdce",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274db513-a05c-49c3-9f99-94dbc22da38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278678ae-5cc4-44f8-ad38-3ed8ee8a0a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8633ded2-0236-4f2f-bb06-ad5aba3f44ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "716cb45b-9390-490b-8010-301c97ced0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad3f337-4b81-42c3-b53f-bb1748a3a802",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c7b821-a28f-4749-92aa-ea30e84d66f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb204a1-b0e6-4a6e-9a95-7111e62c6b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358a923f-aea6-4ac1-84ef-f2fbab84d826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea51325b-8238-488c-a2c7-bbfdcfe6bf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc1d00c-6805-4548-a9e3-e3baae38b0ee",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784f3afc-36bc-4c63-b61e-9336a2330e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67afd9bf-6732-4d7e-bee6-b2a9d207ed45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61260376-745f-4109-abeb-c24fe93bd51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6983b18f-bc4f-4faa-b154-796b4a82fc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024fff20-50fe-4e99-91d2-d111b5f6fc46",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f09d6bf-fc50-4f71-aca4-76806844e80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f147117b-19f6-407e-919a-a42b6262ce83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e89abe4-72a8-414a-8798-b0b83e7b7ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9ba44d-7f37-4913-83dc-919fe6ab689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5da04f9-c52e-4167-874c-d90963a8f47f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58ec406-36e3-43ab-93a6-71e4992e2b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87aed55d-bae7-4305-a0af-61ae5406af99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062b527f-8bec-4351-8b6e-26a0868e1e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11e05db-74ca-44fa-95ba-e73825f336a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6ae965-b9b7-495f-9d56-8e824d5c95b9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdb3108-4ad1-401a-b43c-dcb724f1293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba182945-1e29-4690-9ed1-47df65203aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8f7961-b2c6-4db4-9d78-7fc00a7a15f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "960c242f-d546-4999-9fab-2098bcccc5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5c02aa-6570-4652-8581-bf282ae95fc0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be2424c-922d-40b3-8d51-a9431f8b7d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4544d41-5e50-4b8f-9dbf-c5b698c4fb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbad8fc2-a74d-4af9-a5ee-1aa349ab7a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31826f71-9e20-4ba0-ad57-76336c8017ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c7aa67-2153-4ed1-ac23-59e49613fb51",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d429735-5a73-4e6d-8440-9d0d3dc48379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c82bad2-6893-4d83-a48a-884e9f5f69ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610b7f87-af9c-446c-90c4-32a894c98be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe14f2c4-2bfa-49d6-8981-85d6159adb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d6bc7d-a76c-4a6f-80cd-d8198c9cc145",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0ae30-3047-4386-a42b-d506660ff3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6cf42a-15cc-443d-9d8d-7acca7bbe0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81395c5c-3451-4b4e-8b09-5f4a6d028dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b47054-05c7-4093-9c7d-dba4448ba0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3595b76a-85e5-44f8-a87f-c2938142c8f2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d447ecc-d4ad-44ce-86e0-5bfdd9aa9e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d77268-9ac0-4c52-84dc-33ee93fb811d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78127c25-c0e1-4521-95d0-d5dbfac2a4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d243d6a-5fc7-43d0-8e08-9c84d3e0591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d5d6f7-67eb-4c74-aa34-a171a3fc8f3f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4039998e-8441-406a-a8c9-428de430746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41114f0c-dcea-4724-ba48-ea2d03bc6ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97905adc-0039-49c7-a45b-0876ebf117ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c65f57b2-64b1-41db-958d-f8dbb939e3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b545d-d639-4b3d-8e7d-3f77affdaa70",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ec57a5-c276-447b-b784-ba2636aa8ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e42123a0-0a9d-42a1-ad6a-73f86780b9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f7562a-f6df-431a-86cf-16678da7fe76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c409f82-772d-478b-8764-4d451c0bda2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e4fd4f-f8e9-41fc-b761-d5e1c04deb41",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e13dcc-5022-4273-ac8d-be32663acbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde435eb-1e7b-4d4f-8bae-179b1cde7bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4014067f-4e90-41d6-b8ca-bc306c9655de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "400a9d7c-a586-42c7-8785-20b1d5f15b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e2218e-fda9-48d6-a7ca-94a6f2bb48f7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5f843d-25ba-446f-84e2-6c948369a836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2959d27-3672-487c-9c69-5028c9137c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2dac6f-32f8-41cc-a6e5-f0d765c9099f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dabd054b-aa5e-4734-bd2d-32c1cd976e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ab6355-563f-45b6-a0db-f49501b8b50f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b850789-e872-4844-85f2-730a43ef2fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34eb40b-1e8f-4bda-bb64-a288a4372a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0becadd2-7e1e-47d2-9404-37230612d214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8fe2f8-7623-46d5-a6eb-8c63d7e3ee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80eb3ed-2366-4cfd-b754-5313cced15fb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc33ab16-09ba-40ac-8c3c-c5939ef34877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d68cb24-954c-4dd3-8ff4-759b65304a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b292c5-be1a-4a79-a639-bb8546cfa796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd077215-083e-481a-8b79-3bfb86eb0da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095a192a-51b6-41cf-9ca1-5f9081f8aa70",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b32f57-26c2-42bd-830b-e981c96c8773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c0b334-602b-4b5c-980d-0019e4f2e03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ec9d17-139e-488f-a1fd-9c76af5eaf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae450af6-ba37-4c12-8282-217199101880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e4e0dd-7392-4f2a-988e-f96ef5c1d3ac",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b1f884-a930-4ff9-aa02-91207fb9885c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbff6396-2d89-417c-8d61-eedb25a8ecce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c093730a-5db7-48d2-b241-7cb474e8b0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3de51a54-e7d4-4639-bbcd-6e633a763c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24e79da-dc8a-4142-ac3a-936ba91bb6cb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb8497c-2a95-4658-a6a3-cd082289b46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d4040c-d02e-418a-a5ac-4f968651883c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8997df22-97bb-4aa3-944b-d84e8f30e67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f298d0-6344-46ba-a3db-e4cd7a7ffe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b25e76b-adb5-4439-8d12-73c712449fc0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f1eed6-1d9f-433a-a24c-0abbc09b2837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1882a2-0f6b-4124-ad03-6dd65373b314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc60871-37d3-48f8-9157-260dd667a4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "039e1bb7-001a-4ffc-b5ad-1cd6f35784a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3abfd9-5a37-4a2c-ab48-90a3eb557740",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ee6b15-ffdd-4026-9151-72678c7fdf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d4b8f2-ff2a-45ec-91c0-59e93afc82bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d98cbc-11b5-457b-9179-5aee6b59b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdae51d1-437b-42f3-85e9-da22451a28a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e83526-0ce1-4cd8-8fe5-cb48ab8b5f97",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a5e7cb-1a72-4706-a42d-70b05c825ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265eb2e9-c210-42b6-8752-7145940b07d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107feffc-01b8-4990-90d9-968e679758ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc73db09-b1d6-4046-888c-276b6a6d6e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c37ffaa-5ab5-484e-9aa4-1563e16f9f96",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f109e0-429b-4ac3-950a-9b8d5c4c4f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c7a239-7719-48c2-b47b-ee31046b910a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb843bb1-74ef-42a7-b55c-bdac611ed10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d578132f-d42b-415b-a9f8-87e16bb7f8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ad093d-479c-49e8-92f1-4c4d7b67e23c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18f7803-c891-413d-a0ab-83d86c8c5e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389ff4df-fb44-487e-a75a-6be78d034058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79983d1a-56ba-478e-a1f7-ba737262d2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16de59d5-173a-4503-8ad5-34268327b1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2472a59a-bef5-4ced-b612-47ffd3af4595",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654c9fb4-2df7-4965-9243-66ed66b474e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3803f64b-c837-4c65-bf46-750dbe6065bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7b7cb3-4d19-42e8-bb70-a23df75aa86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc24a75-c14c-4c0f-80f8-6dcb2877c6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76de865d-0d48-4060-9631-b9a2155044bd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecace60-0dcb-441e-957b-0e49df9fb258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5d4352-3007-4bb2-990e-f6311a196fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa432e0-7130-4089-b566-2c77d702e2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac277c71-1f34-41a6-9f09-cfbbb9ac6360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2d9dfe-7598-4e80-93d3-46f8036e7dae",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97802a8e-5f86-4a21-9ef0-b5e09349d368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e91624a-8c74-4601-bdcf-c3c3462bf40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fd205f-fce1-4a0d-81ca-39857f843157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1d5230-7d07-4990-8d25-9eadd608bf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296876df-4dcf-46c1-bf85-2a44a3849319",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8a8014-1a37-4f29-be20-5881f6771f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66baf4d7-0d0c-4ceb-9c0b-2c1494abde1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b2580-ebcd-460a-8ccb-d7b207385bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8feece02-aa7c-438c-89e0-5779d6e6fafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e79077c-94e9-4c65-a982-4bb86d82c80d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dedaacf-5946-469f-8bea-58c89b2e412d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530c0134-cae5-4bfd-adae-2813bb3fee92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ef6bc8-f2d4-46cb-a41f-ad9252e7ece1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82eb22d3-d7e8-4605-b6b2-10fddbc75bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788efc74-5a53-46be-b35f-722591688e87",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743e83c4-da05-47c5-88de-9f3d7fcfc4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf1c115-933f-4efe-b981-cd57533b60fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a06eb1-6b97-4f3f-af1a-ca86fe5f4422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe429c15-ca87-441d-adbf-dd587cbd521e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdf2fce-0e04-4dc5-a747-d2a0b35a4fcb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a19263-99c2-4e69-a7cb-ab7e563a0ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414ed50c-6a3d-4683-b9e2-d4ddf6e9fd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6579fd-5de3-42c1-979e-b18a15c3624e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82964583-8939-4303-b794-5cff0ba54fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db070bf8-39f0-4aad-923a-24a4c40faca2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560a8cfb-ee72-42e9-9f50-203ab3195106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81f9f5a-b024-44a2-a810-5d43f36860ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d563cfc-9c19-4130-94a8-15fb9f1a781d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "afb1fc1c-acd7-40c6-a61d-4b28a27f0668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4e4a8e-4123-4847-b785-62acfce8a330",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0b2107-b599-4a38-90ea-c0057d634a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7407f7d8-0037-4771-8d00-0d39f72042b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69224ec8-37fb-4f98-ab69-2d483abfd847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de7590d4-d137-451d-9695-9c8cb481263c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ab3b47-7878-485a-9a4e-6462010cbfba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664c9b47-a4d4-4bc2-b820-9a73bd6c331c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc662da7-023f-4834-82c2-6331c4947ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210eb648-593d-4f97-bb73-e3ccc4479971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f51fb9b8-c61a-484c-9553-82c8da9024a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f4485b-a662-4aa5-8db0-ad5d782ebebc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98de1812-6168-4c2f-9a10-dd249ecf78ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca50aaf-3748-47bb-8b26-241cf3191f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79e1ee9-1618-473f-b768-c7358781353f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "894a57e5-05fc-4658-9efa-b1ea23504c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0ac117-c0b6-4fc8-bbb8-7464749695e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c379a610-6b1f-49cd-b86d-d1cbe654fe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1b856e-7929-4905-9fd7-0185aea9dd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b8245-cec1-4458-bd4c-404d32c990ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f29d5f7-4dd7-491f-aab0-81a3b4951503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d7e07b-439b-435d-ad1f-5c602c52729f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6358e5b8-794f-45ff-8e32-cd2e09c7e635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897bdf6b-edc2-492e-9a26-2a9e595d9be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713199d0-ee6e-4075-8b06-261b1f379d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6e711e-5d1c-47fd-80ee-2646031ba38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2591e3-b474-4f20-b2b6-bd22f7154dc9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c671f65-b947-4194-ab63-0d7d41335003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953022a2-3482-45b0-b1c0-8e7b73f38fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c66e336-9e01-4fb3-a5b6-5cabe52d2e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "af18afbe-d13e-4114-a94d-1e03df000d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31283fc-5f67-4ac7-a090-e1e5b5a168ab",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8ad7ad-2181-47ba-bf4c-702fde47f9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c429210-8677-4ae0-874e-e7aa059f70ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b204c6ee-1703-4803-bdad-251dd2eae7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1096df-16a2-4beb-88cd-be52d7d3b498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02fd15d-ffaa-44ab-82a0-931ca1d64855",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7587274f-7e95-4ef5-b0bb-bc2d1ccc5ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3bf42c-39ac-4106-b634-c56f62493422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4c2460-9a3b-4a68-9107-06da7e807e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b83bed-095f-4263-9c78-8f1c5eb55fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae24c5d9-5594-410e-8bde-160941596463",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5d2cd7-ac6c-49ef-8f75-972ea1f23042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913382f0-51ec-4efa-b06a-8eae96becb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5467c86e-f31e-4986-93b5-b65fccdf5d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdebcb57-219a-401e-9605-0770aad200f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5ad4a9-165f-4a80-9c47-83a0b959343e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c121e7-749a-4a1f-b86a-7e18e1e0d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d5b0ce-fb9b-4b0c-937c-4091489888e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2934c60-7ca6-4e7f-bc9d-edfb240df46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd8c04c-2e0f-4de5-baeb-6ccccc91524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4411fe55-0710-40d5-abbc-7aef167fb20d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce50037-7aef-42ef-bdab-5faa31c52147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0e028e-e9d3-4f03-83b5-ffea41725d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9374eb30-2403-4d21-afe2-a769db5c276a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "087e6d99-167b-4ae9-a7c1-166366124923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c018319-01cb-4721-8ddd-07f9247150aa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dceec67-398c-4bfb-b242-c6a87b53005d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454e5d0f-b59b-428c-8ee7-264f6da3d56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb9b78e-97b8-4b0c-aa18-795c72a65389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b53df1b1-b988-46d0-b4ed-25f0cdb22132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd8ad8-97a3-4d86-9e72-0d0618099be1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7945cd-e892-4939-9d0e-a615839d87a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea73a59-a41d-40a1-9051-3980ec045c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eca4267-30b4-4928-9aa1-a114d52d878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e1a455-b8f6-46ba-bb3c-93d033312b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa14bee-02eb-490e-b605-016a9a256a44",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98032265-5ba7-4826-a05e-6c0bc9b6c1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88f0775-5830-4a81-a16a-79db3a66400d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47633827-416b-422f-9109-eb1c7a47f407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ff7247-127b-476f-9db6-cd64a58c7dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302aeae1-8e1e-4661-8f9f-3bac9109812c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aaa776-52cd-4d9a-9c29-eb5b1179e773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b10ebe-f90a-44f6-8a8a-35ce6f9fd2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45396c7-cb10-4665-b383-28cae0f996e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa680c3-587d-47e3-9ab0-0987224c238a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ecbe2b-a439-4887-8b4a-766f92eb265e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d8a818-c667-437d-be0e-b1a7da23d7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215c9802-8667-466e-996a-074d2f23c7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5862d9a0-02e3-415e-b6a8-a7b04d06d79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d92e0d43-1c12-4da6-bdd0-ec0272f510d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b0e6d8-8084-4854-a784-c3a220e13561",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a941a9-3e15-46f9-9d42-3be9b08b5a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044fae71-df21-42c0-bbe9-eb5f0234aacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de711815-a367-4c2d-a456-ac2ebd4a729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5754b9-a080-45a5-9449-aad7b1f0e481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3294f687-b30e-4168-a22c-5cba8e7c9732",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a424826d-b30f-4eff-bc35-d54ee796c41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12211fcf-b6d9-4b82-91ba-731463204401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd22ae9-57a8-4168-a2d8-c84a3a064b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c613c029-9f4f-4ec0-af55-907aa3a41de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623a3996-1ecf-457f-9a90-11588eca7a80",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bec42a5-d062-48ad-83b0-81b4e2aa749b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62d54ac-2e1f-4dfa-bd62-ab1b5b4e78a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06acb24f-3311-4b88-8de5-63df1fd77d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbbd956-4b67-4582-91ff-8d5c6d943d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5671e996-5c11-4e74-839a-457ec9b8217d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa172f8f-6429-4aa2-89fc-717f99d761ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe4e219-c8c6-4adb-b498-f37fd73b52e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b6c6b5-cb0f-4baa-8102-66867fef4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc0782e-51fc-491d-9063-4c0d89230fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12ebdfd-70e6-4fcb-a828-bc58a667ab23",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c3cbe1-c125-45ad-933c-737aaf6f48c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64977e3c-2d4c-41c0-b7ba-17d2ed0d7cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a309fc87-b910-4fa8-a9d2-3d542dfa5969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa46c523-0975-462c-a12d-76bb1e226396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddc8824-c1a3-4640-ad19-9231d48bc2c7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e065e8-1aae-4b94-a11f-c28a92376151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54c6faa-3bc5-46d1-b041-23be96128456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f998b3-5916-4a45-9ac9-b8a9b5e5d086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd881b8-7a10-48ef-b937-8e8c9f01418a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7108bc-8f12-482c-b413-2502d35ea785",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb788f5-1f36-4a2a-aaec-352382d000c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085abdb2-dc8c-43bd-873a-c7396ce1fc16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60676ed0-5d2b-41aa-9278-b5a4ea837833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6b0a02-0b39-48a0-8609-f3c8dd0b6ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be32a8e-630b-427f-b3ad-fdfd23d264e1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c32400-d7dc-4d4f-b458-4254c69fe42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562f68e4-8fc6-412d-9dac-82218d4e033a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed2c5a0-be0d-4ad9-a5cb-1d57e2f74b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "984217a3-6df9-495b-9655-b1675632448e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9160c52-4ba1-4fb5-b5c1-ebb0e32f9da0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe683b7-5a5a-43bb-b9d9-644837404cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45181c2-07fb-43f5-87c9-50227ac12fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a948d0-f671-4f53-bb53-5bea8e97736d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b7d2be-e10e-40da-a881-b50d85e61b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df311f4c-fa27-4b77-aa7a-865a49574cfc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc511f-5892-4935-9e43-16ff0e4a2c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c81e22d-eb41-4af1-b020-a2975b23f6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1b0389-b347-4cf3-b6e8-e3971bbee6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c120daee-5aa2-4834-9586-f21c4842683a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a9a4b5-b997-454c-9438-4f1dd7c00643",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b4ec16-0625-4011-be7b-1babe05e6e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758ce7d3-5862-480c-9958-0b302765cdab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45082e15-6b5f-45aa-9459-6175973e389e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e3a1ad-4576-4cfa-9113-a1045168c73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d2a2a1-0a74-4495-8ef6-12902d6d0e05",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eadb8f5-6359-4c5d-b864-81840af55835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404fec1c-b078-444e-8db7-0a6d8b34b36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852e29f3-2e29-4f79-981f-3dccdf6eac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2852f9-cb46-481a-a652-477e933ed63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef45f57-527d-4456-bbc5-9b2a55069617",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89a627b-fab0-4388-b6ff-529d85887002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bd0453-aeef-4786-8be6-a5bde8ea4f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdd97d7-3500-402d-a584-6bd92446a4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "684a5308-1122-4b53-8fb4-5ae9b254ba43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a2f1e4-7cfe-44ca-ac0f-ee079e15ca39",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c202dde8-7873-4b40-9b69-706c7209aeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02189fda-5019-4b91-a450-87aa0428d9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141fd665-83d5-417d-bc26-8a7bbe0d12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12fdaf02-6446-45d7-91b3-acb9777e88fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374e3e74-8461-45b7-ba37-0cabcf0bc56d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a952b8c4-3a08-4107-9c43-cfea5f70898e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735d8784-0e8a-4177-9cb4-1b391eca88d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d251c6a2-8a6e-438b-8f15-cd52b35f3fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f699bf8-845e-4d96-9b06-f7b97401433a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ddd491-aa4f-465c-b897-7fe7d8f8d176",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bd45a2-d0ae-4ab6-aeea-2090a34e9e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6170a53f-9ad3-4245-b07d-cd6647cde406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5815dc3-c3cf-4a0c-a8ad-e3a735e4d495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36deaf02-cf84-4270-b637-5c61f3c13a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed51e20d-c42c-469d-ad92-9bfbd1676853",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3d30e1-7faf-4533-a3f3-34ede69272f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af91d73e-df66-4ff0-82bc-ce4bf7204954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4da600-e444-4f58-b2a2-5eb0d9cc41fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b30dd63-5ee6-4485-b69a-dcdad92bd252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330543eb-eea8-4175-8ceb-ce17c1ac9e7b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39037f2b-b624-415f-83c6-c0447ff9d531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328e97b1-1dcb-4477-ac12-22a6638a259d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80b507f-6436-4276-85f1-b9b3af86da14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c39819f-9b13-4b1a-b6d2-6014f956edad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db2af73-0eb0-4606-8052-99e38e25001f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd0013f-812a-4a5a-bd7b-76a0d51054a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2559f245-4ddb-4944-af8c-6376ed3408da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604b73b1-527b-4e8b-babb-dfe3c8be658a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "138e6f6a-fecb-449a-86a3-ffa1b51f3347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3508c56b-1a0b-4f16-8104-278af7f97944",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82ec949-5926-46fc-8777-654fd2bfacc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1d719010-99ea-4d5c-a38f-7952ce853a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304c5903-af29-4aa7-b185-6a02f81348a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "079a6791-d5a1-47a2-a8cf-aa0e81898833"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8ce5408-e0c5-4c14-b889-13c86e2c94c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4385fcfd-323c-4160-857c-2df5634ae9cb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f142418b-ffb2-44f3-8134-32715ceed85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "418dd952-18fe-4917-a57e-8d5f8f266859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d49307-4b07-4dae-9766-5adca4e40fc5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dcff61e-dd34-47be-8991-da997b0d1035"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9f6d7c0-65ad-451f-8c4e-cd5be34ad1ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48160545-371c-460f-b2bc-d3efc7c2e7d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90b1aa50-cacb-406b-b1f5-875b88a68f50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efee03da-df94-45aa-b214-dea73963e413"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28b1ebed-a5ff-4916-b17d-ff1556df6d38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f03fb03-a277-490b-a965-374628681fc8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c9249d1-e3e6-45cb-922a-9a64ccebea07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f06babd1-1c61-4e68-8ced-b58bc0e9b669"
                }
              }
            ]
          },
          {
            "id": "54df4a91-d7e3-4f3f-9fa4-b2be55517c19",
            "name": "Positive Testing",
            "item": [
              {
                "id": "addfd510-0005-4d4c-adcf-753192ff6388",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "222f074b-5114-433c-851d-2d6ba8f4a122",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1585a95d-97ab-4278-8127-40f7a1b2cac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "45bcf217-12f2-4e87-aa1c-f8fd0833fba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9fa8cc-5109-4b3b-a6f1-51543e1a832f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c00cb9-6730-4296-82a3-60b7001061a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6a989ec-600f-4cb1-b9bf-890f5799df3e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d5ae1b2-81e0-4d80-a1ef-c54c1a47ab83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d45499a-0e73-4250-b12a-4c7fdcba0a8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2762e991-eeaa-4246-a28e-336a8be47472",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6265788d-1efe-423a-bef3-6fd6586174e7"
                    }
                  }
                ]
              },
              {
                "id": "6b317c46-a7ba-4b10-8df9-d01ff8f1c0ae",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "381d6c9f-d7af-4c57-bd11-b50bdd5dc11c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "006c612e-5002-4156-8790-df276f19a9c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a73701e-067d-49e3-9c2b-fe921e0384d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2cb47076-5329-44b5-8f55-9293501026f1"
                    }
                  }
                ]
              },
              {
                "id": "1c27e64e-ecd8-4ccf-8492-527d52bd45d3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "391bf5bd-948a-4d15-a871-ac1bd7e0a5cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af53924e-14bf-4d76-a772-832dcfd584ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b3bae36-2de3-4bdd-b666-15672fe65649",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "987ea49d-d9ac-43ba-bfcc-23d48e8f7165"
                    }
                  }
                ]
              },
              {
                "id": "4ea75b56-416d-4f47-8c87-f16577b05eac",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1636be67-bb8c-46e3-bfd5-b7648a69c2a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3dd8cde6-2020-421d-962d-ae709ed7a8a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76873289-d1c0-4ef7-ba9d-09cae9e96ef6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ecd9c3cb-fb40-4818-9b1d-e9fa52c6398d"
                    }
                  }
                ]
              },
              {
                "id": "02346d03-8a16-4da4-a97a-a267d3b8620f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dcf26ed-6729-4353-83b1-e605ae681383",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd5da037-272a-4367-9cd7-f2372f1ac66d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c40d4a6f-33df-4202-af90-8d08e85452c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66a5f894-d923-45dc-b6c2-ed9d5dc58625"
                    }
                  }
                ]
              },
              {
                "id": "3a889d29-8f04-44bf-a357-a894060dc631",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13162026-2787-471f-8a54-86b295b86505",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63b6b254-ddef-4350-960a-b8d9b12d0392"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18816040-23ca-483d-99d4-bb2d18643b43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e2750aa5-3a24-4762-90a2-a130d5d36fb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2caa3a2b-2eda-4b13-8bd3-96631f61bca5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "753e64df-809d-442e-b2eb-30dda5fb370b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ee6ad87-94b2-4530-9893-addb8af6f056",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c942dfbc-f2c6-4cc2-9c70-cdeae4f3721d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8078fb83-07d0-404b-8658-f06bacdc071d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "004bd856-da1a-4327-9168-0625622cb71b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a7d79eb-efc7-4730-a049-3667f3dbbcd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6952016-ecf3-4d01-a817-bc8460c2a65a"
            }
          }
        ]
      },
      {
        "id": "5e088b7a-7beb-4463-af5e-1c093407a555",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2941f38a-5819-4eb2-bf8d-fe6ad467415b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee479d76-8faf-462d-a733-53634b9e378d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c2e2c85-0a1f-470a-b9f9-596e87bce5ef",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d76f30-a5c2-4f57-836b-63f83da8a3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7b96eb-5b37-4d7b-ac6c-c37abd95e705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8e8d9f-f4cb-41e5-b18d-15c85a7f25a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b174cc75-97a7-416b-951a-06c090bdc0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05110c5a-0d7b-4772-b1b3-ffa945af0db2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b74b5f-f415-4234-ab57-06ed6c1646ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bdd9e9-86eb-4203-8c4d-24531ef76cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a031eaf-274c-4c48-9e10-c1b2a9d76b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b5e74a-a246-43c4-b004-55edc36b47a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c7464b-4be8-4ea4-bf0b-e5342b73fb93",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467a9f1b-b033-4ecb-b448-76d18784e17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b16d542-c8a5-40e6-81b8-1045aab42cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbdcb94-5a6e-42f1-9c40-fc6c8eafc6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6244fc14-5364-473f-a968-12383ec503f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893d9c32-da61-403e-87f4-edae395b3ac0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f943d900-f2ec-4ea6-8057-e23c9d6ac650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148c2add-d353-4468-bcca-839008718f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e7eb0c-18f7-4954-bfaf-fdd552950997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e3905a-a1ad-4072-a582-8b8ad7a04d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc6c420-7498-4a86-9f41-0f718786295d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c0bb1d-b85c-4c17-9975-00b5c48e6de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87991b2-1e5d-4c5c-9fbf-e39fca11496e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264a0173-be86-4242-b1ba-3ae19d16d18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6dcf33-7446-4450-ba74-0c8cdac35211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaf1dde-f826-4953-8e89-656d0bc6c733",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674f791d-54ab-4001-8026-cdd11e83cc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227fa99e-011c-4063-a107-48a9c18f5074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b6157f-8cfb-4b6a-8999-5f301c663e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "266fa7a2-ff01-4c4d-9bfb-8b9e2f94958e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a927107-2e1a-4e92-988b-832eab887715",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35883f56-4417-4e09-b9a6-e340eeba9f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcdcd91-885a-43bb-a926-b0efbc57d257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bce145-d796-48f8-a24c-88c185da20bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d281b44f-13c5-4b7c-9481-9cbbb9c731e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e54f564-97b4-42e2-bd7c-c3893452e334",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3030e390-836a-49ed-8f80-cb1ab8a9c39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3dfd66-77df-4daa-b8d9-56d8cf6bbced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139d6328-6e1b-4427-8f27-34330e46b21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1a5605-45f9-4bc1-b49d-ac827a9da604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d19a0a5-7046-48a6-b083-bd9f0f510214",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91df4697-5122-4ea8-bd43-905b2afec196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6665f300-b079-469a-b88a-83fb5e3546b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08df710b-c24c-4ae4-a29d-0a7260e5116e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8568c2-751d-42c1-8b1b-c6a5d2f7ec2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195adb02-e200-403a-b696-1a79a22efec8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e57cf8-0d57-4d33-906c-64b77119ec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374e092a-ca2c-4d79-a892-31ea1c3c7923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d28a903-78b6-4c26-b929-a05656417b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e767ed-ee0e-4974-80bf-45ee5af2a9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20f31a7-10b7-4749-9902-7d83c112a6a7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0710d8a3-8667-490c-8ec7-4c5e667585e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d20efb6-d665-40db-b0ec-6341557d31fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4336fb03-0f5a-432a-993d-131faa173ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a39c11-df33-491a-84ff-527e8af91850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443b342a-ba30-4ebe-815e-6652f5594cf3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b34dda-40a3-406b-a68e-fd79451b7705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf09025-af63-4ee0-9fc5-d0bc4ca78882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9519032e-fbd1-4bf1-b08d-075f4dfe2dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a784a218-6e9e-4510-8f2d-fde69d6a646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b53ce5a-8174-4898-9b0a-ddc425c33623",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75019790-fd09-4d16-a479-21104f2c5f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8e7ee5-c75a-47a3-ae1b-a3993efc9d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5228f3-8d6b-48cb-903e-9ab08a922b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7350400d-7578-49d8-b234-14d9f5b8ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3b0d66-f299-4b7f-9813-1a8ef0ecc702",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01d5afb-3420-4af2-8581-2dc436bfff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dabccde-fee1-45a1-8388-21c90eca20ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afa7deb-d1ed-4d5b-85ce-3d99c415a587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "420dbe31-7c34-4ce8-b56c-197d89ae4caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e988d591-4ab4-4a0c-8be5-62312af81536",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508da617-8fda-4096-85c8-b00a1b75f856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe26329c-efd5-439e-ac84-404c326a90fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49a3fa8-c7cd-4039-a1e8-e88dc61fb501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "590f3c71-e95e-4871-af40-a9506c4b3422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3f86d3-ba43-44ea-8cb4-304e1222b234",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2996ed32-5714-46b7-8479-3ebb494645c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca7cf37-f74a-4a68-911e-9f3026112058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810f522b-8159-43b0-acff-e3d7762b135f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e6e9a8-36bb-432b-bfae-d58063aa6358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6642383-37e0-4850-9180-bc33f77a17e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22891866-f9e6-410f-8b4f-83eccafc5167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a655c59-6b24-4fae-b218-61ccd034f7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3a1652-bd89-4fa1-97b1-fc4c459cfb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8a4fcf-caa4-45dd-92a1-04145c02cfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4a6ab5-7723-4481-86db-80456e21e82b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64fa30c-e559-4ed6-9729-c9929bf9c848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c97583-e3d1-4db1-b613-87c457f9fd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2640f3ef-29ae-4631-9ab0-be63906e6139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9923d896-db28-4969-9f1d-67e31af5a704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabad362-e82f-4434-9ca9-6fd1c1ecd5c7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e6ef34-4a88-484d-b887-f6eb2b5568db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b6c70d-c73a-4184-879b-e9d0385c912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519e2252-bd09-41e8-a64d-002fc5976e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "251eb84a-b172-4102-b88c-92939f03703b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a54f969-22c4-4a28-ae02-a4b46e137616",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa1bb64-3f9b-4162-aff0-5fa1122bc950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ab6f98-d2a4-45b9-aa4c-3a5fedbfa5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e915325b-6bed-4f47-8577-bca2cc0b059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79d20e86-9926-48d6-92b5-c105ff8d2f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85be1164-d32a-40eb-b106-497b208f81a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe971ac3-6e47-478d-8b81-72220491ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6a131b-ce80-44e5-a39f-10bba51e6da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fff455-1c3a-44bc-ad70-569dfe0ed501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7979dc1b-bbce-47d0-b3ab-3ca584ee042d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6772ad92-4dfb-4964-9f7a-ee0a31253af2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b25109b-10bc-4eef-846e-2361b2850e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59b4bac-7cec-462b-84a0-3dbe0b076716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbd06d9-7822-4a3c-9a0b-536be0a3e7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1333f7e6-e4bd-491d-8339-060e5d613cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c25909-995e-4603-a000-9f48e98d881c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94b699d-5e3f-43bf-8bd1-add17dbccd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f321450-87d7-4898-bf4b-ef72571a2c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d3cdcc-3e22-4a47-8ae7-4e01a1bc8288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47ec430-0aa0-440e-a915-17964de119bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb08415-6004-486f-8a7a-18a438f9841e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d0a03c-64d5-4d86-b9c4-c138afe53716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf16a35-15c2-4fc5-8a0f-47838619de38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b9224f-25ae-4a0b-8c75-23325e6496ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c3c39a-321c-41d1-8e32-3b8b0c6739d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8f4709-ea0f-4ee8-a53a-94b674092424",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba9f8e1-4281-4665-94e9-8ca9697e666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8d8120-8a51-4869-97bd-5bed7deb6728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1c2366-9135-412e-bd42-51240fe32a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68055679-319c-47ad-bd86-34480ae662b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a50611-ca54-4019-b009-d9191b1a15cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3aad58-b1da-4907-8c74-8e029c42615b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa2f329-11bd-4de6-8bd0-7f68bec75649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2d93bf-5410-42b8-865b-7d0db1507b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbcf117-6b68-42af-a026-38f05733cd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d06d920-d0fe-4eab-8c54-e997de562263",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43ce20c-ea5e-48a0-81a4-585c294d0a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3000064c-883d-4cd6-955a-bac52942e4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c303c66-26ab-42d3-a710-ab7c08aa3f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8589ef-ca42-4d10-83ce-9e390ced18c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719fa45c-9a5a-4479-9269-ba5337112ed9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8495bbf-7e95-47b5-9bcc-7ee722ffa543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a0bd14-e686-47f6-98cd-1b650b7b87b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1974538c-71f8-4659-b025-80d607ca4f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfb801c-568b-4bb3-945a-7f34aa8722fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a82c7ef-c2c6-4be1-b867-f66e07537314",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8c1e86-bfb9-4724-9121-99179ba75810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f30a7e4-7974-49d7-8045-b24d35ac6008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee992e9-bd02-4523-890c-3bfc0bac0501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08678cdf-11ca-4ffa-9a16-a35d894e20ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b986eb53-1370-4439-bb57-937549840306",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079016b2-c396-42cb-a12e-3bc30916e788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b750dd-7167-4d17-acfa-acc0342ff123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618ea2b7-f87e-4a66-b279-934187f2c60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbdb4d7-b10e-4884-92af-9f4f1af2d2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efa3cd4-42ec-4a59-9bfa-000d303a6ddb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b94f72-3c2d-491f-9a3e-b26a347fb52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b0c8aa-e235-4b2d-9fbc-0164d362c02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b632e907-95c9-489c-a35e-28270e729aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae280eb0-1757-413e-84fd-ac464b0af599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca7aec8-2ab8-4b26-8455-d54ea2cb18f9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a6e58-eeb6-49d5-876a-abb63a66d208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e36078-dd8c-466f-92d9-59fb81551129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c424e9eb-5d80-4f4b-85d1-7d97f60496b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d01365-8890-427b-93d2-d5437e914480"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9cdf3ba2-09d2-464c-b933-983053774b36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4d8ceee-162a-4fd4-8e4a-03d7c8423b03",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15508b40-31f4-4cc1-a00a-02294dbcd9f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a714b2ff-11f6-4e07-b28e-265a9c1894c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113b8a66-8193-409e-b668-36e785654dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d352e5a7-c6ec-4afd-bacb-958abefcc2ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52ae35b7-ed94-4bbd-adf4-343da2e3c65c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "251ca67a-2335-46ed-9040-61ccc1b26963"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c460006-fd39-4262-bc44-5e5811a47e2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cabd226c-93d5-415e-9044-b80a9fa81ab1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4093402e-d6da-47c2-aa32-40d349de2876",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e57db0d0-fc0c-480a-a3b1-7733f93af220"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11077870-3d9a-4915-a959-e76c73f89255",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0750d8d2-976e-4d2c-af3a-02cc8fe1efa6"
            }
          }
        ]
      },
      {
        "id": "141a8d96-8374-41db-a993-03d83969e8c5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "02226590-b475-4c98-833a-1b081a51b5e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee652e83-d0f0-422e-b713-900992362f1b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f90b7967-4de9-4a19-851e-57a45b744fad",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8333b717-7128-4a1c-91d7-995509bc65dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485095ea-20f4-4789-ad15-c117e14d5a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67bba8-c504-4a69-9f6f-f377b0e18af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0649d85e-ea3b-483c-b913-8168b5975d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1121b714-9b4a-487c-80c3-8ee08e17ab6a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480cd7ec-999b-487b-9e62-9989d93573e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2663eb10-9a9c-4c22-916a-648420302470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c015a6c-ac9d-410a-a603-226be26b7676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d866eb-9b0d-4713-9891-9978c07f2830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3dc738-f4f4-47ad-8fcb-50fcd4c2ab17",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5d81db-3584-48cb-b805-f4913821a1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b698753a-74fe-4344-8e84-8da0f4e4eb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406e1ee1-15c6-46ae-925d-fb6e535db588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bcc1392-ff9a-4a6d-bdde-17467237140e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cc820d-097d-4837-8888-09d6875abdac",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c80b1cd-5874-40ac-9ec0-c72e56e0e0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250b4f79-2370-4355-a22e-0238c0ecdebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1b5f2d-7bdb-4233-9caa-dacb85a66c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a488cf4-dae6-4534-bafb-506a4a7b6f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a75e90-6bdd-45f5-ac9d-264e7e02981b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cba936b-0e9e-465b-8c4c-cc565bf92d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc885129-e751-4bbc-b2fd-cad387987223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b05b8-992a-473b-8950-7c79cc5d679a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0249da-52e2-4305-8b5a-a9cdb16def39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4419a7-f80c-4934-b9da-c1ffcb780fef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07a9758-a669-4e81-86f3-6107ef7386d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061bbaf6-25f4-41ea-b665-466324211573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcbe182-687b-4ff0-9740-08626a394f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "537204fd-c1d9-4b1e-b442-e750fa8689f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54385b18-76fa-4abe-89e0-c3aba93c4a70",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f78693b-7846-45e6-8738-4e5f994f846e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b93651-405f-4ca0-9ae7-93c1af240478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9220b6f6-b014-4006-ab5c-746a5e116034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bb2e3b-38cd-41ce-bb6f-41565c11c836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8f2317-c075-4191-8609-1b2bd697b466",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9108fc4-f21d-409b-804b-4206754a9cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481fffdd-509a-45d7-ae57-383939ea3cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61085393-4718-4655-9b09-15df911930ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab08fed8-d35e-4377-b9ee-71743459dd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fa7b71-d1a6-447a-b881-12559a03cfe4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e58309c-3114-48ef-88f3-f029fba4008c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8655270-7e71-44a4-95f2-8769193267fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c2f19a-1c82-44f3-93ff-fab40313dcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1681dea8-9f71-4c4a-bac2-8667dc72d444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9c1fc3-058d-4b91-9ee2-51bee04522dd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4d6cce-6300-4265-ab0b-bcdae5c6bef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcc3bfb-0534-45b5-b019-1194b1420308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0cc05a-65bd-4a0c-8c31-24972a5deae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5380999-432c-4c49-aa5d-7385e8b2af80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1a81aa-7c1d-4386-aa78-77126d5f3bea",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea96081-f546-4123-b66e-d93c57d947a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37c5a3d-12c2-477f-ac7d-3ea06e499ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bde0e5d-bb89-4fb5-b72a-d9decc2d6f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7328a0-4a03-4d24-9f04-a99d8ed7b76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7a93cc-f47a-45d4-98c2-8ff91981d38e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925cedda-1e28-4cba-9c9b-74e12f9a7c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4febd29e-efb1-4e48-afba-3f7e59cd054d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0985cf-b5b7-4150-b431-55231d93a670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf5fe7c-5a72-420f-9f66-5c11c749e9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27778a8c-ae5d-4ec0-891b-a529c89e198d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6344494-4b7f-44cf-b7fb-287c2b432d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f618e117-8262-4ce8-8320-c02db3965721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d76acd9-f35b-43d1-bd79-9dbbf708545f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e496e1f9-eb7c-4f32-9fa3-4028c4773e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b77e74-fa9d-44cc-960c-16b3389e0eb1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0365e3-4ee7-4a24-b70c-9a1101c07fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a554efe-c28b-481c-a766-2ec8178a7ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dbbb9f-0776-41af-a93d-e4fd81502ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "becc250f-b7dd-4b8d-8671-7b7ca4954e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e9c211-8218-4742-9c6a-09e9abac342d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf96c1d-b202-49de-ae62-8238e9f937dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdc1d89-8023-470e-83f1-1ae6d7a4bea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b840682-0192-465b-9b9a-88ae91ee27e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4e756f-e36e-46ba-be30-d600383b4c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0784d5-eaa3-4e6f-94ee-fc2c02725e34",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdf8609-8324-4e10-a976-bc536162e47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24ed533-ae24-4e53-8179-8cd36fd1a1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f8b57a-324d-4193-99b9-45b10d044e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "40119475-275d-4e1c-9ee6-5ed3ded9c311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297fe30e-0912-44e0-b6f3-baa3b32c3b0d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddfee4d-f727-4363-a9de-5ce561ce0f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86aa691-6059-45ec-b028-1ed8bf45dc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8322f450-74f6-47d5-9370-21998db04535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9d2c79-eee6-48fb-9e35-425136e4d7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5f5e49-c1a2-487b-a5bc-7752eb2999b8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df455de-676e-45bd-960b-7d4a6cd2eb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24517379-8df8-4a52-b0e5-724925bb292c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27866a0-cf64-4269-b79f-0d6f3e65ba48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e6ae52-e566-4c60-9f20-e4b645d97a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93079646-467c-4dde-858a-4c9d0d415278",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ea5bc5-9df7-4400-bb7f-bc55c53ff916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b0f330-2d1e-479d-abe6-850deb66eff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d160e8-4bde-438f-a0ca-e211ff86ddbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9617fbd-da4a-4d86-a554-a53d54cc64d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2c30ec-056d-4049-ab44-750138e5a938",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cbf291-10a8-4466-936c-b92d46c34870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c8d0ec-f376-406e-bbab-55e0b25dfb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa5099f-a078-4e4a-a029-56de8d21be47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61a07292-d8fd-41c2-be2b-2bd84a9ebce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51108dd1-1473-4f9a-afe9-7c10aff91ce4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a90b505-f119-4c79-94e4-58caefbc7150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c64ac1-40db-413d-9fb2-a3702b2bbddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df70e11-a1f5-4f73-aa45-128c6280ecaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f68a69-2d72-4fd8-909a-2f55704877a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7516227-1c87-4fff-b5bd-7bc38245e701",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42fe93e-1be1-4e69-8ead-3b2b2e243d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f5ca8a-1c88-450f-bddc-c516b5c26069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054a028c-921d-4ef4-bd59-594d0bab549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92bbe093-e318-4a98-aaac-8e4a3e993f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2cc343-2550-4da8-a31f-5e6afb0f0f44",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d03d146-01cf-469c-9516-6dfa01fabf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b8123f-686d-4773-a85b-9286ef69f60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1167b8-f709-4e89-b3b6-4e8df1b6b6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96649a9d-6f98-4621-af3c-949a1129b8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb9e366-8bb6-4eeb-b59b-0ae41db8b136",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c28eb56-8ce9-484f-81e3-71344b629b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31681c3b-dcfe-4f3e-a3a2-7932f7f04983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb2612d-1a3e-4b7e-bc06-0010cff7b1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0c1e62-b57e-4cae-9069-f20920432b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f695bc5-671c-454b-92f7-5c495b193951",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b92798-7c37-4338-9e25-62b410b3275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e51734-0edf-4ece-ac91-93059d12c223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a0b996-640a-4882-8594-c7b159fe2505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7722db3-6b68-4653-9525-d2c6b7c70e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d711b79-b4ae-409a-9943-ef89af98c42c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a68e373-c917-4161-849a-1e26ebf90bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c85c52e-6d3d-406e-bcac-5e31d7f519c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2d9f4a-d1c4-467e-95ac-4f9e6c4fe862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc866f7c-28f1-4a4d-a9c6-cdb7eb2b1abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402a8c6e-52f3-45b8-b4cd-4490b2ab21b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e060b5-b529-4ba1-a923-ee1bdc627933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b892161b-d839-4162-a475-7c1cdd7cdd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7133577b-9f24-4567-b766-9a669260b368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11b68a0-18a2-47a0-9fda-25b48470b5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11eb086b-8227-43fb-b950-d056ed2400de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3deb8b9e-d18a-4376-ab19-d80e68f5bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706c7109-5b5c-49cb-857f-897472562189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789f4190-e49b-4970-9cb3-7603399d3d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "655ea2e2-91f0-41b0-9206-285d9a196838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc176f4-aced-4f51-b003-568a7f1ca974",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a56251-da89-466a-99f6-e9fe55e74893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fe85cc-4dfc-4796-bd23-c037970b7c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d847b326-cda3-4fc5-a5e2-068fd7e4f5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b83063-87ab-4429-82d2-e355c8502f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ded8c2-3b61-4567-a1d3-4e448c2c7120",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11325b26-999f-4ed7-807d-a0695f305e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cebf36-6b69-4833-a451-8742fdcc3571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd23d1dd-6125-4467-92d8-fe74069e08f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da2a3afc-edfe-4be4-8f05-03d5715005ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c711325-906d-418f-af15-e5b402268c33",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8c3dbd-899d-4a9b-89f1-2c08a42b310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb6f9fc-59bc-4d9a-baac-fc694ab4523f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f520be7-cf5c-4680-8574-db8d4381844c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f5c035-21e2-4027-aaa6-19413e7d8e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c5ad5d-ffed-44b3-8a62-22ae82de83cf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05ebc62-63ff-49d6-a36f-749c0f348eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31eb8354-2926-4c2e-81f4-106d799ecbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e452031-3086-4fe4-baf2-e48eb500561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfff8876-0b09-416f-a3a9-13fefeff71f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4dfca0-0099-46f7-af12-971c28ca25fe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a61987-1094-4e4b-aa2b-b5eba5ffd828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d0c877-25b3-4307-94d4-187a326f14ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1b065f-5196-426c-b5ba-093b992bcdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67a349c7-07b3-4a7f-a162-53b5a83f2d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81a5e81-2f7c-4df7-b61f-cc5f7b056edf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841a423a-190f-47bf-a27c-3f368710bb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa239e2a-ffa6-48df-a2df-ecb1ac2ebc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1e7f6c-f8c9-4f67-bb57-ec2a5b54ee9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12385ee-8208-42ff-a4af-2fd076cdb516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcbc06c-32a0-4183-aeec-f9115f241d01",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c6bc61-3046-4509-8f5f-16cd0fcd3102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1258d159-4636-4014-83fe-d976a5e09b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9097b2-6388-4d3d-a615-38444bba030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "debaa746-20af-4451-8f0b-86870553c028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31122aa6-29be-413e-9f5d-a0ae8a227c8c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae66caed-3141-456a-b1f3-3519159218bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f42f118-a976-4bf9-a796-473ed82f8453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce59cb2-0fca-4b9b-83ae-9e5615791a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dd6437-917a-4792-874b-f51e6416ecf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2135fb0b-47b8-405e-aaf1-cf7b3509b8c9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0ca7c7-11af-40f4-91b5-769c5c03bde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca6f22d-5d3b-44b1-93e6-d2f9e87ba20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f126c811-a0af-4de6-9a69-88b590f062a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "828e1d54-40c2-4a9c-b596-8a3147dec5d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c0b4b19-eef3-483a-acf0-04d958e256f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0cb3cfe-1c49-4d4a-8ef2-3de8515c96a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e2371a-8cd7-47aa-bb87-06c5dee5b605",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2a295824-028a-4423-9052-08c2e6f9ec87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ac536c-641e-4924-a3bb-84c99dece24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99f3db6d-d46e-4eab-96f5-1fa2a28dacb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c98f7bc-1176-4ef2-a356-c400c472d9b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2a01cec-9bff-41f3-9778-bd7a254e404c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c37d92f7-0220-44a8-bdba-3dce080ff816",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1c4af01-f28d-4a2a-a821-81cd9fc64b11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ab50927-b345-41d8-bd61-b50937936436",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f207aec3-e887-4667-a5ca-a8650339d59c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52d7b9dd-7ae0-4146-9cde-8a2f15400f65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98f3d791-a509-4f31-a8cb-b350d83e1107"
            }
          }
        ]
      },
      {
        "id": "b23cc2a1-b1db-48e7-bdc9-adb823015f34",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c0345e45-9488-42ac-a731-78d36f76c442",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32066a3a-efd6-47b5-bc7e-24a7fa975661",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aa4b4cc2-2e26-42a7-8018-a515ea0dcb15",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4814e6d-728e-4fbf-b299-a6a65d43a33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a18d107-c629-493e-aeb9-2a084332fde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e659e17-2ccd-43b5-9826-80680a45d8d4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d301a5a7-dacf-4b93-b010-7876b473d873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dde4d0-4b61-4602-84af-bf9c4edf5467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938c7818-3243-4bb7-82a0-704637040814",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7d4577-8e11-4f91-954e-92368fa93919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18e0d7a-2262-417a-9b13-d3e780ba9a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a212dbc-37e7-470f-8be7-257e88fb9f9f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32c9a79-f393-465b-b78e-359c82f43794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcee6e16-3586-4639-b8da-250b8cff0c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b616552f-5899-42eb-944f-c3263907c5bc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59465340-fd11-491f-85f6-4cb7811197ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca13f1dd-4940-4bcd-b4cb-56551b330d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f7372c-25b1-4134-b367-992a786a01f9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17fed66-40fe-46bf-be2c-4de25c33c5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67d5fc8-dbd6-4aad-a493-56ef873d123b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c449777-fdb8-4510-80bb-14b44b023470",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0c44b1-ac04-44d7-a555-9b349484d018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf82c8a-1256-41e2-9f35-61dc7670ede7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4827cf3-cb44-4427-9d4f-c1d98505bfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d25f88-60ce-4193-a86e-38f431d29e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9cdbbf-87e1-4721-ac25-882f2dc8a43f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f172ebd-1bed-444a-91dc-b6d716e9dcc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce2082f-b3f9-4d1f-9dd3-4a21ee22b666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf02d88e-703e-4fa3-bcae-9ad00dcf0c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99514ecb-5d2a-42bf-b87e-05142bff4807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8476d473-d427-4ba5-b11f-25b516f6e3e0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a487e626-2e87-43ca-b5ae-75c545681c4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0176c4ef-978e-4cca-9faa-2c03be2612e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092a8c04-bfdf-409b-a9df-bfdf4e83902c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a245305-45e2-4961-960f-526082c887a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430b42e5-4dfd-42fe-b205-d0b3936355fa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2676d887-1d40-4a41-b6e4-100d34f9a077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9d863b-e655-4e99-91e4-a32f1a99f525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ab96c3-d44c-4871-9149-e610ffc63a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bc3024-2d5b-4096-a843-5dc14c918246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c403e572-1f60-45eb-a7c4-3f20f4d7d369",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d55bc9c-4ff8-4aad-a18e-f5d8cecd0a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cbe953-19c2-40bb-b8c9-e8e2d2408652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1901195-c734-45cf-8814-13e15c64ff4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41de2397-71b6-4234-8e6c-804326fbd018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1c062d-4366-4f11-b294-9ec36ea02e1e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dbfe3e-5fa8-499b-9a34-c5e30a038785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7340a78e-295f-483f-857e-741fa5a232ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fbe1c5-033c-4e02-8c21-5f550b4b6103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfee6da-a6ed-421a-96c4-e2a990819639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f5bde6-a405-4304-99b5-ab28f933f73a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeee1c7f-6720-414e-ab44-23bfa4bc5fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "381c7fca-38e7-4057-adc1-a195bf454581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9a1f70-fee2-44f2-a8aa-4cc954cbebe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05680fd-37a2-4635-9d23-6b49e2340628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3246ce6e-8957-4ede-94dc-bfc85e21b804",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9dc50a-4762-4e05-b93e-61945556b714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec41b37-5080-4f12-b50c-e307b0a70427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eaed2b-0b92-4a31-9b1e-5c084c12075d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da591f50-bde8-41fd-a880-e27d6b17152e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9342afe1-d83c-4191-9c8f-c0038362f54a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72077e67-7ae7-45e1-8a37-177b209fa2a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3469311-0c3f-421f-aa1a-578fd52b6418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abb2683-d6a2-4135-b64f-1c48254b27a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bbcd2f-d002-4273-893f-689c2a64f1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9e26b2-008f-4130-913f-7794e730b7cc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6019c00-4f7d-4edd-b617-5c4572322886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c111a14a-ec31-4ed1-9908-5f806a32b86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df542a4-53e1-45cc-8b3f-f7df798f858a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9185bc9e-9df4-4c8f-864d-ea5959d8fe34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7490a480-e87e-42e2-b84c-20eb10f33493",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d871a379-4b8b-42d7-aeb4-92497c025d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b494b45-6cd8-4774-ae22-4e78d8933225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122047c4-b102-4da7-a983-c16e7f8e9c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c500a97-4339-4557-890e-f9ebf7c62a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7608cc0-d545-447e-80d3-0eb824ba3489",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf15551-936f-444a-abf4-38e4c6a9d224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74718a56-2828-45c0-8c9c-0fb58de313ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3753c72-28b9-4790-bbc5-37baa3d2f3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f345d4a-1c2e-49a7-9025-0f986a145650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79350a54-0e4f-4e79-8db6-a4974069e553",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dd4347-2570-4022-8134-1bdaa5cae55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec345e1-e778-4368-85e5-c4cf1bc7fc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b591417-6d2e-446c-ad11-61c0fba4100e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ddf677-4200-4627-87aa-8d24561504ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd87b42-b102-4aae-8c05-4c891635faa9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9ece95-9ce2-4ab7-a93d-f261652ec242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7bce71-4e28-4d3d-a437-90ac8384fe53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6599624-c283-4148-bf50-f2688eafa403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18464b7f-b275-47af-8b46-038dd7451e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf53f6df-22a5-424b-b547-ad48959bf4f7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f5abc7-e99d-4688-917c-a43270fc1262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847a26a3-2094-490d-b31a-9badc3421240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f39a0d8-3e6b-4e5c-933b-ff2d80c9609a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6198863-aa56-40ef-bb75-49bb69adfd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f36b09-f1f0-4307-8995-b639025d911b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f71345-47a9-454f-9b70-aaf3726518b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c393e46-d65f-4a72-abda-0ea84c595b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26a7358-48d7-424a-9b31-4257dde2a551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be07e02-5363-4c30-83a2-64873c2c53ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd37713-0c12-48c8-81a7-9b88db9ea707",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f106107-7b54-49c3-9441-3978570d9ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3163324c-59d4-4874-99e1-95e3cef032cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c2f33c-f90f-40a1-8903-e3e7315fe89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524a1fde-4754-4a0e-ba68-726145b90090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e3e9f4-88fa-499c-bce0-98f0bdb3c48e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20544347-2f0d-4c91-9385-e92ecf992384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d00fad5-2227-4647-8646-577fb2926634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7840af2-451e-4ed9-9bab-7144375ca9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d158320c-3d2b-4cc6-a501-351204208804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bdf5ef-ead5-47f5-a7f5-a5291ab4526f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a609a7-3759-4bf2-9884-01fb331a7b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021aaf82-fbe8-4195-a952-9bcf9d438c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c77ad4d-cd47-4595-b31d-fd377d88e6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e801875-95f1-4707-a415-4fb5952965f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f8d138-62f5-4acc-8fe5-88127ea167d6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ca5bb2-6811-4245-a627-8d4994d77fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5635f4f8-d95f-4f07-8844-bac1974562c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ce677c-a510-4ce6-8a84-f61f049b875d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b607d85a-3fd0-48a2-bef6-4c491c8ffc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5acdfe-d0f0-4644-a48c-c100cae5e75c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9d83bc-53f6-4b65-bc50-441da6ea2d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe08577-b2f8-48e1-bc96-920fbba0e82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073bc68a-b72e-424f-b3ef-17c9717b7cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ed486f-3b90-4be6-afd4-e498588f21dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7531a2-ebb8-4a21-a05c-b810a24913af",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b308418a-1f67-4e8f-a595-f9062b80111b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb66bab-4c56-4c3a-96c9-e66c33007a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ecc8dd-cb19-4a05-ba71-0fbdc3b1d899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f3b67b-c458-4bd8-9625-e73035ee1608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff163c9-1265-470c-bd54-d13c46cf9893",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6e30af-1f1a-407f-b243-7d7a24f91289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08470fca-d086-4d36-9c81-beb46ae342a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de415e4-a7c7-4f23-8f9e-8ec91057d4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9eaa979-cd87-417b-9c3e-18cead67d686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074192e3-67df-4458-b8d6-7239526aab11",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bfb825-4590-47c5-8cb1-57b0596b222d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a83ae8-ee3a-4462-864a-43cb2f720315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c12e5f3-e519-434f-98a7-bcbe0c4a09f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8f2baa-1531-447b-b6b9-9cb7842e6499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f09b84-1485-486d-868c-73ae226132d8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b8042e-362c-48bf-b68c-8b8dd84b8e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397dbdd2-702a-4d89-b9cd-b2be09899cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568df573-5490-441a-8867-d984d455a2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321423a8-e851-4fbf-918d-b0be66722165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c2f496-b4bc-4bf5-8c80-83e7e05de398",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09a7f02-1a45-4c39-bc08-c4f3bf5bfbeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8f39b8-eadd-434d-9a5c-0bd7c4a3dc99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a527b2f-a587-4116-bd28-c46e06e648e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e662a9-3bb2-4c72-8093-219a41bd3ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffec7689-7dc0-4c39-9794-e788006c41cf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350018e5-31c8-4283-9a80-1f6dc069ee61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a647d919-f86e-404e-9076-aa4b62dc2124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cf57ee-4f0d-4f24-87c7-053dceba7f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d3af55-afb0-47c8-95ed-5e2ddf68cb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4ce73c-e1ef-4146-ba25-173c7a3217c8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caae06f-e284-44f4-9cd6-6708c009431b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24cfabbc-e4f1-4bdc-be74-aae942dce126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29305c7f-7841-4684-9747-d439da8856d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d043281-4349-4fc9-b034-3f2275760e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b913b9-167b-4d1e-ae6b-2a197a1713f3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6c4370-6619-4203-a781-9ca56a992da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6251d566-1e69-46ab-866a-af603bb1dbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4194b22-a9f7-440c-af15-26d90196d1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9a6604-19d2-49a6-9dab-8bba11aab065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bcaf5b-beda-4a9e-af8e-66dec5c99205",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74adaf9e-3ba3-44b1-bcef-df1620c3d5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a41621-94ff-4768-80f0-6963ee5761a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a851e218-4e73-458e-bd37-0c75a6683e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fb60bc-57c9-461c-a583-bf70ce923498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff2fc22-996d-4e53-9c9e-2ee080c1af2c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c90984f-851f-4eb6-bf13-4f81f5afb34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0faefe96-0491-4f68-9f7f-efd409217db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0f15cd-0973-4c6b-ba87-ab18e7af741d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3ba5d2-2f4d-4613-8d6c-f9ea0c466374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45084e47-b260-4145-9955-77bafd68fc66",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0c88fe-cf26-40ec-bfdb-e0a548ccda1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb0556c-7e86-4a9e-b213-8e69ace36827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3915281d-00a5-474c-b613-e26138f758e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7742981-1342-4d23-bdab-e8eafd2e1662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d04b92-6d41-426f-9916-10beef2504ad",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c43ab1-f9ca-4e59-97bc-cf169012949c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d50675a-6c4e-4e15-859a-5ec4adc1a3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9016535f-7712-4080-b390-31e9540967de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8ae206-1aef-4099-9311-c3fdb0595383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b37b3e2-5e22-4b9e-ac13-4fce9edbe327",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4150b1e1-1c70-49e6-aded-51ba90647686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05f6c07-63d4-40dc-a00e-3499c0e92422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f76103-a213-4948-a2cf-738f8c637d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50b6717-cc0a-4b81-b58a-42d9a3f6670a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329cc0f4-4f47-49c1-a78f-a3d474c8195c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fc7bc2-18ca-43e9-a4dc-a53c608209f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe957e15-3cd7-475a-b09a-50f0743e4af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e15a7b2-e17d-4aac-9b7c-3fc3a44d8f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275af338-504c-4539-98c2-0c64297c4a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1d2c7e-516d-4f12-9039-54670914303f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5112077e-cc35-4f14-9ed3-30ee7f3f8d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc1baa0-ad90-403b-8d6f-e7948b6db5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d43136-390d-415b-8ed2-ac784da2bd49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99772e8b-1295-4df8-894c-24155d659a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df234a1d-1be1-461f-ab77-6513f9c0ca0a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23827cf3-9f4a-4134-a5f9-ae046b656cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a634bd2-f02e-43c7-9266-b1a2afb79bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8291eb-b4c9-43dd-8dbf-9d87a114823b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bd5111-1577-4491-9105-909a6d3f1dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e755bfc-7676-4832-a266-ad1d0f7777fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fd99d6-628c-4231-9ca1-31098f51e588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8c1ce1-7120-46fb-83c1-b9629ac2857f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6febb815-0327-450a-bda7-fed989768526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe951ced-de50-4c56-82c9-243d16583688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbaf2a1-354a-4144-94a4-c5577449f10c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cca88bf-9453-4b55-830a-c65a943d1c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c04e72-f59a-4b16-8c2e-487cc19086f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8126f0e2-a4c3-489d-b60f-8fbbef367408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e22e119-a25e-4e06-8bef-4b6f6149b80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302cca7d-93a3-4f67-bba4-1ce83de8452f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a4cf34-9521-42bd-8c77-92fdd6433bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7be520f-efc7-4c42-b2d6-10ef4c984f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb85d08-3d02-4e3d-a87a-bda2f367940a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60eaff82-8e9b-4e67-94f7-0c5c73fccaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fa20f4-a99e-488d-b60a-2505912f1b20",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f35e56f-935e-4959-88dd-a5103883505a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29afff5-c67b-4e09-8477-e311b21dc156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f71bdb5-4d18-4413-b652-55572b0f4fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b923bec8-f969-48aa-a281-c044d63f3b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3e2c54-cdf0-40ba-9ecf-952793ee996c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc5b19b-cb2c-4088-86b8-abbb34979681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98c2b56-cbca-451e-a885-7a6a8857cc38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68a6e14-38fe-4fff-88cc-21cd51970fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6919a4cd-76df-4293-bed1-e23e296cd844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc61f5cd-a5c1-4a6c-8992-506d6ef187a6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286de13a-ffef-4883-96e7-957c64a61166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad962ba-4837-4c20-bef6-fff0592f9ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13059b4b-592c-435a-81c6-98f75988295c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b60eef2-7384-474d-8a2e-63b658edfca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60323a2f-6ba2-4846-a28f-263468181ea2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a87b66-8f5e-49a0-9c00-efd10388d469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6890961e-9dfe-4242-94cc-18a0aac3491f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5579cb-ed5d-4bd6-8095-a27c1f91b205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f56016f-8cb4-4735-b399-1f2b2a890e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24821b1-623e-4067-b840-068afd7557f6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b3beaf-e6dc-4f64-8ac2-dfda12cd6265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a4c715-9211-4862-b904-154ce4213bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf231dab-c556-4645-83b5-c80cfd0ad74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f41eba9-b94a-4c71-be91-0534b45889f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9992587-668d-4a5f-9dc0-9d7452669fa1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c55f079-f523-4fda-82b5-8f65a5284c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7782b80b-8578-410d-aaa5-7e9e96c79ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e36dc3-d226-4262-a90e-bb2bda1fc93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98bb26b-58cb-41c3-bce5-d18c674b9e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d715c6-d970-4a8d-b3d9-8c2520530144",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c1da01-b642-454a-9f21-28a5036eb3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26172bb2-9e2b-4e4e-ab98-bb0a275c6a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fb5def-ef85-4802-96d0-f50592724e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7406a339-d65f-4e9b-a4fa-445e10040584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8c10a5-d683-4ba4-a82c-53b94a97ce37",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d564e042-403d-400d-911a-7fbd3cd4d998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b8886c-08f2-4ad6-8b1a-5d87108d623f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e80f50-a91b-4f0a-9013-910ce6309a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ef8e92-d8fc-43ef-8e15-9b711b4c6cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94051116-e4d1-4ee4-9830-558bb5f111a8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d593b5e-b43d-4d63-8282-dfbc1d5eb9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ebc1ee-945b-456d-9b46-c7105d582c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00e9203-1495-406a-97f1-b597216d697f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae67159-6a43-41d1-a7f8-4c2d68f0a603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9dc7ef-125f-4ad5-8bb8-faa6b3c14051",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de74240e-2728-4397-a82b-f7fc15aa2afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c3a389-4188-4456-ae9d-275e0ff0f72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3db109-6bae-40cf-b568-92b89330bcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181b7c42-3d09-494f-b073-0899bb7c5c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cd6336-b665-4e28-b290-70d193915673",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df5c6ad-33fa-4c37-8f43-9af052538025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df60a9f6-925f-458c-bae8-0baa757befb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21e2408-d6ac-4221-a72c-84f986a32412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdd6863-c4b7-4c76-a2b3-8e25e02f1fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fe6532-37ac-4a93-9b59-b48edba2033a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d45aac0-fa7e-4d4d-8ef8-b61296b0c316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3f90a3-6227-498b-9cdd-e4d91f0c3075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa09a59c-0847-475b-8aab-b10194a94d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1f3481-8d33-4aec-9f7a-eca10674a5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9e0d89-7f7a-4617-8ca3-e4d81c68b973",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d00282e-2966-4617-96da-62a93506cf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf3d909-8613-4342-bf5a-7da4506ab626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688e763e-ef04-4d38-9bc2-f219156d9518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfc89a2-7a50-4980-b031-627579949113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b70d0c8-a24f-4b60-9683-dcc270bfe785",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0e4306-b64a-4000-8c68-fdaec0ed0ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009e5661-e595-4f27-b7aa-376691b78cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7b8e52-5271-4eb3-acb8-09221ae66e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9641f5b8-92fc-407c-bc31-0764b27a14dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50452b0a-aca2-464a-8a98-fc8d25692244",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24539c8a-6707-4e99-ac86-ff6111b9015e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea439311-9ccc-4f5c-a05d-65ec28029590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7900f9e-a270-4241-bac1-ad73e9dc1404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af964b92-b54d-4729-b09f-09d65a27e8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc242785-7f41-4aea-bb2a-6ad30e7f98f7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3930cc92-3825-480e-ba70-b11bae68b814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eccb016-9158-4e9f-b66b-bd7844b653ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25151668-fd86-4c76-88b4-3adde7b135d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ca5ce9-b5f4-4b19-8c63-82774a2a3749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58403f3e-cd29-4c38-a712-d007d9cef67b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fec6d6-d6ff-4f7d-825b-e5027b551745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f2250d-7b43-4d4a-b4a7-c27f6bcea4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c42769-fdb6-42bf-93f5-ebc87850f908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf54fabf-827f-4512-9eb3-614510d35d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63c257f-2fb0-4186-9f55-e4e8d05dd327",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6e76db-a01e-411e-b20e-d7cf08057ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feada7bb-5788-48bc-a7d0-58bb745e526b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4ae134-997f-498f-bc03-213fdfcc6f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415af9f1-c368-4f88-aea5-78ba87789054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa997e4-e11a-471a-918c-98e640806a88",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534b8c72-51ca-4e0f-8764-e16f902deb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0083bf-9942-472c-89ef-700af55e90f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f912f68a-331c-4a78-8c6d-76da84831d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64b4708-7f50-442d-a880-3a0425815798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02eba719-b41d-425b-8ea1-1b1122775eeb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19987357-35f9-431e-8d23-6c2827661f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc29aba-027d-4b82-9236-155079d67bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f492fb4e-0fcc-4deb-99d3-71c5af05296c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5798b099-b982-4432-9bd7-38da1c64b3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86510c53-7596-4013-b3e3-d70eddc953ec",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d72fc01-631f-4f5d-afd9-82352cebfa28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e0be98-f30b-4955-8db1-e30dc34ec695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a3ed51-2b76-4af2-a6a1-5ebc49bb98e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf6444b-a98e-4e51-bd00-3acd31304e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c849c3f8-7ada-43cd-9c35-1a24d71a9691",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d480ccd-459d-4db4-aa74-83dc02c07cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410ae158-5f54-49a7-8732-e85552f83016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402f99bb-8038-44db-be32-d58bb4ae6421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba192055-b693-4af6-adec-6b34257fbc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e32693-9444-4ed1-b5c9-941b62d7eee3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d5b183-d603-472a-92e5-697dcfb38100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5059f869-c1be-4efe-a4b5-ed4163366731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90362768-83f8-4369-a593-12102b0911be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf868ba6-3802-4ab8-808a-c0940e23f3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83c2294-2089-406f-82fa-e8efb53b9772",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d98092-34af-4ca0-b469-283e869a4442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e26ff9-e89c-45ca-a0a1-1692607368c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5779727-d4f3-4f90-925a-0f4b74261268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e914aeee-ba7f-4c63-bf03-0f80fe847eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fb27c5-10b0-49a7-b4d6-25bd7178f46c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7697e8a1-46f8-4db9-ad49-685e2b6b1693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac310c93-1ecd-4147-ae96-7003d993c4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa13d551-a1f7-467f-918d-e26e97b3458f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433e57ac-8b6b-4027-9df1-d1019bd1db0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3adbcbc-7acd-451b-afed-100a421eec9d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e6a005-6ca2-4e9e-98e0-c1878fc74852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf5d9ee-940d-4acf-bcb0-83a866a5159e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d8e5e3-1052-4477-96b7-6d7423c12226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c97cdf1-e96b-4d97-b2a9-26da02fce54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3229b5dc-8b2a-41fc-83a7-d51a1d485232",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdeb8c05-4933-431e-98bd-be6f5e954992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edfb443d-e182-4762-a429-ae5055a001b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6becc144-1480-48b6-be4e-44e82c4b2db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2bfa69-7bce-448d-a61f-cdd177ed8ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aa3458-5e7e-4b06-86e4-b81e8783aadf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc377dba-7bdd-4303-9066-c2d3940725c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56df88c7-15c5-414c-81f3-a87c59cfde1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4618b734-45f7-4840-8476-c493d9c80831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19add20e-d5a3-4c39-8cf8-bdce9ff5eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70019973-f4b6-482f-aa5a-c6cbd24950e2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc95e03-6e5f-49c6-aeec-0c154260ef43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9ed55f2-f9aa-4085-a6c5-a5f969607b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0747ab87-5a8d-4a68-b4e3-84e876c44dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fc7379-2799-4e24-9b4b-9e13ef563075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aea23c9-b3f1-4ec1-b488-44ebb78072a4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fa799b-6678-4c13-b4d4-8b6fe79d2822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1279685a-5520-4814-afdb-6636f9b98de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a93e07-09dd-46be-93b3-6929b74633bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab65f60-dc10-448d-8dba-4267d9f9e95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aad08e-2e3a-47c5-91a7-a9e8a0142c18",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a90ffbc-81de-427f-a177-7fcd4e8e13ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0d2def4-ecf9-46b5-9803-6fc1bdf05151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8890ed93-9c0e-4c84-8bb9-7f946708cc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce4cef1-7a88-461e-8956-7081c1d62499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fffb73-3c71-47bf-9e1a-7883283ac534",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f934103b-58e4-42fe-9f6f-f429f2ef7a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5b361b-5552-45b6-b252-6ac025e1021d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d97b13-5f00-49ff-8084-6abaebe04b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211614c0-f33d-4332-bb4c-9b07f5120cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055dfedd-4383-4100-8d41-dc78238d1e66",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2ee19c-1bf6-4460-bd37-9eaf0bdc6609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae332dc-914c-4c09-9acb-787e098a4036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3d717e-df3f-473b-935c-86603e7873df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c108e692-1828-4176-b790-ada2c2e29e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ff1dad-64a9-4ae7-9e4f-8a8c90474eb9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872a361d-55bf-47b4-b443-1d1c6cdc9b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e7233e-047c-43a3-87bd-4ef2819b8ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5437d5ff-8069-4911-aa0c-aae6af7664a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1819b0ec-737d-425f-b6f1-a635ab2e6ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404dfa2e-4231-42ef-9a95-9fa648be7fe1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f687d2-fa5d-46bf-abab-69912b9de6e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf9877e-b4e1-49e0-a6d4-670f993ca6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70098a2-3e5a-4244-b6cf-895d433eae03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac1de88-409b-43a9-a8f7-95ed1d24f264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0f5a6a-c0e0-4e52-88fc-4c6b99654855",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19704e8b-e77b-4abb-8507-747ca4724a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f448e33c-42c9-41e6-9edc-2781aee20cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8a4b02-1912-4190-9a8b-bedbaad76b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b163c79e-9d09-47b3-a294-191428745fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480ca834-85ea-4df7-a7a8-dfc0b7e3e970",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6870ee5-24da-44d5-87ad-bf2456523842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91caa622-ca08-426a-8426-36a0b4fae8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ac8a40-94d7-454d-aa4a-43719121fe4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3249b41e-1958-44e7-afbb-021f201e7950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb560d00-6e7e-4932-80c0-d5cbc4a176d0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f2b4a4-d789-4d5c-8f8e-b7c2582aa3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d189e91e-c58c-4250-bf2e-1e2500c217da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8a1175-002e-444c-83a5-0cfc60c6ef19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a079c64-0a29-4635-83f5-84cf153f4cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52b8acf-8b29-4258-8185-fb4f3f35f63b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade57526-9aab-4bbf-a311-bd235182b22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f505a042-feb4-43e7-a16c-2d18586f43dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6694ad55-1961-4391-a4a8-a6750e80464f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cdb573-34d4-412d-94bd-a190dbba36ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b380f0ff-eecb-4dd7-adc7-e799e460638a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c179e6-5000-4e0b-9c66-085c0da673f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f0b6666-63fa-4a5a-b501-6e1e82376f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58d1a3c-74d8-41b7-8aaf-cbc803020df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b207cc1c-cb33-45d8-8427-bb95d4261c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2777ca7-c2a0-47a4-b8a7-8e96b30c6fc0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2465cc6-3352-41f8-b6a8-b0104d17ca3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48091146-e2a5-44fd-9f59-955475b5f160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908d4d09-19e8-4a02-9672-555e64e2fdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad98525a-1a79-4b86-ae68-f91555c86e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f5fe9c-f24a-46f9-a004-2c868ddbc919",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c97d8a-1d50-4049-a847-86e1bf534d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b68798-e9c7-41ac-9447-b1f0bb6b20f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c55bba1-b275-47f4-afd0-e829263457a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef5d886-2bfe-4766-83a4-cbb1bf46cb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4588ea-ed9e-4366-a784-9b79004905ec",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2a09fc-01d6-4823-9201-ac8c44bec155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896e3bad-7a47-4caf-824a-e5710cd09a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91251005-e9df-48d3-8a5b-efa67b9775f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692dcc51-3fb3-4da8-b65f-05ae8f2545b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47c0f27-a1b4-41ae-877d-78ebb5f8f2cd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9134a1e-688c-45c8-aab6-8d9b9e5c4f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e356b16-25ef-4cc6-87e8-d7e06d0202ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c393cc2b-c073-4bea-9cfb-21d95b769756",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb37c1e1-277a-499e-9fa3-c34a99bc878d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703923a9-b9bb-485f-9aed-9f4cee5c46d6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd95119-4fd1-482e-ba6c-9377de6ee9d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac7e33a-322d-4c5a-8407-fa24967bb2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd662ea-20c9-43db-b2b9-e66f2a112208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c9f4c5-0fc1-49f6-9414-1989de6bb636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a2d65c-2c93-4eea-948b-1688b98fc5b9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8062e0f2-ad64-4df7-a437-34231bbc8ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d2afa5-7052-44ae-8154-39fa4d3ab11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f97c9a6-566f-425e-b7cf-0bba1d9b774a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec79a45a-050d-49f9-a9f2-96189d5b2ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4ef98f-a904-4d32-a20e-ffa0034af634",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bd2929-3cfd-494f-85eb-e0b9c541b04d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7092b894-d99c-4ac3-b314-17b2c3fbe261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d9b889-99e3-4c70-801e-d188a6fd532c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81f5ee1-cfe3-4f4e-bf32-28788e8823be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884a1100-89dc-4184-8f46-14ee4cca3691",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153879ea-b131-48f3-9178-f20ac41d66ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf1a31a-6ef6-44e1-8731-220ea6c280c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5ddb6e-91b2-4284-95b1-6dd6d18e58c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb1dc12-84ed-49ea-8e4d-551218a0bb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef643347-80b6-48a9-b7f2-c445e9f5bc47",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d2752f-523f-46f9-bdb6-ed1f9a83cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f81f90e-12a7-4157-99a0-2609405745a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf32380b-0825-4a2a-8c92-49424ab24349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db8a330-8f0f-4d71-96be-de5bae8777c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7c3589-36a9-4cb4-b186-9fdf58db8049",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87082429-fc73-4ae7-a410-3f07e60b4038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39f365f-de2d-4f35-8349-1894ae601649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac8df22-b07d-40d0-95b9-6d861be71293",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf41082-27c9-46c0-a917-593004923d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5e36e2-444d-4b45-8dab-8f41b6307810",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f01eb32-c147-472e-895b-b766a3175add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d9993b-1c8d-410e-92b1-f2b86f818b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2238cda7-e9e3-4f3d-abce-916a91fc4229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55452440-43ec-4953-8435-3adb870362fa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa09b095-5d77-4859-afc4-ff3d01468a75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a6384c7-afb9-48b9-849d-7e7568920e02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1797a52b-2a90-4a0e-bc87-e9ad4a3b23eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "689f0f6b-693d-4422-8065-15840ac86856"
                    }
                  }
                ]
              },
              {
                "id": "6ff158f2-cad5-4d14-913a-5c8ce2fe10c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cb6b0a7-83c8-46bb-b122-5ff72bae6c4d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ddadca-e9a1-4b2a-99ac-f4249b626de1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8a5c58a2-d55b-4d96-b5e8-66b0b59a6970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5761b5a8-e70a-4799-ac0f-300f6af85db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ee3ce15-8043-433a-8b38-83ae759cef18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd221ca6-3eed-4560-8073-44f45b1116d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45c13849-77ad-4282-83e1-0249a16b9b07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03c6df45-56c0-4a15-8aa7-daa13406eb7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "815926e1-ad8f-4013-bc29-687dd7a05d3c"
                    }
                  }
                ]
              },
              {
                "id": "bf41cef3-fb4e-43cf-a2ea-5bce0c8d2363",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "43856053-952f-44cd-8e1c-333a5c95fe2f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b8c2e0-69d0-41e6-8ec3-16f577557ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e8dbca17-a2fa-4f0a-a7e9-968d17d11949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8471f13-0e8e-464e-b4ed-2e06e3015b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88aa617d-2b40-4150-ad72-0ea6ad9673ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "056eaae9-d9de-4ad6-9fc2-2a9b9dac80c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f5db936-403f-48b2-a59b-3c3640cc4ae6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1137be64-5d53-4cda-bd8c-500102d92cbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f0d91cd-5ba8-4b81-93da-68dd5e8a7fb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a841e7a-2b76-4425-a9af-f73104fdcc05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5deea87e-8792-45f5-bcd6-f0ce0040196d"
                    }
                  }
                ]
              },
              {
                "id": "424252a1-ccb0-4f10-9247-047eab150c43",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d3d4f2-115f-4ad1-9356-04d3fabe6ac0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "587cbe13-0af5-435f-87f3-4ef884e8ed4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8fb34e2-e400-4452-a597-54ef678141df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14d6f5de-91c7-407e-8227-8da3a329a530"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da2a8c07-d724-441c-acc3-666bc5044ec8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9e30cb6e-3e73-43f3-a68a-f74132b7879f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "404bce3d-1e3d-46ad-9c7e-6ea773a3e0e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5a3ea69-1086-4bd1-a735-adfa970e9b6d"
            }
          }
        ]
      },
      {
        "id": "e40ad737-d6b2-4623-9c40-8a7a6f70ce4a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "96ed5086-da49-486d-9c67-c38e346779bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1180d62-efac-4193-b938-65727a68d39f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f266e7f5-570e-4a6d-acfb-a1048d5cbc0a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8740063-25e6-4174-b3fc-de1cc7f8ab0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8e311e23-523a-4820-bbee-48abcfcc69a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07930af7-b43a-4cbe-ae3b-116c4d49e5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6971d804-d750-402b-94ad-c2e1c9388983"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6383993b-24d8-4b77-9092-c829e2a305a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ee18d27-dead-4480-9b29-e1c55dfec1ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f298cc9c-d8d6-43fd-9972-0167b2a125d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f28b424-0045-4c6b-b9a1-4770dc41f30e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ace9bf9-23e0-4a09-912c-b09ebee27506",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "483d9458-0195-4d23-8bc4-2b22292007a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec8b0af5-328b-498a-b0a6-e99d115aced8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea03f145-108f-49a2-9207-8d9435edde77"
            }
          }
        ]
      },
      {
        "id": "494c8d5e-0cdb-4f2d-9b64-cf3d9ab6fac5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e76c14b7-9d67-4db7-be2c-622d787b8978",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1618746-3dfc-4840-a01d-cd522181c612",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43ed1830-b468-4be6-866d-1900954ecaa5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98221ae1-5b80-4d7d-972a-176bde037866",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edde91dd-352b-4a70-984b-6b90c21934ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956f866e-4f14-42c7-af02-f5045afaa122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dd47235-9181-4064-8051-e596af339e80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5aca7377-49af-4f07-b5d1-8ae00dd8b7bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1309f3ba-82d3-47c9-b3be-cf83628a2e8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58af9e0e-8bb2-489a-ab75-712f0494ca74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6826d72-ae17-47a5-8519-b226ab61590c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05f2a43d-caee-4c9a-b198-14612fe9d319",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38143369-ad83-4709-bba9-75652fbb27c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5156cf64-66b6-4b4c-aa1a-c8ba210c3d7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "347c5121-bcf8-4253-8820-3fae7e011b8e"
            }
          }
        ]
      },
      {
        "id": "4efcc6ba-c17c-47fe-a089-707b2e17c8f9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "99c877d1-7f6d-4ed4-a840-b8ff34896d64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edfbebe1-95ca-47dc-a3a9-bfb65befcec8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01f7e076-9303-4476-bc8c-2728be25ba8e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2bef1e-9179-4521-9991-f59d4c10b136",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3f83502-ab0d-4de0-82dd-75475b36d827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ad9c0a-962d-4b57-9222-e5cd9d34ed26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f939ed2-b7dd-4e33-a1ff-0dc07a272ca7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5501ea7-4d72-4fdb-9f1d-c05e9243b35b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "983dd59e-5d09-4bb6-951f-b93e8ff86428"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6c444d8-535f-4057-869c-de968b5dbe7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b938ed15-669c-4e54-ac6d-902bb8f6d9ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05243ee9-d0fe-4f14-b90c-a27f6ff6ade1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93c53bd8-4114-4c94-8b2b-7567904c2c88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3ef7d00-3b23-4535-8584-927128bf6478",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "980aaaa8-d1a6-4857-bd69-69378acd2c1e"
            }
          }
        ]
      },
      {
        "id": "7fcfdc19-338c-42f1-b4bb-b5fe85bb4e2d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac7921d8-00ad-47b7-9599-6b960baa58e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f10c95e0-68d9-4ee9-8578-9540071ef0b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3e4669f4-9203-4b05-b633-190a94046d35",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2ecc7c9-8ea7-4970-8c60-87dd36399afa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a57f0b45-8290-4cb0-b62e-a1f9daf9d5b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 147.85263157894744,
      "responseMin": 5,
      "responseMax": 9993,
      "responseSd": 664.4905813241554,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699490050280,
      "completed": 1699490101510
    },
    "executions": [
      {
        "id": "364048ed-7513-4be9-b3e3-ce624ea8db68",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e559966f-9b4b-4063-988c-2a10235fb71a",
          "httpRequestId": "bbdef554-1295-4d4f-9cf3-032a3c86b088"
        },
        "item": {
          "id": "364048ed-7513-4be9-b3e3-ce624ea8db68",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3c8f5b2c-9e1d-4e7c-9d87-cc3c2db086c2",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "6fe8f2f3-6cad-4d4f-8533-ce9150cb43e1",
        "cursor": {
          "ref": "6043c52b-72da-429f-8a2c-380bbae0b9a7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "24378433-b251-49e6-83b4-e6944ead7b3d"
        },
        "item": {
          "id": "6fe8f2f3-6cad-4d4f-8533-ce9150cb43e1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "30d53a92-93fc-47d6-a4a0-8dfe84274926",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "0c26c874-6bfe-49b0-9a6f-9e103c523e1c",
        "cursor": {
          "ref": "966376c7-c7f0-447a-8bac-caaa46f65f2a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "108038a7-80a4-4652-b72a-0af74d886b97"
        },
        "item": {
          "id": "0c26c874-6bfe-49b0-9a6f-9e103c523e1c",
          "name": "did_json"
        },
        "response": {
          "id": "c493b720-be04-4b67-9d9e-2dc7627bb10c",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd28ba93-9b76-4cc6-bf2a-74d7ead605d1",
        "cursor": {
          "ref": "e289cd52-a41e-42ee-ad7b-a86f770fa224",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d1b9734f-6ab8-4798-a395-691dfb49a780"
        },
        "item": {
          "id": "fd28ba93-9b76-4cc6-bf2a-74d7ead605d1",
          "name": "did:invalid"
        },
        "response": {
          "id": "3f769e53-3222-48d7-9874-81cbd2c0333c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1025,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd28ba93-9b76-4cc6-bf2a-74d7ead605d1",
        "cursor": {
          "ref": "e289cd52-a41e-42ee-ad7b-a86f770fa224",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d1b9734f-6ab8-4798-a395-691dfb49a780"
        },
        "item": {
          "id": "fd28ba93-9b76-4cc6-bf2a-74d7ead605d1",
          "name": "did:invalid"
        },
        "response": {
          "id": "3f769e53-3222-48d7-9874-81cbd2c0333c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1025,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778809b3-2b1d-4161-b4a7-5794ebe1c254",
        "cursor": {
          "ref": "54346a7d-ae2b-4b39-95a5-56e32a6120a4",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "45c35201-4b18-49ab-bf26-955d436d28ac"
        },
        "item": {
          "id": "778809b3-2b1d-4161-b4a7-5794ebe1c254",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "914ce7c6-c79e-47f6-817d-87296b57b762",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c175fb7-4a0c-4e71-97ab-0be52f49f915",
        "cursor": {
          "ref": "52183f8e-376c-4323-95d6-7837f877eb68",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c67ed974-e2d3-4051-944c-d535dc057c2e"
        },
        "item": {
          "id": "2c175fb7-4a0c-4e71-97ab-0be52f49f915",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6cfb2f13-92cc-4bbd-af6c-2bd6135d3657",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f2e2a8-2905-40da-9fa0-3f588b77d3d7",
        "cursor": {
          "ref": "30161b3e-eb00-4905-ae15-c1fc0417c1ce",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9e6c9869-2028-4271-aa11-a0c8900708f6"
        },
        "item": {
          "id": "30f2e2a8-2905-40da-9fa0-3f588b77d3d7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f47846d4-4979-4f70-9a77-3ddd78f694a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 121,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db266ee3-af88-4475-8227-6bfcdbd0d084",
        "cursor": {
          "ref": "b58e6248-ace0-4d74-972c-c18118c205e8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5136f5ad-9021-4239-98ab-c90966ca195f"
        },
        "item": {
          "id": "db266ee3-af88-4475-8227-6bfcdbd0d084",
          "name": "identifiers"
        },
        "response": {
          "id": "2bba8596-a351-4a68-a613-35b27b2e2c32",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3b1d02-fb57-458f-8c12-804d57d313d7",
        "cursor": {
          "ref": "9d098c5c-f0aa-4668-9a80-7fc4d703fd5a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ec5afdf9-ee8a-4ce3-a82a-7528dede344c"
        },
        "item": {
          "id": "1c3b1d02-fb57-458f-8c12-804d57d313d7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "64dcf4f5-2943-483a-8fd8-10986605513d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecebcd5-d47b-4e12-96ea-831644523a6b",
        "cursor": {
          "ref": "aaf0ab9c-8c3a-4e31-b61a-19e1a5cb38d0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "215087fa-da5f-4261-88be-4681d1f52af8"
        },
        "item": {
          "id": "0ecebcd5-d47b-4e12-96ea-831644523a6b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "88f01f30-fd5f-4c78-8bd4-706b41161822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d98ab24-6c4e-4748-be2b-be78fe440fb3",
        "cursor": {
          "ref": "d2035044-4c36-43fd-afbf-d0fa58d28b01",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ba4af31a-1a15-40b8-8603-e2f3c7cf11a9"
        },
        "item": {
          "id": "1d98ab24-6c4e-4748-be2b-be78fe440fb3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cf010a1a-88d4-45f6-88a6-ecdf494e188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6f3ab8-f1ed-4aba-86c4-b97000ed343d",
        "cursor": {
          "ref": "afadf32a-d71a-49cf-bbef-4c95bc62ea34",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b31e6ff7-9497-4f51-91b3-c44d713b8827"
        },
        "item": {
          "id": "8e6f3ab8-f1ed-4aba-86c4-b97000ed343d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7e6b3c4a-a66a-4409-975f-1507767f9896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f2ea37-c159-4338-9a37-47dde91d89d8",
        "cursor": {
          "ref": "5e8d8f20-f328-4309-9fbc-38450674841f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fcd5e9cb-d166-4d3c-bab9-389e24829794"
        },
        "item": {
          "id": "46f2ea37-c159-4338-9a37-47dde91d89d8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c9263159-b8f0-4d36-8d7a-2e8f5186ded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714f07d9-108a-4557-bac9-bac5ba025f68",
        "cursor": {
          "ref": "7ed309dd-7427-4e38-b698-425c81321318",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aa5195fc-e2bb-4437-9096-ed1285f3e0a7"
        },
        "item": {
          "id": "714f07d9-108a-4557-bac9-bac5ba025f68",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e1819370-070c-44b5-8ffe-3fad4d00eda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce7192e-c5bc-42f0-9c78-f9243de2f144",
        "cursor": {
          "ref": "30099977-1aa8-4339-bedc-f1ee9f6fa50e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f368f9c6-e2da-4396-8fea-05a1975b17d5"
        },
        "item": {
          "id": "4ce7192e-c5bc-42f0-9c78-f9243de2f144",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "90115258-6546-4462-bd68-175ac299b001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c0334d-bd32-4ee7-b9bb-6c94e953b863",
        "cursor": {
          "ref": "b65a4cd9-bbcd-4b9d-89b2-55e3a03debec",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "25f7006e-920e-4499-bcc1-8a36f333bf21"
        },
        "item": {
          "id": "05c0334d-bd32-4ee7-b9bb-6c94e953b863",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0356a42b-91bf-4556-9a57-3986a9e5ed2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a8991b-4c63-4595-8bc7-33cb6ea3c8e5",
        "cursor": {
          "ref": "0029eef5-f1be-4ed1-a7fe-63b7dcce4055",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "57a82bf9-0f57-4005-b46d-54cca788e335"
        },
        "item": {
          "id": "10a8991b-4c63-4595-8bc7-33cb6ea3c8e5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6c73634d-cf87-4f28-9fc4-7973d48f417c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb1ed4c-6bde-401a-a38c-a145f5c672f6",
        "cursor": {
          "ref": "fd989548-2952-4683-910d-5b3afbf51036",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "327273be-7d7d-4fa6-9f0d-511ca74760ce"
        },
        "item": {
          "id": "9cb1ed4c-6bde-401a-a38c-a145f5c672f6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "61d96dbb-167d-4981-ac0d-51348dd753a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535830fb-5417-43e3-a53c-65563431de0d",
        "cursor": {
          "ref": "ba5d097c-269c-43aa-9912-23e17205e8eb",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c11439f4-8277-445c-8645-b4d2b9a3339c"
        },
        "item": {
          "id": "535830fb-5417-43e3-a53c-65563431de0d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6e0d5230-8428-4799-bd88-a289c2a7a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e06795-0779-4976-8523-2ec54f694a4e",
        "cursor": {
          "ref": "a9a93edc-d6d1-42b5-94e1-4774c9709523",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "db3a07f0-3cf9-4f7d-8f25-7fcfe5b90e88"
        },
        "item": {
          "id": "59e06795-0779-4976-8523-2ec54f694a4e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cbf3bc3d-4a09-4857-8358-8d2d37438bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f306edbd-4375-475d-97d5-b107f6dd7c2f",
        "cursor": {
          "ref": "cd13d579-9fab-4d44-9741-4fdb719037ff",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "182efb3a-10c2-4124-a68e-07f7efc92191"
        },
        "item": {
          "id": "f306edbd-4375-475d-97d5-b107f6dd7c2f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "952bfc03-fd39-40ef-9453-fb47e71989c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce43a4c2-9dbe-45c3-9c6a-2cdcfbebe38a",
        "cursor": {
          "ref": "f5438f86-fddd-4057-8038-51a0433b91d9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0a6e5f1c-eda2-4f23-9f31-87bd3ddd46c8"
        },
        "item": {
          "id": "ce43a4c2-9dbe-45c3-9c6a-2cdcfbebe38a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2586721b-fedc-422e-8637-8376d4717bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c38a094-03bf-4898-8767-5b1e08841c68",
        "cursor": {
          "ref": "6bb7613d-523d-4c5c-ab81-fbb8e4448098",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "499559ea-bd64-4203-85b5-f0094f79d2a1"
        },
        "item": {
          "id": "6c38a094-03bf-4898-8767-5b1e08841c68",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4e5bd6f2-bfba-47c3-9cad-ab9ce46beaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeac436-a7af-469f-af8f-f2cfa48238de",
        "cursor": {
          "ref": "8e8d5905-9633-45ba-9b03-30bed71ecdd9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3e20d964-3d0b-4c06-8b19-4e9014923e9b"
        },
        "item": {
          "id": "9aeac436-a7af-469f-af8f-f2cfa48238de",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3fe2ce08-8dd8-4993-8861-6a3c92a161db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687e7ea2-1dbe-4757-b9d3-7e95cf192cec",
        "cursor": {
          "ref": "434dd528-b17c-41d1-8281-e61e5f1c87a3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6acade7b-8b48-4e7e-bacc-d9ecc4a87e64"
        },
        "item": {
          "id": "687e7ea2-1dbe-4757-b9d3-7e95cf192cec",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a20b5c86-4cfc-45f6-abc5-66fb6ad66b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da14bc4f-35f1-4444-8261-e3088664e6e6",
        "cursor": {
          "ref": "9f708f04-0375-46f8-b851-82dc7eecb27a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cc57b60a-1e3c-4717-aad9-3299a1b166b7"
        },
        "item": {
          "id": "da14bc4f-35f1-4444-8261-e3088664e6e6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "85a2e094-fae8-43e8-b1b3-bf9f4e4474d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b50569-b6c7-40d4-bd3e-64dd5b3268f6",
        "cursor": {
          "ref": "10cffda3-72c0-44ad-9b4f-31691f592170",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a0be1371-c8a0-465f-8372-5353bef00d08"
        },
        "item": {
          "id": "d2b50569-b6c7-40d4-bd3e-64dd5b3268f6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6543a364-6b19-4af7-b993-ebb93cc91640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1587483-1573-43ed-9c47-d8e65132ddc9",
        "cursor": {
          "ref": "b3f358f7-e76d-44b7-ac53-3dc95cade5fe",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7af75fa0-2ca4-4012-b9fd-076289d9b611"
        },
        "item": {
          "id": "e1587483-1573-43ed-9c47-d8e65132ddc9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9e4651a-509b-45db-bdb8-5e0c38fb217d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2b0108-021e-4dd3-bc67-9c8c53e721d9",
        "cursor": {
          "ref": "6a9330b9-03ce-4556-904f-3ea4a45ae0b4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bb7565da-55d7-4454-ab28-e243d9f82387"
        },
        "item": {
          "id": "8a2b0108-021e-4dd3-bc67-9c8c53e721d9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "172e7618-50f0-4e55-a3c0-23ad1d7db85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94262ce1-744a-4018-a6fb-7129cf354495",
        "cursor": {
          "ref": "78b5e6b2-f964-457c-8869-4da74feb9e03",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f94f1fa2-d5fd-4c7f-afe2-a62b704e5e11"
        },
        "item": {
          "id": "94262ce1-744a-4018-a6fb-7129cf354495",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "794a500c-2204-43ef-b93f-f3591162f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a24df80-cb8c-4296-8b49-9b19187df910",
        "cursor": {
          "ref": "40185870-41a8-431a-91a5-7d8bd5f5e8ce",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d7b3eb83-c9b0-4d95-b964-18a195262de8"
        },
        "item": {
          "id": "7a24df80-cb8c-4296-8b49-9b19187df910",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "591ff518-3b58-4e8b-830a-adf6cee9ce02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5195b44-0bc4-4b65-be68-e70be65626b4",
        "cursor": {
          "ref": "d068bdce-277b-47ee-a695-a46703c61f3a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "132dc61d-0c84-46d6-b772-022c6119f174"
        },
        "item": {
          "id": "e5195b44-0bc4-4b65-be68-e70be65626b4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9c7e0483-b11e-4507-978c-c83fd8a5d01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02295ca6-73b5-42ab-96c1-5d0df452fdce",
        "cursor": {
          "ref": "ec918c3b-93b4-4f44-8d57-26375ae4c9e5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "23c74beb-a6dd-4b6a-8da8-624d1b273dff"
        },
        "item": {
          "id": "02295ca6-73b5-42ab-96c1-5d0df452fdce",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5f983a72-2e00-416c-a925-8ae6da06d3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad3f337-4b81-42c3-b53f-bb1748a3a802",
        "cursor": {
          "ref": "1bfdb5db-5f27-4a89-b341-8766e045e7de",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b9577a09-98ef-4f65-acf8-f625cd2f36b4"
        },
        "item": {
          "id": "fad3f337-4b81-42c3-b53f-bb1748a3a802",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4d635676-8633-4fd0-b62e-18bfeca5bb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc1d00c-6805-4548-a9e3-e3baae38b0ee",
        "cursor": {
          "ref": "161f489c-ae3e-424f-81a1-c8cadc309fc9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a50b4193-367f-4647-81ab-e59955ca03fe"
        },
        "item": {
          "id": "7fc1d00c-6805-4548-a9e3-e3baae38b0ee",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9a485b48-8518-4210-8c21-03edd20fcd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024fff20-50fe-4e99-91d2-d111b5f6fc46",
        "cursor": {
          "ref": "9655eb4b-316a-4083-ac7b-2b6136efdd5e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6208d2af-c40c-429c-a1e6-d67c2a3abfe4"
        },
        "item": {
          "id": "024fff20-50fe-4e99-91d2-d111b5f6fc46",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2251c6c8-922e-4de0-8ab1-f7b45ec9b57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5da04f9-c52e-4167-874c-d90963a8f47f",
        "cursor": {
          "ref": "36be5ee0-fd92-43c1-b30d-be6381980389",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cb9e7e9a-b766-4d58-bacf-c0f1fa4e55d9"
        },
        "item": {
          "id": "c5da04f9-c52e-4167-874c-d90963a8f47f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "14ae423f-c8c0-4c18-b3fc-6f4e4691dd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6ae965-b9b7-495f-9d56-8e824d5c95b9",
        "cursor": {
          "ref": "86cea7af-06d3-433b-b58c-ada6a162a8af",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "86e329dc-0337-4fdf-ad90-63c20a97fceb"
        },
        "item": {
          "id": "aa6ae965-b9b7-495f-9d56-8e824d5c95b9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "38c5cee7-89ad-4eab-907c-608efcf3a9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5c02aa-6570-4652-8581-bf282ae95fc0",
        "cursor": {
          "ref": "ee8b94ce-a65a-431a-bd75-8cdb87d443f2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "093b6bb0-733a-4c47-b7e8-de46189452c9"
        },
        "item": {
          "id": "5b5c02aa-6570-4652-8581-bf282ae95fc0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5a40cd61-4eed-4498-8337-40d37de7f505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c7aa67-2153-4ed1-ac23-59e49613fb51",
        "cursor": {
          "ref": "bf412c80-31e0-4e42-b6dc-14445e57c3f8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4bb1fac2-1ec2-4a31-91a1-eb111b5aa2e7"
        },
        "item": {
          "id": "53c7aa67-2153-4ed1-ac23-59e49613fb51",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b33e6b06-7342-4330-8955-0902add6b00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d6bc7d-a76c-4a6f-80cd-d8198c9cc145",
        "cursor": {
          "ref": "ccf8631c-c8ea-416b-9c50-cec637054c9d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fad28433-a036-4432-b62c-954dd3da3f74"
        },
        "item": {
          "id": "44d6bc7d-a76c-4a6f-80cd-d8198c9cc145",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4a7ff6d9-1679-4d96-947e-35c7079bc99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3595b76a-85e5-44f8-a87f-c2938142c8f2",
        "cursor": {
          "ref": "3c9359d2-941a-4335-af31-8878c705c1ce",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b44ff87c-748d-4cd6-92e1-5cf77928ff82"
        },
        "item": {
          "id": "3595b76a-85e5-44f8-a87f-c2938142c8f2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8bb323d7-078b-436c-b006-962c5c68dbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d5d6f7-67eb-4c74-aa34-a171a3fc8f3f",
        "cursor": {
          "ref": "e832daaa-4af3-45f3-941f-156bfa08fa4f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f0d1b585-da7b-4302-a672-416913179cc3"
        },
        "item": {
          "id": "75d5d6f7-67eb-4c74-aa34-a171a3fc8f3f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "551ebab4-d530-4432-9bce-c7c726924a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b545d-d639-4b3d-8e7d-3f77affdaa70",
        "cursor": {
          "ref": "cfc83078-8ddb-42db-a0c9-200e2bc9ede5",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b0832d12-548a-4288-8c58-a958b34c1ba6"
        },
        "item": {
          "id": "607b545d-d639-4b3d-8e7d-3f77affdaa70",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d3dd4e8d-f283-4ebf-a2b8-0379fdcc02da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e4fd4f-f8e9-41fc-b761-d5e1c04deb41",
        "cursor": {
          "ref": "8d51c016-ce89-4981-8696-de8a36c5327d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9981d91c-07fd-47d0-898d-efedd5facc00"
        },
        "item": {
          "id": "b8e4fd4f-f8e9-41fc-b761-d5e1c04deb41",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d1289687-dc86-4887-ac14-9e6d394e5128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e2218e-fda9-48d6-a7ca-94a6f2bb48f7",
        "cursor": {
          "ref": "3b9596d5-56c8-4d85-9a5f-4a36064bd038",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6639f524-649a-4b23-83af-601adaa62a65"
        },
        "item": {
          "id": "87e2218e-fda9-48d6-a7ca-94a6f2bb48f7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bd2e404a-2960-4f8f-93e5-ae0bd116390c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ab6355-563f-45b6-a0db-f49501b8b50f",
        "cursor": {
          "ref": "c91fe2f1-2d0e-4f90-a93a-f033fbf262b6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "85bbd1a5-c239-495c-8361-8a13db79bdbf"
        },
        "item": {
          "id": "35ab6355-563f-45b6-a0db-f49501b8b50f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a7b794b1-fc6e-462e-97a3-b8f7e7fd73d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80eb3ed-2366-4cfd-b754-5313cced15fb",
        "cursor": {
          "ref": "8c0af226-8198-4f18-9614-a57893c5006f",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f9daa442-4458-445a-af3c-33633902d6ab"
        },
        "item": {
          "id": "a80eb3ed-2366-4cfd-b754-5313cced15fb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "69f08eb5-05e8-41b3-aeea-9ab751af7f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095a192a-51b6-41cf-9ca1-5f9081f8aa70",
        "cursor": {
          "ref": "b1641751-bb6d-4681-98d6-dd648f3e181c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6510e27f-0740-4d7e-8461-6521bb2c081b"
        },
        "item": {
          "id": "095a192a-51b6-41cf-9ca1-5f9081f8aa70",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a1cde195-b469-4fd9-b716-5ffe45496474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e4e0dd-7392-4f2a-988e-f96ef5c1d3ac",
        "cursor": {
          "ref": "41228fdd-524d-4df7-b47b-d75177669d70",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b98e8e3c-28a6-4567-a45d-e5a60338f68d"
        },
        "item": {
          "id": "d0e4e0dd-7392-4f2a-988e-f96ef5c1d3ac",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ed5a8cbb-92e3-4b88-a966-6d3d8ec00aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24e79da-dc8a-4142-ac3a-936ba91bb6cb",
        "cursor": {
          "ref": "b68c5a41-207c-486d-aee8-fe3317fe606b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7994572e-01e9-4630-90e7-01f65d0bdd8d"
        },
        "item": {
          "id": "b24e79da-dc8a-4142-ac3a-936ba91bb6cb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fef68d82-2d80-4a44-b532-9135f4cd5a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b25e76b-adb5-4439-8d12-73c712449fc0",
        "cursor": {
          "ref": "1b26881d-b32c-4fc6-91fe-0c1535211ef1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bd4455c4-f2df-4073-9834-0529cc6ecd13"
        },
        "item": {
          "id": "8b25e76b-adb5-4439-8d12-73c712449fc0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "028fc756-56fd-4287-a453-31fee27cfa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3abfd9-5a37-4a2c-ab48-90a3eb557740",
        "cursor": {
          "ref": "74ed9d27-4802-4a94-b7c3-e16426c6ba0a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b057b711-cac1-4f8d-b7d0-26287442ae6f"
        },
        "item": {
          "id": "8e3abfd9-5a37-4a2c-ab48-90a3eb557740",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "37447343-434c-4096-93a0-abfeb86ea89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e83526-0ce1-4cd8-8fe5-cb48ab8b5f97",
        "cursor": {
          "ref": "86295ab0-3b76-40a7-bf8e-877d7892bb31",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "79a4f8c3-1911-43b5-a133-0b148247c543"
        },
        "item": {
          "id": "e9e83526-0ce1-4cd8-8fe5-cb48ab8b5f97",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0cd035ff-0213-4af8-ac4a-5f41a260814b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c37ffaa-5ab5-484e-9aa4-1563e16f9f96",
        "cursor": {
          "ref": "5fb2d0df-9e0a-4aa2-aed0-2adf250634fe",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d4ea88b7-0938-4b5a-bd45-213fa364b3ad"
        },
        "item": {
          "id": "6c37ffaa-5ab5-484e-9aa4-1563e16f9f96",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d3e856f8-c7ca-4fe8-8ffe-dd4d94d39464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ad093d-479c-49e8-92f1-4c4d7b67e23c",
        "cursor": {
          "ref": "5e9a07de-3aa6-472c-981d-d41b84adf423",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "66b3b8e1-8720-4f25-9d30-e084bf4a0c56"
        },
        "item": {
          "id": "10ad093d-479c-49e8-92f1-4c4d7b67e23c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e78debca-150b-4eff-ab03-9f982d6172b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2472a59a-bef5-4ced-b612-47ffd3af4595",
        "cursor": {
          "ref": "f0795620-fa1b-4d26-8c44-023d40187317",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "da8dff85-35aa-484c-be45-d5906501d3e6"
        },
        "item": {
          "id": "2472a59a-bef5-4ced-b612-47ffd3af4595",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "74b06ddc-5cf3-4e77-9ff6-cc4ed15baf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76de865d-0d48-4060-9631-b9a2155044bd",
        "cursor": {
          "ref": "d296d4f8-d9ab-48ce-997f-bad0a3f4d141",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9e0f64cb-8e0b-4297-947b-1c5808d8011c"
        },
        "item": {
          "id": "76de865d-0d48-4060-9631-b9a2155044bd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e562079c-3866-4474-884f-85cfb9c145d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2d9dfe-7598-4e80-93d3-46f8036e7dae",
        "cursor": {
          "ref": "c77381fe-3aa0-4e81-a908-85739ab0ca04",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "80fbe8b9-e5bb-4718-9e7d-da469564f480"
        },
        "item": {
          "id": "fa2d9dfe-7598-4e80-93d3-46f8036e7dae",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "82c6b0fd-4e49-4c0b-b862-e104e09c903a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296876df-4dcf-46c1-bf85-2a44a3849319",
        "cursor": {
          "ref": "8b48e06b-7066-4246-9076-f630772169a6",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b4286ca7-7ea6-4872-ba8d-13ac0aae4258"
        },
        "item": {
          "id": "296876df-4dcf-46c1-bf85-2a44a3849319",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9b0c59fd-9c16-4e40-9ed5-30853eac3a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e79077c-94e9-4c65-a982-4bb86d82c80d",
        "cursor": {
          "ref": "b6fdd7a4-7515-41f4-b21e-01ac952b386f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "150e00e8-9000-4f59-b254-e9f0471f7611"
        },
        "item": {
          "id": "9e79077c-94e9-4c65-a982-4bb86d82c80d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d5017697-41b9-4aa9-a734-6d3c0a3ee0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788efc74-5a53-46be-b35f-722591688e87",
        "cursor": {
          "ref": "71bc8091-440c-4267-b79c-6b5d2b553055",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7a13cd53-bb45-4d11-83f4-99314f0eecde"
        },
        "item": {
          "id": "788efc74-5a53-46be-b35f-722591688e87",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8b6a941a-cd0a-4681-8422-e3beaaba2630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdf2fce-0e04-4dc5-a747-d2a0b35a4fcb",
        "cursor": {
          "ref": "f65cadc5-81cd-4a10-a6a1-a73bfdaac783",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f9259052-0486-4bc9-b3d3-6529121175e1"
        },
        "item": {
          "id": "7fdf2fce-0e04-4dc5-a747-d2a0b35a4fcb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7fe7d92e-78ba-49b9-8acd-2ca44819fec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db070bf8-39f0-4aad-923a-24a4c40faca2",
        "cursor": {
          "ref": "80889112-edb8-48d3-a865-3e74af5f7855",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b64e3dee-746f-4026-9cfd-468714dc5fac"
        },
        "item": {
          "id": "db070bf8-39f0-4aad-923a-24a4c40faca2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cd2b0a5b-5a68-4c30-b3a5-db1804f69193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4e4a8e-4123-4847-b785-62acfce8a330",
        "cursor": {
          "ref": "5cd5d4e5-1073-40e0-9cf4-f7cf17edb1db",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d5daf674-3cef-48ea-9264-40a4b9c2b0d1"
        },
        "item": {
          "id": "df4e4a8e-4123-4847-b785-62acfce8a330",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "530cba08-c3af-4571-aaf6-93e9bdbfc526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ab3b47-7878-485a-9a4e-6462010cbfba",
        "cursor": {
          "ref": "3af1bd3f-127e-43c8-80c6-1e2e8233ffbc",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "48fc7cdd-15f2-4644-ab5e-a7651204a02e"
        },
        "item": {
          "id": "d5ab3b47-7878-485a-9a4e-6462010cbfba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1d02143a-0222-4577-87af-934218fd9a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f4485b-a662-4aa5-8db0-ad5d782ebebc",
        "cursor": {
          "ref": "8cd2479a-ce28-461b-9774-42d892d88b02",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6d18828a-8694-46c0-a072-c891d367cc30"
        },
        "item": {
          "id": "c2f4485b-a662-4aa5-8db0-ad5d782ebebc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cae58be1-a9d2-4134-a461-1323265de290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0ac117-c0b6-4fc8-bbb8-7464749695e3",
        "cursor": {
          "ref": "e5686843-15cd-41bc-957a-facef1a51300",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "686c7c11-9bcd-4b3c-901c-73998762e6c7"
        },
        "item": {
          "id": "1e0ac117-c0b6-4fc8-bbb8-7464749695e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b9c672bc-360a-4824-ad27-1d274b3ca24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d7e07b-439b-435d-ad1f-5c602c52729f",
        "cursor": {
          "ref": "402c343c-a15c-4479-9ba9-2b426071c654",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cc571644-68b6-48d6-964a-08b986ce522e"
        },
        "item": {
          "id": "14d7e07b-439b-435d-ad1f-5c602c52729f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8cb2fb13-4aec-4b44-9a28-262fc0041527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2591e3-b474-4f20-b2b6-bd22f7154dc9",
        "cursor": {
          "ref": "0d9624da-e209-45cb-b203-b0064ea7f67e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ee031e17-f082-4fae-a715-c522290a38e6"
        },
        "item": {
          "id": "5e2591e3-b474-4f20-b2b6-bd22f7154dc9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "689b951d-046c-44d7-b98d-ae80d7c0e931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31283fc-5f67-4ac7-a090-e1e5b5a168ab",
        "cursor": {
          "ref": "af1692c9-da6c-4198-8bc1-a629274515dd",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa331507-ca90-4736-a96e-2ebd2eda5173"
        },
        "item": {
          "id": "b31283fc-5f67-4ac7-a090-e1e5b5a168ab",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1916165e-8129-42d9-b446-53b7de567b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02fd15d-ffaa-44ab-82a0-931ca1d64855",
        "cursor": {
          "ref": "f15f1c80-eacb-4a0e-85cb-d463e0eb97e4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "926426af-c74c-4e6e-a908-25697a8afa57"
        },
        "item": {
          "id": "d02fd15d-ffaa-44ab-82a0-931ca1d64855",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f7fd72bd-8e2f-448a-a2e5-1d7472eb2ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae24c5d9-5594-410e-8bde-160941596463",
        "cursor": {
          "ref": "4f08df48-5a93-4bf4-87ec-a49639071ca4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b5a9b078-4d6c-4ac2-9db4-13ed1d196182"
        },
        "item": {
          "id": "ae24c5d9-5594-410e-8bde-160941596463",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a1eb252a-aa1f-47e5-9a5b-b89958dccf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5ad4a9-165f-4a80-9c47-83a0b959343e",
        "cursor": {
          "ref": "b9cbb496-996d-47ff-84a3-f29df3e6e628",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "38369865-fe3a-487d-8ee2-bee4fbbff6fd"
        },
        "item": {
          "id": "7e5ad4a9-165f-4a80-9c47-83a0b959343e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fc568aba-2f8d-48a1-a386-dbe537ba17ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4411fe55-0710-40d5-abbc-7aef167fb20d",
        "cursor": {
          "ref": "822ca498-1ee8-4ac9-a80d-836d448afe25",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ac181472-5b19-4e46-8231-68ccd49dd907"
        },
        "item": {
          "id": "4411fe55-0710-40d5-abbc-7aef167fb20d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "30cbd2aa-af43-49f3-b1da-8f15639c6197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c018319-01cb-4721-8ddd-07f9247150aa",
        "cursor": {
          "ref": "7996bce4-0b6d-4c18-be53-fb6909a8c84a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ecfc97f2-1083-4650-9538-61a010f04270"
        },
        "item": {
          "id": "4c018319-01cb-4721-8ddd-07f9247150aa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9963a550-ad15-4b91-affd-7db44be034fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd8ad8-97a3-4d86-9e72-0d0618099be1",
        "cursor": {
          "ref": "084a4115-594f-4eb4-ad49-81451e4a9420",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "351e0df7-dc82-4620-ad34-ad0ceac4688b"
        },
        "item": {
          "id": "79fd8ad8-97a3-4d86-9e72-0d0618099be1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3b4c774a-d5c9-4bc3-8af1-2850d26a4727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa14bee-02eb-490e-b605-016a9a256a44",
        "cursor": {
          "ref": "00a4e2e2-f875-4587-8ca5-f9cdfae422d3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "63231d95-556e-46f3-98ad-d12181a4bfa2"
        },
        "item": {
          "id": "7fa14bee-02eb-490e-b605-016a9a256a44",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "58875615-e50b-4ae4-8453-cf99a7029cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302aeae1-8e1e-4661-8f9f-3bac9109812c",
        "cursor": {
          "ref": "22cb03df-ae57-4c3f-a2c0-710489aa2b32",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ce8a9c05-a440-4d33-9578-c1c18ea5aea6"
        },
        "item": {
          "id": "302aeae1-8e1e-4661-8f9f-3bac9109812c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eec6dc7d-9ea0-4494-87e3-0ac59c1732c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ecbe2b-a439-4887-8b4a-766f92eb265e",
        "cursor": {
          "ref": "037806ac-292e-4518-89ed-0b54cf476554",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "564ebebe-87f5-4b29-9fe3-67d62d315955"
        },
        "item": {
          "id": "e4ecbe2b-a439-4887-8b4a-766f92eb265e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "22ce1d3a-d6e3-4e7c-8a31-f99b237a1a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b0e6d8-8084-4854-a784-c3a220e13561",
        "cursor": {
          "ref": "0f05b457-6267-4304-99a1-df492c30a3b2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "51db49a1-1a59-49df-be72-2ddc887aff92"
        },
        "item": {
          "id": "20b0e6d8-8084-4854-a784-c3a220e13561",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c32427f4-8cc4-45dc-9f17-4764ee4d8c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3294f687-b30e-4168-a22c-5cba8e7c9732",
        "cursor": {
          "ref": "e0054fad-f09c-4610-8848-4eb11e821ef4",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e38d32d0-4c84-4409-9fd6-6632f47edded"
        },
        "item": {
          "id": "3294f687-b30e-4168-a22c-5cba8e7c9732",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fc6a545b-a4b6-46d3-a88d-e08b9d2aba4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623a3996-1ecf-457f-9a90-11588eca7a80",
        "cursor": {
          "ref": "5ddb55d0-6a74-4a58-94fc-dfba7795a951",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "45b89688-070b-44cc-9c44-8f385827dda8"
        },
        "item": {
          "id": "623a3996-1ecf-457f-9a90-11588eca7a80",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "de017931-8d06-486a-afab-7f5c15de361d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5671e996-5c11-4e74-839a-457ec9b8217d",
        "cursor": {
          "ref": "dc2676c4-ef5c-4f5a-b262-bbb5264515b0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "906408ff-c209-4870-8af8-b10a1e849476"
        },
        "item": {
          "id": "5671e996-5c11-4e74-839a-457ec9b8217d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "56ec5c1c-12a2-4ee8-b381-632d7431e5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12ebdfd-70e6-4fcb-a828-bc58a667ab23",
        "cursor": {
          "ref": "a6a34b5b-9109-4461-8b70-c5dae7458096",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "63bbbe5a-8772-4380-bde0-13cde388292e"
        },
        "item": {
          "id": "a12ebdfd-70e6-4fcb-a828-bc58a667ab23",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "15d747ce-b945-434e-a5ea-17ed1b9cefbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddc8824-c1a3-4640-ad19-9231d48bc2c7",
        "cursor": {
          "ref": "36b90abb-705d-45bc-acac-97a5a60fa7e6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2fff2a3c-a050-43fd-8d21-d65aee7537f8"
        },
        "item": {
          "id": "8ddc8824-c1a3-4640-ad19-9231d48bc2c7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d652fb45-0bc8-4f4b-be1d-939a8f1e3a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7108bc-8f12-482c-b413-2502d35ea785",
        "cursor": {
          "ref": "61ac94d0-555c-4fd5-8c26-36c3a1b8b485",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aa46f30b-ca8d-479c-8781-54f86df5786d"
        },
        "item": {
          "id": "ae7108bc-8f12-482c-b413-2502d35ea785",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f87b9009-d481-4129-9580-7b4faa285686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be32a8e-630b-427f-b3ad-fdfd23d264e1",
        "cursor": {
          "ref": "594fb846-198e-47e4-9bf3-34ab3b16197d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3fd7b926-f1db-46af-89f1-117e94b95ac7"
        },
        "item": {
          "id": "5be32a8e-630b-427f-b3ad-fdfd23d264e1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "04f6febd-5fe5-4a56-9bfc-1b6fed66b43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9160c52-4ba1-4fb5-b5c1-ebb0e32f9da0",
        "cursor": {
          "ref": "af484e6f-9f92-45a1-a549-3cd395fd1a88",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8dd451f5-3923-4902-a257-a9f7959f2e68"
        },
        "item": {
          "id": "d9160c52-4ba1-4fb5-b5c1-ebb0e32f9da0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "41878f49-b163-4b18-a484-11477bdb2ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df311f4c-fa27-4b77-aa7a-865a49574cfc",
        "cursor": {
          "ref": "a168372a-7bd1-4ee3-a393-a96e5eec048c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2a70cdc5-b0f2-401d-bfd0-30d370a350cd"
        },
        "item": {
          "id": "df311f4c-fa27-4b77-aa7a-865a49574cfc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "29ab4b1d-bafb-4ca8-bc8d-de7829e02b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a9a4b5-b997-454c-9438-4f1dd7c00643",
        "cursor": {
          "ref": "fbc44afe-3237-4006-874e-893af9e37b00",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f3795775-0f7e-43a3-aaeb-6d21784c09a7"
        },
        "item": {
          "id": "19a9a4b5-b997-454c-9438-4f1dd7c00643",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c067c909-33e1-4a22-ad9e-c34da3aecbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d2a2a1-0a74-4495-8ef6-12902d6d0e05",
        "cursor": {
          "ref": "08c61ba0-3b67-4441-87fc-c8b3ded63421",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8adcc012-7733-47e7-9fcf-e37c1e22640b"
        },
        "item": {
          "id": "29d2a2a1-0a74-4495-8ef6-12902d6d0e05",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4dab2116-7ef4-401f-a7fb-9f873cba05f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef45f57-527d-4456-bbc5-9b2a55069617",
        "cursor": {
          "ref": "3759bbf5-d152-4cc3-a305-1e6823add76d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "236508b4-4c11-4d5d-87cb-7d5efcc9fd38"
        },
        "item": {
          "id": "5ef45f57-527d-4456-bbc5-9b2a55069617",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6051eb78-ec74-4ccf-83da-cb220ed00c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a2f1e4-7cfe-44ca-ac0f-ee079e15ca39",
        "cursor": {
          "ref": "956675e5-4628-4a9a-a937-19c23dcf86b7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9b75c437-8593-4ec8-a163-856e28b259c8"
        },
        "item": {
          "id": "99a2f1e4-7cfe-44ca-ac0f-ee079e15ca39",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f7efb841-1706-4542-8382-41f9787a0c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374e3e74-8461-45b7-ba37-0cabcf0bc56d",
        "cursor": {
          "ref": "19bc66a5-7823-437c-877b-a3fc8eed5959",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f05dc25b-21c9-4a2f-bbda-ce9c272c663e"
        },
        "item": {
          "id": "374e3e74-8461-45b7-ba37-0cabcf0bc56d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f31d1280-09fa-4ea7-b9e7-8ab02fc8ad18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ddd491-aa4f-465c-b897-7fe7d8f8d176",
        "cursor": {
          "ref": "3ec41ec9-8bdb-46b0-b976-5448780f378a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "98e7aa79-59dc-468b-b4c7-002522d75a05"
        },
        "item": {
          "id": "43ddd491-aa4f-465c-b897-7fe7d8f8d176",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6d9ecf7e-b3ec-4b0d-9d81-c9b9ba696ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed51e20d-c42c-469d-ad92-9bfbd1676853",
        "cursor": {
          "ref": "826a75d1-1847-4ed2-869c-bf4bc47a40c5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c306e61b-03cb-4276-ad93-bd6eb7ea0ed6"
        },
        "item": {
          "id": "ed51e20d-c42c-469d-ad92-9bfbd1676853",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "edc30b99-b8e4-4bb3-8495-466086ccc710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330543eb-eea8-4175-8ceb-ce17c1ac9e7b",
        "cursor": {
          "ref": "bcd84b24-5c6f-48ae-9f57-85e4d74733a6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6415cab6-1728-46ba-b259-2ac29b61e1b1"
        },
        "item": {
          "id": "330543eb-eea8-4175-8ceb-ce17c1ac9e7b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "26cdcb97-d63e-4d71-9d9e-340f403ac74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db2af73-0eb0-4606-8052-99e38e25001f",
        "cursor": {
          "ref": "4912a0e6-d822-4bb6-9070-d09c2876ef0f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a49ce98d-e446-47e7-b0a8-302fc867c365"
        },
        "item": {
          "id": "2db2af73-0eb0-4606-8052-99e38e25001f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "96cc68e0-09b8-44a7-ac48-6f5ab58c5e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3508c56b-1a0b-4f16-8104-278af7f97944",
        "cursor": {
          "ref": "d2422e9f-f7b6-41ac-8244-fe1bc67ec835",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e5f2cf75-89e9-4742-b868-1d785560e551"
        },
        "item": {
          "id": "3508c56b-1a0b-4f16-8104-278af7f97944",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "88f97500-2467-4f50-97f3-dc9fd5d17349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4385fcfd-323c-4160-857c-2df5634ae9cb",
        "cursor": {
          "ref": "9bbc4e7f-a14c-4075-89a6-035c60c6ef71",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4addc66f-dca5-438a-be6e-a14d30b3570f"
        },
        "item": {
          "id": "4385fcfd-323c-4160-857c-2df5634ae9cb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7729332b-47e0-462e-9c3f-5f055ff5c1ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222f074b-5114-433c-851d-2d6ba8f4a122",
        "cursor": {
          "ref": "eccafb91-1816-41b3-9a5d-829b3315ff31",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8c0da41c-ca5b-4554-b284-f04960a3933e"
        },
        "item": {
          "id": "222f074b-5114-433c-851d-2d6ba8f4a122",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2c402c46-df2a-4c00-8e6a-7984504e83fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f6a989ec-600f-4cb1-b9bf-890f5799df3e",
        "cursor": {
          "ref": "663ac026-969e-413f-863d-a7c809b7acb7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1ea0022a-67bd-4944-816e-6babb719ca72"
        },
        "item": {
          "id": "f6a989ec-600f-4cb1-b9bf-890f5799df3e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "081f25be-7ceb-41c7-bab7-b1ca33bf24a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6b317c46-a7ba-4b10-8df9-d01ff8f1c0ae",
        "cursor": {
          "ref": "6657e250-5af4-4425-a75e-b6fa9dda8245",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8d01a3a4-70d4-41d2-b55b-e2b6e8533748"
        },
        "item": {
          "id": "6b317c46-a7ba-4b10-8df9-d01ff8f1c0ae",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5ece4b58-cabe-4f88-897e-4bafca91cdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1c27e64e-ecd8-4ccf-8492-527d52bd45d3",
        "cursor": {
          "ref": "97ba5769-9c9c-411b-a923-5f139e852020",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ec6636c6-4f32-45f3-a2ea-8964b8bfe8b6"
        },
        "item": {
          "id": "1c27e64e-ecd8-4ccf-8492-527d52bd45d3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc6e444c-58ec-4898-bd9d-a7f5070be906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4ea75b56-416d-4f47-8c87-f16577b05eac",
        "cursor": {
          "ref": "47b98522-eadf-4107-8e75-1e91faf69a60",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b39f5ab9-1e60-478e-928d-a8cfe8d7f9dc"
        },
        "item": {
          "id": "4ea75b56-416d-4f47-8c87-f16577b05eac",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "83ee68a2-345d-45c6-a586-0eb3b00aa24a",
          "status": "Created",
          "code": 201,
          "responseTime": 9993,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "02346d03-8a16-4da4-a97a-a267d3b8620f",
        "cursor": {
          "ref": "2405d135-04b3-45b0-b209-daba661a26b3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bce382f7-2e85-46bd-b359-f1cd0ce5fcba"
        },
        "item": {
          "id": "02346d03-8a16-4da4-a97a-a267d3b8620f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2a3987db-a062-4379-a76c-e0a9ee0d1164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3a889d29-8f04-44bf-a357-a894060dc631",
        "cursor": {
          "ref": "d6865423-6d2e-4dd5-984c-4886946de318",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "32011409-a03f-4e8a-a29e-63791c513d5d"
        },
        "item": {
          "id": "3a889d29-8f04-44bf-a357-a894060dc631",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "32a4977f-f987-4f61-b663-96cd6736482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9c2e2c85-0a1f-470a-b9f9-596e87bce5ef",
        "cursor": {
          "ref": "62f1c9d7-7ab4-4381-9489-f9cd7b32662a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "02be6478-42bf-4ad1-bfc1-6fa9897aaed0"
        },
        "item": {
          "id": "9c2e2c85-0a1f-470a-b9f9-596e87bce5ef",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d872001-7a7d-4a79-b063-0b01e76c4a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05110c5a-0d7b-4772-b1b3-ffa945af0db2",
        "cursor": {
          "ref": "5d1ec24f-9197-4611-b3e4-80aa06559b98",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "721f1d74-0990-4c7d-b864-d47639a421dd"
        },
        "item": {
          "id": "05110c5a-0d7b-4772-b1b3-ffa945af0db2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f4d563a9-02b8-471b-8b60-58125df68f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c7464b-4be8-4ea4-bf0b-e5342b73fb93",
        "cursor": {
          "ref": "f5307bac-05aa-4455-b994-092811c3d337",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "29dea27a-1665-44e3-b758-3d5f3dd0e937"
        },
        "item": {
          "id": "13c7464b-4be8-4ea4-bf0b-e5342b73fb93",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "427db3fc-ceb5-4f8e-8533-ce72d53d2208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893d9c32-da61-403e-87f4-edae395b3ac0",
        "cursor": {
          "ref": "c1e71a92-eee0-4aca-bf41-82a1a58366c8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4b192dab-2a12-41c7-ba45-df846c8762ec"
        },
        "item": {
          "id": "893d9c32-da61-403e-87f4-edae395b3ac0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "91668caa-1c3e-4893-a6cb-5897c1e8bf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc6c420-7498-4a86-9f41-0f718786295d",
        "cursor": {
          "ref": "52447a8c-2f8d-47df-98e2-a388d481fb47",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "41884b73-edc1-4448-b15d-f8b0a9c4ed13"
        },
        "item": {
          "id": "edc6c420-7498-4a86-9f41-0f718786295d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "36ded819-e8c4-46ee-a76a-eef415c83469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaf1dde-f826-4953-8e89-656d0bc6c733",
        "cursor": {
          "ref": "27a15ddd-0c32-4963-be40-987241d6ed82",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "00b480c5-2fc3-4371-9707-02d46cf0cbae"
        },
        "item": {
          "id": "fcaf1dde-f826-4953-8e89-656d0bc6c733",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eceff1b4-af43-4575-afc5-894f0411281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a927107-2e1a-4e92-988b-832eab887715",
        "cursor": {
          "ref": "71bf3c5e-12e6-42db-85d5-0e38ef7a6fb5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f0f94c1f-dac4-4aec-a972-40171423cb80"
        },
        "item": {
          "id": "6a927107-2e1a-4e92-988b-832eab887715",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4a35c996-ed31-4769-bdad-6abe70fe4b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e54f564-97b4-42e2-bd7c-c3893452e334",
        "cursor": {
          "ref": "67fb44c6-d490-4dca-8d8b-8b76468c6421",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc097c01-3092-4f86-b272-bd28de7b2281"
        },
        "item": {
          "id": "0e54f564-97b4-42e2-bd7c-c3893452e334",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "488d25a9-3bbe-43aa-8bc0-23b45a7aef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d19a0a5-7046-48a6-b083-bd9f0f510214",
        "cursor": {
          "ref": "f67eab10-6955-4d56-943b-2cdb6dd32d4b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "305aee39-a6bd-4288-93d8-2f843ad1a4bf"
        },
        "item": {
          "id": "5d19a0a5-7046-48a6-b083-bd9f0f510214",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5b97d809-bf2b-4862-b28d-1d0af94a89f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195adb02-e200-403a-b696-1a79a22efec8",
        "cursor": {
          "ref": "ed2c8268-6744-437e-9dc4-1758ee624576",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d79adbcd-dfe8-4f68-a6c8-87862509d6cc"
        },
        "item": {
          "id": "195adb02-e200-403a-b696-1a79a22efec8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c929ea89-9e03-4e87-973d-6585b7abeebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20f31a7-10b7-4749-9902-7d83c112a6a7",
        "cursor": {
          "ref": "eb04e84b-f150-466b-ad75-ee1f8abd3383",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "983bf837-415e-459e-b51f-4be4f22daa70"
        },
        "item": {
          "id": "c20f31a7-10b7-4749-9902-7d83c112a6a7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "febd10f8-5ee7-4590-a781-a4de9c6ddcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443b342a-ba30-4ebe-815e-6652f5594cf3",
        "cursor": {
          "ref": "fbe977b6-5758-449d-8141-22e74db3d17d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1b604562-de86-4fe4-bc33-de8b61c488e2"
        },
        "item": {
          "id": "443b342a-ba30-4ebe-815e-6652f5594cf3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fe806fc8-496d-42d6-9c24-172673d8fe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b53ce5a-8174-4898-9b0a-ddc425c33623",
        "cursor": {
          "ref": "34e75419-00a7-4bbe-9d00-b79f374dd4f4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "21fa85ef-755b-46e8-b98d-780059b5182d"
        },
        "item": {
          "id": "7b53ce5a-8174-4898-9b0a-ddc425c33623",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8faf1885-77e6-4b18-bb87-d3002ca21785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3b0d66-f299-4b7f-9813-1a8ef0ecc702",
        "cursor": {
          "ref": "090c91fd-2eb6-4e52-9a2a-235d5e93b11e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0fa08e1f-6c5d-4b78-a9df-b4f0148710ec"
        },
        "item": {
          "id": "ce3b0d66-f299-4b7f-9813-1a8ef0ecc702",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f1d9e340-3ad3-45ea-b543-d451cdf73505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e988d591-4ab4-4a0c-8be5-62312af81536",
        "cursor": {
          "ref": "e5484a2a-6801-47f2-a450-299262f4ecdc",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f5358b52-c1c1-410f-8873-b69945442e70"
        },
        "item": {
          "id": "e988d591-4ab4-4a0c-8be5-62312af81536",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a131990c-68b7-44c5-92d3-2706c5fa198a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3f86d3-ba43-44ea-8cb4-304e1222b234",
        "cursor": {
          "ref": "87b62dbf-3794-4379-bde1-d6f86e91a803",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7ff052d8-3d15-444c-9f4a-b42bff867c3b"
        },
        "item": {
          "id": "4c3f86d3-ba43-44ea-8cb4-304e1222b234",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db288504-cf5e-4d98-9126-4e32e4d77593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6642383-37e0-4850-9180-bc33f77a17e3",
        "cursor": {
          "ref": "c4229ffb-d1c0-4267-8066-11bff0a0f857",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "deb1f8d7-7ef3-4e87-80d1-06a7d6a6d5e3"
        },
        "item": {
          "id": "d6642383-37e0-4850-9180-bc33f77a17e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6fb95d70-e513-474c-bc04-e89f84c1a1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4a6ab5-7723-4481-86db-80456e21e82b",
        "cursor": {
          "ref": "e49d985c-db5e-45be-bba0-1435960da3f5",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f287de91-6d36-4b09-9d73-992f22e8f366"
        },
        "item": {
          "id": "9d4a6ab5-7723-4481-86db-80456e21e82b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "db0baaec-6d7c-4e48-9d55-65948d423122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabad362-e82f-4434-9ca9-6fd1c1ecd5c7",
        "cursor": {
          "ref": "aa238079-0333-4820-8360-87d5b6ed0ebc",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fafaadc1-6917-436c-b92f-4bdd19f74f17"
        },
        "item": {
          "id": "aabad362-e82f-4434-9ca9-6fd1c1ecd5c7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c3991165-2525-4468-b48c-0bcf43f8c8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a54f969-22c4-4a28-ae02-a4b46e137616",
        "cursor": {
          "ref": "88ac817c-3e3f-4974-9d87-2b04d6f40213",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2e4e110b-ba62-46fc-987c-bb1560fa00fd"
        },
        "item": {
          "id": "1a54f969-22c4-4a28-ae02-a4b46e137616",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "07f6d020-74c0-4730-9a6d-beec8f45ce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85be1164-d32a-40eb-b106-497b208f81a8",
        "cursor": {
          "ref": "ca036789-8068-4168-ba39-eb44efaf7b06",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "17adb6d7-093b-4aff-bb18-18ceada4569f"
        },
        "item": {
          "id": "85be1164-d32a-40eb-b106-497b208f81a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cd1786e3-cd15-409a-b6bf-1a37fc3a2c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6772ad92-4dfb-4964-9f7a-ee0a31253af2",
        "cursor": {
          "ref": "03e8fa09-d423-4958-ba84-bafbbe6746de",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fcc54adc-3f79-4530-bd99-6ce2af023224"
        },
        "item": {
          "id": "6772ad92-4dfb-4964-9f7a-ee0a31253af2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ff7f8e48-85eb-46a3-a708-a62e101f3fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c25909-995e-4603-a000-9f48e98d881c",
        "cursor": {
          "ref": "d681d4a3-4250-4780-87b4-c2aa64c97d27",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d6c1f872-966c-4aca-94d9-941e0ad6cffc"
        },
        "item": {
          "id": "c1c25909-995e-4603-a000-9f48e98d881c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "31f4a571-ce54-4f17-821a-516844c838f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb08415-6004-486f-8a7a-18a438f9841e",
        "cursor": {
          "ref": "e05779f6-0ca4-4ff3-b652-2ad532a570d7",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dd4f20d1-88f4-4709-8b74-d3a3b8ccc0d5"
        },
        "item": {
          "id": "ccb08415-6004-486f-8a7a-18a438f9841e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "88ab1fd0-ded6-425d-b41f-35ebdbb9082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8f4709-ea0f-4ee8-a53a-94b674092424",
        "cursor": {
          "ref": "568a55fc-0e2c-4a80-bc91-065ea34fb21d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bb6f3ad9-d33a-4561-a81c-8f9b90de5705"
        },
        "item": {
          "id": "ac8f4709-ea0f-4ee8-a53a-94b674092424",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ed989d53-2c20-42b0-ab4f-4874ae82cccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a50611-ca54-4019-b009-d9191b1a15cb",
        "cursor": {
          "ref": "1d992fb8-bfa0-4647-ba4a-774df61899a7",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "90bb68f2-7df1-4df9-a77b-816338903d5e"
        },
        "item": {
          "id": "19a50611-ca54-4019-b009-d9191b1a15cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "361a791b-4641-480f-978a-4d9839f28b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d06d920-d0fe-4eab-8c54-e997de562263",
        "cursor": {
          "ref": "c8be1469-7938-4643-9623-1b83488d4365",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1ebe72da-628a-4b33-bcbb-93cf907e6878"
        },
        "item": {
          "id": "1d06d920-d0fe-4eab-8c54-e997de562263",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5ff5e8ec-b160-4cec-a3dc-dc0b1d8a17a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719fa45c-9a5a-4479-9269-ba5337112ed9",
        "cursor": {
          "ref": "16acd257-4108-4531-ada6-cfcd116b4cb3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0b9b0bc4-c65b-404f-ad19-a833209cae9b"
        },
        "item": {
          "id": "719fa45c-9a5a-4479-9269-ba5337112ed9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ed6228a7-f720-423b-9c03-282e19b3fa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a82c7ef-c2c6-4be1-b867-f66e07537314",
        "cursor": {
          "ref": "6af6839d-b0ad-4a2b-be2a-f31f2302af77",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fc08762b-eba3-4810-92cf-beaa2627b5a5"
        },
        "item": {
          "id": "9a82c7ef-c2c6-4be1-b867-f66e07537314",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e71ec356-3d94-4d05-9474-0f25c5207e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b986eb53-1370-4439-bb57-937549840306",
        "cursor": {
          "ref": "7e6e848b-f2c6-4c64-b6f3-574b31d56f3e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "13d16dd8-b649-4a91-ae48-81fe5a82f794"
        },
        "item": {
          "id": "b986eb53-1370-4439-bb57-937549840306",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "40cd08d0-18fa-4540-9e65-0c9f92433da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efa3cd4-42ec-4a59-9bfa-000d303a6ddb",
        "cursor": {
          "ref": "85802e90-3ef2-4513-81ce-d4c80f3e284b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "13d89699-7a31-48f6-907e-b89423016253"
        },
        "item": {
          "id": "4efa3cd4-42ec-4a59-9bfa-000d303a6ddb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f6d405ad-7405-463e-9221-12e63a47a7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca7aec8-2ab8-4b26-8455-d54ea2cb18f9",
        "cursor": {
          "ref": "dbf0ca96-71af-46f1-99e7-6ba74e49f30f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cb440c68-8b37-4b56-9b1e-018623543882"
        },
        "item": {
          "id": "aca7aec8-2ab8-4b26-8455-d54ea2cb18f9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "da30689c-f81a-456f-82da-0f1fabf3e97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d8ceee-162a-4fd4-8e4a-03d7c8423b03",
        "cursor": {
          "ref": "d1a8857b-0c1f-4f39-a437-a0064390ecb2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a43feaf4-ea95-4d31-b8c4-6ffa2df21e5b"
        },
        "item": {
          "id": "a4d8ceee-162a-4fd4-8e4a-03d7c8423b03",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e8c7c98f-cd19-4d34-96c7-8cb4e977cd61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90b7967-4de9-4a19-851e-57a45b744fad",
        "cursor": {
          "ref": "e9ffc934-2b0a-4889-8851-f0f750c36bab",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7baa77fb-c672-4348-aff3-20450e02e412"
        },
        "item": {
          "id": "f90b7967-4de9-4a19-851e-57a45b744fad",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a9bd18e2-e6c4-4c29-b90a-0a2d867af5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1121b714-9b4a-487c-80c3-8ee08e17ab6a",
        "cursor": {
          "ref": "729385fc-2eb6-42cc-ae5e-590612ae1d77",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5fc6ef64-a707-422e-949e-23e2210f8e38"
        },
        "item": {
          "id": "1121b714-9b4a-487c-80c3-8ee08e17ab6a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15bfff2a-bae7-4925-8539-b2a3c44f371c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3dc738-f4f4-47ad-8fcb-50fcd4c2ab17",
        "cursor": {
          "ref": "38c8ff0a-0ef8-4c1e-8925-f5712d89bda7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bb5ee35c-e0e0-4c93-a707-448d975294b8"
        },
        "item": {
          "id": "7d3dc738-f4f4-47ad-8fcb-50fcd4c2ab17",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4377621f-2b8c-4edf-9e35-b7f90df224b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cc820d-097d-4837-8888-09d6875abdac",
        "cursor": {
          "ref": "288728db-4a11-4de7-b32e-b4e8ba644dab",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cc75e09f-ea67-439f-9f8d-601f99f92520"
        },
        "item": {
          "id": "50cc820d-097d-4837-8888-09d6875abdac",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c15a02f2-da99-4584-a9bb-d485758d84da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a75e90-6bdd-45f5-ac9d-264e7e02981b",
        "cursor": {
          "ref": "19913115-943c-4ee6-a5d1-c95bb7c6fcb5",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "18183d55-146a-4f25-b6e6-b88619da5a07"
        },
        "item": {
          "id": "b7a75e90-6bdd-45f5-ac9d-264e7e02981b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b11a693-36cc-49a3-bb9f-c9fee2125e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4419a7-f80c-4934-b9da-c1ffcb780fef",
        "cursor": {
          "ref": "1f4913de-07e7-401d-a92b-3c734f8c9d58",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "062d13cf-519c-42d5-bbab-1574ba5ecda5"
        },
        "item": {
          "id": "0b4419a7-f80c-4934-b9da-c1ffcb780fef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8cfebc16-e449-4410-8869-a6fd61e65a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54385b18-76fa-4abe-89e0-c3aba93c4a70",
        "cursor": {
          "ref": "cd6b3d0d-86e8-4b8e-bdd0-1e24e57c3161",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bcf99374-c1c9-4857-b497-3cd239d6ee8c"
        },
        "item": {
          "id": "54385b18-76fa-4abe-89e0-c3aba93c4a70",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c8abe3e4-138b-4855-9f80-686fca006afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8f2317-c075-4191-8609-1b2bd697b466",
        "cursor": {
          "ref": "29eeba1a-44fc-4285-9fd1-10280f8dac2c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c105bf67-e7ec-4203-b0b7-653efcd91bb5"
        },
        "item": {
          "id": "eb8f2317-c075-4191-8609-1b2bd697b466",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "67a0063b-7b23-4fd8-bdc4-b8afd3175bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fa7b71-d1a6-447a-b881-12559a03cfe4",
        "cursor": {
          "ref": "7fd173bc-2499-463b-a1e6-721e42d30aa2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9f70ede7-d58a-40a8-96df-f1e1792743c5"
        },
        "item": {
          "id": "a3fa7b71-d1a6-447a-b881-12559a03cfe4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e306e997-0ac3-4340-809d-33897024f50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9c1fc3-058d-4b91-9ee2-51bee04522dd",
        "cursor": {
          "ref": "4eab2694-4580-413c-ba19-41d506ee8074",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1e4c25f2-ca12-488c-9130-8b8e4248abea"
        },
        "item": {
          "id": "1e9c1fc3-058d-4b91-9ee2-51bee04522dd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bbe6c3e-ee0a-4b91-aba1-dde301521330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1a81aa-7c1d-4386-aa78-77126d5f3bea",
        "cursor": {
          "ref": "380c9d06-9235-4fa3-a9e7-b4dab5e52159",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1a5f2827-c71e-4da9-8a05-286ed1e1cd29"
        },
        "item": {
          "id": "1f1a81aa-7c1d-4386-aa78-77126d5f3bea",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b1d307f8-99c6-4ad4-8d86-a078fd6da7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7a93cc-f47a-45d4-98c2-8ff91981d38e",
        "cursor": {
          "ref": "b9e6fe0c-f524-4926-9648-a369b0edcf7a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f5d46dbc-6cdf-48a2-9b1d-f49d96642acd"
        },
        "item": {
          "id": "bd7a93cc-f47a-45d4-98c2-8ff91981d38e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0118b31d-2d79-48e1-a982-a070f79d1cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27778a8c-ae5d-4ec0-891b-a529c89e198d",
        "cursor": {
          "ref": "9732490f-c414-4645-aa31-cdb20c619434",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f12af115-4694-4761-b3e9-81c4af6d4d1f"
        },
        "item": {
          "id": "27778a8c-ae5d-4ec0-891b-a529c89e198d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "db78d79f-dd70-46e1-9821-3612f0f92aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b77e74-fa9d-44cc-960c-16b3389e0eb1",
        "cursor": {
          "ref": "982f1755-78f3-436c-89a1-61b74331274c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f8bac644-1f06-44a2-8f84-017362836096"
        },
        "item": {
          "id": "b8b77e74-fa9d-44cc-960c-16b3389e0eb1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "38601fd5-fb7b-491b-abf3-0a0cb7ab030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e9c211-8218-4742-9c6a-09e9abac342d",
        "cursor": {
          "ref": "44002bce-45ca-4225-b830-037f5f0c22f7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "91ea2788-24ad-4984-8710-ce8de3588613"
        },
        "item": {
          "id": "15e9c211-8218-4742-9c6a-09e9abac342d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c0f22c40-01ef-4dc1-bfa0-f6c4f019990e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0784d5-eaa3-4e6f-94ee-fc2c02725e34",
        "cursor": {
          "ref": "84112ca9-35cc-4d09-b83c-acf3abeea525",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6d8865e8-0c37-4983-9ebd-67e169df202c"
        },
        "item": {
          "id": "ce0784d5-eaa3-4e6f-94ee-fc2c02725e34",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "193c001b-cff5-45df-bb09-20966b41fa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297fe30e-0912-44e0-b6f3-baa3b32c3b0d",
        "cursor": {
          "ref": "d74d73d0-d26c-480a-8a43-33adae2cce82",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "76494314-6c2a-4035-bfe9-8e4866ca458d"
        },
        "item": {
          "id": "297fe30e-0912-44e0-b6f3-baa3b32c3b0d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "182aa916-20c4-4fd9-acae-bcfacd4219c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5f5e49-c1a2-487b-a5bc-7752eb2999b8",
        "cursor": {
          "ref": "186b7cd8-759e-4a43-80f9-c2a2c67d87c8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "aecd18fa-9083-4680-a812-3c4c5d65cd3d"
        },
        "item": {
          "id": "4c5f5e49-c1a2-487b-a5bc-7752eb2999b8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cd539db3-067d-4fd7-941d-0eafebb1cba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93079646-467c-4dde-858a-4c9d0d415278",
        "cursor": {
          "ref": "35da23e4-5f83-4a6c-a7b2-1e20c6ec513c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5f802ede-6eca-4c00-a4c7-c3596d35b61b"
        },
        "item": {
          "id": "93079646-467c-4dde-858a-4c9d0d415278",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ffeec337-8bff-4590-8919-b49ee6cc6f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2c30ec-056d-4049-ab44-750138e5a938",
        "cursor": {
          "ref": "9606220e-702d-4a7a-b71c-71cd49b4ad1d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "98ec9e36-4723-4807-976c-d3f26f3f0507"
        },
        "item": {
          "id": "ab2c30ec-056d-4049-ab44-750138e5a938",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cc74484d-56df-4898-ab18-f361d761a042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51108dd1-1473-4f9a-afe9-7c10aff91ce4",
        "cursor": {
          "ref": "c005a04a-0933-4448-ba2f-bc1446b43b4e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2fbf4872-0434-454c-81f6-d9b7c9eb3451"
        },
        "item": {
          "id": "51108dd1-1473-4f9a-afe9-7c10aff91ce4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "48b2bc1d-1e7b-4d31-b22c-c55201101097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7516227-1c87-4fff-b5bd-7bc38245e701",
        "cursor": {
          "ref": "4dfb5d77-4ca3-4bff-9ac6-81e936b685e0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "49a4e127-d233-4b69-bdbd-ea2e1586beae"
        },
        "item": {
          "id": "d7516227-1c87-4fff-b5bd-7bc38245e701",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3feb141e-e088-4f0e-a55e-9ed7e0961eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2cc343-2550-4da8-a31f-5e6afb0f0f44",
        "cursor": {
          "ref": "28934ccb-2306-444c-87c9-1f3e50e71a7a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c92f65f9-bf7b-415f-ab92-8e5b4581d8c5"
        },
        "item": {
          "id": "6a2cc343-2550-4da8-a31f-5e6afb0f0f44",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2382f7b5-8074-4e31-bd1d-1d71407afa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb9e366-8bb6-4eeb-b59b-0ae41db8b136",
        "cursor": {
          "ref": "8000a6c8-504b-45e1-9db8-5e58797bc746",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "97f961ba-a53b-4676-a74c-9e26e2db47bd"
        },
        "item": {
          "id": "fdb9e366-8bb6-4eeb-b59b-0ae41db8b136",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "61a7462c-7ee8-45a0-b3b7-0e5c84bc2bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f695bc5-671c-454b-92f7-5c495b193951",
        "cursor": {
          "ref": "6d2d35f7-2fd1-4a20-b8f4-1db60482d836",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ac989a4b-0879-456d-bdda-162c6c757de4"
        },
        "item": {
          "id": "6f695bc5-671c-454b-92f7-5c495b193951",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7d23a126-5d7d-4a82-9058-7129fc2ac1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d711b79-b4ae-409a-9943-ef89af98c42c",
        "cursor": {
          "ref": "a27fca65-c1f1-4fd9-ae03-ce827b1517aa",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5612b2e4-5453-4869-9679-0e55feb5ffa0"
        },
        "item": {
          "id": "6d711b79-b4ae-409a-9943-ef89af98c42c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fc4562e2-8838-4e8b-ba74-8c351698cfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402a8c6e-52f3-45b8-b4cd-4490b2ab21b3",
        "cursor": {
          "ref": "4611b932-2255-46c5-9dee-a91bca8de313",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eb92b247-dca7-4f41-a965-7cc729d515ab"
        },
        "item": {
          "id": "402a8c6e-52f3-45b8-b4cd-4490b2ab21b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dda5d01f-277c-41aa-a398-e347f5ab7456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eb086b-8227-43fb-b950-d056ed2400de",
        "cursor": {
          "ref": "72796696-ef0b-401a-9142-76a2e79f4939",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6c639fc7-d534-4f62-8c7c-06e42bb8c751"
        },
        "item": {
          "id": "11eb086b-8227-43fb-b950-d056ed2400de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "075d1645-3684-48f5-9c53-e68aea1438d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc176f4-aced-4f51-b003-568a7f1ca974",
        "cursor": {
          "ref": "8edb52bc-31d9-432a-8af2-0ebb59663807",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fb7c162d-718c-41da-a5e3-2498adaabc27"
        },
        "item": {
          "id": "3bc176f4-aced-4f51-b003-568a7f1ca974",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2aabaeb1-8177-45b0-a865-4a5e47ee1825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ded8c2-3b61-4567-a1d3-4e448c2c7120",
        "cursor": {
          "ref": "5aceb127-97b4-4119-96dd-1c0d98769e76",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8422ac3d-2bb5-451e-b9cc-38bb0eb9634b"
        },
        "item": {
          "id": "97ded8c2-3b61-4567-a1d3-4e448c2c7120",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2d89075a-a433-4cb0-9271-12730ef0fbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c711325-906d-418f-af15-e5b402268c33",
        "cursor": {
          "ref": "947d4aa5-2e92-4809-bc28-5545c629ff7a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1220f23f-b809-4dae-8025-8083fa1467c7"
        },
        "item": {
          "id": "0c711325-906d-418f-af15-e5b402268c33",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "01ebfbcc-b3cc-4874-b656-2efa1eb8dcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c5ad5d-ffed-44b3-8a62-22ae82de83cf",
        "cursor": {
          "ref": "f12d1863-9bab-4f32-8da0-beccc7a33dcb",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e538c11b-4ed5-46fa-b964-d8046e1bde19"
        },
        "item": {
          "id": "07c5ad5d-ffed-44b3-8a62-22ae82de83cf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "63ae8d7b-3815-44b3-abe5-41369f105e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4dfca0-0099-46f7-af12-971c28ca25fe",
        "cursor": {
          "ref": "2c1ea3ab-10bf-4c28-b4e8-8e9be5babf78",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "66e76826-a4fc-42ae-bfae-f74cad5de764"
        },
        "item": {
          "id": "ab4dfca0-0099-46f7-af12-971c28ca25fe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "058fd201-1c4c-47e5-854b-80fd91a1e103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81a5e81-2f7c-4df7-b61f-cc5f7b056edf",
        "cursor": {
          "ref": "0f26ef51-ce12-43a6-8c50-3f9384399d8d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "23e52603-77ea-4fc4-b9b9-dc271a2c2980"
        },
        "item": {
          "id": "f81a5e81-2f7c-4df7-b61f-cc5f7b056edf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6e128f9b-7704-4480-8496-a93a75dd245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcbc06c-32a0-4183-aeec-f9115f241d01",
        "cursor": {
          "ref": "1d5f5dd3-38b7-4957-8995-862b7aae8d9d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8ca54ddb-3163-4375-86a5-80bf7064090b"
        },
        "item": {
          "id": "9bcbc06c-32a0-4183-aeec-f9115f241d01",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fb6c55fb-ade2-4514-b64f-8066b9d18512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31122aa6-29be-413e-9f5d-a0ae8a227c8c",
        "cursor": {
          "ref": "60353ee1-122a-4ff0-b61d-16f76ab20912",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "249ca9dd-dbe5-4a07-b9c0-b38fca6a299e"
        },
        "item": {
          "id": "31122aa6-29be-413e-9f5d-a0ae8a227c8c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3617f11a-8815-4bc1-b125-a5d85b4e0562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2135fb0b-47b8-405e-aaf1-cf7b3509b8c9",
        "cursor": {
          "ref": "511d0431-0218-42ec-a79d-48ebc762fa44",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2d03b7a5-a02b-47b9-92bb-522ed97e9a68"
        },
        "item": {
          "id": "2135fb0b-47b8-405e-aaf1-cf7b3509b8c9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f4e7709e-4d13-4bf8-ae6a-4130688354e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cb3cfe-1c49-4d4a-8ef2-3de8515c96a3",
        "cursor": {
          "ref": "45d6be8e-20c3-408a-9971-5fe059e01ebc",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "686cc5b4-73ae-4823-97ee-10aef6762c5f"
        },
        "item": {
          "id": "a0cb3cfe-1c49-4d4a-8ef2-3de8515c96a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fc04a4d2-3842-4bd9-9498-20996201aa33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4b4cc2-2e26-42a7-8018-a515ea0dcb15",
        "cursor": {
          "ref": "8e64005a-0f15-4d87-a055-77cf2cd19fc8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "41fd06e0-468c-4c45-87d6-96c29a342d9f"
        },
        "item": {
          "id": "aa4b4cc2-2e26-42a7-8018-a515ea0dcb15",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e9eb87e1-9e1a-4007-85e2-dfa5c8a383f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e659e17-2ccd-43b5-9826-80680a45d8d4",
        "cursor": {
          "ref": "895a6718-5170-47cb-b7af-26ae1a5c79b3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "25455fa6-d2f5-4279-8c12-0aa1c8051447"
        },
        "item": {
          "id": "0e659e17-2ccd-43b5-9826-80680a45d8d4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1c8094af-5152-4687-b2c7-604ed45e9a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938c7818-3243-4bb7-82a0-704637040814",
        "cursor": {
          "ref": "0e47ad29-d9f4-42e9-afe1-90be1137ad8c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "df5b2522-f84d-4174-873f-4d03f6ebeb4b"
        },
        "item": {
          "id": "938c7818-3243-4bb7-82a0-704637040814",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4ccc5157-3b9d-4cb6-81f2-713f9c94a129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a212dbc-37e7-470f-8be7-257e88fb9f9f",
        "cursor": {
          "ref": "a35c18ca-4cf9-4734-8cdb-b41f2e4bee76",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5562522e-e245-4863-8659-6052c8849f95"
        },
        "item": {
          "id": "1a212dbc-37e7-470f-8be7-257e88fb9f9f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "87395558-eb47-4cb9-b5bd-68d0273c2cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b616552f-5899-42eb-944f-c3263907c5bc",
        "cursor": {
          "ref": "b8603c71-bcac-47c8-9a64-0f36c414d093",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "303618d1-0185-42bf-a595-e63168758d49"
        },
        "item": {
          "id": "b616552f-5899-42eb-944f-c3263907c5bc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "001ac102-b30a-431a-957a-38148231da19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f7372c-25b1-4134-b367-992a786a01f9",
        "cursor": {
          "ref": "b5fa75e1-beff-429c-a1dc-7c8084bf6678",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f793a5aa-a85e-471c-abd4-38eea70ca06e"
        },
        "item": {
          "id": "93f7372c-25b1-4134-b367-992a786a01f9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6484ce88-e8e1-44db-aa70-e5535e48de44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c449777-fdb8-4510-80bb-14b44b023470",
        "cursor": {
          "ref": "1571be4e-6083-44a7-8c78-ee3baae30164",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "34e31be0-fcae-47f3-a76a-193e432d88fd"
        },
        "item": {
          "id": "1c449777-fdb8-4510-80bb-14b44b023470",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "98f647ae-771e-4e1d-805e-e368a6d1cadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9cdbbf-87e1-4721-ac25-882f2dc8a43f",
        "cursor": {
          "ref": "1526b853-0028-4d66-b9f9-da2c7f0e1525",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "637b5067-2bfa-4ac5-88f4-21c3977c62a3"
        },
        "item": {
          "id": "8a9cdbbf-87e1-4721-ac25-882f2dc8a43f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "db5e59ca-ce2a-4781-87e1-12566dd9dd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8476d473-d427-4ba5-b11f-25b516f6e3e0",
        "cursor": {
          "ref": "ca8407c5-581f-440e-ab4c-1c5dd1c3e45c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f6bacc19-e85d-43ba-be32-9376daf4d61c"
        },
        "item": {
          "id": "8476d473-d427-4ba5-b11f-25b516f6e3e0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cf2d438e-19c6-4f69-b73a-48bec39735b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430b42e5-4dfd-42fe-b205-d0b3936355fa",
        "cursor": {
          "ref": "5da4afe0-496a-4ca5-9bf7-d948e52b2796",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "85bad635-5909-4424-bd36-645c052e2d45"
        },
        "item": {
          "id": "430b42e5-4dfd-42fe-b205-d0b3936355fa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "94282fd4-fd91-486e-8a1a-eccbc2b86c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c403e572-1f60-45eb-a7c4-3f20f4d7d369",
        "cursor": {
          "ref": "1b2cc095-9e79-4513-bbbc-d8b81b6d9082",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e64399b8-6e54-4908-9c8c-0921e321b97c"
        },
        "item": {
          "id": "c403e572-1f60-45eb-a7c4-3f20f4d7d369",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9671202c-7377-4046-98b0-3df4794e0009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1c062d-4366-4f11-b294-9ec36ea02e1e",
        "cursor": {
          "ref": "630d2070-6a8d-44c9-a805-8641ce937ea2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f0982201-083a-4df0-8172-2548caa37dfd"
        },
        "item": {
          "id": "da1c062d-4366-4f11-b294-9ec36ea02e1e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f787215d-6864-4f0d-b0ec-28b9f25c82a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f5bde6-a405-4304-99b5-ab28f933f73a",
        "cursor": {
          "ref": "8bfec469-7488-4d95-bb66-65a3ff98c98d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "130873e3-7fab-4819-bea9-4a470d23e856"
        },
        "item": {
          "id": "c7f5bde6-a405-4304-99b5-ab28f933f73a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "87dc58bd-f5e9-4702-b1d1-40b42b7df791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3246ce6e-8957-4ede-94dc-bfc85e21b804",
        "cursor": {
          "ref": "b5ebff96-5064-40a3-9a41-88fe5a20eb8d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e40618f6-78b4-4f94-be84-093202fc979f"
        },
        "item": {
          "id": "3246ce6e-8957-4ede-94dc-bfc85e21b804",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "26904239-bf1a-4120-9b03-5b9fed1717d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9342afe1-d83c-4191-9c8f-c0038362f54a",
        "cursor": {
          "ref": "75f0289f-7ccc-4bc6-bdda-c971e4d2f9a6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "798be33a-1786-4ee1-9ceb-229968b60b5d"
        },
        "item": {
          "id": "9342afe1-d83c-4191-9c8f-c0038362f54a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6640bd98-98d2-47e0-98cd-96e88aa9539c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9e26b2-008f-4130-913f-7794e730b7cc",
        "cursor": {
          "ref": "11a8e819-b9b6-4af3-9630-ef6c5e170786",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "52155c70-377e-4903-bda3-ca85fe10d656"
        },
        "item": {
          "id": "3c9e26b2-008f-4130-913f-7794e730b7cc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fb29487c-9ac9-43c0-8ec0-c91c95d4ee68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7490a480-e87e-42e2-b84c-20eb10f33493",
        "cursor": {
          "ref": "ed48368e-2ada-4989-8771-dc4b49fbee5b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "617d41f3-c5ba-456d-9de3-7ef00e239d0b"
        },
        "item": {
          "id": "7490a480-e87e-42e2-b84c-20eb10f33493",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "faeb879a-78b7-4a16-b73a-9411f2339223",
          "status": "OK",
          "code": 200,
          "responseTime": 275,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "e7608cc0-d545-447e-80d3-0eb824ba3489",
        "cursor": {
          "ref": "0cd074d1-bb2a-4f4f-8221-26ed54dd6408",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb812d38-64e3-4250-acb0-f2019e1f3424"
        },
        "item": {
          "id": "e7608cc0-d545-447e-80d3-0eb824ba3489",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "caa047f4-e532-476a-a232-dc662d067666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79350a54-0e4f-4e79-8db6-a4974069e553",
        "cursor": {
          "ref": "8286b0e5-3e93-41be-86f4-06d586144a1b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "924c1b74-f06a-4ed9-ba1a-ef597f85fbad"
        },
        "item": {
          "id": "79350a54-0e4f-4e79-8db6-a4974069e553",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "71fbe76e-277b-4c60-a786-7193cdddfe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd87b42-b102-4aae-8c05-4c891635faa9",
        "cursor": {
          "ref": "c62d8f9c-2c5f-4325-8e3c-2374710f8912",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a91cca33-7fc5-4877-a542-90e234697c4e"
        },
        "item": {
          "id": "cbd87b42-b102-4aae-8c05-4c891635faa9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "166b87fd-9784-431d-803e-28a791bcb0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf53f6df-22a5-424b-b547-ad48959bf4f7",
        "cursor": {
          "ref": "f4a777c1-1920-48e2-a415-827136ca7195",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "28100edb-9eab-4346-b270-664726cb62a2"
        },
        "item": {
          "id": "cf53f6df-22a5-424b-b547-ad48959bf4f7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4666704d-ca95-40d3-9ad5-54dad9e63c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f36b09-f1f0-4307-8995-b639025d911b",
        "cursor": {
          "ref": "c5b19110-d386-42e7-b4c7-fa85faae0750",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ffc884b3-08ac-47c7-b82b-122d3f62d7ae"
        },
        "item": {
          "id": "88f36b09-f1f0-4307-8995-b639025d911b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b626015c-c8fd-400c-b225-6c90f30d4620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd37713-0c12-48c8-81a7-9b88db9ea707",
        "cursor": {
          "ref": "8d9b7cfe-7298-44c7-b932-05353855ce1f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8238efa1-5fd1-4915-b9be-1b90d5ebda9d"
        },
        "item": {
          "id": "1cd37713-0c12-48c8-81a7-9b88db9ea707",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f1df711b-c1da-483b-b92c-c31cc6ba5713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e3e9f4-88fa-499c-bce0-98f0bdb3c48e",
        "cursor": {
          "ref": "29f75ef0-2d4c-4cba-90ff-92d83b4ac88e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f538c5ee-fa8e-485f-a928-bb98d66a2378"
        },
        "item": {
          "id": "b4e3e9f4-88fa-499c-bce0-98f0bdb3c48e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "030e38b6-964d-48a4-98d0-9923c37571b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bdf5ef-ead5-47f5-a7f5-a5291ab4526f",
        "cursor": {
          "ref": "dce059b8-3d99-4ee3-bed0-dace2e91e6a1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "54658080-483b-4cab-9127-4d75646b7f9f"
        },
        "item": {
          "id": "34bdf5ef-ead5-47f5-a7f5-a5291ab4526f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f6be7a1d-44f5-451c-a5f5-40b7aa6128ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f8d138-62f5-4acc-8fe5-88127ea167d6",
        "cursor": {
          "ref": "d7a0c2ec-0e6c-4243-af28-bba8e79403ae",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "11ca9931-e6d0-43bd-a607-8575666ca791"
        },
        "item": {
          "id": "17f8d138-62f5-4acc-8fe5-88127ea167d6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b5016a7c-8e6d-4bbc-b705-a52617dc0f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5acdfe-d0f0-4644-a48c-c100cae5e75c",
        "cursor": {
          "ref": "3972bc43-b655-4346-a823-dbc9ddd9d82c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "62a2909d-8336-49ae-93a8-727175bcab69"
        },
        "item": {
          "id": "db5acdfe-d0f0-4644-a48c-c100cae5e75c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bafa4c83-b927-409f-88fb-6d016a2dbf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7531a2-ebb8-4a21-a05c-b810a24913af",
        "cursor": {
          "ref": "22a1f6f5-3a72-4834-a950-04faeb24db62",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "08120b83-19ed-49d1-8731-15d62e9c1b11"
        },
        "item": {
          "id": "2f7531a2-ebb8-4a21-a05c-b810a24913af",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a232095f-d641-42a6-a406-8ff881436e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff163c9-1265-470c-bd54-d13c46cf9893",
        "cursor": {
          "ref": "2c04686f-1557-4a90-9795-f06b5d22b7f4",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1dc5210c-ae87-4620-bf41-10e244a2a282"
        },
        "item": {
          "id": "0ff163c9-1265-470c-bd54-d13c46cf9893",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0fa8315f-067b-4777-833e-8ae1e8adcb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074192e3-67df-4458-b8d6-7239526aab11",
        "cursor": {
          "ref": "bda0d453-8512-4e5f-93ac-5f7b7ebe6a6c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "08ef569a-492c-44aa-972b-b310ce0867fe"
        },
        "item": {
          "id": "074192e3-67df-4458-b8d6-7239526aab11",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "76718833-57ab-42c3-b3fd-b9c31b9b8d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f09b84-1485-486d-868c-73ae226132d8",
        "cursor": {
          "ref": "325abe22-a48a-4733-9b76-078aac2571a8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0db6e1cd-9ec0-4681-b6b1-11bab58e6734"
        },
        "item": {
          "id": "70f09b84-1485-486d-868c-73ae226132d8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "89fb003f-8feb-4588-b9bb-f21c4a0ab875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c2f496-b4bc-4bf5-8c80-83e7e05de398",
        "cursor": {
          "ref": "617ced9d-4eb5-4053-8bb7-4d7029f66ee9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f43efc18-e34f-4851-87a9-283f08bb0b43"
        },
        "item": {
          "id": "a6c2f496-b4bc-4bf5-8c80-83e7e05de398",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "03838703-fbcc-4c37-a205-83abe6286704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffec7689-7dc0-4c39-9794-e788006c41cf",
        "cursor": {
          "ref": "5c93f719-d342-405b-827f-9e863281dfb1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "10fa8b9f-a2da-498e-bdef-c12e5a49b834"
        },
        "item": {
          "id": "ffec7689-7dc0-4c39-9794-e788006c41cf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "810f00a5-c371-46b0-acc7-17e8d2dfe46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4ce73c-e1ef-4146-ba25-173c7a3217c8",
        "cursor": {
          "ref": "b8e84391-2990-4fcc-b8cc-e0cac78b5562",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a70138bb-8374-41d2-8898-11bf28f56fac"
        },
        "item": {
          "id": "9a4ce73c-e1ef-4146-ba25-173c7a3217c8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f7c4aa4a-111c-455c-b686-e2e8612fae27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b913b9-167b-4d1e-ae6b-2a197a1713f3",
        "cursor": {
          "ref": "d36198c0-4681-4884-bec0-fbc3ab21b609",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "98ca3eab-16e7-43e0-872e-c58e1df7d940"
        },
        "item": {
          "id": "44b913b9-167b-4d1e-ae6b-2a197a1713f3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "717c7ed3-fd8a-4ce4-9ac3-474aa2315747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bcaf5b-beda-4a9e-af8e-66dec5c99205",
        "cursor": {
          "ref": "f44bd7de-6496-4c96-a117-4f4e4dde098e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6afaf98e-fcef-4f99-8c05-1aafb40ccce3"
        },
        "item": {
          "id": "85bcaf5b-beda-4a9e-af8e-66dec5c99205",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c9e60bdb-7372-4ff8-9eab-799d8c4839ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff2fc22-996d-4e53-9c9e-2ee080c1af2c",
        "cursor": {
          "ref": "8e4154aa-c578-4e42-a472-e6ce778cb151",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5e1bcc1f-a8dd-412f-9a92-93ff2296035a"
        },
        "item": {
          "id": "6ff2fc22-996d-4e53-9c9e-2ee080c1af2c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cf817028-81c3-4e04-87da-c3eaf2bbdb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45084e47-b260-4145-9955-77bafd68fc66",
        "cursor": {
          "ref": "17660dca-bb28-4a24-a6f8-4bb039cbd59d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "10b2762a-fa10-4989-a254-b44ad0ca03e2"
        },
        "item": {
          "id": "45084e47-b260-4145-9955-77bafd68fc66",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e18a6b7d-f5e7-4539-b89e-baad3f7d5756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d04b92-6d41-426f-9916-10beef2504ad",
        "cursor": {
          "ref": "a5a19849-f645-428d-98a2-9bf187ae8be8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "64aa5223-83db-46c3-a782-cee4d46f6167"
        },
        "item": {
          "id": "e8d04b92-6d41-426f-9916-10beef2504ad",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7518c397-4be2-461f-95ff-3ee31e76aab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b37b3e2-5e22-4b9e-ac13-4fce9edbe327",
        "cursor": {
          "ref": "400a29cd-cbe5-4989-8cfb-3625d6da8f5f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "700e2a4d-6180-45c3-94bf-cc5e859ef2f0"
        },
        "item": {
          "id": "0b37b3e2-5e22-4b9e-ac13-4fce9edbe327",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "41d7b176-fb7a-4b31-b414-e6905af3d330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329cc0f4-4f47-49c1-a78f-a3d474c8195c",
        "cursor": {
          "ref": "514149c2-e442-41f7-8311-967337ca3a47",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2fe725d9-8fe3-43d7-90de-9ad0e4c0aa07"
        },
        "item": {
          "id": "329cc0f4-4f47-49c1-a78f-a3d474c8195c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "703075ee-f7b8-4b45-ac60-c3ccf10e8544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1d2c7e-516d-4f12-9039-54670914303f",
        "cursor": {
          "ref": "34517cc1-7276-4c1c-a7df-b00c1086ac95",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8429d379-fc8e-4fe9-a7cc-60d81f9da186"
        },
        "item": {
          "id": "4f1d2c7e-516d-4f12-9039-54670914303f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "447a2fbb-7543-4557-b2f2-c43a99a59a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df234a1d-1be1-461f-ab77-6513f9c0ca0a",
        "cursor": {
          "ref": "145b925f-4a71-4a24-9893-89fbb13b1828",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b889511f-181b-4716-bf36-293179cc89aa"
        },
        "item": {
          "id": "df234a1d-1be1-461f-ab77-6513f9c0ca0a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "360c741d-7034-499a-970e-45068a9e7aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e755bfc-7676-4832-a266-ad1d0f7777fa",
        "cursor": {
          "ref": "fcfcc5fe-338d-4ed4-aad6-ed1e3d04e12a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "863f42a3-d4a8-412f-bdef-8966aee163ee"
        },
        "item": {
          "id": "2e755bfc-7676-4832-a266-ad1d0f7777fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b37bc005-934c-4951-a6f4-17349a184d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbaf2a1-354a-4144-94a4-c5577449f10c",
        "cursor": {
          "ref": "381c99b6-9ffb-46ca-bfdf-d4a8ce8facfc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0cf3415a-9979-4588-b5f5-73a498f7ddbe"
        },
        "item": {
          "id": "abbaf2a1-354a-4144-94a4-c5577449f10c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2e2ff6dc-3db2-4ecd-a4db-45d7fdc84f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302cca7d-93a3-4f67-bba4-1ce83de8452f",
        "cursor": {
          "ref": "e6a6a648-a530-42a4-be45-dbb8d2e75a04",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8dda5d9f-7e84-4086-99c5-6d3d9a61f885"
        },
        "item": {
          "id": "302cca7d-93a3-4f67-bba4-1ce83de8452f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d6b90b7e-64f8-4503-8355-4096986dfa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fa20f4-a99e-488d-b60a-2505912f1b20",
        "cursor": {
          "ref": "160ad6ef-34d1-4d1d-a24e-9d7f973c96b1",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a9961d08-4d5e-4929-9a70-9bcb3c6f697a"
        },
        "item": {
          "id": "58fa20f4-a99e-488d-b60a-2505912f1b20",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4662c90a-8090-41c6-bb46-52357be239a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3e2c54-cdf0-40ba-9ecf-952793ee996c",
        "cursor": {
          "ref": "d4180adc-cf7d-4761-a6f1-92b76b39fc44",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "941589a3-d96d-48f1-9262-867975bdea49"
        },
        "item": {
          "id": "fa3e2c54-cdf0-40ba-9ecf-952793ee996c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f3be648b-4923-46e2-8fc1-75ed539c96d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc61f5cd-a5c1-4a6c-8992-506d6ef187a6",
        "cursor": {
          "ref": "90b06801-1fc3-43f3-bf60-1114987dc9c5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f8f7e9be-7ad3-40cf-b7e7-b1be6f880f84"
        },
        "item": {
          "id": "fc61f5cd-a5c1-4a6c-8992-506d6ef187a6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "53043637-2118-4f73-a112-3f425f159889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60323a2f-6ba2-4846-a28f-263468181ea2",
        "cursor": {
          "ref": "4ab56483-b797-4b40-b558-31979f03341f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "238f885d-a3cb-4058-b836-e75729f1bba6"
        },
        "item": {
          "id": "60323a2f-6ba2-4846-a28f-263468181ea2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8614190b-5149-411c-a0b0-49a0f7442462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24821b1-623e-4067-b840-068afd7557f6",
        "cursor": {
          "ref": "0f7313ce-9e5b-4e67-8134-4c64e86a38c9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0858b24b-111d-4bd3-afc7-e722fc09ec7b"
        },
        "item": {
          "id": "b24821b1-623e-4067-b840-068afd7557f6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8d08c986-9ad6-401a-a1fe-40b6888311ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9992587-668d-4a5f-9dc0-9d7452669fa1",
        "cursor": {
          "ref": "830e5c80-dbed-419e-a334-0357a2964785",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "977e71e1-dd2d-4e53-80ee-3ce386fde412"
        },
        "item": {
          "id": "b9992587-668d-4a5f-9dc0-9d7452669fa1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e44b4994-2972-4f2c-b452-480f9610378d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d715c6-d970-4a8d-b3d9-8c2520530144",
        "cursor": {
          "ref": "212a1038-cd49-48be-aeae-0ea0e6d36e15",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "082a96db-48c6-4904-90a2-3cb233f93209"
        },
        "item": {
          "id": "73d715c6-d970-4a8d-b3d9-8c2520530144",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "730edd9a-f98c-4a8b-9960-939400d90627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8c10a5-d683-4ba4-a82c-53b94a97ce37",
        "cursor": {
          "ref": "03c2acc0-ee89-4498-8a96-888d31cc72f8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fc9f4dee-c8fb-4a52-bc16-c54bc3c26ef0"
        },
        "item": {
          "id": "6e8c10a5-d683-4ba4-a82c-53b94a97ce37",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e5812d02-f017-4fb6-b7ea-b9f9ea2f65d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94051116-e4d1-4ee4-9830-558bb5f111a8",
        "cursor": {
          "ref": "81ee9cc1-943e-488d-b178-3820aece6527",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e664401d-da8a-48b0-9d55-7c998bdff683"
        },
        "item": {
          "id": "94051116-e4d1-4ee4-9830-558bb5f111a8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8df69edf-d483-40a0-beeb-188f4fdc2d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9dc7ef-125f-4ad5-8bb8-faa6b3c14051",
        "cursor": {
          "ref": "e78befac-04ba-408b-96fe-79ba007d5d05",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5841fe59-6228-4970-a668-9501319433d2"
        },
        "item": {
          "id": "ea9dc7ef-125f-4ad5-8bb8-faa6b3c14051",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "613a38d4-0d41-462e-a363-1c56d971d17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cd6336-b665-4e28-b290-70d193915673",
        "cursor": {
          "ref": "2b6b2d30-0be9-465c-be1b-c0c620ca4fc3",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "36014423-ed17-470c-b9a4-b753b3ef4045"
        },
        "item": {
          "id": "35cd6336-b665-4e28-b290-70d193915673",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f30f7320-2d84-41cf-b9bb-d50d032a6edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fe6532-37ac-4a93-9b59-b48edba2033a",
        "cursor": {
          "ref": "81d8503c-5d06-466f-a999-e7b847faea09",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8482e0cf-f3ff-4ace-9624-e4424ab62aeb"
        },
        "item": {
          "id": "97fe6532-37ac-4a93-9b59-b48edba2033a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2c60cbd4-b846-4480-b84b-44b5e4b3a56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9e0d89-7f7a-4617-8ca3-e4d81c68b973",
        "cursor": {
          "ref": "526cd202-7aee-4732-bb35-c8125d08f34c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ecf9aa08-f5f6-4730-8f66-101e328f8220"
        },
        "item": {
          "id": "8c9e0d89-7f7a-4617-8ca3-e4d81c68b973",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "17dfc293-780f-4e31-83ea-f5f652e66846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b70d0c8-a24f-4b60-9683-dcc270bfe785",
        "cursor": {
          "ref": "0a1531b7-1ee1-4f31-8440-3a85c24fac55",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "da87f71f-94bf-44d6-a2a2-8302f67d9b0b"
        },
        "item": {
          "id": "8b70d0c8-a24f-4b60-9683-dcc270bfe785",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e62cac19-6a29-4bb2-b91a-589165243e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50452b0a-aca2-464a-8a98-fc8d25692244",
        "cursor": {
          "ref": "dbb94dff-fe9c-4ef4-ae80-86d3c9271579",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c145079b-e13c-4091-9a1f-ee4e645ae152"
        },
        "item": {
          "id": "50452b0a-aca2-464a-8a98-fc8d25692244",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6f8a20c2-c6c0-4319-a81e-2db128ef4116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc242785-7f41-4aea-bb2a-6ad30e7f98f7",
        "cursor": {
          "ref": "86037132-624e-41df-bb51-1269dbc514aa",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fa984322-645e-4a1b-92ef-15882902f335"
        },
        "item": {
          "id": "cc242785-7f41-4aea-bb2a-6ad30e7f98f7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a601edc5-0adc-410e-8327-3a085a6dd6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58403f3e-cd29-4c38-a712-d007d9cef67b",
        "cursor": {
          "ref": "9d69daf4-167d-4ce2-9789-434d5d52d8fc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "346296c1-bcf4-4b06-bf57-1e453d2aaf2f"
        },
        "item": {
          "id": "58403f3e-cd29-4c38-a712-d007d9cef67b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c7e6fcd3-3867-4320-a5bf-c831b525226f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63c257f-2fb0-4186-9f55-e4e8d05dd327",
        "cursor": {
          "ref": "dbc592fc-b336-4e3c-8271-dcf07a63db30",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b0ef017c-f4c4-405e-847f-e7de789b12a3"
        },
        "item": {
          "id": "e63c257f-2fb0-4186-9f55-e4e8d05dd327",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b58b5c36-4b24-4bbd-8b6b-54784ad64acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa997e4-e11a-471a-918c-98e640806a88",
        "cursor": {
          "ref": "4bde011d-b836-4991-9899-ad5867b31031",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "18117f43-e505-4ea7-a44c-a6b820ebc340"
        },
        "item": {
          "id": "baa997e4-e11a-471a-918c-98e640806a88",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "faf59de8-55d4-4911-b435-2a04d14dc40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eba719-b41d-425b-8ea1-1b1122775eeb",
        "cursor": {
          "ref": "496facfa-4417-4928-88c3-7eb39c56e2bf",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7b94082e-fd10-4f6e-a23f-bd7327dc1345"
        },
        "item": {
          "id": "02eba719-b41d-425b-8ea1-1b1122775eeb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b6359202-0b85-4db8-b909-f2feea50a615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86510c53-7596-4013-b3e3-d70eddc953ec",
        "cursor": {
          "ref": "7516ded7-2372-400b-8e3a-8105b0c7603a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "38fc4782-02bc-48aa-bf6a-58a1e83616dd"
        },
        "item": {
          "id": "86510c53-7596-4013-b3e3-d70eddc953ec",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d2566879-a808-433e-b3d8-cbcf235e0657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c849c3f8-7ada-43cd-9c35-1a24d71a9691",
        "cursor": {
          "ref": "412c3bd4-294c-422c-90e3-d64c5b5c36c9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1f96289c-5fd1-4330-807b-8d56f533e3d4"
        },
        "item": {
          "id": "c849c3f8-7ada-43cd-9c35-1a24d71a9691",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "356703fd-20f2-4256-adf1-80e09a1921cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e32693-9444-4ed1-b5c9-941b62d7eee3",
        "cursor": {
          "ref": "49e34e59-2aa0-4126-974d-8a40ea75bbf9",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "be2442d7-b94a-4639-b7c2-10de21eed6c0"
        },
        "item": {
          "id": "d2e32693-9444-4ed1-b5c9-941b62d7eee3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f47b5ac6-8226-415d-84e5-f9c46f54f4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83c2294-2089-406f-82fa-e8efb53b9772",
        "cursor": {
          "ref": "0a154adf-9686-4ab0-b0a7-3da1cdb5d04a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "324aead8-3150-4798-8ced-76582329130b"
        },
        "item": {
          "id": "b83c2294-2089-406f-82fa-e8efb53b9772",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b76c73b4-3b95-407b-b804-1b24db722ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fb27c5-10b0-49a7-b4d6-25bd7178f46c",
        "cursor": {
          "ref": "9fd1f3ac-758a-489c-bcbb-03525e083d92",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5d7e7ae2-6f49-4bc6-b6a7-7883b536dd5c"
        },
        "item": {
          "id": "d7fb27c5-10b0-49a7-b4d6-25bd7178f46c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fcc1f883-b75c-4b2b-a9fd-1d56dd74e5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3adbcbc-7acd-451b-afed-100a421eec9d",
        "cursor": {
          "ref": "201bd7ee-4d52-42a8-95a7-e48d968abb98",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1cfe54e8-7d58-4d21-8024-9dd9856b901c"
        },
        "item": {
          "id": "c3adbcbc-7acd-451b-afed-100a421eec9d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d5f16844-a444-4008-af2f-c4eea3d0a8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3229b5dc-8b2a-41fc-83a7-d51a1d485232",
        "cursor": {
          "ref": "b27edd3f-b10b-4f48-a61b-c18d30494515",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "72ce6021-6638-4106-8508-8eaea776f2d2"
        },
        "item": {
          "id": "3229b5dc-8b2a-41fc-83a7-d51a1d485232",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4bcd5c74-6d3a-4f63-9dca-1a4f2ffc8c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aa3458-5e7e-4b06-86e4-b81e8783aadf",
        "cursor": {
          "ref": "ef6ec401-79bd-4553-8ade-0e30c0276a3e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8b7c0ea1-f9e2-40c1-9482-2501f2f8076f"
        },
        "item": {
          "id": "a9aa3458-5e7e-4b06-86e4-b81e8783aadf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7bee8249-0a68-4002-9fc4-210d8cf92f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70019973-f4b6-482f-aa5a-c6cbd24950e2",
        "cursor": {
          "ref": "6882cfd6-feff-4ecd-92d8-d6196b4d9004",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8234641d-3b4d-4715-8f84-876e40b969e4"
        },
        "item": {
          "id": "70019973-f4b6-482f-aa5a-c6cbd24950e2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "550cb848-b01b-4251-9fd8-e53c15ee2843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aea23c9-b3f1-4ec1-b488-44ebb78072a4",
        "cursor": {
          "ref": "cd3a26e9-9a3c-47a1-98d7-7edab58d16e8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "611dcb3a-13ae-4f7e-9373-14ecd8f4019b"
        },
        "item": {
          "id": "8aea23c9-b3f1-4ec1-b488-44ebb78072a4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "177c443a-f8cb-4680-a699-bc75f8adfca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aad08e-2e3a-47c5-91a7-a9e8a0142c18",
        "cursor": {
          "ref": "2e226efa-3e2c-4f69-a8c9-f56d9526e63f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ca92ce02-261f-419c-a8f7-abf10068957c"
        },
        "item": {
          "id": "10aad08e-2e3a-47c5-91a7-a9e8a0142c18",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "943999e9-1c4f-4fea-bd58-ba5fd3b83e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fffb73-3c71-47bf-9e1a-7883283ac534",
        "cursor": {
          "ref": "370a021f-ff10-423a-aad2-90b14946fe71",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "644330e0-e5d0-4ad6-9e41-9e865d86c939"
        },
        "item": {
          "id": "f5fffb73-3c71-47bf-9e1a-7883283ac534",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e7fe6d83-fd16-4ff5-9740-ea2d52673015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055dfedd-4383-4100-8d41-dc78238d1e66",
        "cursor": {
          "ref": "93587f83-41e2-4f40-acc1-545cdfed7714",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "48ad76f3-e2ae-43ed-a6fa-03b0e46d17e5"
        },
        "item": {
          "id": "055dfedd-4383-4100-8d41-dc78238d1e66",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6365f309-6810-427b-b38b-09b37b5f6db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ff1dad-64a9-4ae7-9e4f-8a8c90474eb9",
        "cursor": {
          "ref": "0d43e908-afc2-49dc-a0d0-df7b6a66cb0b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f99745f1-db7c-4db1-9a8e-4f21eaeb5b2c"
        },
        "item": {
          "id": "e8ff1dad-64a9-4ae7-9e4f-8a8c90474eb9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fd1fd933-55eb-4afe-912d-43d4918ebcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404dfa2e-4231-42ef-9a95-9fa648be7fe1",
        "cursor": {
          "ref": "09887ce7-2703-4258-b1d1-855f333c1d62",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c4101814-76d7-4b64-b818-af3a4e268cb1"
        },
        "item": {
          "id": "404dfa2e-4231-42ef-9a95-9fa648be7fe1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0c860cff-a062-47a0-bf1e-fe3358a565a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0f5a6a-c0e0-4e52-88fc-4c6b99654855",
        "cursor": {
          "ref": "fd908d56-7f5b-4d92-b656-30118f40d1d6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b3b82858-60d1-401c-bf93-c1b57f9946be"
        },
        "item": {
          "id": "7f0f5a6a-c0e0-4e52-88fc-4c6b99654855",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2fde0822-ff1c-42e3-8dde-501ef2708e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480ca834-85ea-4df7-a7a8-dfc0b7e3e970",
        "cursor": {
          "ref": "9a8d2c4d-6c9e-46d3-a9f7-4f30888164e7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "495d2d9c-41a8-48ca-bb16-721ba8613714"
        },
        "item": {
          "id": "480ca834-85ea-4df7-a7a8-dfc0b7e3e970",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "229bf4a0-e8b7-481d-9b31-99a84a9ed450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb560d00-6e7e-4932-80c0-d5cbc4a176d0",
        "cursor": {
          "ref": "a02440dd-9855-4aae-b06e-adbf71269a8d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c0f335fe-a807-4767-92a1-ec656d798e1f"
        },
        "item": {
          "id": "fb560d00-6e7e-4932-80c0-d5cbc4a176d0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "afc8b564-0e8f-4870-9f37-7ff04389e54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52b8acf-8b29-4258-8185-fb4f3f35f63b",
        "cursor": {
          "ref": "bcbd12cc-4592-49d9-821c-f330962a0418",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "41daa7bf-31a2-4c38-a2dd-6a86288cf8b1"
        },
        "item": {
          "id": "e52b8acf-8b29-4258-8185-fb4f3f35f63b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9a698f6a-753c-4fb8-bcd0-eda9cef298cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b380f0ff-eecb-4dd7-adc7-e799e460638a",
        "cursor": {
          "ref": "fa45e8b8-abe3-4aaf-b5fc-709691970d62",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1f115c89-a99d-40a6-a23a-e7d07c0f203f"
        },
        "item": {
          "id": "b380f0ff-eecb-4dd7-adc7-e799e460638a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "915c0c63-8870-4516-a225-44ced9032b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2777ca7-c2a0-47a4-b8a7-8e96b30c6fc0",
        "cursor": {
          "ref": "78c4d9aa-c46e-45a0-bdd6-66c229e1bc31",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "76666e53-cf9f-41fe-8361-cb4610ba38b6"
        },
        "item": {
          "id": "e2777ca7-c2a0-47a4-b8a7-8e96b30c6fc0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ac3f1c98-45b6-428d-84ae-ee32816e0037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f5fe9c-f24a-46f9-a004-2c868ddbc919",
        "cursor": {
          "ref": "5402888b-e22a-4daf-9119-72cc856b17a6",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d8d1eee4-a708-4a5e-b3b8-98448eebc5c3"
        },
        "item": {
          "id": "30f5fe9c-f24a-46f9-a004-2c868ddbc919",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1b543482-159e-4767-a651-a8958f39ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4588ea-ed9e-4366-a784-9b79004905ec",
        "cursor": {
          "ref": "8787fd5a-d645-4b72-ab37-abbdb18c0e00",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2c409939-2587-4656-aa1d-aa5c07a3c875"
        },
        "item": {
          "id": "1f4588ea-ed9e-4366-a784-9b79004905ec",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7fee010b-d282-44de-959a-f962c4fad5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47c0f27-a1b4-41ae-877d-78ebb5f8f2cd",
        "cursor": {
          "ref": "f25d87bf-10e4-4aac-8618-dd9cfed48af6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a1a873ce-9bd7-40d4-9490-4e43282e58ca"
        },
        "item": {
          "id": "c47c0f27-a1b4-41ae-877d-78ebb5f8f2cd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "36e87139-c124-4afc-8b19-9de8bb837c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703923a9-b9bb-485f-9aed-9f4cee5c46d6",
        "cursor": {
          "ref": "be643f52-f745-45ef-8f8c-de775c654f39",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c1028c61-f5d4-45e0-b235-f208004aca74"
        },
        "item": {
          "id": "703923a9-b9bb-485f-9aed-9f4cee5c46d6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c091535e-5ca0-4609-9e70-36b507f1fb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a2d65c-2c93-4eea-948b-1688b98fc5b9",
        "cursor": {
          "ref": "cb72b7d6-22eb-4a67-916f-d43c1388e63c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7683ab16-a8e1-43dc-ba3f-9c8d983a5448"
        },
        "item": {
          "id": "82a2d65c-2c93-4eea-948b-1688b98fc5b9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "25efd8e3-895a-4074-aaa2-e42486a4f49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4ef98f-a904-4d32-a20e-ffa0034af634",
        "cursor": {
          "ref": "ac59a460-2e9d-4b58-9b1e-256aa7fbe4b4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d83a4cc1-bcae-402c-881b-db26db4209e5"
        },
        "item": {
          "id": "6c4ef98f-a904-4d32-a20e-ffa0034af634",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fbbc7013-ec9e-44aa-936a-b39f93c34f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884a1100-89dc-4184-8f46-14ee4cca3691",
        "cursor": {
          "ref": "c9645c71-be7b-493b-8c90-6b9584fb7cef",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b013ffa0-fca8-4b1b-9678-9b4ab7af9456"
        },
        "item": {
          "id": "884a1100-89dc-4184-8f46-14ee4cca3691",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "92cc12ff-01fc-48ee-9113-a360079ea8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef643347-80b6-48a9-b7f2-c445e9f5bc47",
        "cursor": {
          "ref": "36c0fe13-7054-40d2-8691-b182f24a347d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2455ce9a-5e34-409f-9df9-842d3bedfa41"
        },
        "item": {
          "id": "ef643347-80b6-48a9-b7f2-c445e9f5bc47",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bbbc0560-e965-499a-8a31-271136ec1099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7c3589-36a9-4cb4-b186-9fdf58db8049",
        "cursor": {
          "ref": "a9f64dfd-10d2-42ba-b69f-74ecd9b9ff87",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9caf6a07-9a02-4468-9a4c-49a918645e84"
        },
        "item": {
          "id": "af7c3589-36a9-4cb4-b186-9fdf58db8049",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2d8a2d7d-d15e-4813-a4f9-ce967b227260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5e36e2-444d-4b45-8dab-8f41b6307810",
        "cursor": {
          "ref": "363b2172-6d93-4576-a24b-38fd88551763",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bb1d80c8-54cf-407b-916d-0ec1be9c80be"
        },
        "item": {
          "id": "2e5e36e2-444d-4b45-8dab-8f41b6307810",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8e6a6810-c34e-463e-8ffd-040d707d69a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb6b0a7-83c8-46bb-b122-5ff72bae6c4d",
        "cursor": {
          "ref": "60694c18-7016-45cc-92ae-71b9e232ad1f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ec15d445-efed-490a-b924-5171a21bad71"
        },
        "item": {
          "id": "3cb6b0a7-83c8-46bb-b122-5ff72bae6c4d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3de6483e-c55a-48c3-9f72-f703cbccf8f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43856053-952f-44cd-8e1c-333a5c95fe2f",
        "cursor": {
          "ref": "47915c9d-a43b-48a4-bbf3-f3e079c65a28",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fbd9a0d6-70e8-4356-b056-245780fced7e"
        },
        "item": {
          "id": "43856053-952f-44cd-8e1c-333a5c95fe2f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "08b4f657-af27-4fe1-b7ab-3a192d4b2539",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5db936-403f-48b2-a59b-3c3640cc4ae6",
        "cursor": {
          "ref": "bd0d9489-58fe-4bb6-ae0c-84f487f35274",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3c7ead2a-2ab9-4040-aa43-0e3ebcf5941c"
        },
        "item": {
          "id": "6f5db936-403f-48b2-a59b-3c3640cc4ae6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "47600c52-2260-48d0-8eaa-19a072325755",
          "status": "OK",
          "code": 200,
          "responseTime": 2643,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "424252a1-ccb0-4f10-9247-047eab150c43",
        "cursor": {
          "ref": "0ad8a174-6d08-4241-92bc-fd31823d9f42",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "518cf45f-bf71-4caf-8bde-cbb7567f54fe"
        },
        "item": {
          "id": "424252a1-ccb0-4f10-9247-047eab150c43",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2857b75a-25f6-41c7-8183-7029e0d49409",
          "status": "OK",
          "code": 200,
          "responseTime": 2606,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f266e7f5-570e-4a6d-acfb-a1048d5cbc0a",
        "cursor": {
          "ref": "8775e214-d69d-44ea-9788-cb493df13356",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dff1c050-48de-4dd7-847b-46a18b09fd92"
        },
        "item": {
          "id": "f266e7f5-570e-4a6d-acfb-a1048d5cbc0a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9d55e0f-e92a-4f55-93fd-d867225b4bc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f266e7f5-570e-4a6d-acfb-a1048d5cbc0a",
        "cursor": {
          "ref": "8775e214-d69d-44ea-9788-cb493df13356",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dff1c050-48de-4dd7-847b-46a18b09fd92"
        },
        "item": {
          "id": "f266e7f5-570e-4a6d-acfb-a1048d5cbc0a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9d55e0f-e92a-4f55-93fd-d867225b4bc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ed1830-b468-4be6-866d-1900954ecaa5",
        "cursor": {
          "ref": "9f4c71c8-116d-43d6-b425-397c13010f76",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e2c932c7-a75a-4280-adeb-ac71fab79d32"
        },
        "item": {
          "id": "43ed1830-b468-4be6-866d-1900954ecaa5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0c608531-b32f-4979-a449-1d52609044b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f7e076-9303-4476-bc8c-2728be25ba8e",
        "cursor": {
          "ref": "624d3a57-b3d0-4f6b-b759-36bc63bfbf5c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "45698ea6-a979-4c45-be16-f80a83ca0acf"
        },
        "item": {
          "id": "01f7e076-9303-4476-bc8c-2728be25ba8e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "abcf1e39-9c49-44fd-88e8-5d9716a0a347",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}