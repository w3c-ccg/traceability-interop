{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cc48bbe0-74df-4208-ab9e-72f84ae96081",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d8255f25-ff30-4271-9842-ed250a134060",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1ecaf03-177e-48bf-9358-4274d804a5c8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c63d3e84-181f-46a6-848f-a50fcab0bf38"
                }
              }
            ]
          },
          {
            "id": "4309879e-d91a-4e9a-b023-9428e93d75f0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d27edef-88e3-4aa2-8071-1e2005939bbf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "277a33d6-62b4-45f3-9ace-9763e5b7eb66"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e88ab8f2-c5dd-424f-aab2-c852ca451196",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8d7c4228-5e99-43ed-a8d7-1903f20a7a47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b3edcb8-4d6a-4a62-9d61-93a0728dc171",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd2fe87b-9922-4a93-a917-2d1e308c8953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2260cc22-e995-49f2-90e9-256167117408"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a1ec8a5-603c-4e12-8c1e-4f4bdbad042b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "609ce097-d6a3-4d45-8c17-2e357947eed0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81cd8127-aa56-4fcb-8a26-e379066b5993",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3256664-8389-4bf9-892f-174ecad30d4b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84d04e4d-6877-4b26-85ba-40895f44b8dd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "02718dc9-802a-4ab0-91b6-05cf5cec2abd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f2526e7-b0d9-4039-8223-095f14299e68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "391e0fd7-718e-4d84-814e-f05fa59dd82b"
            }
          }
        ]
      },
      {
        "id": "a870e62f-999c-4326-8647-05575648a61d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f86ce0e2-6822-4155-aa9f-df62d0d7c735",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9298bfb4-b09b-4aaf-a4ae-b6144075eb3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a622849-5520-4560-a490-8903ffd334c9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ce485f-be14-44ae-bea0-0be254dc76fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71e877a7-abfd-4553-988f-1c28036d6879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d489cb10-c91a-404e-91e7-19ea6dd43c0d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaa3ce4-eace-4db7-b5c2-3a33a9cdfa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9feade5e-6311-48d2-b4ac-ea870721a9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d3dee3-14b8-442c-847f-7f482c062b07",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3769a0a9-c186-4e42-aef6-ddd7d7804389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0c7174e-4462-4f06-a3bc-4fdfaaa4dfad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea6d0bf6-b7ad-4fef-b17a-f1bf92652aad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0b4534a-89ff-41f6-a146-a463ff690cff",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b546fd3e-ba23-4a27-8eeb-4dbd4a40048b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52841b9c-7631-43fd-a48e-31166c3a19d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7546b9cd-fc62-44b8-9edc-55665dd12d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff70a7d2-6f91-431f-ba5d-1ea5e65d6ac1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "224207d5-a3a9-4352-bd6d-89ebcbbfcefc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06d07a9b-d2be-4d9d-a531-e58155840559",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98e9dd8f-660c-4da5-9766-a76a67f4d60c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "96460834-4de7-4683-b5fe-7bc3c489fe52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d01334a1-57de-4348-ab4f-3f1774cd5769",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "595bb755-1e34-43d4-b8ba-f23a5b8c5628"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e53ac1e-f4c6-430d-8026-a108c18daccc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72ca5643-d114-47b9-933f-1ae2abaf12a3"
            }
          }
        ]
      },
      {
        "id": "231a3bc7-09b8-41d5-af7b-8aea0c8bc012",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2656c307-c4c5-4939-aa13-858a3f0de054",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a11fec8d-2076-4e9d-b5bd-046160fcfb6f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f237f537-8b8d-454c-8616-85b7e52f05c0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030090c1-1c9c-4aed-866e-e7ac4b4176f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630f85f1-390f-47f0-bd12-5b9174372eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516537de-ff31-4102-add1-c534bfbf815d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3277e2f8-2dbc-4fdd-a997-966433d4c17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb47c6f-dbc9-472d-965a-cbe921813efc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad374a76-d120-49f1-b8ce-1de8c88dd90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dfcecb-126f-4b83-90ef-d9969ecc49ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7f4b98-3a0c-4c04-a0e7-fb3b872bbca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a23238f1-6bef-45b1-93c5-33c08fefaf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624bb4fc-724b-4a24-aa47-9848ddb654c1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb0faf2-0cf9-4770-9c01-61150708e07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0141514-41be-4a59-8794-f010f1df5f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f4ddd5-12e2-4512-8694-706c970c96aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a607af42-4656-4793-a5ac-e471fe0d2ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e995a36e-ced5-4824-aaa0-ddcf8bdf4775",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51233bdb-f9ee-489e-b0f0-b71c0f348ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e398d38d-2d53-491e-897e-c9a77e5fc15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9ea602-178c-4433-a026-fc48ebf08288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4456ca3-86e9-45d9-b181-3b2effae8dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6096d7e-1fd0-4142-a5a1-98bd74638628",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debffc5c-ac85-49d2-8ad9-a11eced432b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3399a5e3-da18-4a58-baeb-a770d093e3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aa4c35-4ae2-4c37-8283-6944c11e6f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c30f5f7c-d045-44b8-b019-f22f043c1411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a1e56b-14a6-4e57-b2aa-b862503150e4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9f317d-176b-47b8-a036-67d4bf8fe1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c207ecdf-12cc-494a-8368-b799179ce279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3994c33-fd94-47f4-9893-273b2aebc10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5baea289-75d3-4eb5-a3d4-0808ddad8383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb6136d-144b-4ceb-a5b4-c2cc47f7e252",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95134de-c335-4ff3-89af-14cd3c49ac2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba886a4-9938-4779-91c3-b5f56290c7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177016c8-5eb3-4147-8e35-7c88049c10f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "984f7183-4d6d-49a2-bfdf-288cebaf44bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81331b99-74d3-475f-8b54-4357dbb9f8cc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99434d7-1ba2-4b78-863a-c3f546ee939d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0c687e-7643-4ce3-9d1c-7ce2106f7897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963c6b1d-a2e0-44bf-8954-ef91914c9ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aef4061b-e529-4196-b3ee-625343b9ec8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bd2260-a82e-4f4b-9e1f-5d3e53839bd3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e6c835-b5b2-4c2e-824c-872d73217070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94bf3c5-2d23-435d-a717-ea3a3296dfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe37b1c-87f4-47aa-a1e2-87596ce6d829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbd27614-a8ed-46f6-90bd-81df8a024e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9993ff26-eead-47a5-b2d6-1c21458b5e24",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c845af3-437b-4252-9fb6-4a423b4277e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0639c0a3-4b78-46ac-b9e9-c9a87794a4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827929d7-d4ff-446d-80bf-5819cf0ef2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc8dc5a8-232e-486a-bc7c-f557ab778335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1aeac30-7eb7-41af-b5bc-86bd4cb878c9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b70535-7a43-429a-aae7-06403bd2d875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69983c3-36cb-4ffb-9bf7-c858eeace65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87db0d5-6148-4eca-8100-da0c3ed7ba99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0c3103b-c4a1-444a-a0db-47736816c94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78172fb7-f6fc-4276-bb2b-b5d0492e498f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c555d6fb-926d-474d-a392-b4f151a720cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0cddd0-3a4b-47aa-97db-c3f42963e9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0b0ccc-5737-453a-9884-1d54811b93b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0539d11-081e-43ed-9c56-0c44bc0f12a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873e4a02-bce0-46db-85c3-78a20d723f76",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd1932-d831-4b8e-82ad-375159a508c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6946ec25-5864-4e60-b956-ad90cf0e2f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325b1c37-0b3a-4c37-b617-7a9430593367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c2b4500-cfac-47fe-89cf-8f7bc8bbc9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe5bc40-29b5-44bf-b948-9b3a713ce10b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494a29c2-4f45-4c9b-bb0e-728c9149040a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a04d34-881f-452f-92fb-1bac8dcd9084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994f9a7e-eef0-43cb-ade9-78eadf137b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d1f0e6e-a07b-489b-a797-cfa01529a284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd1f174-2160-4301-82e7-ca28ffd45e01",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab0d8f7-6fa7-41b7-9a19-66e8300fa62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e37a2aa-4c5c-4aa5-a673-ad43bf2c2be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21711a8-3eb7-45e3-b075-e99cfaeac01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "674ee26b-c9eb-400e-b94e-4696ae75209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b1cc6e-db43-4da5-8089-11718c43c17b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3a06f0-be99-4291-9bec-bb9a7a36bd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0bff40-44a6-4b05-a8d8-1f4bb3d080a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a268e316-c4f3-4c40-b2c5-3b07950f5712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d55640c-3607-4ff5-9156-1846171fc476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8a3b03-5c7a-45c6-8edc-eb9426a264ff",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee81e83-ee24-4777-8e9d-b530bc13dd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bb5b98-c45b-487a-89c2-dc00e672d4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc074b2-f9b7-4432-87f2-8079c774e0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29696de9-a5e7-4fac-8c64-e8ea17ce69e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3c16fd-f274-4b2b-96b4-659a12850ccd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93de851b-9ffb-4425-b820-4c5fe8695586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18bd9556-c275-4b45-b97b-b6cf9375c042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d63f66-1c26-4b5c-9a3e-f7ed729de5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4d3e73-c182-4691-a1d6-dcaeee55cc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a255d6f5-0257-4668-9de4-333f1593974f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6c6405-1fba-4633-8170-8ff9cf7fcbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949a5d69-9391-4030-855e-dfb47e0cc38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b346f8d-5083-438a-bccf-d24f78027e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7704eebb-1804-42b8-9645-661c062cb753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037520f0-9df8-4b5b-af61-e30042ea973d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d566eb-15fd-4c70-be40-63b87ec22b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc5262a-f660-4ba0-b866-cb3fefde6b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa3c117-5aba-4be9-8cff-4ab81d8e12e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3f1181-e0c8-4d24-8c22-7395b9da241f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15189a26-82ad-4dfb-9b80-a256a6e09d01",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ef7fca-523f-427d-b8a3-cbdd8d064de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d8b784-e3c3-4be6-a754-77dd67813926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a720b9-4f73-4489-bf19-a87221e306f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fecb85ef-538d-4b75-8d0c-0d3db28a0d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a1c3df-77b2-49eb-9bd7-40d916862af1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bf892d-6069-4464-98bf-1c7a32fdaf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5829a25f-13b6-4dcb-81ec-f6d265014f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae9c9d8-1e78-4029-8758-2ddc42dc200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "886bcdaa-0d8d-4fb5-a57a-1c274083a2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8061352f-1859-4f1a-a7a7-166a584f4142",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548248d3-9455-4543-85bf-9fa1b3cd0dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15636e7-af4b-45f1-90fe-df745bb5dd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b8c4b1-6072-492d-b935-b076ee83a128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f24dbd01-7aac-49ef-a3db-4eb6a9321170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dfd5c1-c20d-4e6e-a28f-fd420089b7d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813bd45d-7e50-49d8-bd92-5086bbcd007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf91e29-5aca-4fc6-8213-adb5494b8e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383c3ec4-2df6-4790-981b-3d692304e0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d3d062-1e1a-444f-80a6-24c653cb7fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e168d0d-df72-45d9-8cdd-fc8080140199",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21e3e72-0a0f-4ac1-9b12-4b25d0b0ec6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832c5c1f-30db-4534-94d4-46d357358a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023e396b-3a9d-4def-a204-e926c9f40302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71cd1ccd-b626-446e-8f1a-6e15091ba84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46ff549-4bf7-462e-a65a-a04ab9d1269d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ac3dad-f8fc-4d7c-8dd9-3b832003ad93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3828d4-42ac-4e36-9b6a-305ac1cbd308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40f695f-ea74-4198-9042-70cdc2d5e451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "112aaebb-2783-4654-ac83-1dbae92f6bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5826365d-748f-4e0b-81eb-623392f18286",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02fef04-65f7-4368-988c-bd3cc7d446e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d16826-3339-41ff-ac1d-8f0f8abf63bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c51a7a-79d9-470b-a787-873fc4dc2f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91035c6b-c6fd-4530-81da-217e3e0dc3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cc24df-3a82-4303-b150-6a5ef91c2b3c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbc7d43-0450-4dcf-a334-5a719838185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e2b94e-0a45-4f61-b9b4-b05b9d27bc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb01e55f-c9ac-49e2-bed6-28891f252eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "befac7a5-589a-43dc-83a5-d958c780e94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c742d3-a2f6-49a5-95e2-bc8cbeef55df",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e5869f-897c-473c-a2bc-20f41c477a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4932aff7-2d59-4438-9fa1-69665fd6d33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff34b53-407d-4ecf-a23c-24b39f4515ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32021d19-430e-4326-a3ff-310388e08d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd76746c-1ea8-4901-86da-8fcc6c98cf38",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae11c2c2-4f1e-4fd8-89b2-28578929f842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdf8c0e-3720-4c28-9e74-e486e4d40723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be622c28-1554-450e-b991-484ac33b7333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ab0cf1-8f78-4dcd-ab1e-a76764afdbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec141b7a-344c-4cf9-b3bc-d3bbc3876d73",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b12d3e5-6635-473c-a46f-ca5f9af04a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579bf22a-1cea-4d57-bf9b-5f065699497e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8320c28a-f77b-4227-a2b1-05fa14225ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75e70a1-4cb8-47fe-9e70-8b72bcf868e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6697aafd-3811-4e0e-b39c-719c1c183c3f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d33464-dd93-4ef8-8439-64cfddffc056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff788e5-33f2-4f4e-acee-a8474ae96855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9dbeb3-f442-4d77-8169-66fcbb048f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c5e0a3-f528-4a12-a0a9-8c9a5e3a9b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addaf01a-c45f-4049-a294-12dff8752efe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ac439b-9fb1-4ba2-8f5e-a458db6cc922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902bdafc-c02b-4469-917b-3fae7befef8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c0dc8e-5cd7-4174-94fb-10f8cf0429de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc81ba11-bded-4f57-b7a9-1e440427a0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdca0e4-0194-46fe-b743-434617b1c3ea",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc66e4f1-39d2-4590-bace-5cc648eca31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd974881-45ba-4156-bdef-c9037af8b524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8b5671-a630-4214-91e2-500eb2fc2b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96542294-f530-4cfc-92df-d6d34363b3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3deb1266-3bb0-46f3-888a-cb1a30145442",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b078da-3ae3-46ef-bf48-9e9f60b561ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6fb697-31b9-4cda-971d-19649fc7d594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228cc501-21a6-4111-becb-a985993245cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e28d0e-9fa5-4620-acce-deb3611a345c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d114dd-8abe-4e29-909c-12bb5c537b54",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844bde01-400f-4098-97cb-1512b75d5b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e23c4dd-a93d-4435-b759-a3dd24c640be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d990dbe-33f4-4a76-97ec-d3528726198c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6517048e-5528-42fe-a2a3-927271d238d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4beac625-502f-42f8-92b6-888dc8185454",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ae1965-bc4c-4778-8154-5ad12225308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0ff432-2e5d-4e60-a65b-131a71655e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029d7629-fca2-424b-a538-9dd2e814d5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4400a72c-7a3f-4c91-8b72-5b22f5cb22d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7755ad39-4e79-4763-ad92-4ff96af38281",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be81efcb-25f2-457b-a784-bebb730b944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7975c8-567c-4f93-9289-10f3259a9ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0420e1-36ff-4bdd-8e2c-3f5bf31dac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20961e08-ebf3-4e2f-9adf-a07a302caf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0fa25e-726c-4593-905b-678aea926d52",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f3e03d-eca9-4608-be83-8c168cdd46be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f9217b-a54d-42d9-b343-6a92e0bc61b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5e725a-ea8d-45c4-af75-52e4d53440ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "55fbf358-b7ef-49bd-a576-68fa68ef60b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d509359f-9c7e-4b11-ad79-97b78316b03f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9c5478-a835-4fc3-b77f-9910d106c295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff461764-52bb-431b-88e3-c3abe0e7e26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eca251-dc7b-4016-9898-6c9bbd705037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "071df2ca-7bec-4707-8cdb-097f6b0ec8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0486ecc-d3c1-41c2-8a00-826c2b7ceb1b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4254748a-8e80-4fb2-8bb4-c8348ab2dfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a773cd6f-3962-4c34-87f0-e255c8039d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1672876-bc90-4f9b-a83f-3329f9922fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8cf2c7-f01a-4afe-9f62-6579e9f975ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee1f9fa-8b97-4b41-9d03-3b49d3bef287",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f99f9a-c8a9-416f-82ef-64b30ebcc06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce469174-7b16-49d9-8ac4-8c4ed0c8edbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b63d16f-38f2-41ab-8092-403aedb8738b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "44d46cee-ee99-4b05-bf02-4fde3fd29ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eaaa33-1417-4ddd-af7e-c37eaac3c8d2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794e508f-2b9e-49f9-b1f5-fee02c6e4cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e40a95f-a652-49b1-80ae-49a4d2074e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4300bc6-1645-4a17-9eac-12911e2c9874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "00e9b92e-d859-49df-a6bc-6b46ec3919e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97107dcc-098c-4bb8-a209-9014a7eb6fbc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6920bc0-0baa-4140-8e0f-9d1708c52899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035751cb-13b6-4df3-8a5d-915ff21c6f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af1de72-cf78-4cf6-82a1-2ebf5e6d2bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3c09f4-bae1-4ace-85be-0b66227b1c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc9b999-b577-458e-82eb-945c1d38d273",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac384383-f065-45eb-9b77-21bb2276f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a39dfb5-cf51-43fe-8818-af1f7cb6974d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15c19e4-1a19-4c63-bb13-9f98a23dd3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccdd90d-b6c2-4fa8-9661-9903a724915a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddfab70-71e3-46d5-895a-1d6c52a8da22",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d948994-6661-4f81-88e7-6e45c21d21e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3904723-a30d-4c33-837c-aab9bd0a5f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd8bc8b-db4f-4034-8e90-8090c428c80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "deb6b0b9-0e20-4b42-bd5e-8cbfa7af7130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614bd622-5aaa-4901-b17c-8850b290ab87",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2725e79e-2215-48b9-b8d3-9c16fe5c4ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e631341f-8031-4805-84ba-d9eab94c24cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c590e58-1ef5-4019-b8a7-c2e8e5eb97c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36827ba9-54fe-4031-8b32-d204ed7a27d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b187ac9a-80d3-4bff-abe9-23bbc9224faf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7c0e50-58c6-40a2-8278-0d50a0da6a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a20611d-6f31-4996-a839-3e060e31078e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b64dec2-5ea9-411c-bdae-821b2cab4e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70e5fed-b9df-404b-a9e4-89fb6ecbf811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199cdc8c-6255-44e8-bf1c-5f31bf69707f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90873716-f113-4d3e-83c6-e8b379763506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e55fae-cdc3-4fb5-9914-1452dc74a93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bce39b6-5910-43f8-b336-29cba3dafa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "588ad1b9-c5cb-4f5b-9b4c-f2b4d227fc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59e75cf-691f-4caa-a07c-5a706ce647b7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd2fc5f-69d2-42de-b6b2-8c4e98411ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953dbcc5-a49b-4b6e-b17a-551802a7de6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593fc637-a222-42e8-88a4-a51479d019a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0017f09-c995-4b45-9f25-27acb30543a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a322bbb5-e670-47ba-83c8-fec27ed38d34",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30689221-270c-4e33-82f0-e571543d0212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81118d3b-fc3f-47a6-acce-1a611c43f21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2456d94c-e111-475e-8951-7073759b0a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9703ccfb-543a-4f2e-a7d1-04f2f85a72dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72abf29-89f6-4718-92b8-4d148c592a8f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d624df-922f-4512-b55c-6687fc3a201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c65560f-d2bb-49cb-8c39-5ff5118235cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c5a38e-7aed-466b-b65c-73874c00e445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92c37aa-69e3-4ee9-8b4d-010fe769703a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb534fa-74d1-42f3-b83b-0df2533f6f0c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b1c62e-fe9d-460b-8c58-9e070ce57831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae3ae9d-e84f-40bb-8e67-bf1189c24d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1f1f1f-ea20-4f6a-816c-5289c55c13bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e679214-5442-451d-9c9f-ac46cc37cb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b837cbc8-e925-4629-b261-74057abab63d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08c94cc-e4e8-4d60-ae50-3ab2a523fdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5d1d0e-2a5c-4da2-87e6-e39dffea4a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a318e9b3-e356-425a-858a-91ca899909ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8baaf808-b257-4784-9821-faca9512c061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad4e4f-b2e7-4e44-af60-f2b463a87c5f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504bd844-5d1c-4c34-ac1f-ae50c9c88134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e4148d-d180-4667-be27-73752c4aa42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51701d93-a707-49cc-9c12-a99e976695ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c80cb4e2-adc5-4199-baf5-dcc228d447a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c63595-d2c8-49b3-9723-0433cbe2742a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e567bc-0d8d-4e67-b7c7-f33a2c4d4ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824af5e9-599b-4bb9-bd71-38331001bf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d3fbe9-55cd-4ad7-abcb-c5048617c0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "04d4d9cc-8331-41a8-9f0e-2fd211870800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08052a17-5c24-4407-8c67-5a637e6d54db",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f0bb31-eca0-4c02-86ad-c02486c695aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d98ec3-7921-49a5-b3a9-76cf34207445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae717f2-ea79-417a-9be8-784cc72fe0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7340d079-f9dd-4361-9600-b0ce8e7dc190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7f53d0-78f9-426c-a8c6-fc46cd4f47be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489ec02b-e85b-4ad3-b2c8-1af7394b66d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2041e64a-9054-4858-97bb-225520ce8241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b00ab18-905b-4adb-b76a-4ba6ef57b7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab732759-5600-4fbc-8fbf-9ae38d4d4a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00cc387-534f-492c-8b3f-afd445b6fe65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a05b8f-f504-40ff-9e6d-5daf72092f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eeaff34-dc21-47bf-9144-3a05fc8ca1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01c0a8f-c296-4d01-8fc3-a784bc20e688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29358f54-39cd-4b6d-ab86-c6a5513a5837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369b1c72-56fa-4869-8dad-dce8c3c9c0d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d656e36a-65eb-473f-bd8f-e7dac8e25166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c24fe4-c004-4aef-b4b7-212ae2110c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0b7833-ffaa-4ec9-a4f3-f49daa0a4ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d48d5f2-f9fe-4c31-b9f8-49a66a5d3bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec19f51-3cf0-43e2-aa7a-863ea6b7cc9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21854bf9-61a7-495d-adde-7b9c268f3730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65abfff-8cb4-4d1c-82f7-10f1666e1fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d902c3-49b9-4827-ba50-290cf538794d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "07d20cd2-f7b2-457c-8cc3-ef132e8eecf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03edfefb-b9a4-489e-8362-ded0f027ae91",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0683b2-b215-4442-8e9c-063e05d8fb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776fac4b-916a-4a38-b46d-3a40d244d39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e191b1-c1d8-4fe8-ae78-c39801ece57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df6018c-4810-4b93-bdf6-fb3b046df273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6baaaf-bb84-4b8d-b825-3345c0becc48",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbaf146-490e-49a8-91cb-12d691631cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4db603f-4897-4e45-b18f-f53706448ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a2fb1-a586-4f27-b70b-b1bf0edbe84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa7fbe2-4936-4de4-94bd-e094260d0024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08830f7b-e60a-458c-bf95-e28e59985d35",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8a844c-1d56-447c-b1f1-d313f195898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3fa1eb-0b67-4345-8804-2eac1c51ba9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43eadf9-2777-4e6c-9f5d-b872b848b460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a96e173-a5be-4c6e-9b06-789dd18b4a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f37eafb-90d0-439c-aa59-63040ec5ab4b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13db1e81-f04c-4a79-90da-438bce820281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67a6377-fb46-464c-99eb-fa23bb75f401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01aca2c-0007-482d-999d-0b10a9ec2709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55efa967-2176-45eb-8b57-0e8bc4c81b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fe9990-a423-4845-8f8c-99d2ba76d56e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a877b1-ac15-4e33-bf8d-c684d6a377b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aacba26-4173-4b74-b8d6-49bc8a88e712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e269f079-5467-4a0e-9cc7-bdbe5a986e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf51ce7f-a403-4f93-aa72-9af040d60b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82aeb1ca-9e3f-42e5-af39-fc3203760946",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f42d8bf-ad73-4bb9-95db-4b07e66fcc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0c3e31-5cb0-42a9-9c25-87f2fb21a8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df6ecb5-5e22-49ca-9aaa-a634b2f4574b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02a0f479-3027-41d7-be3a-2c0b7a282c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2052d82-903e-4b35-8279-99094d661c5e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323f92f0-38b2-4f65-8951-3c98a38e8191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4daddf3-a6fe-4563-9508-b4629b271699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868e0d5a-f376-4a3b-8426-a5e548b3c88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb310e48-5fe2-49c6-8ed3-e58b6b4badfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54c7439-8447-4185-857c-beceb989403b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76cf614-807a-4e75-acd9-205f9fe150ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccda2d3-0d05-4d1b-8986-fbce1c931ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b93ba83-7386-48d6-959d-38f284120e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be35abc5-6cea-4251-acaa-05f6120981be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4560cb32-3fd3-4854-9580-aa5ec0603dcc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a2a47b-7676-4d13-9c8a-382666497d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f88ced-a0cd-41ed-9d31-47e26edc6c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3136c3ce-118c-490e-b50e-85ec410a749b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8072623a-8781-4a6c-8eb0-b869c5071ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672fec83-fad6-46c3-b659-abb957b0f442",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f59f6b-c927-4d0e-913c-ecd10e3537cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b6a5b2-7693-46fd-91ab-379383099213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeacd60-3328-4479-b05f-d464b7adeb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e24429a-2c85-49a9-9bcf-aed97b8b6e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fcf302-aa05-47fe-a368-78623486ff72",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7700f76-ec80-421a-a148-461dc79c0765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0b01bc-bc47-4fab-bcbd-680f660236ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0823afce-b683-4429-9af7-90be7f9fa578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2bc1aa1-1720-4988-9166-f527589fbf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a01238-99a7-415f-b48a-8b16e4934e18",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9b56fc-e95e-4898-8eda-8e2e0ea37fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ccd112-8abc-4dcd-a44e-0b0ec7016d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7f7b44-d4e8-4772-85d7-d8d66f3ce0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d437fa9-b22f-4540-babd-2490e0d2a854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f514b928-12a6-4f74-bae5-9a15e17c78b7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e001f-87f2-4f6d-bc6f-997fa59c79e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e2ea82-d77e-445b-85f9-c9d7e1043ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57542915-695d-4313-8181-632fc0090bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54bbde5f-430d-473e-9560-113188baa6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c08900-4677-4447-a8ba-49f196622590",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6f3d12-cf57-43a9-8014-589519a68a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd7bded-e6ae-4385-af73-89b0fd99ccd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce0f999-95bd-453d-81db-f43b87f22240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9855cad-e527-4c16-bdbd-04e1e5ad662f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cc9b3c-54d1-490a-ba79-6af2a6d397d8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9339040e-3cb2-4880-bdec-32dc92d17565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d2bc88-13dd-483b-8dcb-9b7708307e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f960b20-8594-4dbf-b796-4f6373da43ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3e0ad3-ec19-4fe2-9fc4-038abdf13138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a29bf2d-ff98-496d-b54e-35c9a664eb2d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2504f557-33f9-43ab-9258-d130afcb48ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2c717e-4522-4a5e-9388-4f43781dc8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a53c05-7a6b-45d3-baa0-034fd32724e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7254f0-0a69-4e98-bd97-144e8160d738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f32043-cfd3-4147-b7d2-8e2f81bc9fd3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22bc06f-fc23-4bc7-b04d-02bcaedccadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93cd9b5-ded2-48f4-b1a3-613437e0e5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770e2978-0780-4ae3-b732-bdeb53f8e57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "985c4118-f686-4109-af43-7771432462a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07276b91-efef-4038-9128-f426887ef7fe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e5a4fc-6460-4e39-a871-947ed2e6ad8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f269402a-bfb5-49f6-9a15-4420bcb1f97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0553b0ca-e221-4346-9f94-a83dc7b0ba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3ebb8f-6a20-43d3-ac97-2c46436c65f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9381a62b-6c8c-428c-a2dc-e6f4012dafa4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38404942-b3a9-4c20-8ecc-2bf34555220d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24ab035-f28b-493b-83dc-4222698969ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c537e155-4a3c-4cf7-af00-dda03be70645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7babc74-de75-4826-9b38-a6c514fd69c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbd20c9-f12b-4c28-9e47-c562a3b7a9ee",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce993c25-65ac-4626-a84d-2d57da89e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e81e9fe-462a-48dd-aaf9-e4a5805bebfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05d8146-3845-49f2-aecf-76ea0e85d3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1b0472-12fc-4cb4-89be-a83920cbc012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a09f1e9-5808-4280-a37b-b5ef6708b2c6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a4230b-e862-4c23-af61-df173402938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df34408-13d8-4510-9a04-c26fc0953d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d071601e-952f-4d7c-8421-3a8b01d75e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9521a3-b786-4ef8-b01e-ff80bcb77a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67144e4c-9d8b-4c24-a563-64283cb67d77",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a9254f-c86f-428e-95ee-4dbfb659101b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8db3889-b527-4261-b4a7-1d059b6b1990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb089e4-c9fc-4a10-8738-b38a8ce5f4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0556b016-05c2-497e-bc54-9169ca766050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b5975b-1021-496e-818c-59bdfebc629d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267f8152-6ce9-4523-9fd1-876f8738d601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd82227-b38d-4f61-a57d-a9c1417b46f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ac36d0-5be1-4bdf-a73d-63f74d28d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa3b52a-4e1f-43e9-80bd-6838a79e2fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04606f3-e098-4993-9659-4f945f6075ba",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49424e9b-91a9-4662-9720-7aa0273abdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604011fe-b868-43be-a610-d613f6886e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fbfcda-5844-4857-9ac8-6d04c07a17fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6caa5873-e6da-4702-a576-571851599b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd112b9c-32ec-4b52-8735-ffb8da2d9ac9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0d9efc-03a0-44a8-b3f5-40a91fad5859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2026dca0-8197-4e49-9e34-910f605a1785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a626c6c3-0508-4748-b8fb-4e9108db8ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae80791c-d22d-437c-8d19-b88c08744fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a13672d-bf86-417f-9dda-d6d135b6d71f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ad48a8-df95-4b4f-a1c9-4b29633e0f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66677807-226e-4ab1-9905-dbb9764230eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3197a9f-733e-435e-a3fa-fca884908001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d7a8b5-b265-47d8-b2a7-06f6c42d53e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7460923e-952c-4f3d-a047-0d61f631356e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d52b078-4456-4d72-a652-6ed97cad9010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6c5faf-904e-4317-b20b-d0d215542f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee4b970-dda5-4ebc-96d5-0170d9325807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7766de2c-1dd1-4b4d-bd9b-294dd34aa0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a093f38-c807-4110-b7fe-f0a59098832d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9fd669-3d6c-438a-aa37-90d7835f800c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4aee821-1121-45a5-89a2-88a6b5b156d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5a397b-7bcc-4e77-827d-0745a47233a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8b7019-8839-4928-be90-db900701d120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0668c05d-8853-4434-a924-1376744a5c3d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdca73d-1a77-46de-b1cb-ef81f064809f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a561d878-7c17-4235-9c24-5993853c2b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed985e47-d9ac-4eb7-a661-e568972a609c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58c19148-cd0b-4728-8c99-48ce3017c2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92302466-325b-45ec-8eeb-025ebcbf0bad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066de56e-268c-4b7f-9018-1ab84e08a7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5044e500-0ecb-4d0a-8613-bca9eb6083c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d403a712-806d-4157-b48d-fe2dd69806a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a796bc-df8e-433e-a113-48fe699c4e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56972234-d2e8-4c93-ae90-784537df19df",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a63d14-9f07-4636-826e-ebbe06d315d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4b6a0431-1e1b-4464-af99-cbef2bc384dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53d60bd-b46f-45e0-bbc5-86cbf756ac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f01d129b-aaf7-43ed-bb83-8632143b5f1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "687de469-bc4d-4cf1-bc6c-9ea1eba7e286",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5a83749-269e-41d0-93c0-4a95bb91e6ee",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae818e01-5b68-46f2-a59a-7dbc837346e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a244fedc-fb50-4632-8e82-db1a3152e801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9140af-57cb-40ab-b912-fb0e425be891",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25c12a50-72a2-4588-8c45-3dd0e5545abb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3de32c2c-5a92-4cc9-abba-fa7115c2d1ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be75c826-14c1-402a-a500-d9111ebe15df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f563ab8-1786-47b3-95b0-b9ae0d5dee78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99762e2a-a6fb-4b44-b374-87b996ae12e1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26198c40-7ce2-4741-a5d1-b5aedecacd7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fb0c0cb-8bc3-46ee-a8a7-6936a0f248b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d3776ac5-152f-4972-a528-1729e9639370",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "883423bb-d769-455d-af8e-d41640fc026f"
                }
              }
            ]
          },
          {
            "id": "4333a87a-a176-4ee0-b6e0-67aa2b33b657",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a76a5c67-afa3-4ea9-93c8-592bfafd4154",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bbe3241a-1d24-4652-a58c-9e0ed656ca59",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6856e3f7-fd63-45db-a8b9-a9bc0ba7922e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3de8c43e-dfe3-4db7-9f72-5ca252520a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6694bb-ed7b-4b15-b227-706780404f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5309aa-d375-4222-b9cd-7a66fb970fd7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18aa5a11-5460-46fa-9902-13490ecfc12f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a17c68e-ce90-49ab-815f-cec71df27e38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9deb40a-0ff5-49b4-b4f1-e56438684048"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04f012e6-0d2b-493e-84d1-7c932226187d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "07332b08-26a8-448b-adff-af1071b4de92"
                    }
                  }
                ]
              },
              {
                "id": "969cb7c4-1e0c-4b9b-8711-9f37f461ec9b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1fae72b-514f-4f24-9768-506b64257607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fcd8cf4-4044-4d27-89a6-b1634d4e9ac9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db974882-7251-4939-bd2d-c7c1e36ca71b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54ef3f98-7862-40f0-ae99-83d19ecac42e"
                    }
                  }
                ]
              },
              {
                "id": "30a1646f-271b-4305-a248-f5efd2c90b91",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8240b2a-525f-4ef5-a440-55d4c404ced9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b61e801-1a58-497c-ae7d-01574c0c92cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be96dc55-821f-4dfb-b257-02684d601183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e28e806-3ad1-4e70-8da3-ebd9a58de30b"
                    }
                  }
                ]
              },
              {
                "id": "c264842a-d09d-421e-aab5-46d2fe8c7342",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4db0cd35-9a89-44d2-beea-38659776866a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58c195fe-efd3-4a00-b2cf-066e255aa337"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db0f811e-9bff-4750-9a9d-57f638db825d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "774f41f5-fe75-4540-9a30-ce020a996ae6"
                    }
                  }
                ]
              },
              {
                "id": "39f537b2-25c3-4d0d-91d5-1f0edff27a6f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a18fa051-50f6-48e0-8622-86d281b6b274",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09c617fc-4979-47f3-b454-51ec0f558c14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba0a65b9-3280-49b9-a0f1-90ca1631efdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5c2a6c28-baf7-4525-8763-0b9f311634d5"
                    }
                  }
                ]
              },
              {
                "id": "219466c0-677b-4b79-8af9-17bb67750b36",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bdda10f-ad93-4802-8813-1138b95e9dc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9c7ae46-1b93-45b8-8bf4-543f6e2d67a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5affe438-7ff3-44fd-bd74-096c3eae574e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63f470d4-acbc-4ec9-87ac-60545e56c6d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3fb134f7-0b00-4afe-ab9d-e002b239a9cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85936003-589a-435c-93f9-6de1c80fca16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "653a2631-3859-46c2-a800-2a30b2b0b6f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "748e3e1b-acd5-42ca-8033-19a5c100bea3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46405aef-b018-45f6-8eb8-468e76853068",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0c3bcd12-d193-4a2f-920d-a47ffd19c42b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a55c6650-6535-4b61-8d7a-e161e816c65f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa26ee47-3cf0-4ca8-9d39-015e45f89589"
            }
          }
        ]
      },
      {
        "id": "3161abf2-5f15-4de6-8ecb-76f9f65bd06b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "68a479fa-793c-4256-8f17-ff45526e5114",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d69b66e-5e98-406f-ab60-acb0dd063425",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "396886e3-8bc9-448b-bbe3-f0c2c4a8db21",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3b35e6-90e5-4c34-a66c-45ab685251da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8d42fc-76c5-411a-bf87-e1f8d1943547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e14d55-5712-4511-a772-d356b145d537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb226a52-277b-4cb8-94c4-37682200f4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53dbfa0-7745-4dd9-acd5-a0484af205e9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcebed8-bf95-402f-b5d7-cfa339f57dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb48b7a-3be9-4dc8-8020-e7ff8aa76d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54dddfe-f8bc-4bd5-b7fb-83bdeef24c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e34c322e-5ea6-4379-b221-05b308b7d345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc898b72-0a88-4b88-ac68-ac1a5c1c128c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9342fd-38d1-4790-ab42-fe1bfbc9be7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db774db9-e87f-438e-912a-a02e743fa570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bf8738-9c25-48e6-8545-31e786b0b124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3889c7b1-81d1-4686-a43b-a5d1f13cc797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56288178-a751-4ba5-a75f-00140afdbf03",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eecd254-9507-4319-b900-296919504468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad759dd8-8ee5-4d66-8c46-28f43b85c5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d07ed7-9b93-4f72-8cab-f8acba297b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55da7973-7857-402a-8a64-f7e92c4d07fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f576876-8b5d-4b0d-8875-e1f02c7416c9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6167bb40-8cc3-45fc-b101-2bfc1ae6689a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea629965-bae3-4ae4-a228-e50947474947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793649ff-6493-4f52-b049-a85c4917116e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4aa6b6-cb2c-44f3-a976-e3d5a234ddae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435a6d5d-9902-47e1-9afe-13b17c15b4c3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdad973-26e0-44ba-92fb-8cdf5fe3fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c06c51-ea8f-4212-acf0-3e570191b80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d4baf5-6a28-4ec8-9516-d61894d7b7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc73a12d-bfc4-4717-8df9-353f6b0bced9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3b09f1-1679-42e3-9715-220a1bc6f700",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39405646-ad52-4c30-baa6-ed399754060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba296e2-cc22-40ef-8f75-17d6c4aeea94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d11001-6df3-42ae-a0f9-4c8053451869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a573fa6f-2b14-4593-a03c-880d3dd7e357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3d8121-d48a-45ca-8d1f-ddc58451f45d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63abbee6-2307-4e72-b084-68a273b60d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fe88dd-dce6-42cf-aab1-8a2efddbf83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701048e3-3f5e-4b0b-9eed-7edc309f51e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c47d970-651f-41e1-9f9c-f8ec5854326e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba9ddad-2ebf-4ab2-8d93-afeb07916b3e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0656f652-638a-42b2-97ac-b324d3a365fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4433ac90-9420-4b1b-9bcb-02589207caee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcf4b3f-80b5-4d2d-92eb-4f67f9496fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce60774-cfa8-4754-903f-b9411d138b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b210ac5-1214-4543-a16d-036856e1f94b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02bff5e-1992-4eaa-9fbb-139e20109564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67322f02-f65d-4b03-a4a2-d241679cf39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8eb6c6-8e80-4758-8cf8-c943b0613e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c766d7f9-5fe7-4f5c-89a2-a815f2caef5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46df832d-271b-43a0-bd8e-e67b5e268022",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a92c5ce-b73c-4448-8bc4-e3bcd20c6183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae6a351-c751-4839-9fbd-dfb64552905d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462a0890-7599-4721-bbe1-82a4cb9da0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cdd6f3-44fc-4997-a97a-14405c8869cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af92a14b-8377-490e-972e-619b82d1b63d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ae0cdb-8501-4947-8782-c963c112b444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47297af7-a8dd-40c0-b476-fa463aea4469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac605a4-d9f7-4a62-8d61-6fbb457d5a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbeed2ab-97d6-4834-b08d-a73ca0c74e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51aa58e2-0666-44e9-b057-3355ba4858c5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f3c878-7597-441d-8055-9192fcce8f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b74537-5e9d-427a-9262-539544e20d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8568be6-7aec-4567-a779-0f1eb56a02ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe14b27-c72b-4e40-b894-9292ab03b6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b96fde6-6d7e-4971-ad03-774611c03c90",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e0ff9c-cc1e-4d9d-998d-c034eb672d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598e116a-7cf4-4275-9ed9-244154458f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0641a5-f0ca-4548-a963-f6a54fce35c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1903824b-b69e-49aa-adc0-b7261b237ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868037f9-c22c-4a04-b67b-e37b5d37e631",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77d7c43-24c7-44a3-90b8-0b2c6695d015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b75192-1100-4c45-bf4e-2504e0d0efa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7359bf55-61ba-4fb9-820b-c514ddf89377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d717122b-a212-4b2d-9f92-84077175e6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa80a3f8-12be-4410-99e4-167f4a02e808",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18449e9d-3751-4031-8bf5-94f20a5a935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e53c0e-0f68-4e20-a308-4e78bf3fed8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539d335f-27cb-4f37-8148-0bdf8ab13684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1864249d-343f-4f18-a3dc-270c9324f62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125914c3-ce3b-46b2-9108-bd14fc29decc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66380969-485d-421c-a2c1-f92b41309557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05edfd36-d3cf-4dce-942a-08433077a078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dcbf7f-3513-43b9-b86c-a83cc512428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc3323c-309a-4774-89fc-70f97677d158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7e44d1-e3b9-4b23-9be7-921eed77d56b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef12e830-4807-495f-9222-f0951365cd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d621d1-cad3-46b2-95a2-174d263ec0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7039a461-bc98-4bbe-b356-ccf02cfc3cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5655751b-dbca-4a9c-8807-edc96c8f67bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b6dfa4-3cb5-4638-baee-8cb160f37762",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc8be72-0af3-48b4-be8e-caa87ef81005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7e2f01-334f-4edd-aac6-39b4f6608606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca356bc-a13e-4745-b5cd-e061b5ee5622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62d11b0-998a-4eda-b3f9-d32b95814052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e993f3-c99b-407d-a473-5c6087f4cb83",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebf6500-ed0b-467b-a958-c6eb9da5e2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b825a8-f62a-47a8-86c0-a75d64c81ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b24df6-025c-4fb5-90cb-f5c4983282a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8c8103-6ba1-4b62-bb73-6db2ab99f384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7911d75-4978-4e16-ad6a-fce5267f2d65",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc1271e-3664-4fa7-8cf6-e0901c2132c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ccac49-248b-49a2-8c1d-71185aa342b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a663bc-e9a4-417a-bf8b-d86e14aa5b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccda98f-6691-46cf-afeb-29886e855ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f569fa-55a0-484a-9898-4f63e8035693",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596453df-9477-4639-9fba-03ee96a898c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f7b2c5-dc36-4691-be56-b1c68b189c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bea74a-07f5-4b90-976d-3179b217dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "060b6592-a7c5-4c95-9749-99566f9b8790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d988127-9eb9-4ddf-9b1b-7a36ce8674c2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ab1332-b58f-4825-a013-1294bcb3dbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4744df66-680e-4723-a55d-f7070fc8ab8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ebe09f-4330-4edd-adac-e5da01a3d476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2348c529-2f37-4414-9e78-0888b75410a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bf4c7d-a07d-4ca2-bba6-e513d882d62e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a2a219-cfab-41dc-9ffb-303be9a4852f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fe9bb2-fb63-44b1-9450-36eb39e2621f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff26c7b9-7ea5-42cb-93de-61c3b1601b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "273c5f7e-9da8-4da5-897c-2612cebe0fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b38011-bbed-4bce-90f7-57c0753e17ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b505a161-57e1-455b-97e7-c978f5798f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d14fee-4134-4838-a49e-262bf4ee47e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfaa365-493f-4bf7-9630-4dc3f068f2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a38ae04-440c-4e6d-8d67-e3f99063a150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03e31f2-8e27-47b5-9253-663cc96136d6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff2ae6e-ad5d-4eef-8aa7-eefb8ec0f5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82c5b01-9ddc-4cc2-8993-c8e375d1f18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2891e0-ff2a-405f-8436-5b4180b8f03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da29786-3be6-49ed-a564-a63cf171d0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6d1935-42cd-40ac-bfa8-63c2c05b19a9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8842bec8-530b-4937-80f8-b4a8a8cd7d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab79c16-2ef6-4bab-8520-07f117cf50e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7c9692-3416-47b7-ad6b-c8372f574624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4364dbd7-b57a-4700-af12-16afdc0462aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615d60ff-39e0-4fa0-8017-c04ec302c360",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eab5e6-af2b-4115-8c0a-78d4c0cb29a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9716a4-cbfa-4f30-87f3-7cbbe84a0f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946d779a-0316-4102-b7ff-c07a267396aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db317f6c-b0f5-42ef-ae16-c96e3fd78f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240b9a24-2eec-446a-b53e-1ed38cae42a5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f535f27e-6c2f-420a-881e-09c16d898d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cae6de-ef8b-4887-9051-6c215f29a35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bd5e8d-0ad4-4846-ba9a-3c664d3b8f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1724c4ab-8d9d-4091-9d16-d6712c296ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088ac21f-c7c7-44fa-9e3f-a3d2457abc58",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c2320b-c082-4a35-9e9d-b856bcb7b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8c248f-7652-4773-8bf9-d132a9cec78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d462984d-aab8-4075-a8f5-920d683cf4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4346f5d-1e11-4a67-8e25-a0ba22d7a170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c076a117-5b58-403f-b39a-a9f2c3821ef2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dc102d-9194-410f-a733-c840b1505480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3038efbb-0072-4b8a-9f69-4043b9da84f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30e92cb-4c47-4681-a07d-0dd23867b52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b4ded9-bbcc-45b1-88ca-c148421a38ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864188f4-c17a-4ff2-a86b-493fe7521212",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbb3b54-289f-4f91-a425-dadc551e923c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f973c8-6870-41fd-9c55-8e012b50182a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027b1422-4c8a-42e2-a611-b95d27e4626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5764307-fc89-46b6-bf88-7455ae9c0d57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e094f797-bdbc-4131-9217-b36a19a5eb8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1da8fe6-472c-4704-959b-4b33e98ebccf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68b483c-bc10-4380-9344-64f4567e6f0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "937e882e-fe81-4dde-bf60-99ffdc038b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a0b033-e049-404f-838b-5517f4c55392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "220ea676-d11f-4d35-bc8b-f04d8d789b1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "976cef33-eaa4-4aff-ac91-9a9012a9fb1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca8c4003-fc67-4bdc-92fc-ba19c61ed9f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a85bc32-918d-4543-839a-02bf3445d16a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e30e6cc4-1a2a-46f2-91ba-da2a149f5b9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60034db6-5b20-4b53-85ab-a01562fde015",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce452832-d4a2-4a39-8a48-ecdf7824a953"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e15e4257-013b-459a-b187-3635a1920a7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc57a755-62b6-4b94-b1db-3c1aef8a47ff"
            }
          }
        ]
      },
      {
        "id": "b3d68f9f-be73-43b2-a3f0-46a36c6ce124",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "93511f78-5220-48fc-a622-fc1c17d0e99e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b55793e-bcb5-4326-baaa-70f967594980",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5deb168e-be21-479b-ba2d-44c7699869ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065d8ff2-2328-4a35-8b89-c094e9ae3944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a3f4ea-7ff6-4802-b3b9-911f4db01637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11ad481-2f4e-4495-a62b-0321baefa875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e06fef9-fd99-4923-acea-8079f59d8d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd58e0f-01f2-429d-abf6-3af0dc503e91",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6f2955-9e59-4cb3-a5a3-2741f9b77ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496daa40-02df-4dad-8578-c7eda7671106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c95014-a49b-4e61-b562-58bfce28fadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e94911a-dbbf-498c-b372-73f443a9bcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4655d978-7528-4eb2-ad8e-370f1131b271",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbddef5-4de7-4f3b-899e-af0b6c218ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51b7ee0-1611-4c51-87c5-5f48761688ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8824c7a2-bef4-49cf-92b1-80494005a37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0f8e05-ffcf-4a49-a748-0f648c85edf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27233531-20c4-490c-ac73-796dc469697b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6102dd3a-ddf7-495f-9eef-e61a211f1969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3684735e-0e6c-4833-a5f7-ed7bc6f896f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c20b26-4a45-48e6-bb93-f27cb9c10280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "838eca25-a660-4edd-ac23-fd8513d9b54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb701e43-9d98-4326-a309-d67bb3b6d32f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47301e81-1034-429e-a697-dcc5edb51f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa95ceba-20f7-4263-8b1d-e83210de74ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe77ce8-e1ab-44c1-b076-40342b255ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "432f78a0-58ab-4e4a-b3c0-f0ccae1c1f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3baeaed1-ab22-4ec4-bd6a-fd85c7cf439d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c88fa0-6dcd-4677-a546-5b446225f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5773ed-3331-4154-ad2b-e6d31c486104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685ff0fa-6ed8-4376-b4bb-aef576f4212a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c856a4d2-19c6-4c00-b2b6-cb78159348a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5391869-f991-4fb3-9e68-067e76b37d07",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a141e5-4011-4747-9b82-3c55515ebd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be938944-78ad-45b1-9097-40d466129ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30933046-1b7d-483d-b51d-bfdbd97c0f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7783405d-8f72-4d13-ac74-e0718e713f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f18369-9af3-440b-8208-6d9cda0f9550",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fa1055-3191-47e2-8ec3-6d6338431cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42ff56b-7c98-4a2d-b34f-0ea0a2eb57d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969a18ad-a938-42b6-896d-fb4ebef8a450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ae0e38-718b-4b39-906e-8d5bc61db080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0e7817-9641-4883-ad89-afaf38546bd4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e5d6ff-f9ff-4357-ac04-43d60038e395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e70037-8ad2-4c8b-92f9-2ef0fd0c5570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe9ed23-7e4b-47d0-842d-647413468a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba98ecc-4885-409c-9357-2914ad2cab56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830c4a5d-8381-441f-8290-a45bde7408cc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a81a8a9-03f7-4f38-aaa5-46e3267ccdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2462588a-c5e9-4784-bdff-79868856f051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5f3494-afe2-4882-a17a-5ec023ae5898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3a31af-6b9c-4b31-a634-e503ad979275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845c565c-f631-4b57-a574-ae6353c05e18",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbff0ab-f40f-4019-b5a3-ad94e15ed8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7d7bd8-f3cc-4a47-af40-47b4254fd3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c385da7-ac26-4e50-afc1-a7f5eecf4147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bfabff3b-18f6-463b-a8a3-6bae3ee54ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8099b27d-a2ee-4d73-b0c0-c344e99e4cf6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d02906-564f-43c7-9fd2-1d9e7b984a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22479c8-ff54-4f85-955a-8855df7342a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716c6501-0221-4835-963d-691cdcf6b2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db772875-350a-4fdb-af55-bdb6ef664938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fb9048-3132-4e5e-bd3c-6139eebe94fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d30c30-1e73-4888-9cb1-ab0901557a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a49dfec-0c56-45c5-8d04-9074a081f0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25198169-accd-4aa3-a814-6bc17c88fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9798cc68-ee58-45e1-a32a-8346367a7d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98f39b0-860a-42f8-bd2d-cd97375566fa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ac50a9-f761-46aa-ae0c-8aef8f401d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9e14af-f484-4376-a2fb-3de024013595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0b1cd2-6ef8-4087-b3b6-27c9fdd75b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "491068e4-697b-4cc0-ae75-e475708844f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e08b0e3-3288-4579-bf69-5e5e561bc913",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b64bdb-750b-4a5f-8a3b-0f449848bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e887a03f-2595-487e-a6eb-46e253aa5d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5117fc-3bc1-4e91-bdc6-084040baa869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7432526-3679-4809-ad73-e76e55dd507c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffecc037-b40a-418d-88a7-c6fb6bb42065",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d7161c-ccb5-43fd-a41e-18ba229c4cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc579da-e2b8-4e2c-b212-8142823a5ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0b895b-d17c-47f1-8e80-39e6afa6b2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c98a746-9783-4413-b48e-cebe0126f2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64573c2f-1b0c-4c6f-9c6f-4929449fc411",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce71c21-162a-49c7-bf10-031417e31b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59124e80-978a-4d68-8fda-ab898b5213d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf499bc-a89b-4cc4-bade-08fd1d9e19ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e217160-43c9-43d7-8793-9acd444a1d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21babc98-8bda-4a51-976c-41b22d26e049",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea95327f-b2b9-4557-acab-f46b44d04b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fa3769-f2b0-457f-966b-e2901081499e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598789ad-117d-4ef5-aaa1-bfe262fb61d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c93a36-7fbc-4a9f-8f12-4add4dead935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb1c5c2-c1bd-48a6-b7fb-d338ec0cfe71",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263a25de-2e22-44ff-9027-6f68beec92be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156b30e2-4795-43a7-b815-d5b1b1fd8b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3069a0db-76c8-4f99-98fc-750047a97d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04802db5-f457-4fb2-b17d-55329dd9e13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba1c480-3021-4aa1-9210-941c7ca59fed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec43ca1-c629-4932-975e-6f102d47ec31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659fd63f-7526-4265-937f-4d7747678dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafc6e5a-2701-4ffc-834f-475c41e5b471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ba39b7-8f1d-4ead-b641-788e524df336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d13ee7-b003-47f2-8789-903819538720",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b40e0a3-3f19-4089-b7a0-c41249160c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da0ea27-abfd-453d-9155-63e2965b94db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d00607-f1a0-4d16-9631-b20f266159dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fc0ef7-9da0-4a00-92e1-e5f4d727bcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8decac-296e-43f0-b171-cf355cabfaa6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a102acf-48e5-4db8-925d-d75cfc267775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2a5571-9a63-403a-8f95-fbcb03e97124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2dd68d-f452-4d13-b054-e57d34827a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b739b4-66e0-4d8b-aa2f-bd7160ab9165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561acc4c-7aab-41bf-a3ba-6098f3a0d11e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd931e0-0471-4e49-8770-1e8f128a499f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c3f6dc-cacb-4bc7-b508-665ea903c1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fcc1f3-6da7-4c27-bfd2-79915b8dd217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd515cac-fd1c-435c-a500-fb5f2fff5287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7019630b-f0b1-4a8a-b212-1aa40dffd8eb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb03d9c-a639-4644-ad07-7386bf7dad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c263a96-0289-469b-a318-b1e31f67e07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b16d01-ea5d-446e-bddd-29c396de5698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "843dc492-0251-41ab-bbe3-4178cf850234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7d73cb-5c15-433d-94f6-89f4dea97921",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1377637c-fa9d-436c-92db-50c7185056af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0fb156-2d94-4ab1-a9b1-e5ceb410fb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d9853f-b051-45ba-bdfc-d1d4453750b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30e486f8-7323-4427-921c-5f9c509a120b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37c55b7-942c-44f5-aa59-86a8619675d6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad11267-0ff9-432c-b3ec-0b5d8d01a38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c469c3-5aed-49b6-ac5a-62c01bb190a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcad0ac-182a-4e81-b283-422ef7208f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1186fe44-0c95-496e-bbd1-91aff11331eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904bb4a7-396f-4c95-b16c-39a26cfaaaee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b864bdfe-c4cc-4dc9-a434-86dbd70840df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8f06b1-3e84-41e8-827d-c5804597c0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222251a8-17c8-4507-8b92-88cbded07204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b73b6497-409e-4d1d-8cd3-06c11cc4e7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cdb740-2e95-4dfa-b293-6b04be1b26bd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cb701b-ea0e-4275-8827-c854a61b7968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3122ea9a-0e7a-45d4-9482-d0e574b29066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0549052d-b70e-425f-8a1d-85121602b2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6320e8b3-4df3-48cf-97ac-f9000137321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3719f07-3b5e-425e-b0b2-d64ba6681c59",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f286bf-da0d-4519-9513-054a02d20d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4c9133-6f9e-4fa8-9c87-845eb449c730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4975b946-017e-4317-b0f7-aae05203a06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f92b37a-c628-4fe0-8379-93aff5ce1e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a94e5a-5424-4bfa-b50d-591c111ff15c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654b7a20-9d33-4de4-a3e4-71f49af8bb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5410cfb1-f256-4e9f-a355-ff22c093eee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1834679-cff2-4209-acd8-fcb9bd50ee89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eafa4c7-e022-4e2d-af88-86d3bc659375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069de737-78a4-4d9d-a778-f0e31f5d34ab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9fcc60-5a35-4e71-8233-6774d8764dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f431c789-58fa-4e56-bce5-17b84b83aac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ee4cdd-d3fe-4cac-9899-8498f97ec162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08c52f7-1674-419c-b521-b0c90d6fd928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bb670f-3c51-4645-b498-0308a6275623",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96808b50-e717-42ba-85e8-6d5443e6eb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c53c16-73ef-4d65-83c4-f740e0ebe2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2597d368-5006-4e12-9589-8bcacccf9176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b958ed77-2c34-45ba-adc8-c249ade80825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c4100c-a197-4383-82a9-6c347b9bbb33",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a29f002-258f-445b-ae6e-b27278e38aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f9c048-e66b-4899-a36f-be0130bae1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a07b93-d61f-4524-b7c1-1903a61164a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6016259-1ac6-4f42-8637-551f15edbc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167bc607-26ae-4da2-8d16-0b256d1693fb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80abb4d-8b69-4612-81ea-3b69b299d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0833ca9-afbf-4b58-8f6c-eb38fae956e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e522f8-aef1-4957-a32e-c127f2f4a417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3868c49-7936-4258-aff5-8bc0eb0574e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbbc536-25ee-4872-a25c-c836400ac061",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa49a1f-1ffa-46b9-ac0f-6e0171c4d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9099ca40-38f1-427d-b2c6-a3f5197c5acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b393fd4-34d1-4486-b0df-18e88f1b91cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43451ae-de01-481b-91b8-3681fd081777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8292c9-d4dd-4bb7-b5d8-b4cafc936b1c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2657269f-ca46-4616-b2ff-1e817d8c033e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed460247-9c27-4def-97cd-25885411524c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7a75d7-e168-4140-ac57-69558e9cb4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07481a2-5ca9-4a08-8fd8-0a3a01e08df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d795ab-8b39-4906-bcfb-c93b89aa5e35",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcbd07f-a41a-4de7-9093-da7b55e8a5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb13299-5a9f-4092-9398-f01ec9c814ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3247826f-23fc-49e7-8db1-669f8b70f338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a45769fa-5cc9-4b5a-b218-6d3b690a0aea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c9a9154-608d-4fde-8833-8999770e18d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60df4d64-a3b2-41f6-a58a-f4f98b70bf65",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1cc9a4-7057-41c2-910f-cabb7ded0b4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "21ee6d29-0307-4791-b9ad-c27b9ab8e70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68502e4-b6ae-4e23-9df0-b67df08ba057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03cd0539-2afc-436a-b809-4dcf53720ad0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff20e037-6249-4bb1-9bf2-42a6183f940c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ac79958-87ba-43e4-a3db-054293723b27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e374a842-bb4d-4c8c-8d93-d06c424f5a1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "144ce808-e72e-44f7-885f-b316f5b17772"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f63d219-860e-4021-86ed-a7fc30115cb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "876c546e-de4b-4524-82b7-60eed86fcced"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce36773f-1b9e-47fd-926d-7d7f38777f53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5b16e66-f42c-465c-8ba4-c5bfa6ccbb20"
            }
          }
        ]
      },
      {
        "id": "1001b529-2b97-42d6-b6e8-eb9c808b23ff",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "57ba9382-fab2-4243-9c6f-c608a83b2464",
            "name": "Negative Testing",
            "item": [
              {
                "id": "932b5d6b-c716-4ee4-82d0-6bf71b85867d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bdb1c6f-0f9b-48c3-b304-b032089609c2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39f771c-9722-4e3b-9708-b09937414dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6981193-9f54-4642-8078-8630c0c14b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fd0584-5e20-487b-b2e9-407dd0cf4707",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b84c5a-0449-460a-80af-01f0c5636860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99458002-1cf7-46a7-9c39-7162e0cdfc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daed2c16-b7f1-4a26-82aa-91adb4eb1edd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4397c364-5a10-4ca1-bae6-4cba1e1a84d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f60b8b-7753-4e4a-91cd-d9f57bfbb4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d653371e-708e-4f27-bacd-a28ef63dcdee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea8f352-91cf-4329-a465-d0d67c6bf3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968c2082-6e12-419b-8ef4-48f03f4df188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa9ac97-2818-49d9-93b4-c31218c798c6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f46125-43e9-4b12-bb3c-4174f9f8938c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd5070e-eac8-4ab8-845b-b78053859dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c62a24b-6a3f-4728-91d5-5aef385674dd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fff468-c4a3-48b4-babe-fc62ca0e97f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ea7709-fb28-4313-bd87-52b8e849ee17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781621d8-ca3c-4b33-8722-34750d4b1c8c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f571786e-f3b6-40ec-a768-1f9cf4e29a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc2392a-81fd-4ce1-9297-8ccb7acfe063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94f0564-7699-46a7-bed5-a4cc8f3ee9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f308abdd-14b2-43f4-bbfb-c95d34b8186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2496f1ca-24b3-413d-8a7e-bc39b9c5fd42",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf67325-ec30-4c16-b19b-cf7decc1e13f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ff490e-f268-432f-8323-63d5c311a734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045a639e-f6f9-4da7-b98d-272a35484cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e842c7c2-8a21-4cb7-b373-b6a81d20deed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f7e337-cdff-417f-9375-0d3cf38a2936",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8aebbeb-c45b-494e-9bf8-7451dd9d47ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039896a4-1869-4d89-8ed6-a9c7bec076d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95360e5e-699c-47d2-8c1e-377a7c579503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4db489-3b92-4512-8d98-c12e1b025b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0ee4c8-a3fb-4805-9d88-4936b195829d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3144875-d819-4126-91f7-562baeff0abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17dbaf9-6c03-4b74-9917-9e5df662c4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfdf713-9bbc-4014-ab46-b323d2397333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15249b0-c54f-4c35-aa67-6f7b17c82b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ade15b1-1d23-4351-9511-4466f7736f17",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46bbe8b-3777-4fe5-9e95-16d963381149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a6ccee-efc3-4c9e-b48e-76e4ab999f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee00761f-bb33-4b25-9b67-e5de423ef1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db33d25-44e9-4e68-bc6e-a2fdeb503886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca68b8e-9980-4ca1-a54e-126c752cb8d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421b5693-f3d4-4320-9b6d-b3145d8060ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71f8fdd-e625-4643-a89c-feaa37279f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cf7154-4d01-4780-9bfc-ea8cb4312f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d108cdf1-e2bb-48b2-9192-d23b011443af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4d986a-f293-4a3f-998a-d90f8a5e9815",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1b6866-b9aa-4857-9039-2da4805e7438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760602d0-f9d4-4a18-bd7a-ba77b16e7cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b90378-2d31-4d94-bd26-36e0e5cf0ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f33842e-60c6-480e-9b2e-aa0f52c67181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c7fd6d-a204-4b83-9eeb-642a638e5c01",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07dd1fe-3b61-4447-ab48-912fc867e7fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed661042-bc5b-4ee9-849f-6e7e007adc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360300bf-3d43-42a3-b36b-617f145cfc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cd58c2-77fc-4394-baa0-558ca2aa2651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b66611-d62f-4f74-b26c-b9ba9f6a312c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be163506-e0d5-47eb-86c1-9012a5c96d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a6c375-e089-4ba9-95d1-f49852e4ce96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d08d73-9f7d-41cc-9402-0a4fb5395a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52623353-3187-4e43-81fe-a8eb11e01fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56a88a9-7fcd-467b-ab4f-21cfc0c27166",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287e1dcb-ddb9-48c2-aba4-1275e89359c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae36a2f5-01df-401f-94fa-edd0b80fbaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795a9545-1659-4b14-9a44-8129ea005a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc00e48-ae39-4352-8254-b04ff07e7179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb1c5df-1a02-4dc7-a3ca-d4a504c3780a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fa41af-8a3e-4652-8643-217bb75b543e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe58290-7fe1-435f-af0a-8791c5332a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315d82dc-b7d1-4ac8-9b63-50753dc4e77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f8ae0a-56c1-4bf8-8f07-d7862d85de8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e067c012-43dc-47a8-a857-420ce3388446",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5504355-1092-4771-a093-e2edc47ac6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb12669-9b37-4862-a04b-4d6c15e779fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abea7126-14f6-4cfc-9587-6dcf0a4a33c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100ce9cb-47b3-4285-bd1e-d94c72b1765f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4ea73d-d8ca-43ad-8ae9-ce82b49bb3c3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef62e716-c1c0-4371-ba28-aef19201efd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ecef41-27d4-4f4d-9acc-21eeb90039cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5597ee11-9b15-4f9d-8b5f-389aae8f30eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d91eac-a1c0-493b-8bfc-3e710b12f760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad91fc0-c47d-4809-b0b1-a93a9c8eb20e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f1a9bb-825e-4de6-95dc-9a423454848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ef6a0b-3743-42b2-bcc7-6c32399ae328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b42d04-3592-4fc3-8e05-9c4b4b534c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776c60e1-a3b7-4aad-aad6-740ffb39aa22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f514fdc-2453-4718-90bb-95a6ac041676",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5313cbb2-11f7-4f2a-9cc2-cbcdd6f264d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778b0134-94d6-4bbb-8f2b-a316cba3087c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a492464-ecc9-451e-8392-59bf2b43d990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7496d137-7201-4456-9a3e-f4cc703144ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e08458e-02ea-4a2f-818b-56a59bc61d57",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6de92fa-026c-4279-aae5-c7e51ba2e4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c619c02c-1667-410f-a040-3b9472865d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278b814f-76f9-4b83-b9a2-17c3bd048f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b236d9dd-b1fa-421c-b5b7-308d4f387f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5569830-d1a1-4fca-abff-3f2742e8f88c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525244c3-a975-485f-a348-30b157417916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2788f3ed-73ac-4675-8942-ede3a3d5da9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7862f00d-9763-4649-94cc-82cd3ae082fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e68c19-3d98-499b-815a-a2b30a10dffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1c0fa3-968d-4461-b897-70c764e8799d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197572ac-54c8-471a-971e-4111658b27f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e1ce3ab-8f23-4cb8-804c-b460c655da54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c193265-2f7b-42e1-a20b-7a6de65a0eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11c5de8-78b6-4bd5-90a7-61860310d084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b40c535-107a-4b6c-9497-af453a65d72a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6703fae3-3352-4192-817a-eda1245ca84e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd026ef-2195-479c-9da5-86fe110e10d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5598c6-2c7f-45c4-9006-62fcfecdb372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839340eb-ead5-484e-9c1a-8e0d45bb47d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f92fc8-b240-4b8d-97a8-a8a8860444c8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e716e9f6-9726-4ec2-bfce-78ac1c6eeb3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9dbec05-dce5-4027-8610-e7cd3b049756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb1e28-084f-4e1e-b63a-7e7e07682afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efb19d0-50a4-4f50-b0c6-c1e4e4acc4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfdd276-caf1-410d-956e-85fa2eb3dfea",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d366ae01-725e-4967-8a6d-1102fa577da4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c0b172e-3ea0-43c2-8444-022466f11a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15573cf8-ab08-4267-b8f0-8ddc59fdccfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fab84aa-9f99-4368-88db-caccfaef99ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59446e7-3a95-4308-b66b-35f2442d228d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c83c62-584b-47ab-be1c-2781ad693a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35870518-85e9-4b8f-9478-3f1286616824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d5572e-ff9e-4157-a4c7-89b86b75618f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8ccc6e-7676-4f47-a3bd-e9ac03285078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659ef999-b480-4d57-8497-e544b91b9dfd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d5d195-e7a9-4023-8c93-3657f433b34f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a9a2e7-fe2e-4676-a442-d3e4eaed410b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e782497-d6f6-4be2-a699-d5c63c8564df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d65669b-62e4-45dd-bd2e-414274b1df41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae575e0-26e4-47a7-896d-df859a07128a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423427c6-b802-4d2b-8713-0719ed0823fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c085623-ddb9-48fb-92bc-9ce8e45e0c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e55f72e-1931-4a63-86df-c7f58ae7a5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4372f9-04d3-466c-b926-b3fb3a6560e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0774ab3a-efcd-4ea9-9706-8276c759c446",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77434fd5-2a8c-4c00-b4c7-436b0824b6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "208c027c-2eb4-4a5c-96b0-46d9e3a82b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240991e5-405c-4cff-a926-4c9e61574ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e36a740-0e40-4730-81e9-ee4f4779e96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d69b480-0e61-4503-aba5-6fef9c792b5f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8a4135-14fc-4b60-8765-85c4d04afd5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66787c7-3287-46a7-b579-883a810f4570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e1155e-5300-474a-8f4d-bdd7b25d9e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9966c1e4-2743-41ee-ba21-2ca3135279c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d58fe40-2ede-4696-98b5-a742bc15bd60",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4740b5fc-a94d-4b6e-912b-1eddf8b7466a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6591ed6f-db26-4520-931c-c41d7ed9060a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e820a8-1fce-47ef-b550-5a9703deea08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f150a754-e4da-474f-b664-6c2d2a6333a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed26699a-62e3-4a0e-afd2-9ef602265d10",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaef31e-b57b-454d-b21f-12815e8e4034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4ef584-90e6-453c-9384-7506c39b54e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ee923d-dc28-43ca-bae4-b73761337896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ecb03b-fb93-4395-b5a2-d49e3c848fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31dbc33-f9bc-4ddf-b3ed-41c0ec935d5a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9334044-b6d0-4e29-b155-ff92eb415c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2d926b-3fd1-4bf3-bd57-f231e593a68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fd8899-7e56-4fd6-b333-a89dd4dd3db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d3e3df-c345-4201-a80f-8782491cc76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d04d88-ebf4-449d-b569-e75e3a5937ee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9828c2fe-4cdc-4af9-9077-903cb4930cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5ee2b1-1653-464a-8a42-6e3c02942331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d7c703-48bb-4a9a-8b5e-73756bb155ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3185a26d-8023-4273-a6bc-526bee596741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20129b3b-59e0-4980-8568-1808127f49fc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcc8126-005a-402b-bac2-f829c14922a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f864fcd-a6a8-4838-a74f-a5d81f6c633b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c25e07-3209-4c04-b8f2-62959a117b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b0a5ab-5043-4770-acdc-2fdf79d66f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34f6cb1-e904-4c8f-8ea1-605de8b163a9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66c9bee-a475-426b-bfde-cbe977483085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7487860c-fa22-4b01-9b7c-90abe923182a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4a6b8c-d15f-477c-9fcd-956976878c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977a9d6a-b90c-4ab1-a682-74d50428eb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5aef857-a3b7-46d2-8de3-022a2206ec85",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f8edd-1a8a-4021-bb7f-e20aa3887f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31ac23c-24a6-418f-91f2-f199bdf82994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f546e85-8c3f-47ba-9c68-e70572d72684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f940396-472f-4905-8579-3d3e67a095dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1240ce51-f65e-409c-9d56-688a6a056593",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fd1de5-d709-4935-9bf4-347c133bcfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ff75d1-a787-45d8-85f6-67f25beb1028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb08dadc-10f6-4d63-8dd4-c5b194500cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dd99d2-c662-4e03-b833-ea6a8f064354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6e3de5-d4e4-47de-a1c7-65cd82729d0a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8b472e-e515-4bbf-b6eb-934c88b2c4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bce1c2-2e92-45e5-8e31-c05ca66b4d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91826b7c-35e5-411f-b94d-f9603facdfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215ac7e0-c5a8-4ccd-a243-9d70e729310f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9a70b3-7698-4013-b73c-7b3937de5514",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe98f6ac-1f98-4909-aa2b-7d5b2c684705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4c95ce-a2c3-4fcd-b8db-f47da4a1bcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61f1c17-181b-49dc-869b-9378c62310da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10a5b06-4d67-4355-a6e5-dae3ea6a695b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1351029-5473-4aba-8c00-68b54d078c16",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b7e407-bd75-473a-890a-ae29e63cef94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41cdf150-b14f-40d8-8240-4686a4931b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecefd2c-280f-4a3f-8153-5640b911fa95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5cc977c-70b5-48ad-b8ef-2cf1c9afedf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf35e2c9-b1b3-47ca-a6d0-cb233ef5d0d6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0773c08-b0a8-47f7-85dd-e548f8e9d7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09ef69c-e63c-484e-8c06-a2c8cd60e613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd90f2c-62df-46f6-9950-eafc3fec88dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27792443-abd3-4975-941d-62a953d2ed88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5060bef1-7a8e-4d8a-9257-a7eddb87d4f7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f099c5a-0f66-499f-a3df-44549432138c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c4a204-d107-4615-9974-7d19d5904584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad285d9-3ea5-4f39-a765-2c852943293c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3047f1f1-a107-4a3b-8793-5ee108e2162d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4ca69b-487c-4660-9232-4bfd3a7067ec",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec00264-8c7c-4492-9335-47f52ecc2c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ff0a1d-13b9-4a3b-9065-f9a7ef232a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbde62bf-2a8c-45c0-b9f6-c6657e1ad689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c726bff5-baba-42c6-8e74-0c756fe34179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ae0535-c2f4-46b4-b58b-2cfd820d257e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2df0732-c0d9-49fb-9cc4-b60775ff3dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50f7bff-7ac2-49b8-89aa-cfee2974f77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992cc1fd-0978-4c92-91a4-1502e04c197b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec453d7-9730-4e9c-ab4a-020f665ae2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91c1266-e8d3-41db-801e-a4b86bf3443a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41289dd4-ea17-441b-942d-639f1b2c9142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c6c7aa-0049-49c9-a5f7-7409791da99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed07224d-36ed-4729-9dac-6d5d086ce731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10ee918-5d2a-4a06-8bfc-aa0ff59ff86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26dd868-7ffd-4a0d-8718-0d72ec4f3cbb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b373ff0-30db-4dce-a51b-8ac26796acc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fbe936-a7b4-4a66-be76-a88c2bddd270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a027156e-8a24-4c67-b2a6-678e28ffa49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e52e85-133c-4ee2-a332-36f40cd0557d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be8c28f-cdcc-42fa-8820-96059e06889f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99b7320-2f9f-4451-947b-6fe40298cbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1a2e20-b3ee-4bf0-996d-265d5c5b8161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f0453-3b71-4be5-9436-dac905d5e71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e276d176-cd5b-421c-8025-0034d93cc5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66ffe8f-35ed-4031-8393-814f1ecb02d6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2be1d1-7abd-46e6-9346-7f8480585390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3153f69f-5d27-45d4-9535-cef0487697ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2335d1b-94d4-4283-b431-1f39b06afcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add8276a-b8e5-40ee-a28e-7447fa07b8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d233e7-703e-4927-ae71-1abd4f6cd378",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d1b679-a39d-47e8-aaff-b47f82075949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f7c90c-4572-45c8-a194-4df33f3df1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f18fc39-6284-4ab5-b186-1a0304935b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc01316-6469-4069-bff2-1c533cce59d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd2c69c-f08a-45a4-9e2b-9826f28544f6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213cca9e-89c3-427c-8157-d267ad262d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133e7366-6110-402c-9d95-80e157c9d733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25573561-3fe7-464d-bd61-2b7a465fd52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6c36e9-6bb3-4c96-9062-ae00d7377a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8c058d-d79a-4718-a664-df99a6b5ce3e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be2b9ed-0549-454c-9ea4-5e9e7733ce36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d05932-731f-4c30-a62d-68e949b3e85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac972548-72f6-4c7e-86ff-1570d3907e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c75499a-11ec-46ce-b7f7-d04f3cb88a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2faef2-0027-46df-9a19-62e664b77531",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803be2c2-77fe-4ef8-944c-cc4fadfae7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c188baa-72c7-4cfb-8986-c52a4f81393e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60e0fc2-4931-4765-9b2b-4b4e8f3644f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099e9c33-4ce9-4d54-a6ae-d9b5b2d60d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c6df8d-d18e-4555-aa0a-6fa7508055fc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91ca9cd-e7dc-4189-97a8-69708b81b2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bee53d8-cbcb-49ba-bfa9-752fdf5fcf4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8466e67-2179-47a5-b46f-3b013e8ab89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864cc029-2836-4e7f-a001-bfd9624911fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea67448-6daa-4cba-b677-45f3c91c65ad",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7737a68-075a-462b-9b17-b51a42f528d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b18ad2-d45c-4d0d-801b-dccef3e3b821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cdbf36-3c09-43c4-9305-29488a11ec82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7408f381-0af9-427d-9f06-6172b686e101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0be55b-f789-4f42-9f21-0acf1eb8414e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82da904-a0d4-4e76-b0bd-0e4c0b406667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd19a329-1460-4bff-b886-d0c64bc06a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61692ae4-1ea0-4939-abbf-0121bc7051f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced057b6-a4c3-4d44-b768-ebe3be606e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72aa853-2bbe-4e1c-8e14-db9fe348e8f6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e017cdb-2a1e-4ed6-9575-e5ed3953e447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e985319-2482-46d4-9a4d-570b7fcb6663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3f508a-3d1f-4bd9-9034-28b7f4e0ca2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfb8eee-fd7c-45ea-acfb-f2ae2187eea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca46e6e-039c-4678-a598-a320f9ae631a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952ae17d-2c19-41b6-8bc3-34b2cb2206e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55379b70-65ca-4f4d-963f-3b77884e0eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda2576a-55ce-43d0-92d9-b40c76c5fe8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41923419-aae5-4ec9-9044-74090ec7f6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f84dd16-b044-4e9b-8392-ea8f73b4310d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eacc1d2-03b4-4e46-a51a-a8c9d3467eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569e8807-6dd0-46c8-9d8e-dad57a44d1e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf56d83-bd7a-4113-8f89-7bf905d571f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e5e3d4-a9ca-47f5-8b2b-9872d7a68822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f33174-8d41-48af-81de-d8b52bdbebb3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c333f63-276e-4b6f-b9a8-9bc5738833e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56185d07-3ef3-4935-a8fb-a897d93da394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417e80a-4ab0-4c8d-b94a-2446b943fac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0794097b-fb67-40be-a198-ff0147ca57da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521dd770-53a8-4107-b9ae-be8584e33eb6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b59ef4-6eb8-4ced-916b-ff79b352ac96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5328adbc-4296-4178-8659-af3d63948dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8733200-2676-4363-a0a9-f844fbe47e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c53308-bf07-4d27-befe-1cabb49b51f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34be3c2-6958-44f7-860d-24679bd85102",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a5a887-315d-44e9-8061-233f5b318389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473d45fd-c297-4864-b56c-c14d94d89a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad1885c-aa65-4ce8-bad7-66388b6645c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10116ae4-96f6-4644-a314-83f408bda7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b63aad-246e-45cb-9730-c0177a04c95e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea85f6f-a83e-4f11-82cf-7a75fb20cbcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0275c49b-c30c-449d-8732-974f8af5993a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba541be-7eca-40de-af6c-ee40cfdf3f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69739e42-a24e-4d05-8f86-6f8651c84c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b4486d-8186-4d9c-bd43-dfa84acf1ba6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef30a9d6-0ede-426c-aadb-9f3a9b4aa948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00bfa1b7-4eac-4f86-a84f-ea8ea8735c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fe80db-bf57-4216-9b6c-14e14e3b7bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7dec7e-60df-4cf4-8b32-a0556eaba69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba98e8d-08ff-4cde-b7ec-66ff73e89b48",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63704f6-79b1-48ad-bed4-8bbc87305637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660179c0-e085-490c-ac6f-6280e876d6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7909e179-7034-4a65-ba67-0763891adc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c5307f-3908-4cfe-bf55-e920d5693512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e38b1f-ecad-4605-9739-f82e75ed1d5f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5816ca-c02d-4fee-8835-703035f587c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5aadb84-9c7f-4b76-88bc-74eeaf0bc0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c78878-fc15-4c38-a413-a25a5c80c2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3f1954-d131-4a37-adb2-e7d81d6473a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728453ef-d3ab-4393-9a84-f18643349208",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bced3f3-5d86-4d43-bf2d-5615b89b665a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd99c44e-7fd8-4c42-bec0-3b7eaadfa24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e22840e-9200-42ab-9473-5e59450b0a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59613ec-3510-40d5-af7c-379cb707986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac014735-4f59-4659-87c9-0f150a89237b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374c52c2-8af0-4396-ba4a-215a4f05b5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b84d417-0cf3-4a2a-b491-7ffa4388bbc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed8681e-ac1a-4cae-9142-7fe7a54bb33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99739632-2986-42df-85d1-f3c6cbb64940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e56b811-8b99-43da-9355-9627bbc512cf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10641bca-bf53-4045-ad37-b3727c24789a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e703e19a-a318-4027-818d-a525bb97f894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dcd78c-3ffd-4e7f-aa0c-74539f25428e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770ed79e-afb5-4fa5-ad5b-c283219cfccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49e4cf9-25ec-4c87-92e3-2060be55707c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea40fa11-d37a-4f31-bf5a-6f831c8e8d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e67c72fe-24fa-418d-a5cc-e70ccc54bacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39660e97-6bf1-4fe2-9c2e-f2e074d96f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09550794-8349-4360-8eaf-e939e677f757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae709f33-fbb5-4c64-94cc-b26b669452d8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b043c556-2dc4-4d09-b27b-74d86a1b5544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dcd69da-6394-432e-9169-dd8e5c5b7110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427a6140-c411-425d-a61a-ace8efa022da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af2ef47-159c-454e-86d4-939b0ee00cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790be763-c6ab-4000-a8f5-df3b24d807ef",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c45727c-7aee-4251-8e29-0689248fcb98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e87e082-b65a-4990-ac84-0cf698e25226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330504e4-21c5-4588-99d8-636326886765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a933926-e3c9-4945-abac-2a77b309352e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c007da-3ce3-40ca-9b29-3b63e65c0f1e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a1e749-e2c3-4088-8113-c93435e09075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "588520c7-65f1-4d24-9439-60d2a92aa6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04767ff5-4c4c-492f-9c12-7d962e021bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3440aedc-9c8c-4ea8-988f-d86520fa89ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b12b7b-fef4-4059-b135-989c4614bfd8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904b9367-dea5-44d5-b583-16519ec34af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68f6858-741a-4dd0-b297-c52f21a7deca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aa1aed-f0db-487f-86cb-4418cf04a3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e3c4b5-dba6-4ebf-bb27-9d831e8ec7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc63ae1-21f9-414e-acf0-909cd95ff1ad",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a2b466-ccba-48d6-84f6-1ba1d499857a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54f2bfe-93c5-450e-868a-bb6d36f6543d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf42c593-ce84-4c4b-8ab0-1f5949c339bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6a4e7d-9037-4330-86c8-abe16a423914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021320dc-584d-47ae-90fb-efe5948598d7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa89c08a-f194-4eef-91b8-73a532c81cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3ecad4-9333-49d3-9b39-59ecc03787e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99aa065c-2b9b-452b-ba8e-e2a4d0672811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e5eba5-94f9-4abf-aff3-096ad465ed13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc5b7b5-7023-4b84-befd-e7ba83704d26",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2ade47-c52c-48be-ac2c-64a3b1074e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05250108-ad5c-4699-a65f-eca225c9d2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840f5b6d-409b-4283-a1c9-aa58fa484d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781405ce-4e44-46c3-8065-373590dd77a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28f13cc-d457-453a-af6c-360c9cfd71dd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836b4b94-e0bd-4e59-871e-d17141642c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c792ef9-eb6a-4f62-bb8d-dd3289de711b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380f7738-84b0-4b9d-8183-d094bdef430c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0732251d-0671-41b0-9c83-4f4d30c34725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d5f5ea-7b87-4749-a736-a3d0d7961c5a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643f9e00-5d6e-4aee-84bc-1da8e7a32def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844365b6-c9d8-4e9f-9c5f-34ae4891e77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bf8752-441d-4097-9b5c-19e3db03ddf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb294021-000b-4437-b4a8-b614d0302b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbf5792-a674-45d0-b875-bf7a2eb9cb71",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d064d049-912c-41fc-a2da-7c96b056161b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "047f1a23-f766-4267-b9ea-6a6aa562cc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735afeee-430c-4ba3-a571-a51f5a0de2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ed47ab-5d5c-4b98-af39-c961d76e8bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a093ea29-f643-4f3d-94ec-de7a53ac03ae",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffe3d6e-c0a4-4b00-b402-02ed4f019b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da8bd74-f935-4887-a4c9-277b12d33a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73c90b9-6c49-459f-a108-4657974d87c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc1cb1a-9fc6-417f-9694-f00199e49a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c9f298-8740-4269-8f5c-a12642d3e305",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14e44c5-395c-463e-808b-fa7a975e361a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae038da-a8f4-4b25-a4b7-00fd4901559a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c3372c-bd20-450f-a682-2ef7cacb955f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8625ea31-f593-40bf-8581-480c674f44d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69f6ef3-672a-4545-b732-dd3987eb58e1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad660af4-96af-4f95-ac38-687b021d3c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acae3fae-7c54-460a-8fc6-b2e11ce5265a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bbc5af-6d33-48da-836a-c3d15eefe5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce022f7f-1278-43ad-9e69-9a33413ef66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c8467c-8d78-4835-ada6-0dfb742b940a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f308a99f-2bcd-4ef7-93d7-1f1b35b4e058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410a061d-90c1-406f-b69b-180bd34e5f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d017e646-15ab-4101-91e3-5da98ce7ec3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81381e50-2ebc-460b-945d-c37d9594951d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5553df0c-838a-43f8-a1c9-d04ae3a527d1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24037ba0-ddc0-4005-bff5-d75dc9a7be24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aaad1ac-c576-4064-8973-67d8616189da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f827e18-5407-4d48-9c06-ddddec7386eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba6dd46-40bf-428d-b736-e70e5c13be29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceabd8e3-5098-4620-9e59-6ef081a174f5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e925ce04-2722-4e12-8f8a-970d1836b51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d03bc5c4-a0da-4465-ae4c-e8f4f26b7389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bb6b59-1d3e-41af-a098-ee3b0c3e6327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4665587-aa16-42aa-89d2-ade7f1d57197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc50697-b3df-48de-8b1d-b6e878ea2319",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c51e71-b9d7-4428-b325-0e26f9bce1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f3a9a3-60bc-4085-b602-3005ccdae419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc5832b-996a-49fb-a9b9-3f36dec22ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71420cfa-9b5d-4a34-8c42-b5b98b7c8f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036d01dd-f6c0-4ea3-a76a-2e14541bb98b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b0f808-bf84-47a2-85c0-d417c5898392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c077a657-3633-4d0a-926a-bbfa4136c506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e34f54-dcba-41f0-94db-8fb4bc962351",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2cc618-e934-4b31-9fde-bb0463da66a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb701fa6-7a75-4ce5-8598-86ed2e5e8326",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340bc483-a12a-4ddc-8106-d0d07ed8f93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6532c4-feac-48f1-9296-9476109a48e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208f746f-7474-4a72-b640-6f4d8617f770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b6d60b-1439-48ac-b526-09125379f679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78622a6d-d9a8-4ac5-b401-283151c2da93",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66739842-533c-41b5-b405-a8db0c2d17cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ff0afc-b6db-4945-a004-0d676cad111f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d2d778-90c9-4191-8c64-77b1cc3028cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555d1c0c-6bc7-48fe-b2fe-be03d150b4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc35ee3-ab4a-49e7-8351-7df517dff191",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5cbed6-c6f1-4656-bd74-32e3b4b526e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17ede96c-2da9-495e-8233-34d22e4fa1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6540615b-aaef-4b01-a732-ae30fe2492c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39ca55d-f73b-46cc-b281-a4f2eb99f4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdcac40-fdcb-4fc1-a47d-00287e542bee",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42114b8c-4538-4c3a-b18f-3f49f5be3fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c25cb2-c1b8-4bce-8ef0-e1998f9f92b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d007a23-0350-471c-85e8-325b27d18492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e46f3e-360f-474c-8388-411cb205d5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eed8a65-03eb-43c1-a191-850b0ec3b2be",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f91fc8b-180b-4f4f-9899-c90f4136d9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe948ba-2e81-41a4-94a6-4e63a965642d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f3b03e-d6f6-4099-9d33-e774bc533aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a07348-97b8-46df-b867-24ad5c75faee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef6dca1-6dbe-4a59-a730-03cb1fe0ea27",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0b0554-d84f-41b2-bdc3-8dbb46200778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d636765-995c-423b-be08-350bbaaeb496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6164055e-4172-4a2c-b8bf-c2b4381dfad5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5261eec-0c00-4bed-b734-babb08e05e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a8a62-8c96-491c-a9d8-9a095cfc4ca3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc75066-82a1-4a03-90e7-8bd83ffab126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "204fccae-2017-497e-9302-596059711248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54e0da9-c0fa-478e-9fad-b53151c8f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1009a41a-ae42-4804-b3f1-3e4b3ff898c8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5b4ddd1-4458-4edf-b0c0-f48094cef18b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4e3ae8e-a060-4430-82d8-4cc8984225fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b8f65aa-758c-42d8-aa00-76e00964a12f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfdb774a-1865-4435-b980-51ed4649fef8"
                    }
                  }
                ]
              },
              {
                "id": "43cb845e-f9b3-43cb-8cfa-9b315f71e3bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f337e6d5-e703-4e14-a222-605ff2332c37",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4812b50a-f341-4f63-82ab-896db806587e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bfbe393e-713b-4a9a-9fe3-26382fd6234e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1db861d-6a65-412f-a9b5-209728f28430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d38920a0-a76e-48b5-b44c-3399f8b664c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "470b3a69-7fe5-40b3-ad6d-9eb318528edb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d1c5ebd-54cc-4860-9f43-5c431f67be00"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3de721-8e97-4337-bb07-07b9c4cc6a6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6612c74c-13d8-4cf4-a6af-214088070ce6"
                    }
                  }
                ]
              },
              {
                "id": "b1b3ef7c-284b-4ff3-9492-f045e6a8312c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9a228b88-b9d6-49c6-a89b-2821605e0549",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789b5113-7eb2-4c42-afe7-3990c0c42501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cad593c0-2753-4df5-9726-fa39b511c99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29983418-c714-4390-9983-e7977ab92c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e432d5a0-3442-4673-a9e9-de8f2984f70f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ebefece9-a57f-4e63-9b26-f40201921da8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50641110-4492-46b2-8444-a0232438f132",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "355a4a37-e349-44a2-8112-e09ccb03d32c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6714cd55-d589-44c0-9c4c-32958c6ae3a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7660881-6eb0-44ba-b55f-76ca09c5cee7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45144e47-a888-44d3-b164-fcf232756d06"
                    }
                  }
                ]
              },
              {
                "id": "618e311f-89fe-4c1b-9559-a4d23d841010",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02c6ce18-a6e8-46a9-9214-4db34db5779b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b7b6e3e0-f2ec-4bce-b567-3ed44339013d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e05622e2-3cb6-459f-a263-b4a7f2588ffd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a1b3b3c-d94d-4a76-9f0e-1d2cec1a4e29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9357d98a-0cb2-467e-bfe0-e9ec8deed654",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "179c83df-b746-4f6a-9f69-f73e79b21418"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb4eff0d-56ea-4628-b2ba-5ce5f13afcc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed2c36c6-5d2a-42ae-9906-013c29891b8e"
            }
          }
        ]
      },
      {
        "id": "9462e045-8baa-4184-8186-d56106631415",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2ed7b535-f99c-4dc6-b7b1-2d1feacb3b68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6866d882-e9ed-4760-a356-687522e27d58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9088227b-4873-4349-abab-5e5cca92c45d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1161e80e-6990-4424-b289-734b9b56790a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8002adbc-f5a8-465e-9897-5d7021d08cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5c0335-9771-4591-a978-ece89e759441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f289dfb8-6b9b-4c2a-bd96-aab15c6582b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7b193d8-18fe-4b73-a306-df7b9b4d918e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a181d6da-e8e3-48fc-a7a3-aa485fd5349b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "693fa240-a662-48af-b3f8-f1a29a6c5045",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19dd3ac3-3c7b-4166-af45-e128d649c196"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ec91167-8f73-4b04-9d40-e308cf084a88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6b3de9f1-b5f0-4009-b206-26f66b00cbd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae8b1d4c-899f-40f2-b5bc-3585b533225a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f5fdce1-d31c-4c66-aa5c-43949007eaa7"
            }
          }
        ]
      },
      {
        "id": "3fe23aa6-9133-45d0-9ffd-bc0fcfd1403f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c1176eee-143b-45fa-8c9c-2cd3f88e0c99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70d2223b-f391-46a6-8b41-8ce4646bcf89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b917dce-ae09-41cc-a456-5d07036fd352",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2104c8-4be0-4ea3-8873-0813a3d9d597",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b7ad11c-4282-478e-bf93-abccf2b7e010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c7ea10-25c0-4375-8667-6a282ebb2039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3faceb34-b0fb-4808-8417-462b62518a8b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7309c58d-48ea-4a67-b00d-195d93e4519b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "169c1932-b1c4-445d-9b79-fcda8e81399d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cd67bb2-db52-473f-bb48-abb0e7a12f35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d274323-c797-4f8c-9bdf-e5776d0590e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6482116-d0c0-4320-bbee-54046bbf979b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80b784e6-8b9b-4a03-a394-7803e488c9d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57ac8d58-b56e-4a88-9667-e0a9e2b83bb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "842e73a3-192b-48ca-81b2-7f8770a8fb68"
            }
          }
        ]
      },
      {
        "id": "a0ba4b61-41fc-417d-9229-ee93eab9090b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e4f98391-daed-4885-adf7-8839a63c1ab3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8f4d0e9-b4fd-4f72-b415-a5f64826b9e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c1c467d-5282-42ad-8ac0-8f75b72633c9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3b0fa0-9c86-4b8e-b6c0-c8a4d3fd4308",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c263ae9-0ae3-45fa-9d32-5bfca95956f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c6dee8-5af2-45b0-bd07-8ef6674227da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e31aa512-7b44-46a6-bb4d-cc4a87165c91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdc16692-8070-4723-a8cb-e44594fd95e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f498fd5-cc2e-43ab-aeca-63bf01ae55ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cc864ea-2691-495e-b8dc-b6a60537f4c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb1d0064-0b8f-4671-b4fb-13081a98b9a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9a6819d-c1a6-48c0-9369-5baa0593449b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c3a714d-3844-41cc-8ae0-445a339d2a4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b5a825c-da97-4f4c-999a-c315e4d1a297",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff99c688-5a30-4206-a42f-194aa0572806"
            }
          }
        ]
      },
      {
        "id": "05318cc4-22da-47b7-b37e-e9bb5c54d0ce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a0f8b9a-9334-4b75-bca7-6edfc842071a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d7c0abd-f791-4d57-9798-19066f5baf6f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "87cd1af8-d822-4f0f-84da-9e13c84bc697",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83d617e6-3a03-47ca-b4e7-75a33c229d7c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17473ff7-03c0-4663-8903-a49c6583e4ad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 74.72631578947372,
      "responseMin": 3,
      "responseMax": 7279,
      "responseSd": 478.6579581354801,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703032149565,
      "completed": 1703032179965
    },
    "executions": [
      {
        "id": "d8255f25-ff30-4271-9842-ed250a134060",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "097108fa-d330-4402-89a4-b8dc7d7b49a2",
          "httpRequestId": "35260805-853a-4c6c-ac17-33a89f18c7e9"
        },
        "item": {
          "id": "d8255f25-ff30-4271-9842-ed250a134060",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e8d9f4b1-c481-4ec2-ba9d-bb5f57579a73",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "4309879e-d91a-4e9a-b023-9428e93d75f0",
        "cursor": {
          "ref": "860b42bb-ff18-4507-9356-ae2184b6a08b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b08611dc-0fe2-4d67-a946-8cf65dce60d1"
        },
        "item": {
          "id": "4309879e-d91a-4e9a-b023-9428e93d75f0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d925ff3c-0279-4966-b2e2-6ef0996055f9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "6b3edcb8-4d6a-4a62-9d61-93a0728dc171",
        "cursor": {
          "ref": "95a08d9a-c2db-44d9-a407-6e713424d3de",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3f651fe7-d14c-4783-8dda-bd900bba8608"
        },
        "item": {
          "id": "6b3edcb8-4d6a-4a62-9d61-93a0728dc171",
          "name": "did_json"
        },
        "response": {
          "id": "d0530f03-8281-417c-bf1a-dd2504db6ba9",
          "status": "OK",
          "code": 200,
          "responseTime": 444,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a622849-5520-4560-a490-8903ffd334c9",
        "cursor": {
          "ref": "0d151ff7-21c6-4f59-abcc-180275cdf29e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f7436028-baa2-4a62-b6c9-b969805c87ec"
        },
        "item": {
          "id": "1a622849-5520-4560-a490-8903ffd334c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "f9052985-d813-412b-8b88-cb1971d98689",
          "status": "Not Found",
          "code": 404,
          "responseTime": 666,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a622849-5520-4560-a490-8903ffd334c9",
        "cursor": {
          "ref": "0d151ff7-21c6-4f59-abcc-180275cdf29e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f7436028-baa2-4a62-b6c9-b969805c87ec"
        },
        "item": {
          "id": "1a622849-5520-4560-a490-8903ffd334c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "f9052985-d813-412b-8b88-cb1971d98689",
          "status": "Not Found",
          "code": 404,
          "responseTime": 666,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d489cb10-c91a-404e-91e7-19ea6dd43c0d",
        "cursor": {
          "ref": "529fbec2-5ca2-467b-b829-ece2a458e909",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a9f7503-27dd-416b-9ed2-7d9f3ac87807"
        },
        "item": {
          "id": "d489cb10-c91a-404e-91e7-19ea6dd43c0d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "278fa921-e8d1-4f8c-b0e2-b4d3acb25bb5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 216,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d3dee3-14b8-442c-847f-7f482c062b07",
        "cursor": {
          "ref": "99e98878-9d54-42a1-968a-93b63b5ffdb2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7fe8732d-4939-4079-8222-742bd7eb3ea6"
        },
        "item": {
          "id": "b0d3dee3-14b8-442c-847f-7f482c062b07",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4c7ccbf7-7d22-412e-91f8-2c796ec66dcd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 18,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b4534a-89ff-41f6-a146-a463ff690cff",
        "cursor": {
          "ref": "b75baa32-45be-47cc-90d5-6baf375f0374",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5b30992c-7d84-4582-a9cc-8967a979a222"
        },
        "item": {
          "id": "d0b4534a-89ff-41f6-a146-a463ff690cff",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c5a1be9c-d4db-4999-bf38-eb80925af0b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d07a9b-d2be-4d9d-a531-e58155840559",
        "cursor": {
          "ref": "5823143f-c46d-4bb4-bf9e-b61026d7ae7b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3b4f60b9-126c-42f8-af52-67774ba6c514"
        },
        "item": {
          "id": "06d07a9b-d2be-4d9d-a531-e58155840559",
          "name": "identifiers"
        },
        "response": {
          "id": "75bc932a-9053-4fb8-af69-7f8dd4f3fa87",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f237f537-8b8d-454c-8616-85b7e52f05c0",
        "cursor": {
          "ref": "ee0498a4-ad77-4705-9f1f-114ef6f4f66e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af576330-80df-4cc9-8509-25f4c87f0470"
        },
        "item": {
          "id": "f237f537-8b8d-454c-8616-85b7e52f05c0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7bf9ee2a-99aa-4bfe-98d5-61a1060d5706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb47c6f-dbc9-472d-965a-cbe921813efc",
        "cursor": {
          "ref": "0369cdfb-d66b-4a82-9994-1806cb4d4407",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "736ecfc5-7911-4703-b24e-bd3ec1a333a1"
        },
        "item": {
          "id": "cfb47c6f-dbc9-472d-965a-cbe921813efc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ec371c0a-0751-4331-b57e-fffeac094f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624bb4fc-724b-4a24-aa47-9848ddb654c1",
        "cursor": {
          "ref": "39275670-c7fe-4cc2-b352-4d65f09af9d9",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5bd88214-067a-433c-9f0b-a3aa63fc2d62"
        },
        "item": {
          "id": "624bb4fc-724b-4a24-aa47-9848ddb654c1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3fdc1a3d-0612-4f20-ba47-a0ca3260355d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e995a36e-ced5-4824-aaa0-ddcf8bdf4775",
        "cursor": {
          "ref": "308c8285-0678-4831-9ab0-fea813ea1cb4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d6db28a0-73ab-4d78-bc2e-3f7390d146cf"
        },
        "item": {
          "id": "e995a36e-ced5-4824-aaa0-ddcf8bdf4775",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "691ac7dc-85b5-443e-9709-df79ba472a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6096d7e-1fd0-4142-a5a1-98bd74638628",
        "cursor": {
          "ref": "8fe89d20-678b-4852-acb0-491cfd9c893b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8a248004-94a4-43a7-891d-423e0563b9d4"
        },
        "item": {
          "id": "b6096d7e-1fd0-4142-a5a1-98bd74638628",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fa786e14-141e-486f-915c-bd5240c0d9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a1e56b-14a6-4e57-b2aa-b862503150e4",
        "cursor": {
          "ref": "677a5289-90f9-4eee-984b-159dec047af2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9cddfcbb-2993-422b-aa83-42f18d29b1ca"
        },
        "item": {
          "id": "92a1e56b-14a6-4e57-b2aa-b862503150e4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bfd5b94c-4e6e-4f04-a281-6f021180db71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb6136d-144b-4ceb-a5b4-c2cc47f7e252",
        "cursor": {
          "ref": "8c65c247-a6b1-4de9-a412-124935439ad5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b8ad5d0c-ac1b-4dfe-bf2d-c5ba3df7018c"
        },
        "item": {
          "id": "cdb6136d-144b-4ceb-a5b4-c2cc47f7e252",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "684c1adf-9b77-4c00-adc9-f94896faa96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81331b99-74d3-475f-8b54-4357dbb9f8cc",
        "cursor": {
          "ref": "0115746b-e97d-40f2-887a-cdd9ff05b07f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c5f5aae3-e5bd-47e1-ae95-c23447d8e231"
        },
        "item": {
          "id": "81331b99-74d3-475f-8b54-4357dbb9f8cc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2d955f1c-fb2d-4ffc-b76f-822c912641a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bd2260-a82e-4f4b-9e1f-5d3e53839bd3",
        "cursor": {
          "ref": "e4b62e2e-cffc-495f-bb71-8b5ab157a8c2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cb2e2444-4ecf-455f-b2c7-0950c171d69d"
        },
        "item": {
          "id": "54bd2260-a82e-4f4b-9e1f-5d3e53839bd3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7e08eaf9-6c1f-440b-b60a-d74f143bcfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9993ff26-eead-47a5-b2d6-1c21458b5e24",
        "cursor": {
          "ref": "4de606a9-3f9e-45ad-bc62-beb6b9ab87ee",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "123e71a4-e95b-4e22-b21a-55abf626e840"
        },
        "item": {
          "id": "9993ff26-eead-47a5-b2d6-1c21458b5e24",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9ce00e03-dba8-4f2c-8488-d97192af52bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1aeac30-7eb7-41af-b5bc-86bd4cb878c9",
        "cursor": {
          "ref": "692c4aa4-7179-4ce2-8776-b41ccf539aca",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "63e58282-fd51-48bb-95e5-143f03cee808"
        },
        "item": {
          "id": "f1aeac30-7eb7-41af-b5bc-86bd4cb878c9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b9a3baa0-cfbc-4f61-bc8a-9087235c9c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78172fb7-f6fc-4276-bb2b-b5d0492e498f",
        "cursor": {
          "ref": "33c7ee6e-1e9a-40e4-88a1-c07e2464ab7b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7eb4f496-5954-456f-b92d-fcfff85aa281"
        },
        "item": {
          "id": "78172fb7-f6fc-4276-bb2b-b5d0492e498f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "255392e6-7743-4f47-9bcc-2691da508414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873e4a02-bce0-46db-85c3-78a20d723f76",
        "cursor": {
          "ref": "c1633071-2085-4438-ada6-f539dd58b99f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4afcd635-8bac-4155-a0ab-ee1acdfc09a2"
        },
        "item": {
          "id": "873e4a02-bce0-46db-85c3-78a20d723f76",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "79deb870-1ffb-4343-9757-fd0c894db22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe5bc40-29b5-44bf-b948-9b3a713ce10b",
        "cursor": {
          "ref": "d8964b65-1e5a-4940-b1cd-7e4c0aa9c050",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7f3cc8d0-2808-4759-a081-d6e119e1e972"
        },
        "item": {
          "id": "3fe5bc40-29b5-44bf-b948-9b3a713ce10b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "97340ea7-c663-4ba0-a749-c26dd31186a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd1f174-2160-4301-82e7-ca28ffd45e01",
        "cursor": {
          "ref": "fc8219b6-9409-4bf0-99f1-6b3cd9bdbc95",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "97291000-04eb-429f-b78c-3fa27e577fa0"
        },
        "item": {
          "id": "3cd1f174-2160-4301-82e7-ca28ffd45e01",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "24af1efe-60a3-4c8c-9243-d7d6e22dc802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b1cc6e-db43-4da5-8089-11718c43c17b",
        "cursor": {
          "ref": "447a151c-a71b-4340-9227-40dd11474da6",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "42484eff-0d1a-440d-96ec-cf7cb5e738d6"
        },
        "item": {
          "id": "a9b1cc6e-db43-4da5-8089-11718c43c17b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "84853f65-521f-4904-a37f-a12f5eb2696e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8a3b03-5c7a-45c6-8edc-eb9426a264ff",
        "cursor": {
          "ref": "e63be203-29c1-426f-8143-c36b5826318b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4d75f3f9-6708-481e-8381-948d75f1eeaf"
        },
        "item": {
          "id": "4d8a3b03-5c7a-45c6-8edc-eb9426a264ff",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3366eb15-3b50-40a0-8733-356b6eb4861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3c16fd-f274-4b2b-96b4-659a12850ccd",
        "cursor": {
          "ref": "826b39a0-c083-41fd-81e4-5a279b589e8d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b81263b8-8b08-46d8-9889-dcc23be58221"
        },
        "item": {
          "id": "8d3c16fd-f274-4b2b-96b4-659a12850ccd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "af3603dc-7e2d-4d75-b2db-3544a013830e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a255d6f5-0257-4668-9de4-333f1593974f",
        "cursor": {
          "ref": "4d09c4d9-16c7-4dd7-b149-5fa47b6d5372",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "285511c7-81a5-4f88-a860-12d800cf7466"
        },
        "item": {
          "id": "a255d6f5-0257-4668-9de4-333f1593974f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4efda3d3-b741-426c-8d74-6ee36962b94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037520f0-9df8-4b5b-af61-e30042ea973d",
        "cursor": {
          "ref": "3ff8f917-f929-483a-8d10-322e29b5c999",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "16722724-3427-4080-8500-8b10350bf5d9"
        },
        "item": {
          "id": "037520f0-9df8-4b5b-af61-e30042ea973d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5cf153ce-51b2-4f9f-81ba-88512de794b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15189a26-82ad-4dfb-9b80-a256a6e09d01",
        "cursor": {
          "ref": "259ebfae-4b84-4dc3-bbe9-faaf3cf0313e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8187ed78-1e65-4308-93e6-281a7f968979"
        },
        "item": {
          "id": "15189a26-82ad-4dfb-9b80-a256a6e09d01",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ae68d22f-32ce-45de-a02e-5f3aee9c4373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a1c3df-77b2-49eb-9bd7-40d916862af1",
        "cursor": {
          "ref": "1697ab54-4f69-4335-a107-198ff4fdcb5a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "62c38309-f782-4940-b37b-7b9ac2481762"
        },
        "item": {
          "id": "00a1c3df-77b2-49eb-9bd7-40d916862af1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8193ffe1-10e2-4717-a2ac-2f5418fbaaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8061352f-1859-4f1a-a7a7-166a584f4142",
        "cursor": {
          "ref": "7060d142-3fff-4cd0-854d-671cfcd8b27b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e312a190-766f-4c58-a1a9-1422e2662302"
        },
        "item": {
          "id": "8061352f-1859-4f1a-a7a7-166a584f4142",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0d3e6b8c-8049-4bf0-bda8-11efd0db6f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dfd5c1-c20d-4e6e-a28f-fd420089b7d6",
        "cursor": {
          "ref": "bce27738-6cf1-42d9-b2dc-d6af298dc675",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1295a156-bf9b-42c6-9b99-d6fc63661072"
        },
        "item": {
          "id": "66dfd5c1-c20d-4e6e-a28f-fd420089b7d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "24d60498-c672-4389-830f-98c84d17ab1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e168d0d-df72-45d9-8cdd-fc8080140199",
        "cursor": {
          "ref": "5855f8cc-fd39-4c5d-8dc2-70c573cfd3c7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aac2a4bf-377e-46cf-87aa-6c2042c59014"
        },
        "item": {
          "id": "5e168d0d-df72-45d9-8cdd-fc8080140199",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "02c9e65d-7150-4018-bf5a-bf57f9a9b80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46ff549-4bf7-462e-a65a-a04ab9d1269d",
        "cursor": {
          "ref": "86c52c26-43bd-4c14-a653-2705f442715a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c482a854-79a8-4cfd-bee8-d30272447e5c"
        },
        "item": {
          "id": "a46ff549-4bf7-462e-a65a-a04ab9d1269d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8f972a65-c017-4caa-aa25-1f4026df7894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5826365d-748f-4e0b-81eb-623392f18286",
        "cursor": {
          "ref": "5adb0593-6b6c-4ceb-96af-a2a218cd3957",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6aeb36cb-a625-4789-845e-7e2308d7ba28"
        },
        "item": {
          "id": "5826365d-748f-4e0b-81eb-623392f18286",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "01b05647-a9f4-4fdb-a27b-8a7d7443bea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cc24df-3a82-4303-b150-6a5ef91c2b3c",
        "cursor": {
          "ref": "4b8b590e-871f-4893-9e00-1b296a027a14",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "86f72d3c-d525-470f-a2ac-02be980be3ec"
        },
        "item": {
          "id": "61cc24df-3a82-4303-b150-6a5ef91c2b3c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "81aea72b-307e-4a20-b07e-29f08ec4fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c742d3-a2f6-49a5-95e2-bc8cbeef55df",
        "cursor": {
          "ref": "29631f00-5a6d-440b-bbac-38648b575933",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "da340eef-d340-419e-bedc-f02f64ae7cea"
        },
        "item": {
          "id": "74c742d3-a2f6-49a5-95e2-bc8cbeef55df",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "abf976f1-3f76-4805-b9d0-2c75b841d3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd76746c-1ea8-4901-86da-8fcc6c98cf38",
        "cursor": {
          "ref": "c42263be-cf88-4cc2-8fc7-b080299c2c90",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0becce94-cdf6-4c4e-95a2-4d67624736af"
        },
        "item": {
          "id": "dd76746c-1ea8-4901-86da-8fcc6c98cf38",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ca769793-7f7c-4299-9392-33a5f20b4c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec141b7a-344c-4cf9-b3bc-d3bbc3876d73",
        "cursor": {
          "ref": "585ae838-89a1-4aef-99cd-d573f9eaf809",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "10efac60-1ce8-4449-bb20-c75c964afbab"
        },
        "item": {
          "id": "ec141b7a-344c-4cf9-b3bc-d3bbc3876d73",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d86bb798-d274-43b9-b45a-ef437ceb68b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6697aafd-3811-4e0e-b39c-719c1c183c3f",
        "cursor": {
          "ref": "62e92ab5-50d0-424b-b551-387dcf4d8a99",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a531a5d1-5a05-4cef-b359-2c8800076f21"
        },
        "item": {
          "id": "6697aafd-3811-4e0e-b39c-719c1c183c3f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "769cb3ed-e61c-4cb4-a717-3eb95404e4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addaf01a-c45f-4049-a294-12dff8752efe",
        "cursor": {
          "ref": "4eec9168-0210-4f95-a92e-67e114878938",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5bae4c17-8cea-4075-8947-c3995e023c66"
        },
        "item": {
          "id": "addaf01a-c45f-4049-a294-12dff8752efe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f42acbc6-3a76-45a9-a55c-920baa89279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdca0e4-0194-46fe-b743-434617b1c3ea",
        "cursor": {
          "ref": "bacfbd58-a558-4575-8bf9-824864ab8571",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "47214cb8-3dbc-49e8-9c34-e092d2fd196c"
        },
        "item": {
          "id": "8bdca0e4-0194-46fe-b743-434617b1c3ea",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6f28756d-2386-4d8a-a4e9-5a318c2e8f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3deb1266-3bb0-46f3-888a-cb1a30145442",
        "cursor": {
          "ref": "40d33839-c994-4cc8-9d73-fc861bff50b3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "45208a01-55db-4a4d-abdf-489ad51c7338"
        },
        "item": {
          "id": "3deb1266-3bb0-46f3-888a-cb1a30145442",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "10f16666-e0b8-40c7-83c4-1a1321ac4b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d114dd-8abe-4e29-909c-12bb5c537b54",
        "cursor": {
          "ref": "cfc24992-dc12-4bdf-87c7-9855ec5089f0",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4e415ec7-d774-40c5-bab1-8c6ad32ca577"
        },
        "item": {
          "id": "c7d114dd-8abe-4e29-909c-12bb5c537b54",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "484e6255-e342-4116-b4d9-436f9085665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4beac625-502f-42f8-92b6-888dc8185454",
        "cursor": {
          "ref": "2fdc57e9-030e-4609-8cc0-01b453fcdaac",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3afb4184-62b5-4fa3-bc5e-b75ad869e358"
        },
        "item": {
          "id": "4beac625-502f-42f8-92b6-888dc8185454",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3f36f023-1634-456d-9bac-09f6b43e236d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755ad39-4e79-4763-ad92-4ff96af38281",
        "cursor": {
          "ref": "0b9f7968-9101-496e-9d4d-b880f8c8d6bf",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fcdcd440-4438-43eb-b7d5-4bd040056b66"
        },
        "item": {
          "id": "7755ad39-4e79-4763-ad92-4ff96af38281",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6b2bf974-40f5-498d-a530-57c41abb7725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0fa25e-726c-4593-905b-678aea926d52",
        "cursor": {
          "ref": "5894e8a4-95ce-4912-b8a8-d862975bb74f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e82e7d3a-a3da-41f4-a383-8cc99adbc52d"
        },
        "item": {
          "id": "ca0fa25e-726c-4593-905b-678aea926d52",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "aae4a044-8f5c-470a-9f2c-c16341e870f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d509359f-9c7e-4b11-ad79-97b78316b03f",
        "cursor": {
          "ref": "2985fc9e-2cc8-464e-aa18-d7e0717da2ca",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "63509b0f-0e0c-42c4-9b6f-a5ebd9665100"
        },
        "item": {
          "id": "d509359f-9c7e-4b11-ad79-97b78316b03f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a3c6576e-7feb-44d0-8dbc-86f2703f1e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0486ecc-d3c1-41c2-8a00-826c2b7ceb1b",
        "cursor": {
          "ref": "a24ace74-46d2-4094-9d0a-bb487f1cd00b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1e22bc12-87df-4f13-af8d-bcfcffb06662"
        },
        "item": {
          "id": "f0486ecc-d3c1-41c2-8a00-826c2b7ceb1b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e86eb905-bef6-482b-9634-a1306b2fe2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee1f9fa-8b97-4b41-9d03-3b49d3bef287",
        "cursor": {
          "ref": "38837beb-4952-4f12-9863-e16b6bf6a37c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1c2d7c18-bf24-405c-a3c3-47988c0e6de3"
        },
        "item": {
          "id": "dee1f9fa-8b97-4b41-9d03-3b49d3bef287",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "66e2724a-ea5a-4a32-95a7-8a701cace757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eaaa33-1417-4ddd-af7e-c37eaac3c8d2",
        "cursor": {
          "ref": "cbf9264e-dd9e-4f78-b5f7-caf8dcf4941d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e25eb1fa-b4fd-47d5-a006-b2bef19c3c70"
        },
        "item": {
          "id": "66eaaa33-1417-4ddd-af7e-c37eaac3c8d2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7d59cd1e-fc64-4323-83cf-9b15cb6af764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97107dcc-098c-4bb8-a209-9014a7eb6fbc",
        "cursor": {
          "ref": "ea455a22-67c2-4356-99b7-92606d1a494e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8489a7b6-16f4-4af6-9279-7f6a89aa05c9"
        },
        "item": {
          "id": "97107dcc-098c-4bb8-a209-9014a7eb6fbc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7209ba5a-49e8-438f-a610-c1282a461009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc9b999-b577-458e-82eb-945c1d38d273",
        "cursor": {
          "ref": "eb4a9596-08ea-4c57-bc83-a502da0e3323",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4e9ddf75-c38f-4822-99ee-3b3e28d71d27"
        },
        "item": {
          "id": "fdc9b999-b577-458e-82eb-945c1d38d273",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a55ff12d-4db7-43ab-902c-bedd55989285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddfab70-71e3-46d5-895a-1d6c52a8da22",
        "cursor": {
          "ref": "56b39754-27e3-4e8c-a935-ecb537138e20",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1a3a8b2c-e330-4324-bdaf-5402a208d3f5"
        },
        "item": {
          "id": "fddfab70-71e3-46d5-895a-1d6c52a8da22",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a08eeded-4693-444d-8251-6009b6e13e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614bd622-5aaa-4901-b17c-8850b290ab87",
        "cursor": {
          "ref": "f589248f-d484-4323-b064-1e3306ce94e9",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ddf7d6de-39d2-4804-84fa-744e523a8232"
        },
        "item": {
          "id": "614bd622-5aaa-4901-b17c-8850b290ab87",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a339cd07-0b0f-489f-886d-c43c9314fe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b187ac9a-80d3-4bff-abe9-23bbc9224faf",
        "cursor": {
          "ref": "eb245d49-cd24-4ae0-8b71-c679b85e5b9c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d31dcdfe-7c73-4182-a7d4-0d27c5587c2f"
        },
        "item": {
          "id": "b187ac9a-80d3-4bff-abe9-23bbc9224faf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bf9a1ed5-41cf-4079-a0cd-4914054021c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199cdc8c-6255-44e8-bf1c-5f31bf69707f",
        "cursor": {
          "ref": "1206428e-bd8e-4cf4-8531-b26eac421392",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c7f363f-f297-4990-ac91-29f832f1bb98"
        },
        "item": {
          "id": "199cdc8c-6255-44e8-bf1c-5f31bf69707f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cb0c6b52-4bac-41b1-8a9c-0fd29088f188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59e75cf-691f-4caa-a07c-5a706ce647b7",
        "cursor": {
          "ref": "403da634-3823-4999-876e-c5f139a86e5f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b8843f98-a5bd-4007-b663-a67a8e64b09e"
        },
        "item": {
          "id": "b59e75cf-691f-4caa-a07c-5a706ce647b7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "03c5cef4-dc67-47f5-a7ee-c231f928f84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a322bbb5-e670-47ba-83c8-fec27ed38d34",
        "cursor": {
          "ref": "81ff8ff6-fafb-414c-858d-4de3039562ca",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6ae4637a-c540-4882-967a-1107625d2484"
        },
        "item": {
          "id": "a322bbb5-e670-47ba-83c8-fec27ed38d34",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c008f24c-2194-4c62-8e2f-209eca9e5525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72abf29-89f6-4718-92b8-4d148c592a8f",
        "cursor": {
          "ref": "c9493628-d4a7-4c0e-bbfb-633da2c97b08",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "302a7c8b-1b08-4e62-be6f-8f8d00f9792d"
        },
        "item": {
          "id": "b72abf29-89f6-4718-92b8-4d148c592a8f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b159ff9e-de3c-4d14-9ad6-41c192aef146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb534fa-74d1-42f3-b83b-0df2533f6f0c",
        "cursor": {
          "ref": "68f63724-14ef-4c19-8a26-040fbe3f033f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "74f300a9-be13-4851-854c-a5a0ccd9629e"
        },
        "item": {
          "id": "6cb534fa-74d1-42f3-b83b-0df2533f6f0c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b119d3b0-7923-40b1-a35c-fbdea6d6cbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b837cbc8-e925-4629-b261-74057abab63d",
        "cursor": {
          "ref": "13078e41-88d6-435d-b428-56332b3b7f5a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "db15054f-3263-41bc-b920-c1cf8c9b755c"
        },
        "item": {
          "id": "b837cbc8-e925-4629-b261-74057abab63d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "40804ed5-d88b-4d88-a22a-fec7cb7f8566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad4e4f-b2e7-4e44-af60-f2b463a87c5f",
        "cursor": {
          "ref": "076956d9-1529-4d6b-87c7-d0410c82c5e3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2c637ab5-d3ff-43aa-a160-7835d0ff4b1d"
        },
        "item": {
          "id": "99ad4e4f-b2e7-4e44-af60-f2b463a87c5f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "258a2d58-260b-4add-bf23-dc70fdce485e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c63595-d2c8-49b3-9723-0433cbe2742a",
        "cursor": {
          "ref": "818d0d25-50d9-4b2f-a7be-b1072302f869",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8eeecbb2-41c8-45cb-b810-8a5f747b2450"
        },
        "item": {
          "id": "c6c63595-d2c8-49b3-9723-0433cbe2742a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b4d750f2-d739-4080-bd3e-e0be87ff78cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08052a17-5c24-4407-8c67-5a637e6d54db",
        "cursor": {
          "ref": "a420d963-275c-4f62-8a05-6d432b32a5b3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9555b08e-a433-4ee9-91c9-8067d6af22d4"
        },
        "item": {
          "id": "08052a17-5c24-4407-8c67-5a637e6d54db",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4d967d54-1b6c-4438-815b-5a295f17279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7f53d0-78f9-426c-a8c6-fc46cd4f47be",
        "cursor": {
          "ref": "fe72f2dd-95b2-40b7-988f-538b660a05df",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "28faae29-99b4-40c4-b10c-b4780a785881"
        },
        "item": {
          "id": "0a7f53d0-78f9-426c-a8c6-fc46cd4f47be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c88aba57-0d10-4583-8003-03c7ae76f6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00cc387-534f-492c-8b3f-afd445b6fe65",
        "cursor": {
          "ref": "e7743401-4384-45f0-bb7c-15ea911f045f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e267bb61-d0a9-43b8-b21e-686805aa11f6"
        },
        "item": {
          "id": "e00cc387-534f-492c-8b3f-afd445b6fe65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "54e02338-038a-420f-8ac8-192dad322789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369b1c72-56fa-4869-8dad-dce8c3c9c0d3",
        "cursor": {
          "ref": "1bc39488-6cc4-4822-9102-52d7f3d0fd8a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f2e7b6cb-bfeb-4cfc-9078-53b57869620e"
        },
        "item": {
          "id": "369b1c72-56fa-4869-8dad-dce8c3c9c0d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bdbfa58a-0c94-487d-9a30-6537d500b2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec19f51-3cf0-43e2-aa7a-863ea6b7cc9d",
        "cursor": {
          "ref": "6a8655cf-88de-4320-a87c-303f0c840fbb",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7586a55e-d78f-4556-9ae1-06d51bf6c4fc"
        },
        "item": {
          "id": "fec19f51-3cf0-43e2-aa7a-863ea6b7cc9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d63d4282-47a4-4a23-bce3-f890c80081dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03edfefb-b9a4-489e-8362-ded0f027ae91",
        "cursor": {
          "ref": "134f670e-25c9-4bd0-ab5f-43e61367a838",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "be4682e5-004f-4a3d-9096-5deb631b6c93"
        },
        "item": {
          "id": "03edfefb-b9a4-489e-8362-ded0f027ae91",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a66a9b45-acc1-41bd-a143-30e8289a4012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6baaaf-bb84-4b8d-b825-3345c0becc48",
        "cursor": {
          "ref": "3c23b570-3c0a-4830-bb57-f5fca6ec7c2a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "49eb9308-fd6c-40e9-9089-a91a0458c3dd"
        },
        "item": {
          "id": "cf6baaaf-bb84-4b8d-b825-3345c0becc48",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6e799279-aefb-4e03-abc8-9596544ad7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08830f7b-e60a-458c-bf95-e28e59985d35",
        "cursor": {
          "ref": "446f1b0b-0f62-4dc4-8bcd-6c4601c95268",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1d1349d6-7e84-43ed-b9bb-08538c907cdb"
        },
        "item": {
          "id": "08830f7b-e60a-458c-bf95-e28e59985d35",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0d7d1bd1-35b8-4536-a318-3a8b1eea9606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f37eafb-90d0-439c-aa59-63040ec5ab4b",
        "cursor": {
          "ref": "8a5c2b46-472b-48db-92a6-54a438790702",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2e5a3449-8b01-470d-b6c0-f81f5137964b"
        },
        "item": {
          "id": "8f37eafb-90d0-439c-aa59-63040ec5ab4b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e3e608d3-b61f-43f9-a3bd-e57036158e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fe9990-a423-4845-8f8c-99d2ba76d56e",
        "cursor": {
          "ref": "e05499d8-d0b9-456f-b1e4-cf67cb49c9d0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b51c109b-ccde-4974-aa5d-b42855f7b3cd"
        },
        "item": {
          "id": "39fe9990-a423-4845-8f8c-99d2ba76d56e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ae106b30-f0db-4236-8af4-65f6322040df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82aeb1ca-9e3f-42e5-af39-fc3203760946",
        "cursor": {
          "ref": "501c19f0-7789-44c9-b154-d5be6fc84a91",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d46abbb7-39ed-4a56-85c3-6864dfda0dd0"
        },
        "item": {
          "id": "82aeb1ca-9e3f-42e5-af39-fc3203760946",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "573a46f5-af47-4a58-91ef-50eaed4a092d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2052d82-903e-4b35-8279-99094d661c5e",
        "cursor": {
          "ref": "28c9ade5-6915-4618-8949-ae4271d60bc1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aac8515f-d592-4f26-8a63-97d84f1f800b"
        },
        "item": {
          "id": "d2052d82-903e-4b35-8279-99094d661c5e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4fb550f2-b5d8-4ca2-9262-0a8f1c17c4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54c7439-8447-4185-857c-beceb989403b",
        "cursor": {
          "ref": "f10e98a8-df2c-4f89-b69d-6869d6ea86bf",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "494c45e0-8968-489e-af59-40f201fdc47c"
        },
        "item": {
          "id": "b54c7439-8447-4185-857c-beceb989403b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d9376a5a-b1b9-4397-9c49-fed4334ff926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4560cb32-3fd3-4854-9580-aa5ec0603dcc",
        "cursor": {
          "ref": "6b48d21b-eeed-4959-8988-f1b00d352051",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7b498c9e-17fc-4af3-af3b-f6d79fe4ee4d"
        },
        "item": {
          "id": "4560cb32-3fd3-4854-9580-aa5ec0603dcc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9de352b4-fec7-49ff-b1a1-d3ad257d209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672fec83-fad6-46c3-b659-abb957b0f442",
        "cursor": {
          "ref": "8103cc7b-cde3-4b2b-a6a0-a19e51cdb716",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5a961986-e006-4651-aee8-af299352c1fa"
        },
        "item": {
          "id": "672fec83-fad6-46c3-b659-abb957b0f442",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d6b3a67b-e969-4c75-be0b-1ec96d5ea195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fcf302-aa05-47fe-a368-78623486ff72",
        "cursor": {
          "ref": "e6ad1438-8f36-4bdd-8485-72151201d9b5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b2f6f199-8cc7-44bc-a0b9-f96ee4781076"
        },
        "item": {
          "id": "e1fcf302-aa05-47fe-a368-78623486ff72",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dd60a739-3378-48e8-88ab-7325e9520760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a01238-99a7-415f-b48a-8b16e4934e18",
        "cursor": {
          "ref": "17fa92bf-d9ec-4352-92b2-a64dd14208f3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "58fd03b4-0b7e-4644-a21a-73b2def9c90e"
        },
        "item": {
          "id": "01a01238-99a7-415f-b48a-8b16e4934e18",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eba0103b-aedc-4b02-9d3d-9c6c604b2294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f514b928-12a6-4f74-bae5-9a15e17c78b7",
        "cursor": {
          "ref": "67eb3093-05b9-4674-9a85-c30f98d1a707",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "965cdf1b-c845-4980-b66c-e29d32e7657e"
        },
        "item": {
          "id": "f514b928-12a6-4f74-bae5-9a15e17c78b7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "40d506ef-0f25-43ab-b3a1-af3763369e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c08900-4677-4447-a8ba-49f196622590",
        "cursor": {
          "ref": "acdbe502-6e1e-48e7-a948-a47a8bd7a012",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e8f167ea-ef4f-4c72-80a8-a1df2465afa1"
        },
        "item": {
          "id": "39c08900-4677-4447-a8ba-49f196622590",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a822bd6d-3e8e-40d6-ae06-eaabf5ea54f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cc9b3c-54d1-490a-ba79-6af2a6d397d8",
        "cursor": {
          "ref": "ccb277e9-6f4e-444f-b477-aef15ae99e0e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "facc79d3-5f05-4146-a4d1-40d825679531"
        },
        "item": {
          "id": "63cc9b3c-54d1-490a-ba79-6af2a6d397d8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1942e436-8ba0-45d3-8bec-f3193f876cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a29bf2d-ff98-496d-b54e-35c9a664eb2d",
        "cursor": {
          "ref": "bc304ddc-e210-4f5c-8d43-1312e5b3e649",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "741eafee-8f2b-4035-85eb-7043454e8ad6"
        },
        "item": {
          "id": "9a29bf2d-ff98-496d-b54e-35c9a664eb2d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8c2456b3-7c20-4455-9536-ff0d37290a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f32043-cfd3-4147-b7d2-8e2f81bc9fd3",
        "cursor": {
          "ref": "79bec3a7-f280-43cf-b289-f8cb7aff8a27",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "10867b3a-f532-42af-8ff9-55a796d0de74"
        },
        "item": {
          "id": "67f32043-cfd3-4147-b7d2-8e2f81bc9fd3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "032b44e6-acbf-4295-89f7-9e255ccdbc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07276b91-efef-4038-9128-f426887ef7fe",
        "cursor": {
          "ref": "d8a44178-bc8f-43b1-8b00-7ea12d6c1296",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "80a8a65c-1927-45d6-9732-1b20ab220d22"
        },
        "item": {
          "id": "07276b91-efef-4038-9128-f426887ef7fe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2c5ea7b0-04af-4eb7-845e-3ccdac336eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9381a62b-6c8c-428c-a2dc-e6f4012dafa4",
        "cursor": {
          "ref": "f79ca123-7f08-4f93-a107-68ac1e56100b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "da0e24a6-9c62-4139-a74f-ab01830f3b0d"
        },
        "item": {
          "id": "9381a62b-6c8c-428c-a2dc-e6f4012dafa4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cd779ea9-daa4-423a-9b78-8993ae86ab29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbd20c9-f12b-4c28-9e47-c562a3b7a9ee",
        "cursor": {
          "ref": "16226c0b-9990-4c58-a341-f4ea315c5e3f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "be404db2-fba9-42c3-bc0d-7bf1896ed097"
        },
        "item": {
          "id": "4dbd20c9-f12b-4c28-9e47-c562a3b7a9ee",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f90af2ed-d085-4598-8548-c9ce648d5af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a09f1e9-5808-4280-a37b-b5ef6708b2c6",
        "cursor": {
          "ref": "ebf4260f-e825-44f6-8ac1-a6eed75a9bb1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a1f0ec49-fadf-48ae-83a3-3277f034be42"
        },
        "item": {
          "id": "6a09f1e9-5808-4280-a37b-b5ef6708b2c6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fa75987f-9026-45d7-a0be-b09f739e0f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67144e4c-9d8b-4c24-a563-64283cb67d77",
        "cursor": {
          "ref": "eea7cbd7-103f-4845-9d57-a80b5570181f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6768d458-579f-464d-ac57-ab6d029c026d"
        },
        "item": {
          "id": "67144e4c-9d8b-4c24-a563-64283cb67d77",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3c172a54-c6f6-42a7-8b69-3ea4a4c03161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b5975b-1021-496e-818c-59bdfebc629d",
        "cursor": {
          "ref": "e90ed5a2-9546-4ad3-acee-4a76e7d10c73",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "00b2b38c-f821-4eb8-9229-caa09fc32b64"
        },
        "item": {
          "id": "b1b5975b-1021-496e-818c-59bdfebc629d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a56be5bd-b5d8-45aa-a526-c3cfc4027e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04606f3-e098-4993-9659-4f945f6075ba",
        "cursor": {
          "ref": "c7fcbe3a-993f-4ae8-8f9c-9e5f767d4992",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e395c3bd-f2a3-4ed5-b8cd-e215f7555478"
        },
        "item": {
          "id": "c04606f3-e098-4993-9659-4f945f6075ba",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5a53a072-fc41-4731-a2a7-04aa831b7516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd112b9c-32ec-4b52-8735-ffb8da2d9ac9",
        "cursor": {
          "ref": "9bc449f1-a14c-4cc3-b8f5-a8902666650b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2106591f-10e1-4364-ae4e-80479c252e8e"
        },
        "item": {
          "id": "cd112b9c-32ec-4b52-8735-ffb8da2d9ac9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f18d7aa3-99b1-4a6d-a9c6-e2bce5a1a173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a13672d-bf86-417f-9dda-d6d135b6d71f",
        "cursor": {
          "ref": "f067a636-ff04-47ee-ac82-8408a9674a3f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "18ee14df-7184-4878-8d4a-f2d200896a3a"
        },
        "item": {
          "id": "3a13672d-bf86-417f-9dda-d6d135b6d71f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9239125c-5953-4eed-9d78-f9882f7bcd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7460923e-952c-4f3d-a047-0d61f631356e",
        "cursor": {
          "ref": "85bbc6e9-ed2a-4508-a5af-57fa66ecb7fc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d00eff36-2bb7-4922-9061-82e8c9eec8f6"
        },
        "item": {
          "id": "7460923e-952c-4f3d-a047-0d61f631356e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e91c39ab-9a78-4bd8-bfae-4f10e91829c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a093f38-c807-4110-b7fe-f0a59098832d",
        "cursor": {
          "ref": "858ddba7-a66c-4ef5-857a-7aec09b50ce0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "403135aa-5ff5-47c7-867d-966f277ca31e"
        },
        "item": {
          "id": "7a093f38-c807-4110-b7fe-f0a59098832d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7f7c54c6-e3e0-443f-bf05-c6c84babc578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0668c05d-8853-4434-a924-1376744a5c3d",
        "cursor": {
          "ref": "5e3ccf90-4ad0-4df8-b21a-174efc542bfd",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2669afd4-0011-4e76-b5d0-f5a5759776a2"
        },
        "item": {
          "id": "0668c05d-8853-4434-a924-1376744a5c3d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ac16af7-3eea-49bb-a587-1fdf2b136881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92302466-325b-45ec-8eeb-025ebcbf0bad",
        "cursor": {
          "ref": "8bd5ba76-1517-4373-8365-b77c165d2038",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "834cb69d-29bc-4989-b948-485353ae05cb"
        },
        "item": {
          "id": "92302466-325b-45ec-8eeb-025ebcbf0bad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fdeab0eb-410e-4ebc-85cb-bf9f1e3cabac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56972234-d2e8-4c93-ae90-784537df19df",
        "cursor": {
          "ref": "9c692e4c-9029-4aa0-bc35-066d5eb62869",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d4f142ff-4485-4205-950d-8e53c4317fd4"
        },
        "item": {
          "id": "56972234-d2e8-4c93-ae90-784537df19df",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5f055fe9-99ea-4926-aaca-7dd9c12c2f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a83749-269e-41d0-93c0-4a95bb91e6ee",
        "cursor": {
          "ref": "56ef4337-89f2-442e-86b3-c755d5d726f3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "17c871a7-5c43-4a33-bcf6-935baaf43f6c"
        },
        "item": {
          "id": "d5a83749-269e-41d0-93c0-4a95bb91e6ee",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "11f6cf28-d3b5-4765-8590-1dcbf7b4839e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe3241a-1d24-4652-a58c-9e0ed656ca59",
        "cursor": {
          "ref": "faa7882f-47d2-4fcd-98e4-2f9ffd3f0809",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "037e2bf1-a576-43ff-98f8-0952a956769f"
        },
        "item": {
          "id": "bbe3241a-1d24-4652-a58c-9e0ed656ca59",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "05648037-3923-4256-aef2-89371ef77e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "18aa5a11-5460-46fa-9902-13490ecfc12f",
        "cursor": {
          "ref": "74e48ae9-f895-40f8-83fe-d1bfbaff6097",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "03575b56-d4d2-4a3a-a926-b1a57890825a"
        },
        "item": {
          "id": "18aa5a11-5460-46fa-9902-13490ecfc12f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5e119a15-4468-4777-b775-2807c68dd698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "969cb7c4-1e0c-4b9b-8711-9f37f461ec9b",
        "cursor": {
          "ref": "b5919efb-27c9-4ddd-bec3-b11fa8f0161e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1e7efd3b-9dfb-4830-ad15-cbbabef76db0"
        },
        "item": {
          "id": "969cb7c4-1e0c-4b9b-8711-9f37f461ec9b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c804e8bb-567d-4d7e-9f4f-4ce4525a53bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "30a1646f-271b-4305-a248-f5efd2c90b91",
        "cursor": {
          "ref": "bfe6e3e8-174f-4554-a408-fdd4ffd6d804",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0d44b874-ad47-4a75-b565-01e1203989d2"
        },
        "item": {
          "id": "30a1646f-271b-4305-a248-f5efd2c90b91",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "be9fa9d8-273e-4935-b9aa-e56c9bdf76f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c264842a-d09d-421e-aab5-46d2fe8c7342",
        "cursor": {
          "ref": "7a73769d-7814-46d2-a1fa-ac73dcd8cf40",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e20a84d5-5638-4114-b1c2-f5809b91b666"
        },
        "item": {
          "id": "c264842a-d09d-421e-aab5-46d2fe8c7342",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f31690df-7547-4512-9186-0e5d8cef11d9",
          "status": "Created",
          "code": 201,
          "responseTime": 7279,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f537b2-25c3-4d0d-91d5-1f0edff27a6f",
        "cursor": {
          "ref": "b9b9a9a7-7cb9-419f-95d3-8a7cd8cb04b5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d78fc7a6-6489-42a5-b783-a89583b6d962"
        },
        "item": {
          "id": "39f537b2-25c3-4d0d-91d5-1f0edff27a6f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1b00dd0e-55dc-45f7-9ce0-791ca9f5e9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "219466c0-677b-4b79-8af9-17bb67750b36",
        "cursor": {
          "ref": "ecf0a9bd-0882-4665-9a9f-1cd006e9ed29",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "895c6b7d-dab6-4612-8be3-f5df4db34f7f"
        },
        "item": {
          "id": "219466c0-677b-4b79-8af9-17bb67750b36",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a1a6b23d-bdc2-4b38-8b20-db2c14f0cfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "396886e3-8bc9-448b-bbe3-f0c2c4a8db21",
        "cursor": {
          "ref": "ceafc4a5-8fb9-4cce-8d09-153e7ee3107a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e6a56b90-4e9d-4730-9bed-f714db6b25a1"
        },
        "item": {
          "id": "396886e3-8bc9-448b-bbe3-f0c2c4a8db21",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd5c072a-b4d0-4c30-b675-5c4d55831bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53dbfa0-7745-4dd9-acd5-a0484af205e9",
        "cursor": {
          "ref": "2ea74132-f5cc-4bb1-b2ec-3219c0e09698",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1b48bf89-4600-418f-a763-536ff5e0ac49"
        },
        "item": {
          "id": "e53dbfa0-7745-4dd9-acd5-a0484af205e9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "515407ff-c022-4fcc-a463-b0131f2ef6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc898b72-0a88-4b88-ac68-ac1a5c1c128c",
        "cursor": {
          "ref": "e671f159-cc14-4df3-82fc-3392755e2247",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "49bc41f1-02f3-4684-a488-9095d9b1315d"
        },
        "item": {
          "id": "fc898b72-0a88-4b88-ac68-ac1a5c1c128c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f279ab1d-6a11-493c-a781-8457c8432b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56288178-a751-4ba5-a75f-00140afdbf03",
        "cursor": {
          "ref": "eb49ec1c-049b-46b2-b5a0-a0cd57c1bb13",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e85b6cd3-5ca2-4b4b-9d34-f759fd5af5d7"
        },
        "item": {
          "id": "56288178-a751-4ba5-a75f-00140afdbf03",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa3f4672-7586-4ce1-bc94-ed484dfefda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f576876-8b5d-4b0d-8875-e1f02c7416c9",
        "cursor": {
          "ref": "764671f5-5db4-454e-90b1-9089b1b84013",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2b19e14d-74e1-4c98-b8f1-609735368ecb"
        },
        "item": {
          "id": "2f576876-8b5d-4b0d-8875-e1f02c7416c9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "31a36f9d-ba1d-4e50-a2e8-c5af7cb4ea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435a6d5d-9902-47e1-9afe-13b17c15b4c3",
        "cursor": {
          "ref": "bedbe34e-5b9d-4539-8472-507b0fbc6605",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d4691cef-9ed6-4ac9-9763-810a172b6834"
        },
        "item": {
          "id": "435a6d5d-9902-47e1-9afe-13b17c15b4c3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ca1d5aa-a8cd-453a-a04d-e82ff5f31a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3b09f1-1679-42e3-9715-220a1bc6f700",
        "cursor": {
          "ref": "0e0a3b25-52a9-42fb-a478-7857b5263174",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "66ca942e-ce6c-41c3-9a81-0c184d29e5e1"
        },
        "item": {
          "id": "de3b09f1-1679-42e3-9715-220a1bc6f700",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1cc44fe8-6b8b-4b25-87dd-9ca04f3796e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3d8121-d48a-45ca-8d1f-ddc58451f45d",
        "cursor": {
          "ref": "becca5d9-b763-4792-8334-bc7a2730bcec",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a106f83d-0e24-4148-b239-af55c3f55425"
        },
        "item": {
          "id": "de3d8121-d48a-45ca-8d1f-ddc58451f45d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d77ba26a-91f0-4600-b230-f7c9726b707b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba9ddad-2ebf-4ab2-8d93-afeb07916b3e",
        "cursor": {
          "ref": "14310d54-bef6-4d93-8222-7fdde726b20c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e7c089f3-53ce-4426-90c3-a0a29b967386"
        },
        "item": {
          "id": "0ba9ddad-2ebf-4ab2-8d93-afeb07916b3e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3abeac0c-56e0-4538-abe1-ad5290b97571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b210ac5-1214-4543-a16d-036856e1f94b",
        "cursor": {
          "ref": "ab149e25-6f9f-414e-9e5c-f752db2c1030",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4406b12f-2f3d-4924-a0bc-5b7691ac8988"
        },
        "item": {
          "id": "1b210ac5-1214-4543-a16d-036856e1f94b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f43c4776-bef5-483e-aab8-5e932a2c68ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46df832d-271b-43a0-bd8e-e67b5e268022",
        "cursor": {
          "ref": "214fc903-39a0-4ce7-88d6-3b1c7e32678c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1d67d63f-2c82-4f8d-8c8d-ee1c5dfeef64"
        },
        "item": {
          "id": "46df832d-271b-43a0-bd8e-e67b5e268022",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dbdb7393-d037-4aa0-ac87-42f97aa9cba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af92a14b-8377-490e-972e-619b82d1b63d",
        "cursor": {
          "ref": "fdfedd1c-9e4f-4655-a1b1-27ba94511064",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6f4c5627-ca1b-4f41-a1aa-92f3f61474d4"
        },
        "item": {
          "id": "af92a14b-8377-490e-972e-619b82d1b63d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9552e726-66da-4ab9-8c94-0124b1d2bc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51aa58e2-0666-44e9-b057-3355ba4858c5",
        "cursor": {
          "ref": "d5d1dd00-d561-4b0b-ba57-ef637d05cd6a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c655b1e0-542f-4e39-bfac-e0eccf203fc2"
        },
        "item": {
          "id": "51aa58e2-0666-44e9-b057-3355ba4858c5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7de9916e-b8ec-47f5-842c-d72665b0d845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b96fde6-6d7e-4971-ad03-774611c03c90",
        "cursor": {
          "ref": "a39ed8e3-d7b8-4011-bb5b-7d124ffc6e1f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cc782684-6896-481f-b670-09b5fe081134"
        },
        "item": {
          "id": "2b96fde6-6d7e-4971-ad03-774611c03c90",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cf2404ea-c145-4071-8eb8-50569e8d1d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868037f9-c22c-4a04-b67b-e37b5d37e631",
        "cursor": {
          "ref": "e1ad9b71-7373-4abd-a619-14a8649df0c4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "70f69717-04c8-41ff-83b6-dfd63acbb4ff"
        },
        "item": {
          "id": "868037f9-c22c-4a04-b67b-e37b5d37e631",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f111c329-0170-4d2e-9dfd-5c7f897c2919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa80a3f8-12be-4410-99e4-167f4a02e808",
        "cursor": {
          "ref": "0f03e48a-1ed6-48c1-97db-8e40c3e366e2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0801689a-c199-4ad8-bff3-d3382b1cd538"
        },
        "item": {
          "id": "aa80a3f8-12be-4410-99e4-167f4a02e808",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "edf1e4d4-5380-4574-961c-afaf7da70848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125914c3-ce3b-46b2-9108-bd14fc29decc",
        "cursor": {
          "ref": "df4e7992-05c1-4afe-8be8-25b81c34c268",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b9cd56c6-7640-4602-b2cf-f490093e21f5"
        },
        "item": {
          "id": "125914c3-ce3b-46b2-9108-bd14fc29decc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dcbf5867-aa09-41df-8335-4df2d1d0e1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7e44d1-e3b9-4b23-9be7-921eed77d56b",
        "cursor": {
          "ref": "3a5ba42c-c8e5-423f-a760-c020e3fac9ce",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "865451aa-af8e-4f50-821f-0d14fd423aa4"
        },
        "item": {
          "id": "5d7e44d1-e3b9-4b23-9be7-921eed77d56b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d53aa022-bb4f-4a0b-ad6a-482ba4d3a842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b6dfa4-3cb5-4638-baee-8cb160f37762",
        "cursor": {
          "ref": "e6542940-ec1e-487d-8670-90690e8fca4f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dc192089-dd72-4b46-8106-7c1a90dc1444"
        },
        "item": {
          "id": "c9b6dfa4-3cb5-4638-baee-8cb160f37762",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0508086a-e417-4440-a196-c9dc3b7753b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e993f3-c99b-407d-a473-5c6087f4cb83",
        "cursor": {
          "ref": "c78c3907-d536-43eb-b8ce-cefe0a9c0001",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d4dfb9ff-ef41-47db-82e3-68a1517891d9"
        },
        "item": {
          "id": "a0e993f3-c99b-407d-a473-5c6087f4cb83",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "09ae25ce-c58a-41f9-b8d0-93bce0d366b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7911d75-4978-4e16-ad6a-fce5267f2d65",
        "cursor": {
          "ref": "f46977cd-df11-4ffa-9e06-d9d5d1503d77",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b5c009e8-7f5e-4eb0-9994-ecc54dc1b2e2"
        },
        "item": {
          "id": "f7911d75-4978-4e16-ad6a-fce5267f2d65",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "97e51e52-256b-4d83-b5d9-887012d5effe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f569fa-55a0-484a-9898-4f63e8035693",
        "cursor": {
          "ref": "1893f3d6-c481-4cc5-8c1a-cb1e4566ff40",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f33fbc8b-8fde-4413-a543-1ef346e4bf57"
        },
        "item": {
          "id": "e5f569fa-55a0-484a-9898-4f63e8035693",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fd734d28-8878-4b84-b80c-226a74fe5baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d988127-9eb9-4ddf-9b1b-7a36ce8674c2",
        "cursor": {
          "ref": "8013c349-c3d8-47a6-ad04-2eaceadfe962",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "28532582-b7c3-49e1-b30c-cf54ea0a702d"
        },
        "item": {
          "id": "0d988127-9eb9-4ddf-9b1b-7a36ce8674c2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cc647d4e-6d55-4e33-a608-841bc0aebe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bf4c7d-a07d-4ca2-bba6-e513d882d62e",
        "cursor": {
          "ref": "9e0d368f-c566-4e5f-b0cf-85741a6b4d82",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "33923b3a-6fb4-4fab-a68a-055838a7e319"
        },
        "item": {
          "id": "25bf4c7d-a07d-4ca2-bba6-e513d882d62e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "73da5f9a-615b-4418-930a-0d10aa55975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b38011-bbed-4bce-90f7-57c0753e17ed",
        "cursor": {
          "ref": "e1752b96-08f1-40a6-9b76-0b799a974480",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e144de18-f74b-401f-9104-fb7c0ed5f876"
        },
        "item": {
          "id": "c7b38011-bbed-4bce-90f7-57c0753e17ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c5373fbc-8743-481d-ad0a-770ac27a87bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03e31f2-8e27-47b5-9253-663cc96136d6",
        "cursor": {
          "ref": "055ef37f-0a70-4a70-9b8f-8ee1e2f5c9db",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c3a348ff-886c-4ba7-b1bf-c782d9e122c4"
        },
        "item": {
          "id": "a03e31f2-8e27-47b5-9253-663cc96136d6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0d7b1410-551f-482c-834c-cd70867e8212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6d1935-42cd-40ac-bfa8-63c2c05b19a9",
        "cursor": {
          "ref": "7b77c6a3-3ee3-491f-9e85-5d777db2c84f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ee38e1a1-1891-41ee-830e-b8caa777172d"
        },
        "item": {
          "id": "8c6d1935-42cd-40ac-bfa8-63c2c05b19a9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d3eb21e5-dc0f-4fe0-9dda-db70de426618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615d60ff-39e0-4fa0-8017-c04ec302c360",
        "cursor": {
          "ref": "0f74d2c1-90ff-4e28-8fc4-e6f3347c53b0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1a65c6b3-47c0-4cfa-a155-c2db827c193c"
        },
        "item": {
          "id": "615d60ff-39e0-4fa0-8017-c04ec302c360",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "253f5d66-3ab8-405b-aa76-c86773e2d6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240b9a24-2eec-446a-b53e-1ed38cae42a5",
        "cursor": {
          "ref": "e3d33403-00be-4f87-bc12-a2ac9badee9b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4883f9a9-6553-4e06-ad52-ffff7ea9cd27"
        },
        "item": {
          "id": "240b9a24-2eec-446a-b53e-1ed38cae42a5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b6de0094-2c19-4f67-99f4-5f5f50345c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088ac21f-c7c7-44fa-9e3f-a3d2457abc58",
        "cursor": {
          "ref": "e193211c-decf-43dc-a2a8-27588f396cf1",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "940dc900-87c8-4967-a710-e385ee4d6267"
        },
        "item": {
          "id": "088ac21f-c7c7-44fa-9e3f-a3d2457abc58",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6acab4a7-03e3-4c83-bd98-3e2a3bbb2601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c076a117-5b58-403f-b39a-a9f2c3821ef2",
        "cursor": {
          "ref": "a0fb0b89-8809-4f42-b991-993901d8d846",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "57af7c44-0bce-4848-9b89-5eb03255907c"
        },
        "item": {
          "id": "c076a117-5b58-403f-b39a-a9f2c3821ef2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e36b616b-dd26-4e3e-8dbd-e1f48a00b7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864188f4-c17a-4ff2-a86b-493fe7521212",
        "cursor": {
          "ref": "b5162f82-bfbf-4000-8f5f-40da10b1736f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "830e2b4b-2b84-411a-8d85-b621455c4bd3"
        },
        "item": {
          "id": "864188f4-c17a-4ff2-a86b-493fe7521212",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d7d9ac61-a6b9-46b4-96f7-51cd06890234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1da8fe6-472c-4704-959b-4b33e98ebccf",
        "cursor": {
          "ref": "445dced2-b585-41d3-aaa9-6fee65c0d322",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ed75df41-9fd4-49a5-8489-42904ba15fb5"
        },
        "item": {
          "id": "b1da8fe6-472c-4704-959b-4b33e98ebccf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "33a220e3-cdba-4260-a86c-5444c8e0be87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deb168e-be21-479b-ba2d-44c7699869ac",
        "cursor": {
          "ref": "4c53e1b4-5e92-45f8-a08a-6cc9689a05ef",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "173d7a0c-f617-46af-bdde-16941326ffb5"
        },
        "item": {
          "id": "5deb168e-be21-479b-ba2d-44c7699869ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6179d627-35a1-4d1a-98f3-7592fb7e6c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd58e0f-01f2-429d-abf6-3af0dc503e91",
        "cursor": {
          "ref": "cd0d314c-8242-4316-82ac-9e5146ba8369",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4c5dac5f-4cba-4f74-910e-ee5d88be21db"
        },
        "item": {
          "id": "3dd58e0f-01f2-429d-abf6-3af0dc503e91",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "33342d97-82ff-4518-b487-e61f43727bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4655d978-7528-4eb2-ad8e-370f1131b271",
        "cursor": {
          "ref": "cbcf49cf-79c0-4cd1-bc57-6932b6d50d16",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "27c4f74a-7b21-4573-acf2-6745562fb73b"
        },
        "item": {
          "id": "4655d978-7528-4eb2-ad8e-370f1131b271",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "181aebfc-02df-4136-b062-4cf9d4d9df7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27233531-20c4-490c-ac73-796dc469697b",
        "cursor": {
          "ref": "237c6110-e952-4c76-969d-85630cb66e7d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "96cef938-b36a-4ef2-a949-dff88963dde1"
        },
        "item": {
          "id": "27233531-20c4-490c-ac73-796dc469697b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b19cc25d-0a4b-483d-bff3-2a84933c5683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb701e43-9d98-4326-a309-d67bb3b6d32f",
        "cursor": {
          "ref": "d8af870b-4661-48b9-9d72-bf3fdae9a7f5",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "19bdd56b-9d81-467a-a2c8-55c8dde67496"
        },
        "item": {
          "id": "eb701e43-9d98-4326-a309-d67bb3b6d32f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c6f7f27-d431-4c9a-97e3-9a18ba3d61ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3baeaed1-ab22-4ec4-bd6a-fd85c7cf439d",
        "cursor": {
          "ref": "07b13ea0-1b84-4995-abb4-ab3798c58b53",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a2c3becc-54c2-4488-938d-6feef438702c"
        },
        "item": {
          "id": "3baeaed1-ab22-4ec4-bd6a-fd85c7cf439d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "39cebc0d-7b01-4312-b197-1ec63ba72a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5391869-f991-4fb3-9e68-067e76b37d07",
        "cursor": {
          "ref": "88ddfe5e-dec4-4509-bb2a-ff52e4b8ecda",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ded61f9f-bf3c-45a6-b690-bb55465376d8"
        },
        "item": {
          "id": "d5391869-f991-4fb3-9e68-067e76b37d07",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c9f7da40-981e-40cc-9d9b-aca31120ee4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f18369-9af3-440b-8208-6d9cda0f9550",
        "cursor": {
          "ref": "d015347d-9c26-465c-ba80-146a06767b1f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "78ff1353-0004-4290-8aa5-ca3dc7a1f1c3"
        },
        "item": {
          "id": "22f18369-9af3-440b-8208-6d9cda0f9550",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6cf95d0e-bd68-4f6e-9590-4e4f12926a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0e7817-9641-4883-ad89-afaf38546bd4",
        "cursor": {
          "ref": "b2b01d99-e132-47c0-890c-e6112d016aea",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0f479d8f-4512-404a-a722-3ad6df8376dd"
        },
        "item": {
          "id": "3e0e7817-9641-4883-ad89-afaf38546bd4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f3fb7dac-f1e4-45f4-b121-ab47ce713e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830c4a5d-8381-441f-8290-a45bde7408cc",
        "cursor": {
          "ref": "aad3e0d3-ff1c-4f1c-abe5-ade96922a8b5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a2cc05a3-d218-497b-9e1e-5d11fca7c2fe"
        },
        "item": {
          "id": "830c4a5d-8381-441f-8290-a45bde7408cc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7034b4cc-2eda-4f99-8248-36fad0a0d03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845c565c-f631-4b57-a574-ae6353c05e18",
        "cursor": {
          "ref": "a3171c34-39b8-43cf-9ba7-83757aed7fbb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fd0d84a5-9c31-4450-a76b-9263fea44cca"
        },
        "item": {
          "id": "845c565c-f631-4b57-a574-ae6353c05e18",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d0fcabe7-a847-4a5c-a3f5-f8026a8c5cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8099b27d-a2ee-4d73-b0c0-c344e99e4cf6",
        "cursor": {
          "ref": "7b91b0c5-a57b-47ec-a097-d8bb738f1f50",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a22dddd1-7b6d-4a8f-9227-e6a2dc6d8fc0"
        },
        "item": {
          "id": "8099b27d-a2ee-4d73-b0c0-c344e99e4cf6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9aedb4f8-b08f-44b7-b532-1f0d342ec2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fb9048-3132-4e5e-bd3c-6139eebe94fe",
        "cursor": {
          "ref": "fd45d10f-aede-411c-aa68-ecd762e92e6e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d283c467-555f-4ce7-ac94-fc5080f403b1"
        },
        "item": {
          "id": "e7fb9048-3132-4e5e-bd3c-6139eebe94fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "97a7bd57-0d8d-47b0-a7b5-18a00778160a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98f39b0-860a-42f8-bd2d-cd97375566fa",
        "cursor": {
          "ref": "f98b78ab-6b5b-4397-8079-e2712f1814c6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9f699fa0-e3e8-49bd-bcf8-d4f9dbce657b"
        },
        "item": {
          "id": "a98f39b0-860a-42f8-bd2d-cd97375566fa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2485a1cc-21de-4fcd-8bba-d23bfdd74c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e08b0e3-3288-4579-bf69-5e5e561bc913",
        "cursor": {
          "ref": "0dc76942-ce6c-4df3-b520-923b9ab049fc",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "79fc2646-844c-4ff4-9354-8bc7022394df"
        },
        "item": {
          "id": "5e08b0e3-3288-4579-bf69-5e5e561bc913",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc886f8f-62eb-4463-b0db-a071c21df064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffecc037-b40a-418d-88a7-c6fb6bb42065",
        "cursor": {
          "ref": "c22fec53-bba5-407c-9f95-54f9b42015e3",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d0d56ade-34d3-42f7-9169-105f7d589356"
        },
        "item": {
          "id": "ffecc037-b40a-418d-88a7-c6fb6bb42065",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "41b49280-b15f-48ba-9e5f-c7b6291601fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64573c2f-1b0c-4c6f-9c6f-4929449fc411",
        "cursor": {
          "ref": "50e46169-8281-4260-9cba-22e297e7f8e5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bd0af4ef-1aa1-4a02-ab2e-622eedd2c6e3"
        },
        "item": {
          "id": "64573c2f-1b0c-4c6f-9c6f-4929449fc411",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "829edef8-f7fa-4e4a-b782-ba29041e81e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21babc98-8bda-4a51-976c-41b22d26e049",
        "cursor": {
          "ref": "4b9bcf02-abf6-4bfd-bc59-41c1823fdeb1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3ff6e8c0-6332-43a5-87aa-04ecc109d569"
        },
        "item": {
          "id": "21babc98-8bda-4a51-976c-41b22d26e049",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6b658540-1fce-4c88-9d6b-bd77c6e56f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb1c5c2-c1bd-48a6-b7fb-d338ec0cfe71",
        "cursor": {
          "ref": "e643f1df-497b-44ba-a6e9-da38240dbb55",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "96ba2ef6-258a-4276-ae79-57940fd544d8"
        },
        "item": {
          "id": "feb1c5c2-c1bd-48a6-b7fb-d338ec0cfe71",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2f620fbd-01ec-4066-862e-499010af8e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba1c480-3021-4aa1-9210-941c7ca59fed",
        "cursor": {
          "ref": "ed799b68-d6f0-44d8-97f0-ef6c58ee478f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9149969e-76f6-42ad-b61e-d74d3c610608"
        },
        "item": {
          "id": "2ba1c480-3021-4aa1-9210-941c7ca59fed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "57399176-91be-4014-93b4-4d1ca415bde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d13ee7-b003-47f2-8789-903819538720",
        "cursor": {
          "ref": "ea59b063-bc9e-475b-a430-35528cdfee5e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "80e095ca-f86a-40b5-bbcd-c47c7d954764"
        },
        "item": {
          "id": "b7d13ee7-b003-47f2-8789-903819538720",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1a40679c-1f3a-4b42-b309-e0fe398f1097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8decac-296e-43f0-b171-cf355cabfaa6",
        "cursor": {
          "ref": "92ee1aeb-36a2-40bb-bd27-388252e98f59",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9410c3a2-6a98-4797-ba05-22f00d453a87"
        },
        "item": {
          "id": "9b8decac-296e-43f0-b171-cf355cabfaa6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f8eb901d-fd54-4041-a5a9-8b2ac40a93e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561acc4c-7aab-41bf-a3ba-6098f3a0d11e",
        "cursor": {
          "ref": "bc753e69-3f1b-4b6a-8bf7-ffa09d0df71b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "134b1c5a-5067-439a-8656-c4dcb411f92f"
        },
        "item": {
          "id": "561acc4c-7aab-41bf-a3ba-6098f3a0d11e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d21e8794-f4e3-441f-8b2f-ce64f55fc65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7019630b-f0b1-4a8a-b212-1aa40dffd8eb",
        "cursor": {
          "ref": "54e57ae9-b4ee-41fd-992b-98cf70a8f588",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "efe3d680-42ab-4e50-a288-dd5ae2a755c5"
        },
        "item": {
          "id": "7019630b-f0b1-4a8a-b212-1aa40dffd8eb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "63c0f706-b909-4398-8d36-ffc670057413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7d73cb-5c15-433d-94f6-89f4dea97921",
        "cursor": {
          "ref": "9b240181-f373-45e3-b091-bf678d394dad",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2e2d08f8-9167-4a9c-93f4-d7c099a0a08e"
        },
        "item": {
          "id": "1c7d73cb-5c15-433d-94f6-89f4dea97921",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6ed896dd-2d6b-4e25-86a0-f53c4dc86739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37c55b7-942c-44f5-aa59-86a8619675d6",
        "cursor": {
          "ref": "b2e747e9-2087-43c8-ba46-37cdb30698c4",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9fe1ea1c-3e76-45d3-8ba7-b5679b0da215"
        },
        "item": {
          "id": "e37c55b7-942c-44f5-aa59-86a8619675d6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8fd38bde-7513-4b34-bc45-f5cbd321d1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904bb4a7-396f-4c95-b16c-39a26cfaaaee",
        "cursor": {
          "ref": "802052e4-d396-42f1-b8ab-33bdcabcdfeb",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5a9af205-9e37-4657-982e-6ef49edb2894"
        },
        "item": {
          "id": "904bb4a7-396f-4c95-b16c-39a26cfaaaee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "edb74433-6694-485d-954c-bdbaed9ade66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cdb740-2e95-4dfa-b293-6b04be1b26bd",
        "cursor": {
          "ref": "8aec823c-6c13-47e5-989f-35f905dd92de",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "80c3f5aa-a813-4af6-9b59-00828b4ea854"
        },
        "item": {
          "id": "c9cdb740-2e95-4dfa-b293-6b04be1b26bd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e07b8b2f-b9ea-4d72-8bb4-d5856066532f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3719f07-3b5e-425e-b0b2-d64ba6681c59",
        "cursor": {
          "ref": "88b74284-583b-44b7-b83e-eeda9e57618b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2c363c43-aa8d-4265-98cc-1bf9148cf02e"
        },
        "item": {
          "id": "e3719f07-3b5e-425e-b0b2-d64ba6681c59",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "19c7d0ff-7394-4d1f-8e16-b0a8927ef637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a94e5a-5424-4bfa-b50d-591c111ff15c",
        "cursor": {
          "ref": "9fe5abd6-d8af-4204-92b6-4d55b2449075",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6a1d254f-ca4a-4ba4-8331-1564c8cd9dc0"
        },
        "item": {
          "id": "a6a94e5a-5424-4bfa-b50d-591c111ff15c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2eb85222-65ed-422e-9551-45d279909c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069de737-78a4-4d9d-a778-f0e31f5d34ab",
        "cursor": {
          "ref": "c4892d41-fd41-4ca7-bda6-aa4a1fc283fa",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bf0be454-2c6c-4e88-a227-8ec062643e94"
        },
        "item": {
          "id": "069de737-78a4-4d9d-a778-f0e31f5d34ab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "632a907f-1024-4513-b509-734cba76a452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bb670f-3c51-4645-b498-0308a6275623",
        "cursor": {
          "ref": "df01b08a-d0be-48f9-bd01-ff2da492a571",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8f85791d-273f-436c-83af-97580b5b02a8"
        },
        "item": {
          "id": "64bb670f-3c51-4645-b498-0308a6275623",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5c5faadb-7ec5-427b-ad73-aef8b9702b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c4100c-a197-4383-82a9-6c347b9bbb33",
        "cursor": {
          "ref": "e5b1287d-9fe8-4f06-b061-806f524515c0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4c19cb5c-5df5-4695-976e-7a1cd370b5e6"
        },
        "item": {
          "id": "d5c4100c-a197-4383-82a9-6c347b9bbb33",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4da03696-48e2-4f32-8bb7-4c4234593f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167bc607-26ae-4da2-8d16-0b256d1693fb",
        "cursor": {
          "ref": "ccd941b3-8ad5-4606-84dc-70545924275c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b4758df6-49e9-43d7-aed7-26408c2796bf"
        },
        "item": {
          "id": "167bc607-26ae-4da2-8d16-0b256d1693fb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cbbb7f43-3014-4435-b2d8-94c881cff971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbbc536-25ee-4872-a25c-c836400ac061",
        "cursor": {
          "ref": "c0c39456-b294-4c3d-9e57-dfb1d330f345",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c472dacf-0194-49c3-8ebe-a107a7778c27"
        },
        "item": {
          "id": "ccbbc536-25ee-4872-a25c-c836400ac061",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c81fb8a2-03d6-44b5-bf3c-f0fdbf2d8db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8292c9-d4dd-4bb7-b5d8-b4cafc936b1c",
        "cursor": {
          "ref": "5bdf42f0-18ce-4312-9dff-0b6bf7e2d16d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fa33d00a-be67-49df-83f2-a3a66ec788f4"
        },
        "item": {
          "id": "0f8292c9-d4dd-4bb7-b5d8-b4cafc936b1c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "176afbb9-6d61-448f-9a43-5039b80616c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d795ab-8b39-4906-bcfb-c93b89aa5e35",
        "cursor": {
          "ref": "223a37ef-06ed-46dd-aef2-94f485b85ab1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "da346e24-7686-42ed-9fc2-0a2ea00ffe24"
        },
        "item": {
          "id": "38d795ab-8b39-4906-bcfb-c93b89aa5e35",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f0169606-1b18-438c-b6d9-0aa7e308a366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60df4d64-a3b2-41f6-a58a-f4f98b70bf65",
        "cursor": {
          "ref": "4ad9d09d-aaf3-4d3c-9c23-02104e039df0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8bf82398-c5b1-4eab-a880-c950f6a9b8bb"
        },
        "item": {
          "id": "60df4d64-a3b2-41f6-a58a-f4f98b70bf65",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "25620f10-012e-4ec5-b48a-ebe862c8c3a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdb1c6f-0f9b-48c3-b304-b032089609c2",
        "cursor": {
          "ref": "42049432-b4eb-4780-9900-a91d1bfbccfa",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3da8f17d-eb1b-4d18-b144-f2525152b694"
        },
        "item": {
          "id": "1bdb1c6f-0f9b-48c3-b304-b032089609c2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f47d8fd7-ab1e-43fa-b9cc-213fb32b60fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fd0584-5e20-487b-b2e9-407dd0cf4707",
        "cursor": {
          "ref": "c3ebfbe5-f332-4bf3-ab88-938fa95a900c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aa6635c8-f454-4306-97bf-94bc28f7bd7d"
        },
        "item": {
          "id": "44fd0584-5e20-487b-b2e9-407dd0cf4707",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fc107157-3951-4389-b47f-835dccc8abed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daed2c16-b7f1-4a26-82aa-91adb4eb1edd",
        "cursor": {
          "ref": "6075d9f2-9a14-4ab7-8f92-bbac60ff94fc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4021cdc7-dc8b-413c-ae45-ea7f849f6887"
        },
        "item": {
          "id": "daed2c16-b7f1-4a26-82aa-91adb4eb1edd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "91a98d74-0012-4e0f-85e0-087ff46fd345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d653371e-708e-4f27-bacd-a28ef63dcdee",
        "cursor": {
          "ref": "de0d6390-ad30-4e3d-944d-227ab4c7e6a0",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "72ec96a0-40ef-4a0c-b330-a7c4d686a47f"
        },
        "item": {
          "id": "d653371e-708e-4f27-bacd-a28ef63dcdee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "33757f23-449c-474e-8c02-1d941ee0f889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa9ac97-2818-49d9-93b4-c31218c798c6",
        "cursor": {
          "ref": "f92f26a0-d5b6-4bb7-9be7-91125c1ecb1b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "67cbcc74-ceee-433b-9e71-bdbce009cf0a"
        },
        "item": {
          "id": "0aa9ac97-2818-49d9-93b4-c31218c798c6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "31cf13a3-e85a-4aac-9c12-c8f69c0b4170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c62a24b-6a3f-4728-91d5-5aef385674dd",
        "cursor": {
          "ref": "cff5c63f-165e-48e6-a9eb-97915a8331d1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f8b51e4d-1114-446e-aa5a-9509aa37b845"
        },
        "item": {
          "id": "0c62a24b-6a3f-4728-91d5-5aef385674dd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "93d3272f-1506-431e-8e01-f3216585c523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781621d8-ca3c-4b33-8722-34750d4b1c8c",
        "cursor": {
          "ref": "f74e3a2e-5ddb-4246-8584-416717f24c5a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bd0148a4-07a8-4f28-85d2-5880293f000f"
        },
        "item": {
          "id": "781621d8-ca3c-4b33-8722-34750d4b1c8c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1212fd5d-8f54-4c19-b07a-e8ca97d239ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2496f1ca-24b3-413d-8a7e-bc39b9c5fd42",
        "cursor": {
          "ref": "7e220b0a-f472-4f12-baab-cc5b21533a63",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2486811e-7734-464e-bc81-7aa78241b1b5"
        },
        "item": {
          "id": "2496f1ca-24b3-413d-8a7e-bc39b9c5fd42",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab339f3a-b2a0-4a55-a0ea-a988e0bee660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f7e337-cdff-417f-9375-0d3cf38a2936",
        "cursor": {
          "ref": "6fd5c470-8425-421d-af1c-1b06fadb1159",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "07935255-eeaa-457d-8208-c1c29ddb3dc7"
        },
        "item": {
          "id": "66f7e337-cdff-417f-9375-0d3cf38a2936",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c9ae6e27-361f-4c18-9774-98a9b7fb9852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0ee4c8-a3fb-4805-9d88-4936b195829d",
        "cursor": {
          "ref": "7d4c3976-b31a-4b97-b93e-d5236f5de152",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "20102639-f9b1-49e5-bd2d-53f544f812eb"
        },
        "item": {
          "id": "ac0ee4c8-a3fb-4805-9d88-4936b195829d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "879a8436-ed90-4a06-b208-38970f017ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ade15b1-1d23-4351-9511-4466f7736f17",
        "cursor": {
          "ref": "59dce1cc-c915-46b0-a96d-308b8e28d794",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "93a01fc2-2544-463d-b3e4-310f9ccdb4e0"
        },
        "item": {
          "id": "4ade15b1-1d23-4351-9511-4466f7736f17",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3c913b06-0b2b-437e-9f28-83bc4793cd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca68b8e-9980-4ca1-a54e-126c752cb8d5",
        "cursor": {
          "ref": "fe47e344-5b89-4b3a-a80d-1e072dd802f7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "20b333dd-4c7f-4f67-bf31-ed2578e30a75"
        },
        "item": {
          "id": "0ca68b8e-9980-4ca1-a54e-126c752cb8d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1a8d6a4b-add7-419b-adba-94ddd66d7670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4d986a-f293-4a3f-998a-d90f8a5e9815",
        "cursor": {
          "ref": "9341d7b9-9e13-45da-b070-9523a86f9721",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a588e35f-8707-40aa-9531-839879ae6e26"
        },
        "item": {
          "id": "1c4d986a-f293-4a3f-998a-d90f8a5e9815",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "13900143-e763-4135-a3b7-6035c8582408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c7fd6d-a204-4b83-9eeb-642a638e5c01",
        "cursor": {
          "ref": "d933c565-3118-40f8-afb9-b016e7c5ea64",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "abc83ef7-086d-4b4b-8fa5-8812d76cd854"
        },
        "item": {
          "id": "05c7fd6d-a204-4b83-9eeb-642a638e5c01",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d8b7e023-e375-4552-bccb-623342fcc8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b66611-d62f-4f74-b26c-b9ba9f6a312c",
        "cursor": {
          "ref": "c254b0b7-414b-4f92-b729-de7b7b57995d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "31326eb2-9cfe-4a21-9144-f44c86a0a9a1"
        },
        "item": {
          "id": "47b66611-d62f-4f74-b26c-b9ba9f6a312c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1de8f357-d4a8-44a3-8e26-53e2556afbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56a88a9-7fcd-467b-ab4f-21cfc0c27166",
        "cursor": {
          "ref": "d60a44c4-445e-4242-9449-542e77355dc9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e0f08b46-8307-4036-b437-05b7b2077ced"
        },
        "item": {
          "id": "c56a88a9-7fcd-467b-ab4f-21cfc0c27166",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7683a614-50b0-48b1-a666-f1ae393418a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb1c5df-1a02-4dc7-a3ca-d4a504c3780a",
        "cursor": {
          "ref": "95133ed9-cae0-4f98-b67d-14cea086d516",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "829d4591-3a10-4e92-8caf-f0ac0f29c098"
        },
        "item": {
          "id": "edb1c5df-1a02-4dc7-a3ca-d4a504c3780a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f02e8e8e-9d52-4b27-bc0f-0f2abcded9f5",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "e067c012-43dc-47a8-a857-420ce3388446",
        "cursor": {
          "ref": "c08a691c-4203-4f3e-87e4-6eff695dfa75",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b76d5c8c-a3fa-430c-b03d-9c092061a247"
        },
        "item": {
          "id": "e067c012-43dc-47a8-a857-420ce3388446",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2bba2547-1cbd-4eb6-94a5-30710166a237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4ea73d-d8ca-43ad-8ae9-ce82b49bb3c3",
        "cursor": {
          "ref": "07fa3a41-2b3b-4589-93ff-10310f22fd7d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f91253cd-f699-4830-b509-0e83845f0b4f"
        },
        "item": {
          "id": "dd4ea73d-d8ca-43ad-8ae9-ce82b49bb3c3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8c6e54fb-2272-48cc-b9b7-99eeae62e24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad91fc0-c47d-4809-b0b1-a93a9c8eb20e",
        "cursor": {
          "ref": "78058859-afaa-4e84-b252-84e33f0f1a6d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "05b694a0-8b62-44f0-9e1a-544710d0e0dc"
        },
        "item": {
          "id": "6ad91fc0-c47d-4809-b0b1-a93a9c8eb20e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "96f650f3-e961-4e93-8117-d700d9b235a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f514fdc-2453-4718-90bb-95a6ac041676",
        "cursor": {
          "ref": "559871a4-37f4-4cca-bbbe-ebaac2865b5f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "241e3b19-ce1e-4ba6-b6ae-c8fde4372626"
        },
        "item": {
          "id": "1f514fdc-2453-4718-90bb-95a6ac041676",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fc4a2fe6-1a11-4ae4-be26-97047637d4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e08458e-02ea-4a2f-818b-56a59bc61d57",
        "cursor": {
          "ref": "ced9927a-6d02-4ee3-ad7a-426b31b8d76e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "511450be-34ea-4316-a0e7-897c10feff34"
        },
        "item": {
          "id": "2e08458e-02ea-4a2f-818b-56a59bc61d57",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6430314a-1d28-4fae-95fe-ff214cca817d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5569830-d1a1-4fca-abff-3f2742e8f88c",
        "cursor": {
          "ref": "e46cea21-22e5-42d0-84d3-1c9cde6989e0",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d2744dc1-1463-4b1c-8a2e-d2ec3056f95a"
        },
        "item": {
          "id": "a5569830-d1a1-4fca-abff-3f2742e8f88c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c9491516-7154-4df9-ae04-d2c8cbb5686c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1c0fa3-968d-4461-b897-70c764e8799d",
        "cursor": {
          "ref": "383f2fe7-1572-4192-a79d-5fb3c7516b74",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f7d3c228-bc0d-47da-9ff8-e34c97de8652"
        },
        "item": {
          "id": "2d1c0fa3-968d-4461-b897-70c764e8799d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f46b4fb-b596-49ed-89db-5235717e5bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b40c535-107a-4b6c-9497-af453a65d72a",
        "cursor": {
          "ref": "c49e068f-d320-4480-aa65-0f95cb0f7c55",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8b47121a-bdfd-4746-aac9-5cf58cb028d8"
        },
        "item": {
          "id": "1b40c535-107a-4b6c-9497-af453a65d72a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "89c7dac8-9740-417d-81ca-7afa39054676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f92fc8-b240-4b8d-97a8-a8a8860444c8",
        "cursor": {
          "ref": "9b6c8e79-731e-4648-ab45-49958f783bca",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ac03ab7f-c850-4c22-8eac-22a7a7aebe4c"
        },
        "item": {
          "id": "18f92fc8-b240-4b8d-97a8-a8a8860444c8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e1274d6c-8fa4-454d-87e7-1efae1f56452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfdd276-caf1-410d-956e-85fa2eb3dfea",
        "cursor": {
          "ref": "a1f22709-1a6f-4cfd-91fd-6ec86c37678b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4da7ec02-da8f-4fca-9c17-5c940db1293c"
        },
        "item": {
          "id": "7bfdd276-caf1-410d-956e-85fa2eb3dfea",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f5e4a8bd-eaf4-4dd5-bbf5-cc496c2edf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59446e7-3a95-4308-b66b-35f2442d228d",
        "cursor": {
          "ref": "41e6d1bb-00cc-4d94-b565-1a41cc0bc657",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7eaf3950-1261-4ea6-a392-ddadd56bac2d"
        },
        "item": {
          "id": "d59446e7-3a95-4308-b66b-35f2442d228d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "03388de1-18d9-45fc-8703-9f9b892547b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659ef999-b480-4d57-8497-e544b91b9dfd",
        "cursor": {
          "ref": "cd27a312-694e-4ae5-bae0-38a259b9bbb8",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b2b1d506-ad17-4faa-87c6-fcb57d9faf35"
        },
        "item": {
          "id": "659ef999-b480-4d57-8497-e544b91b9dfd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f35c3b9e-1465-4c06-a0cc-b4c766c1e47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae575e0-26e4-47a7-896d-df859a07128a",
        "cursor": {
          "ref": "78591d24-23ba-4801-9bd9-5c02651d8d1c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "678c6555-5c67-4351-a2dd-b6267181c181"
        },
        "item": {
          "id": "fae575e0-26e4-47a7-896d-df859a07128a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0f434d6d-66b1-488a-8218-4cfb22e334b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0774ab3a-efcd-4ea9-9706-8276c759c446",
        "cursor": {
          "ref": "b425f4be-1055-4b1b-92f5-040384c49cdd",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c32b883a-3830-4a57-bae3-01d34233e659"
        },
        "item": {
          "id": "0774ab3a-efcd-4ea9-9706-8276c759c446",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "16bde94b-284e-4efb-8e29-d790d39c8ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d69b480-0e61-4503-aba5-6fef9c792b5f",
        "cursor": {
          "ref": "a285cc28-fccb-4350-a75e-7cd5ed200991",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f3d26300-da74-4617-9c51-05d9bf222fce"
        },
        "item": {
          "id": "2d69b480-0e61-4503-aba5-6fef9c792b5f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0f3da063-68cd-4617-97b3-f5b1b07de7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d58fe40-2ede-4696-98b5-a742bc15bd60",
        "cursor": {
          "ref": "cf40ed17-cb03-4fee-8c53-f07b38f75f29",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c260423c-63c4-4394-9594-f135b5e7fd3e"
        },
        "item": {
          "id": "0d58fe40-2ede-4696-98b5-a742bc15bd60",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "70971b78-847e-4867-9b29-614a06faf083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed26699a-62e3-4a0e-afd2-9ef602265d10",
        "cursor": {
          "ref": "d2077198-ab37-43dd-8ed9-82a11bd7506b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8c8e3320-af1d-4eb0-987b-ca5bf0c6b11c"
        },
        "item": {
          "id": "ed26699a-62e3-4a0e-afd2-9ef602265d10",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f3b6e181-bd6b-474a-b6a6-01c602e39915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31dbc33-f9bc-4ddf-b3ed-41c0ec935d5a",
        "cursor": {
          "ref": "69960afe-0255-4192-9276-c90da35a1fa4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "72cd288c-918b-475d-bb14-aad131d569d9"
        },
        "item": {
          "id": "b31dbc33-f9bc-4ddf-b3ed-41c0ec935d5a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0e4a1c99-b58d-4e69-9478-40cc23994d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d04d88-ebf4-449d-b569-e75e3a5937ee",
        "cursor": {
          "ref": "0e1e1f6f-f614-4c3a-a6c1-8ac4c2962f4e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "74db4a4f-b873-4582-a923-8893df6a012a"
        },
        "item": {
          "id": "79d04d88-ebf4-449d-b569-e75e3a5937ee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ee72507a-318b-4608-aa5d-09d6b9945890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20129b3b-59e0-4980-8568-1808127f49fc",
        "cursor": {
          "ref": "7fdc5c10-d4b2-4dc2-b4b8-a562fd6b07dc",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6c7e921e-1e50-42e6-bd60-2a855a6ac7f6"
        },
        "item": {
          "id": "20129b3b-59e0-4980-8568-1808127f49fc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6b50c20d-7134-4dd9-86e4-5d7387045fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34f6cb1-e904-4c8f-8ea1-605de8b163a9",
        "cursor": {
          "ref": "d5da7530-dc1c-4af2-8778-ba074d57c9fa",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "af889c4c-e937-49c5-ac81-60331c6f5d79"
        },
        "item": {
          "id": "b34f6cb1-e904-4c8f-8ea1-605de8b163a9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "89cff8c4-d046-4c85-a229-57a6b0b1ae9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5aef857-a3b7-46d2-8de3-022a2206ec85",
        "cursor": {
          "ref": "6fbfb3f8-35c1-4d27-b7ea-c8c74a24ff7d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1ba0d8e0-7788-423f-ae85-969005f3a733"
        },
        "item": {
          "id": "e5aef857-a3b7-46d2-8de3-022a2206ec85",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "98ee75f0-dc7e-4a54-a9da-e336245b0321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1240ce51-f65e-409c-9d56-688a6a056593",
        "cursor": {
          "ref": "32dacaa7-7a38-4f29-9d4c-fa3016fb6c0b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cdbe7c74-44db-4db7-b584-1c26c906c387"
        },
        "item": {
          "id": "1240ce51-f65e-409c-9d56-688a6a056593",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e5931059-731e-457e-90ea-aa43e8e1f0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6e3de5-d4e4-47de-a1c7-65cd82729d0a",
        "cursor": {
          "ref": "a346b24e-cfa7-4ad8-92d1-53ef0267f41b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4bc7530a-3b1e-4f90-ba5a-878aa6c733db"
        },
        "item": {
          "id": "6c6e3de5-d4e4-47de-a1c7-65cd82729d0a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9b37bf82-91ff-463a-ad8c-f1f1e08eae50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9a70b3-7698-4013-b73c-7b3937de5514",
        "cursor": {
          "ref": "5ec20710-3348-4358-a54d-c6ebd130f2ae",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4c6525d5-bf74-41f3-bc8f-1a7caf34556b"
        },
        "item": {
          "id": "3d9a70b3-7698-4013-b73c-7b3937de5514",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1c01d92c-6117-4c6d-bcfa-4d988101c969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1351029-5473-4aba-8c00-68b54d078c16",
        "cursor": {
          "ref": "14eb4557-a057-48c3-949b-f7fd73dfa4af",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "de683d1f-af5d-4ad4-8439-a2fea47a10ae"
        },
        "item": {
          "id": "b1351029-5473-4aba-8c00-68b54d078c16",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f5e14204-5405-4f74-8629-f5e1c1ed1e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf35e2c9-b1b3-47ca-a6d0-cb233ef5d0d6",
        "cursor": {
          "ref": "c43230a1-1a02-4e5c-b5bb-964581fbe09d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4ba862cf-dea7-46ec-8c0a-6eac6b267d5f"
        },
        "item": {
          "id": "bf35e2c9-b1b3-47ca-a6d0-cb233ef5d0d6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "732393b3-95fc-4b41-8d0e-80439b943679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5060bef1-7a8e-4d8a-9257-a7eddb87d4f7",
        "cursor": {
          "ref": "c7a5dd9e-44f3-4491-98de-f8a684fc5952",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b0afb156-ee56-42a4-820e-508601ec37b2"
        },
        "item": {
          "id": "5060bef1-7a8e-4d8a-9257-a7eddb87d4f7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "912eb90e-f19a-40fe-8af6-794c3b39b918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4ca69b-487c-4660-9232-4bfd3a7067ec",
        "cursor": {
          "ref": "935aaa40-e707-4a61-be8b-c9135a462264",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7e3520bc-5268-4fff-977f-c58ade3599e3"
        },
        "item": {
          "id": "3f4ca69b-487c-4660-9232-4bfd3a7067ec",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1c982057-7577-4dba-a263-47c9c0b8fa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ae0535-c2f4-46b4-b58b-2cfd820d257e",
        "cursor": {
          "ref": "364e8f4a-a678-4336-bf79-115741001fd7",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "34f03438-9616-43c6-8cc7-50e37e1fc859"
        },
        "item": {
          "id": "04ae0535-c2f4-46b4-b58b-2cfd820d257e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "22fbeea2-5660-40ef-b13f-aca4f71838c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91c1266-e8d3-41db-801e-a4b86bf3443a",
        "cursor": {
          "ref": "46077ab8-6831-466b-b013-c6625ccb732d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "20d39703-f171-4d26-9526-8a27fe5457e4"
        },
        "item": {
          "id": "e91c1266-e8d3-41db-801e-a4b86bf3443a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8c68a333-c2a8-4914-a61f-58719958b14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26dd868-7ffd-4a0d-8718-0d72ec4f3cbb",
        "cursor": {
          "ref": "9afdb47a-fdda-4a48-b5f7-6e63907ee4e9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dc20b8f3-6e18-430f-b2aa-2b8469ad55fb"
        },
        "item": {
          "id": "e26dd868-7ffd-4a0d-8718-0d72ec4f3cbb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0e983e40-9604-4a69-84da-9f0a5445dc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be8c28f-cdcc-42fa-8820-96059e06889f",
        "cursor": {
          "ref": "6d24cfb6-9d88-41d9-8cc1-10e26ca581c7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "00972857-0841-474c-9fc7-5be390fa3890"
        },
        "item": {
          "id": "7be8c28f-cdcc-42fa-8820-96059e06889f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8e55944d-8623-4fa2-99eb-32728a17792e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66ffe8f-35ed-4031-8393-814f1ecb02d6",
        "cursor": {
          "ref": "1fa48638-97c1-48d7-af10-5703d5f9e630",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bdc99db0-4b1b-4d77-86ba-c2df45e33b50"
        },
        "item": {
          "id": "c66ffe8f-35ed-4031-8393-814f1ecb02d6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0f62fbea-7f67-406e-803f-8826391dd22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d233e7-703e-4927-ae71-1abd4f6cd378",
        "cursor": {
          "ref": "8a1e9410-5c2d-493d-aa6e-f889a79ba187",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7a5e3710-5fce-4b83-a7a5-7da43e1017a2"
        },
        "item": {
          "id": "d2d233e7-703e-4927-ae71-1abd4f6cd378",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7b36ffc5-bfd1-413d-9a9f-4dc807e5f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd2c69c-f08a-45a4-9e2b-9826f28544f6",
        "cursor": {
          "ref": "303f2113-a59a-4174-ac54-e715e620012f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9426b577-8fc6-4e70-a331-527ae0341097"
        },
        "item": {
          "id": "2fd2c69c-f08a-45a4-9e2b-9826f28544f6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0abedd32-e371-4f64-8e41-672629d92e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8c058d-d79a-4718-a664-df99a6b5ce3e",
        "cursor": {
          "ref": "5de3f298-ca14-4aad-a4e0-4c579e7cc60c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fe514dc9-2afd-4e83-afee-3dd2e315880a"
        },
        "item": {
          "id": "cb8c058d-d79a-4718-a664-df99a6b5ce3e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a9cb174a-6087-4c41-af66-023ef1b002b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2faef2-0027-46df-9a19-62e664b77531",
        "cursor": {
          "ref": "fb85e770-239e-42f3-99c9-2a201e31861f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "41eeb48a-996d-4471-b173-c10131457b84"
        },
        "item": {
          "id": "2d2faef2-0027-46df-9a19-62e664b77531",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c8d0d925-dc95-4607-80c5-8a0faef15790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c6df8d-d18e-4555-aa0a-6fa7508055fc",
        "cursor": {
          "ref": "203eab7c-7cf2-4e94-b38e-6faaca3e3b62",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "53ce16c6-182f-4196-af27-a7db09840e9c"
        },
        "item": {
          "id": "76c6df8d-d18e-4555-aa0a-6fa7508055fc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e6efdd64-a55e-44b7-bac7-a8d864011eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea67448-6daa-4cba-b677-45f3c91c65ad",
        "cursor": {
          "ref": "4ad6d22d-3054-42ac-a5f8-a7c2442b2c02",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c7635e28-6f8e-4c19-967d-db1ade827aec"
        },
        "item": {
          "id": "1ea67448-6daa-4cba-b677-45f3c91c65ad",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bf3e2832-f148-4db2-83d0-2f03dd67e88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0be55b-f789-4f42-9f21-0acf1eb8414e",
        "cursor": {
          "ref": "06ef666b-4383-4ce8-985e-97dcf3a62c81",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "854cf7e0-520c-4321-bff6-5c48325861ef"
        },
        "item": {
          "id": "ee0be55b-f789-4f42-9f21-0acf1eb8414e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "58d84622-22c6-48fd-8513-e69df7faa8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72aa853-2bbe-4e1c-8e14-db9fe348e8f6",
        "cursor": {
          "ref": "25cda2c7-8902-43f3-9cad-a91fdd5ae24d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fd22de23-7f3a-400c-8b50-9b95eeded71f"
        },
        "item": {
          "id": "e72aa853-2bbe-4e1c-8e14-db9fe348e8f6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d4a7df49-a47b-47f9-83f3-a533ca288f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca46e6e-039c-4678-a598-a320f9ae631a",
        "cursor": {
          "ref": "7be4ec06-7a73-4899-9346-9ac0b3edfe24",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0c2621a1-c3c8-44bc-a4c7-13981ecca6a9"
        },
        "item": {
          "id": "4ca46e6e-039c-4678-a598-a320f9ae631a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ba755d24-2ad9-47f0-95fe-b0729e893792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f84dd16-b044-4e9b-8392-ea8f73b4310d",
        "cursor": {
          "ref": "d76e1776-9693-4fe7-a329-dc0bed30c7ec",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e11ba2d7-3bbf-4658-9c14-21105bad2485"
        },
        "item": {
          "id": "0f84dd16-b044-4e9b-8392-ea8f73b4310d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5d4391c3-990e-4b89-bd87-e8b30c0d2019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f33174-8d41-48af-81de-d8b52bdbebb3",
        "cursor": {
          "ref": "56d97e8f-7fa5-49d0-ab66-d0ecd3788a15",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "112cbfab-1641-4ab4-95f4-9d8ae47cb599"
        },
        "item": {
          "id": "c2f33174-8d41-48af-81de-d8b52bdbebb3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "becb9788-d2b4-4939-8333-e97fea25c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521dd770-53a8-4107-b9ae-be8584e33eb6",
        "cursor": {
          "ref": "23dea200-fd68-432a-b004-3b789eeefec8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0342f875-5bd5-4f32-bf28-7b4832becb8c"
        },
        "item": {
          "id": "521dd770-53a8-4107-b9ae-be8584e33eb6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "36f948f6-44b5-4060-911b-d69133807471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34be3c2-6958-44f7-860d-24679bd85102",
        "cursor": {
          "ref": "72c2d2b1-39ea-4eb6-b32a-ded1d4df5346",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c6918030-a8da-4e8b-8551-ce326f012575"
        },
        "item": {
          "id": "b34be3c2-6958-44f7-860d-24679bd85102",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c70a7bc2-7227-433a-acb1-082268e6b8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b63aad-246e-45cb-9730-c0177a04c95e",
        "cursor": {
          "ref": "d26ebe17-4a88-45e6-b278-431de93cc6a8",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c5dd5dad-f013-462a-be8b-ea766fe3ee0c"
        },
        "item": {
          "id": "51b63aad-246e-45cb-9730-c0177a04c95e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d91213db-5939-4c59-89dc-6704a160b771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b4486d-8186-4d9c-bd43-dfa84acf1ba6",
        "cursor": {
          "ref": "8919816c-d083-4475-aaad-3eacbf6210d3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0f952bde-a1c7-4572-9906-811dae6bb676"
        },
        "item": {
          "id": "84b4486d-8186-4d9c-bd43-dfa84acf1ba6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8d347f9e-4630-47fc-8f17-41442b485178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba98e8d-08ff-4cde-b7ec-66ff73e89b48",
        "cursor": {
          "ref": "edfe10b9-33f1-463e-ae6e-59587799586b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0cfa0699-5d31-49a8-8c59-ea953fcc4f8b"
        },
        "item": {
          "id": "4ba98e8d-08ff-4cde-b7ec-66ff73e89b48",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8fc54773-376c-418d-a0a6-d1d8a35cc59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e38b1f-ecad-4605-9739-f82e75ed1d5f",
        "cursor": {
          "ref": "9e22f010-c89d-4264-bbff-b5561b9ea16a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "38b5bb86-c514-4b3c-8ed2-64734ecec69c"
        },
        "item": {
          "id": "b2e38b1f-ecad-4605-9739-f82e75ed1d5f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "df44f215-285c-453d-a9a3-92668ffb285c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728453ef-d3ab-4393-9a84-f18643349208",
        "cursor": {
          "ref": "6d275103-5d4d-4754-aa7e-8bb8a5cb783e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "35fd6c2f-e5d2-4f83-a629-4df5ff9f387c"
        },
        "item": {
          "id": "728453ef-d3ab-4393-9a84-f18643349208",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9e8ba0cb-b14c-404f-9c43-597747af4012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac014735-4f59-4659-87c9-0f150a89237b",
        "cursor": {
          "ref": "830e4496-67cb-47e6-966d-110fd408a64c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b99bdd62-149d-4d16-a8ff-56829bd44bf7"
        },
        "item": {
          "id": "ac014735-4f59-4659-87c9-0f150a89237b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b693c05d-d0d1-4c30-8f5e-fd9aa8d563df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e56b811-8b99-43da-9355-9627bbc512cf",
        "cursor": {
          "ref": "84fe2268-9530-4fe8-bd3b-2b6ef0f5861e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "121914ff-e9db-48f2-854d-080f2721aae2"
        },
        "item": {
          "id": "5e56b811-8b99-43da-9355-9627bbc512cf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5cbf1bff-cfc7-425c-8191-0a66d9c87401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49e4cf9-25ec-4c87-92e3-2060be55707c",
        "cursor": {
          "ref": "767945a6-f88a-4c33-88f9-bf93b5a7ff27",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4260b7e7-8b42-44f4-b028-ed7bf2683d34"
        },
        "item": {
          "id": "b49e4cf9-25ec-4c87-92e3-2060be55707c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1ca8552f-75e3-4554-8b3d-73c5675f4881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae709f33-fbb5-4c64-94cc-b26b669452d8",
        "cursor": {
          "ref": "a0762a84-1f25-4b3c-bf16-7af39a564516",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5248c89d-dd12-4cbb-9cc4-e40f53446b93"
        },
        "item": {
          "id": "ae709f33-fbb5-4c64-94cc-b26b669452d8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "56652201-57aa-430a-9d49-031fe048a959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790be763-c6ab-4000-a8f5-df3b24d807ef",
        "cursor": {
          "ref": "5e4c7ab2-2c20-482d-97d8-c4583aad3b36",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1302221e-ec8c-45de-be90-1b5c427ba2c4"
        },
        "item": {
          "id": "790be763-c6ab-4000-a8f5-df3b24d807ef",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "33f3d2c1-bd7b-4cb3-9c34-78c3b434da5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c007da-3ce3-40ca-9b29-3b63e65c0f1e",
        "cursor": {
          "ref": "b176f813-67e6-4bbb-83f9-c0e0bcc4be9d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "02f7911b-49fa-42e5-92be-a6bcf749adaf"
        },
        "item": {
          "id": "18c007da-3ce3-40ca-9b29-3b63e65c0f1e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "11c8f50f-2b4b-4f6e-8be0-e7955bfcb780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b12b7b-fef4-4059-b135-989c4614bfd8",
        "cursor": {
          "ref": "6fcce01e-2265-4281-915f-8acea138451b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d631dc4c-4c73-4990-a43b-25022e091114"
        },
        "item": {
          "id": "91b12b7b-fef4-4059-b135-989c4614bfd8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c02fba98-c9ee-4ab9-a5d5-da1e7ffcf26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc63ae1-21f9-414e-acf0-909cd95ff1ad",
        "cursor": {
          "ref": "19f1b89a-5f93-4f1a-9bff-013f0a7d4730",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a96ed193-c5a2-4362-ad71-99881f030e20"
        },
        "item": {
          "id": "2bc63ae1-21f9-414e-acf0-909cd95ff1ad",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0a721b68-e38d-4e1b-b7ca-c79fb81c8907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021320dc-584d-47ae-90fb-efe5948598d7",
        "cursor": {
          "ref": "1ff8e581-2737-41ae-9950-95425a054fb4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8843a4cb-7898-4967-9da4-e547eb9b449d"
        },
        "item": {
          "id": "021320dc-584d-47ae-90fb-efe5948598d7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2ba7b80f-c3f9-477b-a8b5-a45bd71dada1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc5b7b5-7023-4b84-befd-e7ba83704d26",
        "cursor": {
          "ref": "e063d793-6d8f-4d35-905f-1e39e09f5da9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "80de9a66-aa4f-4205-95a0-5a730af1bc5b"
        },
        "item": {
          "id": "3cc5b7b5-7023-4b84-befd-e7ba83704d26",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6046a36b-b059-43f3-bff0-dcfabec70b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28f13cc-d457-453a-af6c-360c9cfd71dd",
        "cursor": {
          "ref": "771cbd27-2768-4a12-95ff-c0b1bd7925a1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0fdc62e7-4e43-482e-8cea-af77ec69dd5f"
        },
        "item": {
          "id": "f28f13cc-d457-453a-af6c-360c9cfd71dd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d4f4c2b0-16e4-4868-a729-30c7b76824b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d5f5ea-7b87-4749-a736-a3d0d7961c5a",
        "cursor": {
          "ref": "2e5d15c4-6891-49d0-98e6-5a55c94632e6",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fb57f85d-8050-49dc-8d3c-152023fd8662"
        },
        "item": {
          "id": "92d5f5ea-7b87-4749-a736-a3d0d7961c5a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "307abd63-28e9-4cd8-8e21-e0683047fe20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbf5792-a674-45d0-b875-bf7a2eb9cb71",
        "cursor": {
          "ref": "52c79c0f-1b9c-492f-bb18-b3db71ca9680",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fe0aa147-60e2-4c9d-be64-49b1eb98faf6"
        },
        "item": {
          "id": "dfbf5792-a674-45d0-b875-bf7a2eb9cb71",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2068a805-27e1-4d03-8c93-5724fe468bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a093ea29-f643-4f3d-94ec-de7a53ac03ae",
        "cursor": {
          "ref": "aa40caae-4f80-4af6-9e48-e0643c70c336",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5cb19cdd-c7cd-4c7b-8e6b-9d044da42e6e"
        },
        "item": {
          "id": "a093ea29-f643-4f3d-94ec-de7a53ac03ae",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0bf2f6b0-e765-4665-8684-52eaf978deae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c9f298-8740-4269-8f5c-a12642d3e305",
        "cursor": {
          "ref": "e71d45c2-2fa2-4816-8dbb-c77af380dfde",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c0ea6052-e9f8-4f19-975c-e4e460f3069a"
        },
        "item": {
          "id": "83c9f298-8740-4269-8f5c-a12642d3e305",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2f953284-7a33-4fde-b47f-0e906355e4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69f6ef3-672a-4545-b732-dd3987eb58e1",
        "cursor": {
          "ref": "7c07fa0a-0d17-4796-ab26-664b8dfbcf28",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7f07a897-e5ea-4554-9a47-b94377329d23"
        },
        "item": {
          "id": "b69f6ef3-672a-4545-b732-dd3987eb58e1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9615929c-1499-43cc-ae68-e714798f1ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c8467c-8d78-4835-ada6-0dfb742b940a",
        "cursor": {
          "ref": "73892a99-7117-4a8c-afcf-f33f035fa098",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8026af92-ef2f-4259-b0e6-a4c935615652"
        },
        "item": {
          "id": "c4c8467c-8d78-4835-ada6-0dfb742b940a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "98dc4147-9841-41c2-ba98-ebb7a2dd0c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5553df0c-838a-43f8-a1c9-d04ae3a527d1",
        "cursor": {
          "ref": "e3dc8efa-edaa-4264-9f9f-a126018d6713",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8790301b-c299-44e5-95a3-969d99afebea"
        },
        "item": {
          "id": "5553df0c-838a-43f8-a1c9-d04ae3a527d1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8c2896a9-4304-4c23-bf56-0b124c197a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceabd8e3-5098-4620-9e59-6ef081a174f5",
        "cursor": {
          "ref": "7475da99-c547-4283-806c-b68b90690d1d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6b106495-e378-482f-b093-2d9d3ae95ece"
        },
        "item": {
          "id": "ceabd8e3-5098-4620-9e59-6ef081a174f5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b946a863-916c-41ca-9d02-21b8fa59519a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc50697-b3df-48de-8b1d-b6e878ea2319",
        "cursor": {
          "ref": "faece1aa-dd7c-4547-8544-6166d675f2b4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "809da42d-96b6-4038-b4ef-1c1104744951"
        },
        "item": {
          "id": "7cc50697-b3df-48de-8b1d-b6e878ea2319",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7523d455-73eb-4299-aa91-23545a6a81a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036d01dd-f6c0-4ea3-a76a-2e14541bb98b",
        "cursor": {
          "ref": "04e91fe8-68b8-424d-b789-9f129be648f5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a14bf3e6-0fc1-48ad-a394-4248c253672b"
        },
        "item": {
          "id": "036d01dd-f6c0-4ea3-a76a-2e14541bb98b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a8a9d18-e509-4701-af39-e6f916b14445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb701fa6-7a75-4ce5-8598-86ed2e5e8326",
        "cursor": {
          "ref": "ea0750c8-65f7-44ce-8c37-363365e558a7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "13ec91e7-9b82-4735-b5b9-d3ab52f18101"
        },
        "item": {
          "id": "bb701fa6-7a75-4ce5-8598-86ed2e5e8326",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "245261f1-4223-4347-8dd0-fba661b1dc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78622a6d-d9a8-4ac5-b401-283151c2da93",
        "cursor": {
          "ref": "6ef65d58-c636-476d-b8c9-e5b0f0a69cee",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0943bd90-998d-497d-91fd-50e149634389"
        },
        "item": {
          "id": "78622a6d-d9a8-4ac5-b401-283151c2da93",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "90ac45ac-628b-426b-998e-259197419924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc35ee3-ab4a-49e7-8351-7df517dff191",
        "cursor": {
          "ref": "60eb8104-ff4d-4a37-bab9-f3eb328edd7d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7e262520-0746-490a-81f5-1c691274f359"
        },
        "item": {
          "id": "0dc35ee3-ab4a-49e7-8351-7df517dff191",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9304a1a9-2380-4aaa-8dc9-c4e459f916b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdcac40-fdcb-4fc1-a47d-00287e542bee",
        "cursor": {
          "ref": "dfa6fe3c-8de3-42b9-8532-796a3bded53c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c07ecbdb-5978-4f0e-b828-ee4b118ddf92"
        },
        "item": {
          "id": "1cdcac40-fdcb-4fc1-a47d-00287e542bee",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f87032e9-2aae-4987-a66e-67b06ff04a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eed8a65-03eb-43c1-a191-850b0ec3b2be",
        "cursor": {
          "ref": "fe2b0076-f375-4069-b89d-a82ef19b77de",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6c487fc8-8316-4c0c-9ca4-ee0881bdf234"
        },
        "item": {
          "id": "3eed8a65-03eb-43c1-a191-850b0ec3b2be",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8cf0c837-c1e5-4a75-9f1c-c5aa32b1edd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef6dca1-6dbe-4a59-a730-03cb1fe0ea27",
        "cursor": {
          "ref": "e6d44d86-bd3d-402b-bf5e-5b7efb0846a2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "85f4fd9f-a408-4b46-a343-407af6c83045"
        },
        "item": {
          "id": "4ef6dca1-6dbe-4a59-a730-03cb1fe0ea27",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c7277170-a268-4783-89e3-91714ac69e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a8a62-8c96-491c-a9d8-9a095cfc4ca3",
        "cursor": {
          "ref": "b0948f2e-239a-4938-923d-b9e2b910e3c7",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d96f37e1-7fd8-4f70-a424-363fc0e52105"
        },
        "item": {
          "id": "404a8a62-8c96-491c-a9d8-9a095cfc4ca3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a9420d61-d67b-4499-8aaf-a8fbc2a4e718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f337e6d5-e703-4e14-a222-605ff2332c37",
        "cursor": {
          "ref": "62c3cdd0-4864-4ad9-9f2b-5da836389345",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3dd815e5-ef79-4b12-9df2-e00504d49317"
        },
        "item": {
          "id": "f337e6d5-e703-4e14-a222-605ff2332c37",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4c85d8a7-38ba-4579-b445-c525b87b1b5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a228b88-b9d6-49c6-a89b-2821605e0549",
        "cursor": {
          "ref": "d4d43338-9c22-4c29-8aeb-abd45689ccc1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fbe6c72d-4baf-4b7f-9ea0-83384c9aca00"
        },
        "item": {
          "id": "9a228b88-b9d6-49c6-a89b-2821605e0549",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "45c5fadd-41c9-4b23-9c6a-4a054bd8593a",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "50641110-4492-46b2-8444-a0232438f132",
        "cursor": {
          "ref": "12ccf983-f932-4bd8-ac53-e0874c9b6697",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6145ada0-f283-4285-afd7-abf8b13d76a2"
        },
        "item": {
          "id": "50641110-4492-46b2-8444-a0232438f132",
          "name": "credentials_verify"
        },
        "response": {
          "id": "32d5b918-2083-47bc-a4a9-55669914120e",
          "status": "OK",
          "code": 200,
          "responseTime": 2272,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "618e311f-89fe-4c1b-9559-a4d23d841010",
        "cursor": {
          "ref": "90de4a0f-c22e-466d-ae20-7ca8f394069c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "146b322c-3568-4e2d-a1bc-c61315cb99d4"
        },
        "item": {
          "id": "618e311f-89fe-4c1b-9559-a4d23d841010",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "50e287da-f8bc-4cf4-a380-d797e26d9798",
          "status": "OK",
          "code": 200,
          "responseTime": 2593,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9088227b-4873-4349-abab-5e5cca92c45d",
        "cursor": {
          "ref": "15427e35-0ac2-4e4f-bff0-c2e0506a9ec6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7e3f29af-614d-489c-9955-afc1fe26a137"
        },
        "item": {
          "id": "9088227b-4873-4349-abab-5e5cca92c45d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28a96b91-0662-422e-975a-bca6cf9898fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9088227b-4873-4349-abab-5e5cca92c45d",
        "cursor": {
          "ref": "15427e35-0ac2-4e4f-bff0-c2e0506a9ec6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7e3f29af-614d-489c-9955-afc1fe26a137"
        },
        "item": {
          "id": "9088227b-4873-4349-abab-5e5cca92c45d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28a96b91-0662-422e-975a-bca6cf9898fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b917dce-ae09-41cc-a456-5d07036fd352",
        "cursor": {
          "ref": "bd6a356b-9a3c-40b4-ae24-3df5565146a0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "34acac18-2d86-40ef-bfad-60d661e84c2e"
        },
        "item": {
          "id": "4b917dce-ae09-41cc-a456-5d07036fd352",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0f7b23f1-53b0-4c52-9a33-241047864df6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1c467d-5282-42ad-8ac0-8f75b72633c9",
        "cursor": {
          "ref": "739a60d0-9679-4c29-a724-0ed19dfb61b3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ec971bfb-410c-4497-8844-9c139752b28a"
        },
        "item": {
          "id": "3c1c467d-5282-42ad-8ac0-8f75b72633c9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6e07050d-b842-4930-a3b2-8f4b3872739a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}