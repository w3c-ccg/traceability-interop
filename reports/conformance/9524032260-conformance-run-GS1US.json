{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c71da78e-ee62-4258-8d2e-6c79ff72579c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "67f20f4d-1596-4ddb-9ae9-71b538e76623",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4620020-b6a2-4578-add3-3f6f248f58d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75df2847-a741-4abc-b89e-e1a88b45d16f"
                }
              }
            ]
          },
          {
            "id": "64e1d2c5-9678-4903-a7a8-d5df4ea5d5b3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c53e25e8-8440-4bde-8331-ebe45e689786",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b200f619-8aaa-4b34-9528-dd2106e688b6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5ee9d7ca-34d7-4856-b14a-6c31a3752f28",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b4f3b669-cc89-41b7-99f2-c8e6355c624d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b427d362-4ef7-41e4-b9cd-a86328aa4062",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c4fa87e-6b0f-401d-8c28-73a01314f8bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05e8e492-b0ea-4ea1-89bb-9675e886b0b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3126cab5-5c0a-4487-b684-cfbd84042b03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bef974dd-07a3-4742-8fac-4d50cb680b5c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b575a13-445a-448b-9f1a-e45ed68bf2c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7012c3c3-ec7e-4623-980d-5a184e052fe6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddd29cab-6ca1-457f-8663-7674f3380738",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2d83fad1-2da8-4b44-88c0-e5d3bdfef392"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1b938b9-7e1d-4530-86a3-ec3166065831",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5309eff8-bbf4-4c54-8887-1574836da2a8"
            }
          }
        ]
      },
      {
        "id": "b4a4e6b9-3353-4af8-9a53-fead9514e130",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dfff1f7a-c41d-49f3-9104-8c81182f9f46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74d003b3-4f19-4aeb-b822-89f7bf9d341c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "26983ff6-91a9-464c-8f93-449632873657",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8219b2-5906-4290-83a8-32c787400219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2af56a02-b620-466f-831f-0e97b5d4f7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6a8328-0f62-47b4-a5a9-6148247e9b35",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294022fa-39dd-40a5-9315-65730b2b2276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1768cd74-689e-4cec-9c1b-e14061440170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ff803c-a558-444b-b0f8-4abb2eb981af",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e62c369-ddcd-4aff-9633-a846784bdfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e999957-6f81-4cab-b8c3-9a260baa8d6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b97c077-6eb5-4eaf-b94c-2363cbbedf84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe86c730-c809-4bc5-9197-fa48dedca109",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1a3e7c-91a1-471f-a506-0b12ab4e2d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "143f18e3-e154-446f-9e1a-aa2e882a9ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7269a7-a696-44b5-b65f-3de1997f5c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df27625-f153-4cdc-baed-444b7913d749"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8adecd5c-141c-4d11-b385-89cadf044cee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e200ef5b-6152-4e66-a857-7b51773aab0b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da4eeeb9-c4a1-4b18-aaf6-f717cd23d95d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dcd1ce0f-c7d5-4c3c-a425-90c31483c23c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9aed658a-0da1-4d11-a31b-d371b4010e6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ad57b009-41f5-4365-be32-fb61c586e204"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "501acf7c-3691-44f4-a43c-8a9884d3bbd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ddd8ff2-d27f-47da-aa0d-38253b0a9e0f"
            }
          }
        ]
      },
      {
        "id": "b796dd94-e120-481c-8bb3-b23f717d311a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5263d5a1-e876-4b8f-8918-ba0dffdbe2e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83b0dcd5-7607-4276-9c6c-d984cfb70837",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "28d45c30-81af-4346-9fc0-932f4f3cd195",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326286d7-0a28-4d1f-b847-6aef0e769a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532269e0-e0ac-432d-bfe1-2caaa40112f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bd675c-22f8-4e4a-b398-8b648f6626a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54752648-1724-4ccb-bd48-22512f7fcecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23de4585-5fce-402b-82b0-99041c58bf3f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c11772-38a9-411a-9970-f408992a226d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc1054e-6258-4ee1-bfd0-5edd16fb5fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b707ca48-3505-4295-9724-b0f0f50fbfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a4a1dbb-7533-4163-8ff8-10efcee27fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc644ee-fd12-44e6-a2ea-f6cbf3b46f8f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e87c3c2-c948-450e-bc35-2a33ca5e0472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9278864e-a220-4000-8c58-8ddffeb66c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd9144b-7e12-4d9e-a447-d76e2f109ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e425c9e3-6372-469d-a721-7c1b92356d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fdf1e8-0286-499e-b009-9fc90f647950",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eac1faf-ef0a-4e9d-ac38-a28939a22b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6ef327-d614-4d9d-9f91-a58867ebec6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3085ace-cfae-40cb-ba05-3620f9791812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcb2dd92-d159-41ed-89ca-dc520605ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ec4593-5a5f-4e4f-886a-15c705883d5c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36de6e6b-5ca7-4420-93ff-a37ca1700a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0ef2cb-9054-4ae0-853c-e1e230baed4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0b124b-1f62-4ce2-8599-81ddcf207b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "339f4b08-21e8-4a60-96b3-db04573d2204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb862345-a678-4869-8fbc-50e8539adc5c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda2e954-f517-4647-8dc0-e02d7219be92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21f3e9a-f6c6-40cf-88b5-1b0a0d642fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9491bde3-c65b-46c2-a963-6d1fcd35bf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35d9bae7-87aa-434c-adb8-0f29ed40b7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f72236-fb87-45d9-9465-027989c8162b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0e96af-77b8-4782-bced-a6d5359c77fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c818c291-755e-411c-a45a-984d8156cadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d656a8-4b17-4681-be84-8ab28a9fb540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff3400cc-da10-4e6f-9fdd-e2589206e397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b50ce29-a2de-4d25-b2c3-e3c81313bd50",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17caaf13-9627-459d-9c57-f5907575310f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9be982-4194-4581-a653-fef71df66d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e45e18-4520-4890-9cf6-2285d5ffde7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8e595ec-c0da-4942-a223-de19c5db7393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f0658d-5ebb-4a4b-b601-c001b79950fb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca2f490-3fd8-4f17-ad07-8287b88acb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d64e32-af4c-4aa4-a82a-86da144d0f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afd0cd0-5a3b-4dcf-9506-f8fc123b0a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b958e570-2437-4789-817b-70812ec00416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f70752-255d-4ab5-ad2e-84a8df6bbcb2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d63776b-18d4-4308-940b-bd4e485745d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdca33a1-238a-4d35-8e4c-a829348f8b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e22a4df-090a-4c2a-839e-7c4eaf8d145e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ec05748-596d-46b6-90eb-85cbabec0279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f53bec6-553b-4b4f-ae7a-c33335813ad4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4459e120-31a9-4392-b297-327ba7f26c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4da8446-89f2-448f-ae74-82ad94f15bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c59d18-b42d-4f80-8fc7-fedcba9d9b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dec9d2b3-3ba9-47a7-9212-b8765ba25889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5d467b-cdc3-43df-9b91-10a1b2a1fe40",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f1e493-1737-4356-bd84-943df8d6b5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4dc761-001c-4dc0-87a6-8d464288d9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508e9e2d-e6e2-4b69-b455-29a8f18f22df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eed2915-87cf-4b64-8112-dc74147ee05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41043d75-739a-4776-8676-f2e3e2ee4bd5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06189c5d-3a9a-45ff-b80d-6baa3f77c1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a57c7a9-98d4-44dd-bc4b-dbafb713892f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4effa336-3945-4b56-81f5-a45d1761e1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebc93624-6c83-40d0-a215-b6f7f919d0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379f1f99-e857-472e-bb0c-7c0d84398fd2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7d23df-2aef-435d-abac-2e1989ab64d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9023d8a-2cd8-48cb-93d0-8db3f653b461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9588355e-e7d7-499e-9e16-bf00474d1121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbc97462-43db-44a6-8a98-69ab88021cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5870f88-e3a7-47f2-9390-ccff2962464d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf688c60-7faa-42d3-98c2-1afeabf17ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04ce552-851a-4ce5-bb34-2523d9afe45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a230d11-4280-4676-9f89-c3832306e487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a42bf3c-e60b-425f-84f9-5dd9b989f91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78489663-e289-436e-bb2f-2d50342f8a9c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b30d82c-9d2d-4992-b558-5f130fb62c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0019de21-aa88-4d49-ad4e-ec29be69d327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2799a387-06ae-4abd-98da-93e204cba39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ece5871-5399-4a73-8519-63bc461ae882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84bc3bb-514d-41f3-b084-4eacf2346dd8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e51e51-33fd-4ac7-9de7-561403cba5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881973f5-2215-4700-97ae-4a48939b90f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc81cf4c-c8fb-4ced-80c5-32e1cb81e631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03b4cf87-d378-4b27-91f9-1d7b07acc9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2389bf29-5d4e-4102-aa0c-fa0b10198b1b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f689fa35-b5b6-4b6e-b2d1-306f20d2f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c18298-8327-4220-9ff6-cf267fb632bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b027834a-c12c-4995-832c-6d78dece7941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa82de7f-a2ef-43ab-8d7f-ff720d765ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c0d9d3-f94d-42f9-bc05-b17b67c8c25c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cebf623-5400-41d7-98ee-06e46fc5e413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63e8f7f-899b-4bb1-989e-c223a64c1334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5987514-f525-4890-89d4-1de2ef585993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b597f8b-976d-4c97-bd97-82fa6c36099f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05ac0b6-4a40-450c-a45f-18816722376c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9448a85-138c-4517-8d2f-7d02f2aa968f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606c9a26-0cb7-477a-983a-33a7ee258bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b49aa5-d176-49aa-9639-f4aeb921d8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac540130-4a34-4e43-ae31-9a4a5e3174df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51f8d3b-9f82-416b-a62f-527dfe1dde31",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35b16d0-f1b5-4072-8d0d-3e8ca79ca335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0301de33-20f9-486f-be1d-a14e40ac7712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e759c8-fbbd-4883-97eb-7d2e0a514acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0ea072-f22b-4ab3-bee0-5b60ce0508fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12d0bd8-cc1f-4f33-b7e2-24b2923b5ece",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a4f4ad-ee72-43a3-88b5-d6d875e854e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55787377-b6f9-4c44-85e9-60c48f79f682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3973687-e16a-454a-bbf6-86945814b996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30ece1d5-4efd-4a8a-b049-7468d09579e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604c9b2e-9b66-456d-9feb-e5b8f681e4ae",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50dba5b-304c-404c-8389-4bf0f73a4cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dc3c79-510a-4724-b340-02e2f2f71651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cc45df-bada-4db8-b4eb-cd061fcea121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b51c8da-c458-4677-826b-dac233243684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211b4a17-3b63-410e-8a3a-0317b81f99e3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b215ae-4d93-408f-b45e-f105f069aed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc79898-950d-4d4a-bb67-ab54d0d9ae4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f7a2d2-2302-4de9-9cb8-68e0c3e3da7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d64663-75ef-4dd4-a2e4-9da0ec6c83ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfe9a3f-7cc1-4fee-b64d-feeb5bdeeabc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322ddc10-0405-40bd-8f7d-d704e1804578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bd4cbd-c855-4e1f-bc98-ae0c92a8e3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee0adb0-b255-4cb7-be9a-c9410a0b31b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eda64c0-c89c-4705-bd83-c534852007d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72d48fa-02f6-475b-b9f0-23a1c8c4e902",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f7e962-26ed-4849-81ec-a6185eb35d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382fc991-cdf7-4790-b9c3-bb761908b41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26e527a-b0b9-4e18-927a-c1216af712d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d612f0e-f049-4908-9740-a9fd6b29e410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b28fe1-32a2-4b8b-8d07-78ce6eb869ee",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65707f06-33d9-4f94-bb6f-88aaa2f100a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f917db4-80d5-4e4e-bce1-d4ca4eccd542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeed1f29-3e47-4b22-a3e5-957802cf038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67b0682c-3593-40a2-80d9-dbd66c6419ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec22f313-bef5-4b2a-b8de-16daaee579a1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad6b23-2e13-4766-9175-5707b2766dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c3ab14-086c-4279-bc1b-f95699251bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287b8030-c5fd-4859-89bd-d4223eeb6906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "070b8a8c-9526-4fe1-aacc-d75c697e469f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4fa358-6415-41c2-9b5a-ab25f6e1f760",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6016baba-57e4-4ecf-9774-744c4310274d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a36b60-e23c-4ab4-ae17-e02068c5066a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff8cc8-60d8-44cb-8a8c-65f486928319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b472ca83-2adb-4bda-bad7-ee2d2850e307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e6350b-e376-4ae3-a886-51b7d9e27db8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb71561-4551-4797-b7de-f6e1249e337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79449b4-dbc1-4f6e-b9d8-2090515aabb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48dd9f8-5093-4164-856e-447e93a8cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d44bdee5-6a88-4028-92b6-a454a8845a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcacffd-9ca2-4d6c-afe4-989fcc8071b6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4771c01e-cea8-4e4b-bb95-9aeca86962c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2174648-abf5-4f18-9499-cedf83773b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33827321-c9b3-402a-bc72-2a0415775f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc7b40b-49eb-41ed-b3c2-570e82f6fa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84d18eb-3932-46cf-a2f4-223520db3ac2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43edc528-7631-4035-b3a6-3bda0001e90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d136d5-79a8-4c15-98e3-4b9a46cc0510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8fe5f1-2552-40a7-aef8-7b0dc7037811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2854b985-9336-41b0-a579-995805206690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca6bbef-1b5c-4eec-82f4-4a49982942e7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217d90f8-c568-4850-9473-c6998322cafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de793cd6-646a-4cb0-8503-5104c880bc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d81f8a-06bd-49d6-ad4a-45f14d94a31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee3b9a5-47d1-449a-89ed-68b87ef53772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e221a521-d2f5-469d-aaa7-055379157d68",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f476a692-6e2f-4079-a6fa-bcebe11c3835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bab679-b44e-4669-952e-ef49802538f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26f905e-aa61-4949-bf1d-9ca652a66121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5460c6c8-47d4-4959-be45-89cd5f433660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7485bf-d734-4bd0-8b3e-ca2320bb95a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed329bcc-bf0b-4f4f-a5d3-61e7df7cd898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0d6173-b704-4fd2-9b8d-42ceb6a11a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4998fec-b50d-4de5-b939-5be707cf7912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "281a1fe6-acd4-452b-bdf3-bfa03b46d352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66684a6-320f-46a6-ba10-555ea6aac2de",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e1c8a2-3fb1-4a9d-881a-c5329d094520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85d13b4e-3a3b-4e59-92f7-453695ff1196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9911ca7-56bf-48f6-84b9-13f9d327938f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6df93eb-2acb-4c01-8b8c-7d5c73d9b3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e21fc3-c198-4bc6-9931-e04542f4f753",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb091399-4093-46a9-8f01-ba20069a41b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fef86b7-314f-4d4a-8312-0ca770716eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867c7f36-4d7b-4dbe-91f9-0d663da35c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4077d1e-ebfb-40f6-9a83-4f98363fb75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f313ce95-0f37-4f1c-a0a5-6c5476e89b2b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890db4e8-e7fb-4b93-9822-06015a6c89c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0c1a42-8d04-47ee-b47c-cee6c742b4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da263596-e75b-42c0-bd30-35b33e9fd0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74fc0763-d97c-4c69-95f2-1cbe2915aafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20d434e-594f-4b58-8b77-a8071995c180",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9456fa05-2030-45fe-a535-78d194fcb9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad25ee5-53ff-409c-96cf-311bffcb3394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7704bd21-4712-46c4-9a6f-85531d550d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63e1bca2-dfef-4261-908a-74f5c05bee77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2510a77-5471-4c0e-be8d-c39c4813484b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4b375c-a69c-448c-ab44-c4728df31a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a1f21b-e442-4379-859a-21918aa1401c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a299b4-ac5e-43cc-8296-53f801da9b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "007c513b-9503-4c2c-8d63-969f80845fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edfa89a-afcc-48c4-a516-0ea2efebb995",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5782e152-4d36-4321-8907-faea63d75b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cda23a-2019-424e-9c71-bb95d58a0e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb04012-1e8c-4e7a-a49c-28748dc58c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "001f561f-1979-40ad-ac2f-c2ef65c94e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241d85c5-27f9-48c2-84f2-71ec01a0c35f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94820a24-4fc6-46c2-8526-3862824146f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a04ae5-1da4-4e88-90df-29727766454f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e995ff-013f-489f-90e7-38ca8730fc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bc3779-b0ef-4666-92ce-c2ae94118027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913acc90-2f1b-485c-abcc-0283d693ea7c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c480213-f9fd-4e7d-9dd5-819b858b8f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eeb99fa-3625-41e3-af4a-39f6cda9a517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accbb279-d3d3-44c9-9c37-60c07e218f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f24f88b7-8803-42b0-a339-a909799c4e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9edd45d-218a-416a-9700-e6ef106c6167",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d84dc9-9b31-4f01-b367-f3de611e75ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a52270-d1ab-42a3-be82-e5a4f87ae2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ded2242-f4d5-49ba-8948-d2465d9f4cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "587b7384-533e-4c60-ab2a-6372370f0a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4308c846-1a8f-4c26-a756-8fcda26c37dc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83427267-dd8b-4d1a-b8ab-ed702d1ec013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045fc482-f892-40b9-9446-01180ffb96d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7f56ce-9f0a-4217-b56e-53dff1a9c4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae492522-c01a-4542-9e10-5e295ee4206c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7ad9f6-d267-41fb-9116-1b886b630fd9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64570520-086b-4b6c-8356-5e1de2a47f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98972927-8fa8-4c78-be6f-3b6268caec60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7fa0ba-9a16-43dd-bcdc-6cd31ca0af6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9776e44d-bab8-4dc3-b38b-e0e82aab07f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b0bb57-af27-4e56-b309-b9a017d55acc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d919a99-ded5-49f5-9f79-7e066ac2d7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505d64b4-433a-4102-93db-da576b5c1a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd562f8d-6399-45c4-a6ba-8d6fc93d4b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03a098f1-a752-48cc-b315-75782b8421ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34088235-c98a-45c8-a37f-ca87857af609",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396daef0-5103-4f20-b17c-e553cb695b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f10251-57d2-44a9-be83-3e91e6e7cb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a48e57-ed7e-441c-a26a-e3b2ff283a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "530255f6-5033-4566-918d-4021efabf824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6a2743-29a3-449c-9486-352bea7d8180",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8345355-6b18-4595-bec2-89a950f2cddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ad0b42-8606-49b2-93fe-ff459c2081f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb68868-844e-446b-84ac-4f249f369b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6498465-c7f3-47e3-addf-29e50cb13311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74544962-d3c5-4bea-a74b-73b834dd7cba",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1270b4e7-c89d-403e-ae14-3ff0cf68ba64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc4bbb0-d517-4347-a9bd-6f67b6c81beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bab226-545c-40ab-8e48-e362b83af345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d20a1846-1ff1-477e-8d1d-6a2d50920f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5ba192-cd8d-4d52-b6e9-a2aced92b7b6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba21e2b-83e8-486c-9174-6c0b81321c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5fa4bd-b31b-48c6-8bbc-c74cfd41b662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8879e5a6-ce93-4b9a-9c62-656bcab5691e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "145f214c-bc1e-4cae-9cb7-87bee284caab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792bcdf7-01a0-4a00-9373-4deae17167a4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12ba03e-f34a-4b6f-8a74-119b513277a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e066c8b-56db-4a55-a15a-379c1b5fcb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079628c1-e6b6-4b53-abca-8b0aadb0d22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b64d989-3f28-4eb0-9515-9c739556ad76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5a719f-0ddd-4342-8b45-2b25147c15fa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bca906a-60f9-40ae-b1d3-cda59231eb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9911d7-81e1-48bd-90aa-c173d944ef4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b642f6-1d97-4e55-b8ca-469bc779188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c140bb-b0be-4cee-a751-16108a5e064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324e8104-2f88-4be8-8da9-e3c32141e6e2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04af68a-0235-4254-915b-b4f6fdee3704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1df4295-c6f6-4f2d-b9a4-869b440f507a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9118467e-c999-4ede-ac8f-6946ce803096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b360b95a-33b4-41c3-8846-87972de5d1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9702ae-cf12-42a0-ba36-6efe548f85f8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bbd210-9d3d-4585-87a3-57c2b013d976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b184178-2272-4dac-9be0-93f422e5a013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a23864d-46be-4c10-89e6-98c390b54375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5257f4-f444-434b-995f-1d46b6429cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d3f333-33e7-4a69-87a3-f9a7412c0c3e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e797de-1c23-443b-9a2a-b7073eb086be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9a44b0-3c89-46ac-a7c3-a7764d29b00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b366e86-c7d9-4451-ba33-8da7d4e1e808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2c9876-5101-41bc-a9fb-7274a8f37f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7cedf1-9f96-41c6-b10b-f694c3e28c8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adf90ac-a5c3-44e6-92a5-adda5e147b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86965eb5-9703-4ae1-b55d-00a7abfd8103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573b542a-a116-40fa-ad22-6211ab40ff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40adbd56-0398-42de-b5fa-aa693d80ba2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a31325-4384-43d8-9e03-6e5c25bca2c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d744b84-4bcf-47bf-88e7-dd915680c79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a68d393-a766-4fef-b733-61f601c150e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7de344e-c801-474d-9fcd-c1d09ffcef35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e84b772-b61c-484f-ad60-3d47120d840e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3da867f-a948-471b-94e7-93f2ab9ef6d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68498320-532b-4e2b-bfbb-2d49f00cea10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf6911a-94b2-49d4-a64d-8d65490db928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b72686d-3929-4683-996c-445add0c272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16df7d8c-7207-4118-b993-5904e16853fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbc50f3-9a29-4d9a-b492-3cde48ecee3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a43abd-535d-4345-984b-72b7ad90d3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c34b957-5c79-4af6-96fe-e9a96b8d9b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c2b58c-aadf-4619-8fbb-8123fe1cb9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7b8de3-c9bf-4f44-af9b-03c2df288ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db60f752-9d6d-4c2a-9d8e-46e929c89357",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a52eb59-5a8d-4052-8ee5-4f96c2ce44c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9667cb1b-6fc4-4469-8df9-8e6fca533bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec2ff5e-b9fe-4437-8856-a71c86ae4c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e3153f-f22f-43bf-ac9d-b4b08c036716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d10741-d4fd-4adf-8a46-3aea33075649",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7824d4-e112-421b-8cab-498e40787228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d545360-1e7e-42b3-b6fa-9b97339a66e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3399442-52a5-4ad5-b330-23acc5486451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7730748d-ec47-42ba-8c99-ec1591e78234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ab9823-736a-44d1-ab65-89db4c53d1c5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbaa65d-5473-43a9-8378-ca41330f2d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f6a8ca-0629-4ae4-b39c-bee40982c70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f915eca-e8f5-465a-a581-4ccfe313846b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d65e4b-349a-4faa-a4f7-afc94148a16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eada58ef-9916-4227-807f-bc3b8def902d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bc6557-d73c-4acb-8c72-6c5ea446999f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9156f63a-d05b-4b5f-aebc-76d97e637df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27db1489-3d25-44c6-a45b-9f2ccbcabf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb8f690-1073-4165-9e62-772290b768e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f82c234-6ee2-4bcc-84e9-2bf3f6e88fdd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e6706-32a8-4c0a-97e9-84b235189c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9143c05d-4cee-42cb-91e2-54c4cb7a1843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d312d1-c564-4237-9783-c4016fcb0650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "012ae0bb-47c1-4e02-9147-02c994c78497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a4e591-9c47-47c1-833c-d22fc0c72ff2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0a9ce1-6d8d-458a-95ac-a6aad7303426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11220bfe-5087-4c35-afa2-98a56e5d3561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1282721d-b153-433c-99ae-5f2a399aa5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb48dcf2-7b9d-4067-a5f0-250e24034699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002221b1-4935-4c88-be0f-e8dabd9d4852",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0dc355-c584-44a9-9f6d-e4ca3802066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fef774-70ad-4d8d-bc63-51a540bab994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b014a6d-fe2f-4dfe-9fe7-72f6e28636df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0709df5-0569-4991-b28b-0267f8cf80ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf7a465-0851-4d12-8394-cceb14faa537",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ffad53-8367-412a-bebb-8a8fbf3cc0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec49529-4c75-4644-ad55-c05a3701175e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d720b71f-14b9-4ca1-bb24-7553a5497555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "835bd792-7573-4f3c-bbb7-5b627e8a42af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf155a2-f78b-4a4f-9e74-2e1f855c8ec7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a202791b-ab6c-4812-b2f0-5f73b57db392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad5b636-e0db-4405-82ba-c076a14ad6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e133bf-247b-4036-ab6d-ec7a9d0e4fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "964fbb7b-860c-4009-aa22-5b87f847f194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57917aad-41eb-49b3-8715-ce0463f01091",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b1e8c9-ae96-433f-bfaf-a1552279a386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5c0dbd-696c-422d-8168-cfb2d98b1817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd50ac0f-a6b6-4696-a637-6bc13545d461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35508dde-fdf0-47ee-8f03-b835cbc2ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3af3b4-d5d8-41a1-8029-086e20af0007",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b28b655-2e8a-427b-a2d1-b32008ad00f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cbd137-8ca3-4d4f-90a8-b8be5d70c78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d63c9b-a99c-4fda-a95c-55d30dc7e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96d1f40-af5f-4e69-bfe2-8a04b070e271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1735f66f-cbf7-4581-bd13-595d63fd3f81",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f289d9c-69c9-42bd-b7b1-ef432b0a15b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5667de-063f-4840-bf5f-7ff39d827a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ec9c2e-eb7f-4764-a16c-b6aa06ddf2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aeef945-00d3-479a-8982-3f878b711894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98e31e9-82db-4eb4-8ccb-9dbf98807f91",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8344f0ac-556e-48ed-948b-34b36ae5f750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9483093-266d-416c-a0ca-f1a1b31f1b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5c2e7e-74a6-433c-b0a2-9465b87655d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a47aea5-d74d-4052-969e-805281edb5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c601d70-ef95-4a5a-80d7-f89810276670",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b191f9-cf53-4ff6-878b-6fe46c625a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d909fd77-abec-4d85-8fbe-e8b6ab33d65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608a76f6-eeb3-45de-968e-dd3975e97513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "382cac4d-de40-4c4c-b5d6-73734dd7b9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce646a44-480f-40e3-bbdd-cf2f922cf435",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01be5a71-7422-429a-8e56-68305cc3ab73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df32aae2-9864-40d9-9660-ece6659875c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35df3de1-7a4a-4f85-974e-d37ebd62c1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2836253-4ce3-4e3f-ab3e-9b6d389ab8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270d8695-3934-4b09-b1da-541fbe4c1848",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2c9054-2986-40f3-96f6-18376319d4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac11328-9855-4eb7-931a-c21abe889ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1be5282-6970-462e-b00a-8c0531c0cd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09002edf-a30d-45d3-802d-56200e5d25ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12aa466f-dc1f-4d6c-86c8-2568653f8f8f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f23730-f270-443a-90f3-d82188c53981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab6aa41-980e-4671-976b-344c5774566a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672d93ce-906a-4ce6-a823-6a6f24fb559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db05ca2-5f34-49f8-a75b-c285b16f1b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7500dfdd-9f78-4ce3-b83d-1786af2d2232",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7e4db-1438-4691-96d9-b631e0b1a5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee95cc5-f4f6-4753-93bb-5631e977867e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3dcb48-3fda-4fe8-a248-efa2385e474c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bf4fb4-12ad-46fc-8a40-c9ea8951346c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a50b01-cad8-497c-bb18-89d4de6f4064",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc58fcb8-c75c-439c-bd80-2cd86ed53091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44a662a-51bd-46f1-998d-f9c9adab8c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec45bb03-962d-4f21-a679-5ccb861a3105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "daa7f642-052d-42ab-9b65-740f9f6228b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710db925-a09f-46e6-a937-514d368b8e6b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1bc0a9-ccbf-4f1b-b2b9-81c3e035fb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d475088d-fcaf-42e8-909d-c8926a9391ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f80991f-aaf5-4304-aac6-fe27256aa864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf3e0eb-33ea-42c4-bbfd-bb0460bbf5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a020f44d-e652-4f51-9cfd-73ce54a7ad3b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc9a72c-07bc-484b-b9a0-3177565da406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323fdbe6-641d-49fd-b424-957a5272e8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780ebbd5-3b37-447d-b74b-c822e12f06f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3e91db-cd37-432a-a846-bb148fa812ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024b5354-c7a3-46ef-80f2-eaf7e0c54d3e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1361e9-0c21-428b-a951-2f72fde5fa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4f08c6-6ddc-4495-9eaf-37261cdefd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a538552-c4d4-487d-9f1a-3844410fca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9dfe04-5a47-414e-9627-3076bb35c36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7567b017-0c13-4d5d-8823-6587427e5790",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d855067-6b59-4cf0-8223-c5d3e23ab06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675bda27-15b3-4481-90e0-c8f35bbe52f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3395d97c-443d-48cc-81c7-2e046c455036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "916cddcd-38b9-4c45-8e7f-c344c88e143d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df24fe6-8b35-4d52-ac9b-737c3a00ce21",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb23ee32-a95f-4aad-8d1e-dcbda93a335f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976608c9-f677-450f-b76f-6183f3e781c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e192b73f-c1fa-441c-8bd6-98f407cfb294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4a9f09-1b29-4d02-9645-f46e27bc5f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd8e097-f2c7-4538-ac0a-383e45fe1ecf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa26230a-d26b-4428-b43b-1f6891836e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d303397f-7c68-42d1-b2ec-2747b6cfa076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b13dbc7-7163-4970-b65b-8b55b9d175d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "217936b0-05a0-45a1-94d0-ec596435da83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56d6f26-34dc-4f76-bc48-ccf7396d95e6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1642c5-ea5f-4319-bae1-2cb8d003fd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa841f2-2be0-4f7a-bfe0-5351f6d15fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa3962-8517-4088-a988-b80668719f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "736a549c-45f9-4c28-a24c-9d3f4f766744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594e6ba0-9392-4071-9bc7-808c067c7204",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3006a652-9c02-43f6-a5e5-af096c1dfc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a9da72-6c25-4ddf-9712-65d4150c27fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748b9af7-c244-4ee1-8bc0-0087d7d0eb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fadd6d-7e0f-441d-8f4b-d854e73d58ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb92c779-37df-42fb-bfd0-7ed36bdf6557",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f66875-4733-4638-a293-e279e3ce40cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fff5a0-eb06-4574-90ee-fffb408fa877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083e853d-71db-47ef-b6d4-a825a322c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4901ffee-a053-4ad1-8d83-6bb6c0a08f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ced4683-341a-4070-ad51-8046a658f948",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7333026-d625-49c3-9abf-e83402480ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9835c451-d169-4366-87c6-a8b5c6760a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87de4dd3-7669-4cf3-8d5d-e5d882f8bb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfc2b2b-e489-4bdf-9498-c5cca32c6aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c9a71a-0b7b-4302-9ad2-e918e7d22a11",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13043011-5f31-40fc-b787-8e587afe142c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4af99b-f283-4a60-8c50-8cf9fc8885bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83904fba-8a45-4370-9846-8e29ce6463ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38558137-905c-4325-94a0-27f9d7db3cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edca9bd-1d54-4a18-9e44-c208733e19bf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eda143-ac14-4370-ba44-d5b150ecf4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96d066e-eefc-43a0-bc81-ffc0004a149a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28ca3d3-6348-4607-8c6f-47f71472c30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba59fd5-8958-451a-91a5-83e7514ecba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa9c6e3-2394-4a76-a341-726855787693",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2711e3-5a09-4a06-ba6b-5d41b358870a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "63226e47-69d5-4448-a6a8-0aea389e1b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5c141f-bb46-4169-9328-ac6ed73eb952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d59863fd-cc23-4a83-a2a8-b9eb21eb6b72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c56d986-da50-46df-a418-f9dc24bee5d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e7cc7dd-7b66-46eb-bec6-8dcf47037161",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f542c110-f7d2-4f2f-99ad-a637fa8138d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de4c06f6-afb9-4252-83dd-792c8af87442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e96b64-f73a-48c9-a127-3dc2c9fc0d48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25d86688-e3e1-4b90-b64a-6b74998dddbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72f727c2-17b7-4767-87e2-d141c32e6b03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bf1ded0-e8fa-493f-b2cb-0e4039a01e0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f02d2d1-429b-4601-929f-12e591c3f8ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b04a9737-727a-40f0-b3af-a95cfc619fb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1355454-2e20-46bc-84c8-d8249a441bf4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad7aa090-1b19-40f5-88d4-6b8618e7f7c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58c93d24-500d-4f57-803f-9debb076f925",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0ca0627-06ae-434c-8f2e-0a43823c37d1"
                }
              }
            ]
          },
          {
            "id": "17125664-fa20-4745-8ef3-9b839788c0d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7442b474-f76f-44c1-b47f-4afcbef5d795",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8c8215ae-3e6a-49f5-af5e-58c6abbea504",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181bca93-0854-4eb2-bf1b-80e60652b825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d35322fd-83a4-4a1a-ab80-9df32e971aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666b9d91-5ed0-43f5-9366-2469b1045849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224c38a4-6bc8-47e6-be95-4f6809564568"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d48c9cc3-38d7-4507-bc42-b37ea01a0e50",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1440484-8c4f-4b38-9ddb-6069c64279c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35ce0770-71b1-4414-916b-7a087723aea9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45535487-e1a8-49b2-a2ca-8f1d97c3bdb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60b05751-57e0-4263-a35b-b05cba4dcc8a"
                    }
                  }
                ]
              },
              {
                "id": "6ea0a416-c584-48e4-87a6-8450b14a40a9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64999e56-0b22-4409-96a8-d5ea374c4e8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78c90c55-59b1-4f5a-9848-411d3b707273"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cb3bfe1-a92d-45e7-85f0-880e6c92a8dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e14c5efe-849d-4dcb-bf60-b7f84d450be9"
                    }
                  }
                ]
              },
              {
                "id": "1afe07d2-0e9d-442b-8a43-39560355ecca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9886486-a026-439d-9a58-ed2ca95d27c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60258d3c-4497-4836-8c06-ce315d7670d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "128ad2f8-7382-484b-b5d5-108fa718cab8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6177271-b47b-4e7c-9ea7-f32d6b05ddb5"
                    }
                  }
                ]
              },
              {
                "id": "1ab49585-b8d8-4eea-8a5d-c06bf2a3d4dc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "840db08a-cbb6-4b8d-8abf-41fd9bbd8b02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "631380b1-b679-495e-b1d4-94bc041a7c51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61bc3918-03f8-4637-9c67-64dbee4298a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6162a943-e17b-4319-ba30-da4c38f1d84e"
                    }
                  }
                ]
              },
              {
                "id": "46ce802d-3d85-4ad4-a3bd-5a5f9c001b87",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0b8f6ba-2238-4301-a4d2-ffc5024a4d70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b0df854-b209-47ad-87d1-7d8df01c70d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f5b8ae1-55b8-4cdd-b2e4-32af4c36ce1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "51358806-a27f-4c7a-846f-9b7b245c3aa1"
                    }
                  }
                ]
              },
              {
                "id": "ddeb00e0-de28-4f7a-b09a-2ba2cdcb79e6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de3243d-f691-41a6-8e7e-34d0205e830c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aa8a193-aab0-4202-af6f-efb3ae1a6f8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2302a4e3-ffdd-4687-86cf-962fb55025eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "181e187e-a0dd-4c21-a428-3061cc80cb29"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bc729b0-8712-466e-981b-af980e54668b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43bdf9a3-0395-401f-a896-338e3c9cd071"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed11e9d1-cf29-4aa8-bb3b-0aabbb2fd967",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b974ea8-36dd-482b-a010-62bce034d48d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f33bbc6-0610-4c0a-9260-a8d912289ad9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bc3f3fe8-f829-495c-95c9-2ca0e70a3527"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6990bd10-850f-4cec-9a4e-08f743cdc9c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea730666-1b78-4720-9e32-14c460b4cf90"
            }
          }
        ]
      },
      {
        "id": "d7e3b503-5b7f-447f-ad4a-d1aff5f96e83",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5a2d66f7-85bc-4d8c-813b-f233d48cd0a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d43e7e3-8899-4e84-8ced-d985d122f716",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc6ee707-b64d-4efb-9270-946a57e23916",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f410906f-8eb2-4136-bb0c-e6d94004a8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85ff1e3-a252-40be-b30a-b3156d15b4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac346d-c56b-4abe-9dcd-4cdc583400e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c013f4-a755-4f7e-917f-d27d9c974086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b963557-db09-49b4-84b8-7771d543b1e7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bc6cae-c972-42b8-a924-88d9bb45cb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7407a9-6a0b-4747-8d89-3dc25d5aa77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedfc55c-2ade-465c-8d97-5eed697b5b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ce8cb0-e369-4794-814e-99e794db757e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a441ae6-c3f5-43b3-b08c-6fb0d8ded526",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a223fcda-625c-4ea0-b66e-d63a07bf625b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ed2c7c-9c48-4016-ab09-bc3acdb760a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5c05e7-8edd-45dc-b0be-d0fbb266c025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1e6612-807e-4fc2-95c9-4804fc4aa58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa4c99f-c4cf-43a8-a14c-22de6bc94c34",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be85a6f0-3b60-42dc-81ea-f3c18c1bcaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5c587e-6806-4648-baae-74343480bf1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6e5347-0271-4c6f-bb7c-8939512f51dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c33064-e43f-4309-9de2-08ec9ab66750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef0c8a9-f366-4dc5-8eea-97b286995347",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ce9f2c-4b0a-4e4d-9415-9dc7951294c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d469cb6e-8bc1-42a4-87f2-c356c8eebca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e159541b-4b97-4e62-9939-9437e4c826d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "238ca3fe-ce03-48b3-9118-8a5eb8d9781d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f93ce1-f024-451a-99c8-bdae00daab83",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a288bd8-078e-4bd7-aae0-e21e170611a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf1a492-6769-40dc-9462-b818e18e8491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437be6a5-2564-4c14-bb6f-8eccdea20ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f623c929-79c3-4601-ab56-2abb26ee454a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1b1f34-fb3e-47d3-bc80-81a2886679e9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da55b513-f42a-447b-a094-923671c58625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6203e233-562f-4651-a436-fdc1897e4dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b33b82d-fd10-42a0-9d73-ab8db7d0d610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6aed62d-8e64-4806-8d41-406501e074dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c228cb-ccbb-4545-b60f-b7a9ac928d22",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d823a4-376e-41f9-9f77-80d5a7edf99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebf878d-f68c-47a4-a539-88ddda7fa3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28deb2d6-b57c-45df-8aa5-9e8174f257b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0a428d-4f8f-4838-95cc-588328ac370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b05a9a-7e8f-45a6-a97f-14e62bbcfa0e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feda84dc-4dc1-49e8-b5c7-9af6b84e9b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6519273a-c4b6-4701-8b1f-08dc55e443f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4411a640-4507-4395-a9fa-9dbeab23cb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6170c4c0-84fd-4313-8845-54637f037024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469e5a74-a91e-4f9f-9a44-379968b5481d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60724ab8-01d9-4335-b750-c506f0c2fbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dec606e-ff08-4f38-890e-34501fb76be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffe720c-2475-4f09-9a32-2958924ffbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b81a897e-6aef-4567-a40a-38ae1a58c3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55190e5-9616-447b-9c16-b75d0ebceccd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f44b35-0e56-45b7-87cf-91ca0d82a763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be997b4a-5ea7-4fc2-9556-586135de0bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaf8f56-001c-4727-a5a4-7b480228d810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2983cf05-0c3e-4ae7-9a2a-35f677e0a780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ac4160-dbb5-4fe1-be3b-11fd93ea3be0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce825cf8-ecf2-407b-b22a-d62f40ceee0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b47994-1325-4795-a213-e3e3325e16c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43a2c44-4c99-4f0d-bd9c-21c191022f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "664355dc-1cb5-4d82-a18e-810c2a03eea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91892bea-822d-4592-8d8d-a46d70f2d954",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16685c8d-ee86-465f-b404-cf5271e91f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be91286-b252-4764-b5c9-d0f41b47088e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c45ba1a-b6f1-4140-9a92-37be207cbbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6269843e-65de-4b05-87e5-a2e301e87f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e3836c-2b34-4fa1-be97-b0b0a18a54be",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31069098-3aaa-4293-97ea-f26f303f47b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759ecdfe-e121-4d50-8f2b-ac32cb27325a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf986b66-484b-463e-8a6c-0a4d67303eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "58041e3a-432d-4d66-a1c8-c4dbda4d73b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba61ad6d-70ba-4b80-a2a5-8b8e29ffbae4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c8aec-edde-4531-a032-470dc015f0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8db1e5c-abc8-41cf-a7dd-e8b425719105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46336358-5ffe-4c47-9ac6-af207972be26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "42dc5fd3-4dc3-49c1-a162-a432fe76b814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356ffc35-a20c-497a-9022-9a86eb8a52b9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93186fc-3af7-4480-accb-ee7bf88d84a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9236715a-c0cb-4d05-82d6-31419bc4b6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a95f974-426a-4762-aac6-54798f248fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2af8949-0f49-45db-9393-523a7ce2a4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe87265f-8e98-4727-b668-d34133279b00",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7624cc-4a82-49ac-8651-385971bb0370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c02d2dd-fdbc-4350-bfb3-5ddc1ce73ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2216daa6-f061-4a2f-9bb9-849cfe4c6c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "43dcca1b-7239-4cff-9a03-160a60944324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830bf2ba-9c9b-4e47-a5da-2ccf39c25638",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c66921-3bfa-496f-a24f-d363257f37d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d60379-c47d-41a1-b2db-29c6c6de279f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b35716-be17-46d1-8bcd-74ac3627955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da330fd3-299b-41d2-8c2e-6303557bc936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b85c0-04b8-4083-8bae-642af6fb6c4d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c4d5ba-bae5-46ea-ae02-db01e29dc6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dd841b-78df-45f6-8ac7-f704c882a61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5574b07-c4e2-465a-8843-be6eee79fb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7bbe10-58c7-4a05-8897-4695b908f2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7071e4-9df4-4ac8-be1c-9ffedbbfc34d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e33ec2d-dea2-4ae1-8f9a-ec45f308ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873e4d17-dd30-4f3f-a745-3ca28fb62708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1123caf7-daca-4479-9366-bfeb186bc149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c47c99-0449-48d7-8d8a-284a36adf2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda41edd-9820-4f55-9634-8489f4b49fbc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e537af-0ff1-405e-9596-20154f755e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbd1f06-fe70-429a-98e4-432318f40ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d360c37-d1de-42a2-9dda-4daf0b2fa72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf57c1d-1e81-48c3-aa70-b1a25522b009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de20592-2587-4d98-a1d5-21a5628c3d51",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327dca1a-9e3a-48f7-8905-cb63798b17ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03edc88b-0a1c-40cf-98b9-118fe4c2d336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9027e411-e3d2-441c-98f7-d428f96f910f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69836016-2563-4531-9b4a-c40b1a977f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4556da-f617-4dd1-9407-f1b9811061eb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3fabd5-66c9-45c9-8bab-9e315febbb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310389ec-7917-443e-a65e-f11e106ea8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5711fb9d-9292-4ece-a9ef-f3fe990e6c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "896fc2d3-a666-49da-b7d1-186dc704a544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaa62d3-a3d2-49d2-a2c2-15674f1471c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f2935b-9c58-44c2-b1cb-9ae422a27a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780c71fd-7697-4df9-8a0c-607424d4c9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c717e1b5-4a05-4da1-85e2-840d411794c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b389d86f-c350-43b9-a5af-4325107d2750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ddcdb3-c627-4007-8b36-672ae306bc6c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbceb1d-25ba-4592-b1ec-6867f13f3725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc18c74d-3f92-4a9e-98f3-6ab292414d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a81617-fda2-4755-b8be-802e9c543fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2eb19a-eb83-409e-b7f7-97d9892cd764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2851138-d703-4efb-b0fb-239429de55b4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bd2768-d070-4aae-ac1a-9efb22066a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1212b83a-aba6-44ea-b0e0-4cdc89883ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d97467-e255-4d80-bd51-5c62a4d2da06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80940226-6d65-4e10-bbe1-30e4489f5de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0420e8-ed8c-4887-98a5-c22ba1cc4772",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bcf46a-0f12-4806-ba3c-475d7c5e868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4aac8f-de19-47b3-9bc1-9c94cf51c4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58af3cbc-6964-4c10-9575-14c458510aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5d98c0-013b-4771-bdfe-fdbeea6192db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2919aca-a956-444d-b769-6c2fa04c5d02",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78b0e44-5e36-4a45-96e3-bba9b7adb432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58d4b51-35bd-4ad3-af54-5e9d25d41f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dc5c9f-7d32-4ef3-a12e-a0439b06caab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b935602-7aa5-49de-b147-5cbfe6c91e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d72bb94-0f73-4ae7-ae0f-1cebb99faad1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d12fb33-a8f1-48c1-991e-81cc07e44315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5247597-d735-43ea-ae86-60baaf5fb22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a615af6b-8d41-4c27-a4b0-e042e59b19e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f178e6f0-f04c-48ba-b828-9ef1fab3e468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8456803a-da41-4acb-99b7-164e30e3be0e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fedec8-0867-4feb-af7c-78762c320c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d2be32-c792-4e96-a88f-038ba4d17d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1a70df-c700-4fbe-93e0-1dee45c58f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e7c722-75a3-46d7-ae06-531a88dca3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e634aa1-d18e-40ed-ad42-a0791b4b9949",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7737d2e5-ff4a-49a5-bc0a-7d87f755588b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850e9205-cad4-405f-80c2-9b1bc4885798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c1d88-7a06-4593-a5d6-8e484f1f02db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "981e161b-2c91-4ad6-8e29-8c1b0f92b948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2814df5-5161-4982-a7db-2824456184fd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462e834a-393d-4912-a91e-67b4f388d186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43e255f-17ab-481a-b063-f23b7d7ddcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c988e0-d2cc-4aef-a414-1f0dfbe6cca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8adf7b4-97a6-4b78-98c3-3e4c5d3230a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e4237a-4d47-438c-aeb0-6344aede870c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038b5d38-bfe7-4447-810e-e5b0aed60f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a57c36-9d47-437e-9f1e-f552a9b17885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f08be3-57ec-40bd-b51b-a891d6c63094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c92cab-eb2d-4bd7-9f67-585f2724d30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2df5a2-0b13-4266-93f9-7dad92a27e65",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b14f2c1-6e14-4bb2-a771-ee60261e315f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7ad5fb-4c62-47d5-a97e-464fa7caa888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b06796-2f2d-4662-9e79-d28ca4f1a512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd880ac-dbfc-47b5-9262-1e07038ac719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bb07af-3c0c-4049-8981-c5abcc30a17a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab921b5-2591-404f-b140-f1083c5b0316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01746bd2-d119-497a-8858-a9f2b72abdcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1444049e-a318-46f4-9753-cedce67e9c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ba70d8-c8d3-4e80-a7ad-eec840c1a59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4170c8a2-8812-449a-9d3a-e1fd4150a40a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc69bd1-93d8-4c1e-ab44-58dda153f451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354e2413-faec-4c49-9dd6-38deda2571ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df495d5d-9826-421a-aae8-2615ef06684f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5143e766-a119-4227-9d3d-0cf51f0c73b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73656873-f8dd-4034-a4ce-701c18a01906",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4fa63e-a83d-4fbd-afd5-7c4275eb6688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e17a42-3241-4551-a450-96c108ef12f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1b2b6b-5602-4d7a-a966-df03ef746ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5d7823-ed9c-4922-a998-879b1ff5be89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c745543-5c9a-4fb3-a6ea-91854b4f9ec5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f35aed6e-5de7-48a6-9f5b-2c7b62b7291c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1451a55c-fa20-4ef8-819a-48fcedc39cac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d42d01a3-6b40-4173-ab4d-2908c517ee0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3719a063-f66f-4c6f-baa4-05f4aa049d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78f309f3-f0a6-4168-9f6c-5e85b0560203"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "475f66d7-a6c9-43f6-b747-385f635d398e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9badeb2-a83d-4af2-b266-3bdc0ff931f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d650db0-715e-4fc0-a11f-541c74b5170d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bdc0989-b61b-498a-8773-5edb01abae42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ec0fcfa-7960-4ade-bbe1-1d3349d0a7a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81803f54-f17e-4965-962a-808bfb7af880"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "023be965-85bc-44f9-bc6f-e5c1c78ecb94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "334a455a-7c51-4aff-933e-5db4c69813aa"
            }
          }
        ]
      },
      {
        "id": "d645406c-feb9-49da-aee6-be4826fabd16",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dc858f24-077e-46a2-874c-98ca23088c8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "107ffe7b-a162-44e3-92dd-068cb28f11a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11c78ca1-8c4b-48be-90d9-7d1b68fe9848",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c174f3d7-2593-44d4-ba45-f3a9bf1df464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8367632-d272-455e-a18b-cb022fca864a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a0a23d-02d6-4dc7-9d91-d1a86fb35903",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4102ff-173a-4836-acba-283f8e40302d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb48ad1-a767-4971-a3c9-10f63e0f9138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b09060-2e5c-4ebb-a948-251cafbc07d8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d1d404-a0d8-495b-8235-7b93d67a3dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd8da99-c444-4295-9801-922a6f3b8d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d54f52-d3ce-40f1-8133-5410cc03e6fb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deba36b2-fe09-4e56-a0e1-ea8cf27aa4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70698e3-7727-4956-8253-a5226b893e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e7d9d7-0320-41be-8d31-5fce47a50c26",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f044c52e-b737-4189-865c-bcfa63384ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba9bc2c-1e5a-45c9-8696-60d80dc6493a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d67d263-2df0-4e7f-952b-a31a2376918a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0291de0-5130-4c8d-b159-757c5369437c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b707bc-e87b-4f15-a64c-d551fba88f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad181b56-8ba1-424a-adca-564d43b7b9de",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06b30bc-e0e8-4f43-a677-bcf7864981c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6549721-afa3-4a2e-8c2c-403bc8c113f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5b6386-5f48-40b9-b886-b4e492ef65ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6342b6-ae23-4dd0-adf8-98d1ce0e92e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac553fc-a9d7-4af8-9a60-2c60f1966252",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7ed122-dbcf-4462-9d0a-5aaf7d5489b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0ba671-1812-4283-858d-e4bb2505d7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3c80da-a2f6-46fa-8ed6-163e8e988d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdd794c-66cc-46c5-a03b-8f03a2a19448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc39c7a-9c81-48bc-8c62-078aeed7b06e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a6235b-cafe-413d-8a38-37398409c90d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06403612-012d-4d1f-a0e1-dfb058a29eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56d9acb-983c-4717-ba28-9ddbec44ab0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2a6291-5dcf-4f50-a64c-4a32fbc98556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3c6235-0842-4c96-89c1-96baca05c608",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1282099-ebb9-40f5-908c-e1eedef9383b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb8c459-0fdc-46cb-8c4e-b491426970b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986ce9a4-ebbc-43d7-a597-1c66cd6a8512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12896a46-cfef-4862-b800-a087359fc686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0088e5-51d8-416e-b149-5d95ff41055c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd78d283-2ff9-460a-91d4-a6473cb85ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e4b38b-44ba-4dc5-8c2a-c44607b279a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397eebce-7a57-4c55-8a45-912e503a0dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e51469-b11a-4339-b91a-bba60ebf331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa4e6e9-7ea6-497d-99b4-d67a9ec49802",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24af2684-9718-4006-bac7-7c580ba9d16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc34e64a-4e11-441a-bb54-b66a6c1018cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da051130-dfd4-47b2-a179-16b7a0fc312c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86183b38-29be-4cc2-be2b-c6b311710d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b79714-078c-41eb-9fa3-3b1d4588b6a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691d3457-e453-4dc4-b3d3-17a4244768dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d4eccd-5b82-4835-86f5-d2d50124f7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78b4768-3d29-4241-9d59-8676ed6c2fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446b4c9c-3422-4d1a-be27-b3025d4096e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a63db6-f155-4892-9e63-7b39378fc55a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0e98f3-1a72-403f-af8e-ce5ccb33c3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21626244-11ef-4f90-959b-a138e10d24b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a0727c-55f1-4902-a459-2298a879d05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1390872e-7452-4d55-8c09-e204c53859d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe931134-81a2-40d9-a8af-3298a6f7fa15",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e1607f-836b-4599-9edc-77b89464053b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73797c6-4f4d-4359-89a8-1e1f0c3a646e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37946c8b-2440-40b5-b12c-ca64a262d426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f4362f-d499-43e6-8414-060a9ac1cd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7f6858-aabf-4b7e-8036-6b394816f8a0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68adb502-8b2e-41eb-94b1-e965940cded1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2531732a-5499-4add-b56d-c6f4a58984f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0472b2ad-e908-4222-a010-0fbe54cb2c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf565d2b-44d0-4ad5-8624-94778462c797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa312e3-8e9d-44da-8a2d-b6c884947013",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662c347c-fd2b-46ca-bfb5-8bf57dbf87af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93a8f76-d71a-4234-9b37-23dbeab5f927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7071dce6-9fce-4b93-b552-5a38b239eb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0467b7-86d4-4f5a-917d-597797867b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28671258-205c-4f71-9b09-99ff9f357359",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a794bc-9ffa-4a75-a03d-f0b79b3eb033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb43dc69-f12e-4967-8d5b-786ac14f28dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adfad6f-80a5-4cdf-992a-27aaadaa82c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff09a74-67cb-4ed7-b9af-9de65d44f897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ff90b5-755a-46b7-ade7-02856c4ea388",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbfd507-92f5-4190-901e-74399c645683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a426a6-80a5-49c9-ae58-e776fe7e3ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bf41c9-628d-4c2d-b53c-0f923f3441da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a09cb50-9786-4b1e-901f-81fe14cd1d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c71c78-672b-468b-82ef-a847fd8a9cf0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb25b7f-1640-4629-8cd2-ffe8fcf5d21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3dbb069-4c1f-4d70-b26e-d9cbd897a91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f262aa-f569-4659-a64a-8461f2dcd387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481c646f-8f53-4a21-b67f-3a2be874a5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1ea755-d749-4962-89ec-3a78c4d82b74",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f839fd-cebd-48cc-abe7-ab76e1db2acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e7953c-32d5-4162-93f9-11f794c587a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a74d97-28c7-475f-a611-0bc0d5e17f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a328139-9e40-4363-985c-bf83ef7f173c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed9939a-964d-4e1d-bde3-5f987d620f02",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43e3466-a182-4471-9b91-87f2c1814803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb9859b-ec22-423d-aea7-f8f55d140f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422deeb1-1e92-4d5d-ab00-074b70c25988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a9238d-c46a-4749-b51f-110bfe9fb3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d9765f-6916-4b13-8ca2-9fdd8862ecac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de8d462-dfbf-4172-8e80-2bf87d847a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d29016d-6b4e-4f9d-8c10-f75a2158c62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f252ff8f-2c8c-40d5-9f1a-f2610c1de349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d2c7d5-4bf1-405c-adf5-b405b8d46b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbb66f7-c720-48f6-93ce-4f9c0f505bba",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1199db21-05a5-429c-a642-420f9146566a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d330fd4c-2178-429d-93e3-9060c22b0942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "382c8fd7-14e1-428a-8bb8-6ce3b6dc7036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7606b82e-c70b-40c7-a185-7e91da9635d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d7f942-2b9e-48a4-86b7-b30255df85c0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f5c1c8-c3af-4b9c-8e3d-41c3ee5afc67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5ab66c-6791-4cdc-87b5-bcf7af395737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ac1092-9183-4042-beb0-7880ade3dcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f1bd74-9f23-4fdf-bd46-4026395d4fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d83778-6885-49a5-91f6-13f31d3863eb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78050545-966d-461f-8cdd-77c256d965ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b83970-8446-4ee1-bf43-f6ff6195e9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a7770f-ad36-4981-85c0-06431e15c58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d832c1-080b-44ac-940e-d5f37ba3795d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecb0243-62be-4b7b-a4f0-6eb39d7eec6a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c28176-e0e9-4e37-bd8f-4fc7ae35756f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66dcb7ef-5ceb-4890-822d-0b8ab515e1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd926c5-4c81-4350-af4c-3bb63656ab6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8b9245-04c7-4468-a04d-545898aab568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf8d2bf-ee86-4d01-98c0-dcfcc09b6fb9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb18593-6230-485d-8253-647849445f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866843e6-16e2-41ca-b002-c5a8df648fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f644cd-0f1e-4c57-934d-79eee61194d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d162da9-fb0e-4c41-b347-4c274e00e917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdac504-bd5e-4f44-8798-a8b415df7bae",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc6394d-8afc-43d7-b061-347a0f3355cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24e62f7-cc78-4345-b5c0-a97769446900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c7b84d-ad38-4337-a26c-c9d218eaf283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f0de78-cf77-45b9-81e4-a163c19ae54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11072ccc-a9ae-475e-a451-cbaad3f48fad",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4caeb58-40f6-4a43-882e-8b05a3813b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a054d11-5b4e-4be5-9ce3-d41ef99377ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2f125e-eb80-4252-8b88-bc6c8e7a9226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a899e4-0a02-497c-8e34-d426d25fa48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55f0fd9-a9a6-4774-972e-c4eb7f9a8f2a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3112d12a-c2a2-4354-bef3-7c5dd17c8cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a19d281-cfb8-40f0-a3c2-f770dde00004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b6bf87-5f7c-4549-841d-4b00a599afd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41948d67-b344-4b35-bdda-06c57984203e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2455f0-21c4-4479-88d0-9dec5c9605fe",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c40b5a6-d137-442c-96a6-834728280321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619537f8-d0b0-4047-b50b-35099fc8edce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f23b03-19df-4562-87a5-f1367a8744f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3e9cdc-40bf-4784-b85a-d8ef5cd4fe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887c993a-f393-4244-9948-067eaecd8478",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a2114a-ec2b-4b3a-a211-af4e4d642e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473e0c61-202c-4fcc-a018-cba7bd89e465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad16fb2-ee7a-4d7a-94f5-60a5ee2d531f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca389f7c-169d-4b15-8c42-8e8b5e4ad13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d7f8e5-62d3-4f72-849d-c9157d996a68",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279ffad7-87b3-4d0a-96b8-c344d9e14fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1923c99-db0d-40da-baa3-b298ab91c8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8550383-7b3e-4a9a-897c-6f57b4ab2b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d495d71-b6e4-446d-a219-4c8ad4a92ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077395ff-1a66-464a-b8b3-135827bd5bfc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df85cae8-49a4-47c3-96a0-f00afa9b2ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b22857d-6557-4ab6-aacb-b0566ebe7c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecddcc5-bb61-46e9-8eaf-b469991f19e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c6c424-443d-4401-a83c-6b0a993b0c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d68749-79f2-4ce8-86b1-c2eb5090267c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a05d479-4cea-423c-a76e-fb3e66433629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2dbba9a-0608-4437-b678-ebe2a861ff54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586108a5-74ca-4697-9982-16e738d2c9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e58f1e-f25d-4f84-9fc5-2c464a7c0a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678bc4ca-60d0-4fb3-a4b3-3c376a4e63fe",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fa73d3-1024-4625-8300-787623615a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7795f2-051f-4de1-a16e-505b7e711486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26601b9a-2dcf-4af3-8238-9a366cff3253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4b8bb8-86de-4d98-a7ea-ae46a8e0fe8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7abcdf8-8da9-4c5c-ae53-c74599e6462c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850dd0e9-cf82-4e0b-b93c-350cff7ebcb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc02b79a-c848-48e5-8b90-15ee27ad5f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe81a71-1153-46af-a6ab-577afbae7231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68aa55e-e43c-438a-b359-b575ad9f9024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcdeb8c-3df7-4886-bbbb-55841b386066",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5ef786-0e71-4436-b6d2-a5d0f0e12b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf633303-5dbd-45a0-b9b5-f330e138e46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d699fa-b65b-43c3-9aa5-3201b446682f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94349d8-4330-48f9-8ad3-3d105e109060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a291bc-bc9a-4d36-84b5-be1b3e066e1c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6226b74c-7682-42bd-a8f5-7c7aec6612dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e96fe6-1bb9-42fd-9b1a-e9b1f0b52041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8190f1e8-c466-4980-8ab5-d3cb9709c453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef8de62-b826-48e4-a278-d048755c64bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfababad-197b-487a-b1d0-fbe1ab0cbbf0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278b4c22-9601-46d5-96bd-55d0f6af3bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3662aa-1113-4d59-9f9f-c82bc5d5331c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c12e87-4ef4-4820-a14c-c0cb692466e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3060d08d-1a1d-48fc-83c4-d29b3a2e3c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7338eaee-0ecf-4fa5-a5d8-bad7ad66eecd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3947640a-a4d6-4a06-8b1e-22ba656665ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a302c2-b570-437b-be8a-0d8a7d4e9a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86687d2b-48c1-4c5f-adf6-325488b54ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e27019-421c-4d18-bc5f-a399a347f965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc1d0bf-db63-42cb-9809-eed25424577c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b12bdc-aa0d-4ade-9733-077c16879613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e9f6a8-4eba-482d-99ec-2c943ad46859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59ea5e6-18db-43ca-9895-30c0609aebc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff840b8-4b07-4e9e-895e-a310a639c1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0d9ede-03bb-4703-94f4-d2b4545a9c88",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcd1f0d-067e-443f-9a88-f10a79e37dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad13535-794e-4c3c-9812-113019417450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7690b953-5d71-43bf-926d-8368eaa2c8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901ab8eb-7113-44e6-be39-8b9cb83ed61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe398f72-6e3b-4eb9-88d6-6cf5cde6e248",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7221e92-46a1-4761-8593-2e33bedc8aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081876d0-a7af-4d7a-874d-8c3a7e2d5bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066b2a27-0876-4992-a315-55a5b407459f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68507c2c-8b61-44d5-b931-8678f4f91e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1207beb8-aded-4ca9-b2a8-d23f547d4a0e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef44fb4-5506-4a55-9bde-4d5625518a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1e70a0-e1ae-4283-a661-9553e0d275e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ebb781-aa6b-47e7-97b0-087b93697cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b40121-796d-4910-b14b-809b4688ed84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f184dc83-026a-45c6-827e-45a924d937b6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48060d9-822e-432b-b2af-7cfbee3c780e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3941008e-dce6-457f-9ca7-9d25adfa4eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b212fcf-e77e-4277-8554-05cb4ffbcfbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b439e11b-d045-47ae-a236-53b995517ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa411d96-d350-4b02-8f76-d269e61ac4e7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec02cba4-db20-4741-ba52-b8d7ab073869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc584274-08ab-4632-897e-431f9713a146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86899b7-738b-4462-a05d-48d921292e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c54d181-7e04-4288-9f67-8ec6608dd302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3775a95c-6bd6-458e-aea6-4a1b50ec6d3e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0c52ba-f776-48ee-9f91-e7c634dbf2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08bd79a4-2c01-4e30-9b4b-7529c40f154c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac033a4-25c4-4e4a-8a89-5f18ed9c267a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7109930e-3fa8-48c2-856e-5ddd230ae9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13796861-8fe9-47b5-883b-4582aba40cf9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff72be08-9a8a-4306-8016-bf57e1c7b077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad07813f-6246-485d-9721-8a40f4980433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c35015c-6d97-4092-b75a-2e1fe7b1bcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eaaa505-e1d1-4946-aa26-07e2a1dfd7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04e7d86-5c6a-4e2f-890b-ddc62047d70b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2412669e-552b-4dc4-83c4-d2309efaf9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5159df8a-4b47-41b0-a50e-896c3ee2278e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77698b6-975d-4c4f-9624-00f40c6ecff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdeebad-40c1-4ac2-9293-10cdbbdc9059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b42405a-c8f2-4ef0-8594-1f09cd918efa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e09fc6-bd1a-42cf-b884-5bde85f768e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e1019e-ed21-459a-8ce8-aa248a973c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe837575-4b4b-4bf5-ab33-2abf3bda5b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9046962-7d74-43ed-a463-9ac05a8d6f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdc9d3c-3679-4082-aa87-902836d9f5f4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a346db0c-728b-4b42-94ff-317dffb0b353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0e8299-114d-49b7-9516-a5067c1dd4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62003345-3938-4731-8af1-d2b42b378af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5430426b-9965-4eca-855c-a9d4594f53e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3080c1-755f-4219-987c-50db92de5a33",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2853a6b9-66e0-4933-b211-053735bbf883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2491b67-c13e-4477-9799-1169b3d79851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8770b6b8-5d95-481f-9330-840403555f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5066085-5d50-45ac-9c4e-6371998b8acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad5c8df-f6c3-4137-ab20-4b5e280f192b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabb6049-2d7b-4882-a8ca-cc28f4e853c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9658976a-d82e-4da4-967a-9d8ecb36b133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1381c53-30db-4cf0-a4ef-8461daa19338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafe1157-b5d1-4292-a1b9-8ff34831c6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb2e0fd-d1a0-41a9-b8f8-05365d98e6e7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b05c245-315b-4513-bcf2-d0fed95ed98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e9e16a-a1c0-4ac4-83f7-c90b98921f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748bcc30-4402-4233-a694-950202add891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68091f76-287d-45a9-8be2-b3a8d7805c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656af4d5-aa8c-4512-88f9-c00770e5a4c4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f58d66-a37d-43e8-bcb7-8d0562d6f8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b4e894-339f-4a59-a064-aaba8396a47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5648ab1c-f075-433d-bbf8-6ab5d3c4553b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfab935-e29c-4279-ba95-2586f46f3ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add3949c-030b-4dbc-aecc-2c408076df4e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4576fcd7-8cda-4fd8-846c-b5ed747cd269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009c7d1a-e65c-4b6f-8a44-be25068e7899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee5c982-3731-4785-adc2-3ae8f390e772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7a86d9-07ff-4645-8685-eea16d9b095b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a68f91b-b723-452a-827e-420f2ec515e6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50562fd2-37bd-4805-b377-1e5fa6545ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74de8d0a-de3e-4a4b-9258-fc89d9b1671a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b405b3-79af-4219-b330-a922c9929ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2595a96-d4df-4918-8a66-320705f90df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bd2a88-6022-497a-972a-6573c7f74276",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5b8c4d-5dc8-42b6-a02a-beaef00d1c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fe2899-6089-40a7-a1e6-5a86896d8762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527ef802-70c1-4c28-b06d-ed2e42b7c877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41df6ac-2be7-4cfc-8794-f30e16abd320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa0ccb3-af46-4d86-9415-0d00259b51fa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2076e36c-1c6b-4c98-a0fb-62bf460214c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3673994-e2b2-4e5c-bc5f-7e45b28a4890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847ef14b-c894-468a-a325-e4235002c3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ff19d1-68a9-4974-a298-2c24726688af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f625a43-093e-47a4-9245-d600a4f2a905",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "face8034-3f02-41dd-a48c-10837aebbf2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2704b8b5-8caf-44b3-8c68-ad91b4677fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161288b6-f240-4739-8fde-a565b230c90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a513b9-a2dd-45db-a871-2c5b5aa785ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc4dc30-eb04-4723-8bfd-516ecb068014",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcff220-f782-4823-ad81-ce963fd7652a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331b9052-ef98-4b74-9f2d-b496fe46e659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf1556c-1f8f-40b3-87d7-1cb67c1ada9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9feba3-27f0-4cd9-bc4f-aa6bead7f957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d2dabf-fef0-44ea-938b-027837a9df4e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8333f3b2-4289-4343-b1e1-e070636e9ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b32a251-521a-4384-ac0a-b1c4e7da8e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4180d5a-22a7-47c3-bbc0-c46d1afee868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88249d6-946b-4cb8-9ac9-6611924325a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e61e18c-508c-45af-9f23-5b9d17373207",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d37c1c2-6428-49ed-9ece-975f941c2f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9c5025-aea1-45c4-8a0a-48187712089a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd9040d-1bf8-4562-b043-6d7cb058deb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd1d3e8-8c85-42b5-bbcc-8a68c3eec6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcbe8b5-aabf-4b65-a39b-33380dbac5ab",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f89662-9338-4838-bb91-f37ad6d859a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868f6965-42c2-41c7-9816-3d58036fec3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b554c461-185a-4c9e-ba75-5f2913a35dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89933731-14f3-4478-9db8-d4d68a952f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03a64a5-ba80-4e29-9eb6-55bdd44d8acc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52877fd8-f778-4dc9-b469-bc9515be2a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c07e8ed-3101-4068-a4c5-a5af8d46b973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625e2c86-770b-44a2-a2aa-fd348932d9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75202869-ec51-42c4-b182-89d52d3f406b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab5e20c-03b7-469e-81b4-dea2c835e164",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42487c12-3f8f-4e1b-bd89-8846dd637e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283afe29-e93c-4d19-a55d-87a7792f5e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9b803b-e36a-4129-a464-ae8524cffda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfeba3e-8576-4a59-90db-4fb7666b1ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556bd032-3f17-420c-b66b-c20658877716",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cfef95-8a26-41c5-8da8-4961a76d80d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb8deca-5135-4af2-a90f-24f878e7c826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4db9ddc-8344-4506-a8a0-aca158a662ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec36ffc0-5f87-4f87-9c88-3d5f24d83568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd80118-0091-4fd9-8533-6910572ff356",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f89a732-9743-459e-aaa6-3de0d25410e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "030d2968-ec0e-4fdd-8313-5adf72b1c9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aed89a-dfeb-4588-8db5-9df501020a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7b9a40-3fb9-496f-8483-2cc3e3ed8c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cf8519-a974-4822-8c0e-4a50840d0073",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79bc362-461d-44d0-b204-acfb7b5ad292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0bcb2e-73ef-498c-9880-ff8f48df25ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cfc319-ba0f-44bd-bfe6-24af619c9d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e9f572-8630-450b-b4df-22159131f8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15d489d-6e2c-47a8-b3c1-7af966a70575",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33deef3a-7070-4767-8b6b-587c9fd81bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0542a89-a353-4bf7-81a1-e05fb82d825e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a67d9e-a281-4065-8219-996a29b90a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354d2971-e678-425e-b797-84c7eb458425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76cfa2a-1e6d-455a-9618-4ef4cb795157",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1212cda7-ebc2-40bb-bed8-4ea35d066e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3e7021-9937-4314-915e-35a1e5eb7e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66906543-188f-4849-b9df-52931a82f6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa69232e-0e44-4284-8fc4-a3f5d1235790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3873d60a-873d-4ed9-bba4-392a782bf530",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda8c2ae-a266-4ba5-ad98-e9b5ea17db42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5dbd9a-4ec6-4eea-8391-92458c8006b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0fdb75-532a-41df-b374-79688ff8d33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03da04dc-92b1-4eb9-bfa3-f66ac162a644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca754be4-2585-4bf7-bbab-538bc86d4eae",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02b64a7-f8eb-4c27-8a7a-bf6af060bb83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65303883-177d-4f0c-b741-c7446e89fd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b631d3-6c11-43cb-88b7-87669b9cdbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f7b108-2c95-4707-8f0b-4ea58de0a3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee784b5-d72b-4ac9-9003-6debd2002a21",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13df461-aaa6-4207-a2bc-08654f8ad127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98a5854-ec57-46c7-b219-bbd35e7b253c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dd0c82-be54-4fcb-8dbe-6ff573e613c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fc204a-6d20-4b21-a6d4-a1658afe16d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d506dba7-8ed6-4fcf-b56c-eb4c1b93fc1d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a2df94-965e-40c8-a124-17623f5279b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1057ac9f-5598-4f94-a92a-eef8a60e8d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce246950-7b45-4ff8-97e0-6e16b18338c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de7bc2e-7de5-41d9-ab24-3c5a483b1501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb65105-7e20-404c-850e-23a8bf4b2208",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6621eea8-26fe-4009-aeaa-d6d38deb5f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc9b4b00-8691-45c2-b8cb-e1464c98b82e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7251a0f2-e82d-42ea-a2b6-b65a529be616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e652ca-11dc-4c8a-b923-0c396f537638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2254942a-ac18-4d21-9b69-9a0ff93907c9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e718908b-1fe5-4b7d-a40c-1f731ba0b3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6948819-57e8-4b91-8234-af5a6b518ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c028069b-8b65-4c32-b43f-4564335787a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac3bb2f-6eab-487b-8f43-c041fee2ac82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bff7e2-d276-475e-bb73-29f2293717cb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fd4083-273f-492e-a16b-a9624ea3ed4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c45842f3-9f87-4ee6-b297-6e2198f22769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979ab92f-5718-4188-901d-c9694c3a6799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c397815d-eb96-4dd2-ad03-2307c3d54449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cface52e-6824-4a66-82d6-ba438a39b05c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41207365-34db-440d-af39-514c6545f450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e703324-44f8-4ecc-8f33-37624f677268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6505bc60-e923-4736-8190-c6b072dbbea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc16a095-c191-4259-ae2c-936112134cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc0d8e8-8f23-404d-ae4d-8a527da9c519",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890bd349-a8cc-4b3a-bcd7-5874b31828c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef850ca-0798-4915-84c7-97a9640e9a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f972db-152e-453c-a208-b0d782e85279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1955e98-de00-4000-9f1f-fe7d0be83ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcd590e-81d9-46bf-92b3-854e06da9ef8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3550f361-73ca-4832-a4ad-1e7f53a7af1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ae3bda-2887-4a5c-a3db-39a0ddff3120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c01be0-f77d-415d-8068-09c16dfac4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da80e026-69cd-49f7-9d79-f4dd4e04a38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e749697e-18e3-4bc7-ad6e-8bb01d216262",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e28b1e-69a8-42f4-9aa1-6167eb8917d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebe56e7-d6f1-4ace-abd0-89872fa6edbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e547b2-7417-4ac6-8f12-14b757122755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf40504-3076-4d0c-badd-61f35a15a8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814ed655-1085-465a-8ab9-90534606a6e1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997c625f-755a-4c29-bb97-845853c4dc65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d8d6d60-bcb8-4647-ae8a-770bb62afacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf32f92-235f-40ed-b4d2-be4f6b56c539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6e2c3e-fcad-4e00-ac77-4e4aad429f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc666826-a3ab-4845-9abc-48f67826a0c9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cdb0f9-d313-48f3-b351-8db675ddc6fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6d0fd20-1078-4abb-90cf-64846f58ee3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed660717-3c3e-4ebe-a211-3dbef1373226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c204b466-f04c-4589-af45-19ea39628901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1495f0-91c2-44db-9437-2ca0de7c9ea3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081918d2-06e3-4d15-9600-835017391cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4828c6-e4bb-46f1-a857-8196453dc398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be4461d-9325-4efa-83db-f4c7726c71fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fea0916-03a6-45d2-be1d-fd9cf8630835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab18d20-5070-4fd2-ae47-87c0e0ae7cb8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c393cc-ec22-4e4e-b758-12a3e82d35c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5ef333-97f9-4990-966b-311b51f89f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb99e06-0d33-4a99-925f-8ef52f7c5c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8c9c09-2f5b-4131-9999-9da0c16ee1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d5a3ec-4232-4c43-acbd-9478be64f776",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3332166f-098a-4d11-838b-fcfa36ee2988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbed4a2a-39e3-4509-a028-faaf0e5d5997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605bd075-0aff-49c6-a4ae-7deb51cb6c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ac03cf-b2d5-407f-8022-001b23be54cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50da07d-c30e-469f-99f6-0458ed687d7e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e75da5c-0e58-41e2-ac86-8aa149c59c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0469faa-083a-49a8-9c5b-3ac3ffc300fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace3f162-775e-4eff-9abd-44cdd38ea9b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329f28d8-194b-4299-92c7-1ec3dfe30e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdfda86-937a-40ed-8b02-deb6ac51e110",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17606916-b11e-44cb-9086-f516a5c16316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f26581-b35e-4cfc-b3b1-32109ecbfde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2a3c76-d915-458b-b651-afb12c7eb30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e5e333-ff30-418e-ad33-11f7cac88296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebc289d-7adc-4b81-a46e-fc22c30fd49f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe52e87-afbe-4a9a-91a2-f6660c24768f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bbf4128-fa41-4579-8711-98a3fae198e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad10e674-1ff4-4a4f-9840-21bf0797184d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ace7ea-3ed9-49d6-b63c-40cba0eb2bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e20770-3b18-40d5-ba01-a3d616367443",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3feca0-f4f2-4e57-8649-a7c2fea4ff24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d994c8e1-780a-434f-9921-a5ebbdb53f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe695a9-cf88-4154-96eb-82a3885d179d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d467f1d-9614-4dbe-9bd3-2e5857dd0f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cde011-6889-4d12-81e5-6f3250233856",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059d5027-74f5-4227-8ed8-d61a8743527c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fca3dc4-7442-408b-82df-185e23447950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c4177c-403b-411d-a19b-df53b339cb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d62cb24-28d4-40f3-b2e8-067ca1638f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566dee37-ff29-4b68-9059-12408cc4a2e4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fef0cc8-0571-46ca-a26a-11612efa814b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebfa6e0-e4d2-4061-8ec4-6b348012a74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a373faea-7230-41de-8dc5-32d90c0f7c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27afe461-e540-48e7-93bf-912dc659cd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b3d7cb-7947-4f71-b132-6b0fea40135b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7350e5-d7d6-4052-bace-8e2afca71089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6cd5cb-8cdd-485a-9cbf-d30f8b899a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfa48e0-1e9e-4ee3-a772-b466275ccf86",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408f64d8-f46f-4977-9783-b41474803455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe356c8-1dea-42ad-bbad-50e786281f20",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9ce75d-2fb5-4b61-972b-155c6f41ce0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ead26522-dbeb-44dd-836f-50aeb9cfdf17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4991b214-ad17-4c74-a0ec-9f85373b5108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f5cd47-3b48-4287-9baa-bb1cf7025bbb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e0a1a1e-3f23-4abb-9d26-36ebda23d206",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d00a82f-4b37-49ed-a9a5-20177d5cacfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09d592b7-6c88-4578-a397-96e3a2b967bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d26f5ffd-4579-4e7d-bd33-fbd5c8d3bcfa"
                    }
                  }
                ]
              },
              {
                "id": "f2260fef-31a6-40e2-a983-fcc46a49c8bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "490882e8-a019-4676-b702-6bc4502804e9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a2f073-07ee-43c9-9932-ca7f0bc1d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d767403-e1ad-4ec8-b7f8-fb035dcd3592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea3252b-1314-47d5-8db1-6d78a2de853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06512ea6-b611-4d0e-b2c9-847084b289cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe0305cc-05d7-4160-b07c-e14fec4f38e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01c4f597-1709-4d19-864e-88b5c391eeb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1a589e9-3a68-4b05-ad1c-cf7b9c9e231c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "980fccb4-9465-4632-bac2-d749050b9016"
                    }
                  }
                ]
              },
              {
                "id": "9074911d-625f-4002-a2ce-00a2c585f435",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "79cc23cf-3a88-4e75-915e-de45168bfb74",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e505ee84-a211-428e-b1d3-59669e686ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "38a776e5-ae80-436e-99c4-c1ae53a416e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ff3015-8d7b-41f7-a1e2-80e6ea78ef21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa046e4-cf87-4da9-bf79-f4342b4d4233"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a93c969b-d3fc-4b43-b3cb-7ba438057377",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23968be0-b40f-4266-b7f2-8b62a6f41828",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "816cddb7-bf3b-4d46-95ab-8cb67cc084f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "092f1a3b-26b3-46b8-92a7-ef5c64af7d20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22f71f55-e41e-4239-bbde-04636599b151",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c3c50f4-8a6b-4e2b-bfa1-e9ad3da06361"
                    }
                  }
                ]
              },
              {
                "id": "a8b261c5-cf4f-4713-b5b4-001d7db35560",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "218c9f6c-c895-4475-970d-3fb2efb0254b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "37f77471-585e-4577-b3bf-0a51aa4e0189"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "143058b1-95e6-46a3-bb3f-b73d6e2dff76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a4a6e71-5816-4a8a-9683-eefffc89b465"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44d44b05-9f30-4ea2-b963-59db701909bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6061a8ca-a8e0-4126-8488-44991443fac4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eac59ee-05a7-4039-93d6-b472b8cc336a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6c1f8c4-234d-4cfb-ba1e-4f21429b6370"
            }
          }
        ]
      },
      {
        "id": "8638ad07-7d2c-4d6e-b207-bce780c804b2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eb2fa9b7-c83b-4b34-b6c7-94d296028a23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22a8d131-89c1-41bf-9cad-bb3f26b2bdcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b97f70d-9cb2-4de3-8381-f62323a31905",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bbd60e-1a63-4419-a505-5daae6ee5310",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1debf31f-36b9-4a3c-bccd-9a4ebd4dc19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be354df9-d4d1-40b8-a451-662ac66803e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3050e8a-3136-41c1-bfd4-d18e4cfdbb43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93d648b4-a7dc-469a-801f-fb88c6c91fbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87e3b189-6de5-4854-97d5-a739c2d34606"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd94a68c-9872-42dc-8a08-2a70f6c6d9ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8ff0ab1-7a4f-4c3a-924a-d2f50ccce619"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c411c4e-f2cf-45f9-af8f-2dbfcad8b823",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "14a13252-7190-49b3-9b1b-87abe552f77c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98086168-a178-46ae-919b-6528b3dc73fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e723d92c-ead6-42bb-b477-dba904b6ab93"
            }
          }
        ]
      },
      {
        "id": "bc6c4f14-1585-4a81-90f4-fae3c65eb5e3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a1b393de-5268-43e5-9f59-c377c70f45fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fd7e807-e2c7-4791-8532-a82fbc6c1f8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36a642cb-8690-487e-9f0c-f3ede6f90dd2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69952876-6d7f-4091-8c55-48855f9c9846",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cdb00f5-dc08-494b-90d5-031ebdc6c681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bba45ef-e92d-44b6-83ad-a5be2ee588aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3345f758-23e9-401c-958e-025078e4e8de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcff960e-fd31-4815-8c61-0f1ae9507660",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1930aa0-2d66-4ce6-81c6-0960632ef0b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64468d05-c7f2-4ebd-b062-e44ff194484d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea849e99-ef32-4d2d-ab05-8f4bbfc455b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a47ac0e9-e8fa-491a-9579-821d2cbfd666",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cc41e518-82c5-40c7-a45f-5ddbd4b58f62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e455f3fd-0a47-46d8-a2ac-3890fff14916",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e32df3b-e9c5-45e8-98bc-29fbc8daf0ef"
            }
          }
        ]
      },
      {
        "id": "c7c95899-ad67-460c-ad1d-55a749bd32b4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d922a02b-6de8-40bd-9b60-299fcdb1ea9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92bf1447-ed5e-4891-8e44-787f92eb4d30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b03973a1-6def-4993-92cf-0d203aa7db5f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e31dabf-ea5c-4d28-ba6c-d564b8263e05",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "018dd7dc-5696-4a50-8f7b-40121d489ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55263fde-f251-4b1d-b1b9-665365887346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "880c184a-18b5-431d-a575-b6167bb13356"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3456cf86-bebd-4a98-88a6-d9ff92abd111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b84c309f-4e85-4a86-b456-fe1e8e5fd97d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99d00820-1c4b-44b6-945f-3e9e486de195",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73cd74ca-bec8-479f-8b14-2245313e513d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd2e1943-43a4-4bad-b8a1-409480827dff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "beb8386f-013c-41d2-9e02-59bceb263c80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e487655-92c9-49f3-a843-3fff781e5f84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a24b1439-f3b5-4b51-81bf-efa9247f2e61"
            }
          }
        ]
      },
      {
        "id": "c6d13ef7-9b4d-430b-b11c-cda6c20b8c36",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ba1637a-33dd-4764-bbb5-f7925835abbe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8267bde2-0cd6-4589-9faf-faa8d556f45e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cc7c6425-c15a-4b17-87a4-81b43667b65f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3792f29b-0740-45b2-a201-98132fa440e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d5305c4-bfbb-4864-8972-cd6bea7870fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 80.30555555555556,
      "responseMin": 3,
      "responseMax": 8426,
      "responseSd": 572.0778386384145,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718411865533,
      "completed": 1718411893940
    },
    "executions": [
      {
        "id": "67f20f4d-1596-4ddb-9ae9-71b538e76623",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d9afeea7-a90d-4a88-960b-5d61720316a0",
          "httpRequestId": "67aadb31-b622-42ce-9146-66f53b0e5fc3"
        },
        "item": {
          "id": "67f20f4d-1596-4ddb-9ae9-71b538e76623",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "80435d4f-c03d-437d-bded-f1afb76da466",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "64e1d2c5-9678-4903-a7a8-d5df4ea5d5b3",
        "cursor": {
          "ref": "d2323d91-7b4d-4a62-842b-7156f91e3564",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1b5f16f1-433e-44de-a397-ab4714ebe2fb"
        },
        "item": {
          "id": "64e1d2c5-9678-4903-a7a8-d5df4ea5d5b3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "608886c7-e58a-4abd-9367-3b0d8e731dde",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "b427d362-4ef7-41e4-b9cd-a86328aa4062",
        "cursor": {
          "ref": "cad31794-fd4c-4b42-bf46-d5c84970c08d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d5bd5355-c7bb-4b23-a66a-6159685595fc"
        },
        "item": {
          "id": "b427d362-4ef7-41e4-b9cd-a86328aa4062",
          "name": "did_json"
        },
        "response": {
          "id": "c605c9c1-47b0-4910-972b-f47176e7c350",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26983ff6-91a9-464c-8f93-449632873657",
        "cursor": {
          "ref": "8d7f06d2-57af-4f66-9a41-dee14252f493",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bd5c630-4d20-4048-a65d-0aeb85519b07"
        },
        "item": {
          "id": "26983ff6-91a9-464c-8f93-449632873657",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f6de00b-1c1c-4d94-9cc7-1677ac1f34e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 456,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26983ff6-91a9-464c-8f93-449632873657",
        "cursor": {
          "ref": "8d7f06d2-57af-4f66-9a41-dee14252f493",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bd5c630-4d20-4048-a65d-0aeb85519b07"
        },
        "item": {
          "id": "26983ff6-91a9-464c-8f93-449632873657",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f6de00b-1c1c-4d94-9cc7-1677ac1f34e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 456,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6a8328-0f62-47b4-a5a9-6148247e9b35",
        "cursor": {
          "ref": "d7ffc0f6-96c3-4c5f-9e92-f6fa037dd229",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "85040614-f164-4c12-9c14-bf77bb61a618"
        },
        "item": {
          "id": "0e6a8328-0f62-47b4-a5a9-6148247e9b35",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "63ea8b95-0179-4d6c-9c1f-75710b7c757e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ff803c-a558-444b-b0f8-4abb2eb981af",
        "cursor": {
          "ref": "d2cb5b99-6593-4098-b241-71534ab321e6",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a22f2320-efa0-4b81-9656-9dceeec3a94b"
        },
        "item": {
          "id": "e2ff803c-a558-444b-b0f8-4abb2eb981af",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8c581fe4-38f7-47a5-8450-3367cc53c787",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe86c730-c809-4bc5-9197-fa48dedca109",
        "cursor": {
          "ref": "b7ff21bf-5a76-4bf8-b259-b22251ab4918",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8cb4e5cb-16c1-4f88-9db1-c920727b73c4"
        },
        "item": {
          "id": "fe86c730-c809-4bc5-9197-fa48dedca109",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "32227054-5107-4407-84dc-4e9555b05b75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e200ef5b-6152-4e66-a857-7b51773aab0b",
        "cursor": {
          "ref": "ec9244fe-35b9-4c3b-9929-895f2e0fa9bf",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "faa8467a-7db8-422d-a45c-6bf210fda7b9"
        },
        "item": {
          "id": "e200ef5b-6152-4e66-a857-7b51773aab0b",
          "name": "identifiers"
        },
        "response": {
          "id": "9e18ca5b-da1c-41ed-92f6-767de0ebe04d",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d45c30-81af-4346-9fc0-932f4f3cd195",
        "cursor": {
          "ref": "26e4b20a-ad1f-43c6-bb0d-ae70f0ceb2a1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "52d9e2d3-c5dc-41c1-9cdf-88f76f8cbfa5"
        },
        "item": {
          "id": "28d45c30-81af-4346-9fc0-932f4f3cd195",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9da24f9e-f2e6-42df-8cae-0da22b4085c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23de4585-5fce-402b-82b0-99041c58bf3f",
        "cursor": {
          "ref": "324b01f4-1f7f-4447-8256-0c39e77181ee",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2fe170c6-5e6b-430a-a9e3-de36963bcc8c"
        },
        "item": {
          "id": "23de4585-5fce-402b-82b0-99041c58bf3f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3abaeb62-a9a9-437c-b22a-58d252b9b212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc644ee-fd12-44e6-a2ea-f6cbf3b46f8f",
        "cursor": {
          "ref": "d7810a21-a141-4bc9-affc-8b07088a42f1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ed931e52-1454-4e44-8a8f-0afa215c98af"
        },
        "item": {
          "id": "4fc644ee-fd12-44e6-a2ea-f6cbf3b46f8f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "40a1acf9-d9f3-4cea-85d7-490e3a31d2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fdf1e8-0286-499e-b009-9fc90f647950",
        "cursor": {
          "ref": "a01814c6-5407-49df-927d-8cb8ff062cb1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "18177ada-a1ad-4838-b610-ff0ded512c68"
        },
        "item": {
          "id": "d6fdf1e8-0286-499e-b009-9fc90f647950",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c49d462-caff-4435-8254-4417892dfb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ec4593-5a5f-4e4f-886a-15c705883d5c",
        "cursor": {
          "ref": "120263f8-33f3-44e8-99b3-32747f3c1800",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d63d6e24-f985-49a7-9bf5-38fc4ab03970"
        },
        "item": {
          "id": "b5ec4593-5a5f-4e4f-886a-15c705883d5c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bf084063-c995-4162-b5b4-48bf1a80ee73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb862345-a678-4869-8fbc-50e8539adc5c",
        "cursor": {
          "ref": "781a5afd-5e9b-4fba-99a5-690d1e0ddfd8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "08de8fb7-1e69-4770-a66b-87786df85234"
        },
        "item": {
          "id": "eb862345-a678-4869-8fbc-50e8539adc5c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b30f13a1-9a50-47a3-a337-a8977d8496e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f72236-fb87-45d9-9465-027989c8162b",
        "cursor": {
          "ref": "68b72064-12f1-460b-ab5c-d7153e8f3246",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0ac4cef9-1035-4de8-8ef7-7730b23cea36"
        },
        "item": {
          "id": "a8f72236-fb87-45d9-9465-027989c8162b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "40b179a7-d301-43f1-94a8-a8569288cc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b50ce29-a2de-4d25-b2c3-e3c81313bd50",
        "cursor": {
          "ref": "ffa75604-a104-4807-9a25-d606c078e8ec",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc711c5e-c97f-4272-ba1f-1d88c637fba1"
        },
        "item": {
          "id": "3b50ce29-a2de-4d25-b2c3-e3c81313bd50",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f86eda91-c4f6-4fbf-8f99-bab4f43778da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f0658d-5ebb-4a4b-b601-c001b79950fb",
        "cursor": {
          "ref": "efbf33fa-ce80-4875-8013-20efb8bdacc6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "41bc1e20-32e6-4f28-bfbd-f8e1871c5fcc"
        },
        "item": {
          "id": "58f0658d-5ebb-4a4b-b601-c001b79950fb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "70cc48cd-7feb-42e6-848e-f22164279b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f70752-255d-4ab5-ad2e-84a8df6bbcb2",
        "cursor": {
          "ref": "c1659709-0c66-440f-b2c5-4905ac33b6d0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "239c64a8-f3a5-4f87-945e-724ccf984a92"
        },
        "item": {
          "id": "33f70752-255d-4ab5-ad2e-84a8df6bbcb2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7038cfcf-afbd-4ba7-bb65-f1e3bc0b32c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f53bec6-553b-4b4f-ae7a-c33335813ad4",
        "cursor": {
          "ref": "7f8dbe64-1ee9-4d7b-b460-3c1657f84716",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e88da8ec-85c9-47a7-b748-94aba947bc24"
        },
        "item": {
          "id": "6f53bec6-553b-4b4f-ae7a-c33335813ad4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d60bc2ce-5f56-44d8-b6ef-06046ef3a5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5d467b-cdc3-43df-9b91-10a1b2a1fe40",
        "cursor": {
          "ref": "61a1e777-72aa-49c1-b414-e409d73d1edb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "71a5d7a2-70b0-499f-825b-c1f141eeb3a2"
        },
        "item": {
          "id": "7d5d467b-cdc3-43df-9b91-10a1b2a1fe40",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c0da8842-f0a3-456d-97c7-f877f15a49a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41043d75-739a-4776-8676-f2e3e2ee4bd5",
        "cursor": {
          "ref": "e01e4e6d-462f-4e25-9b16-032c37b00eb7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7780bd18-19f2-41ae-94b1-6bde73e8d336"
        },
        "item": {
          "id": "41043d75-739a-4776-8676-f2e3e2ee4bd5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "894dd9ac-adb2-4f6c-9070-397f1a3df729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379f1f99-e857-472e-bb0c-7c0d84398fd2",
        "cursor": {
          "ref": "cd161193-bfab-4e0b-9f96-1ccbbe734d76",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5c89fa91-adb8-4145-9f10-b370318c5cd9"
        },
        "item": {
          "id": "379f1f99-e857-472e-bb0c-7c0d84398fd2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d5253c85-783b-456d-9021-de0e7518490e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5870f88-e3a7-47f2-9390-ccff2962464d",
        "cursor": {
          "ref": "8a897121-5d3f-455e-94cb-4ac4e5516bb0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cbf9c333-c323-4d55-af96-180b7ebfc61d"
        },
        "item": {
          "id": "a5870f88-e3a7-47f2-9390-ccff2962464d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6435d3a2-268b-483b-9382-19c3bc48908c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78489663-e289-436e-bb2f-2d50342f8a9c",
        "cursor": {
          "ref": "cee0c95e-84e7-4305-a04c-977a1973be53",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ee285ac4-24ea-4349-9388-230e5b1aa4b9"
        },
        "item": {
          "id": "78489663-e289-436e-bb2f-2d50342f8a9c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "18f7e7b6-c15d-4c45-a426-470144d74da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84bc3bb-514d-41f3-b084-4eacf2346dd8",
        "cursor": {
          "ref": "6ab3cae0-6a6a-4d16-acba-6399e05e4c53",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "82890ce8-3c7d-4950-afa4-3b2991bf8675"
        },
        "item": {
          "id": "d84bc3bb-514d-41f3-b084-4eacf2346dd8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57ab720a-fc22-4de5-95df-611c784ef5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2389bf29-5d4e-4102-aa0c-fa0b10198b1b",
        "cursor": {
          "ref": "3dc1d61e-e08d-41ab-a03e-b42c89ab72ec",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b34ac044-fb18-432f-bcfe-13b392a85fce"
        },
        "item": {
          "id": "2389bf29-5d4e-4102-aa0c-fa0b10198b1b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "70a6831b-0fbd-4ee4-8004-eb2be9627f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c0d9d3-f94d-42f9-bc05-b17b67c8c25c",
        "cursor": {
          "ref": "a9c5cb39-945e-49a3-8661-83ff66c56d25",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "57d45685-f525-4c97-b873-e317b5462cc3"
        },
        "item": {
          "id": "74c0d9d3-f94d-42f9-bc05-b17b67c8c25c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "63bdc242-f34a-4c0b-a67a-8bc05ed72254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05ac0b6-4a40-450c-a45f-18816722376c",
        "cursor": {
          "ref": "fca6eb8e-2fba-4644-b3bd-c805a177f8fe",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3d7314b8-dbc7-442a-9347-9d1cf4447be7"
        },
        "item": {
          "id": "f05ac0b6-4a40-450c-a45f-18816722376c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a7826204-b286-418c-aa6c-31f3af36bef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51f8d3b-9f82-416b-a62f-527dfe1dde31",
        "cursor": {
          "ref": "e0e70e28-1297-427e-8b33-5a43d2f1963e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "528aff81-b495-4c00-afb0-f7c7ae10a2e7"
        },
        "item": {
          "id": "d51f8d3b-9f82-416b-a62f-527dfe1dde31",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b5fa620d-4af2-44c4-b310-b89c8c08ce01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12d0bd8-cc1f-4f33-b7e2-24b2923b5ece",
        "cursor": {
          "ref": "56f5c01c-dc16-43e5-8e14-5fac0432bd99",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af533aab-1b78-42cf-9d5a-f50428472f70"
        },
        "item": {
          "id": "e12d0bd8-cc1f-4f33-b7e2-24b2923b5ece",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "99f61fe4-7ad0-44ba-a0ba-6daac3566669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604c9b2e-9b66-456d-9feb-e5b8f681e4ae",
        "cursor": {
          "ref": "149117e5-8efa-4f83-82d6-8827f9965265",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d97b1ac5-4204-4962-87ee-d2607ad2eb54"
        },
        "item": {
          "id": "604c9b2e-9b66-456d-9feb-e5b8f681e4ae",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7675d6ba-f207-44fb-b3cf-1fec89d58d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211b4a17-3b63-410e-8a3a-0317b81f99e3",
        "cursor": {
          "ref": "831fa1de-3b4f-4939-9e0b-7b05e70c82be",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d5bb130e-4200-47ef-951a-d0e6ddd71d9f"
        },
        "item": {
          "id": "211b4a17-3b63-410e-8a3a-0317b81f99e3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f58ff43b-9fc7-4b18-86cb-3ad345983912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfe9a3f-7cc1-4fee-b64d-feeb5bdeeabc",
        "cursor": {
          "ref": "04ffec90-7803-40ed-8c1a-d1193bb4e53d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dcaa1516-3a73-412e-8a7f-8d074fbd9418"
        },
        "item": {
          "id": "fdfe9a3f-7cc1-4fee-b64d-feeb5bdeeabc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "98bd86fa-fb61-4640-99c3-5c1de41df755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72d48fa-02f6-475b-b9f0-23a1c8c4e902",
        "cursor": {
          "ref": "95974b6d-188c-4240-88f7-06f0743d83e3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ce497607-3dda-445d-8cb1-5abe1b1b0836"
        },
        "item": {
          "id": "a72d48fa-02f6-475b-b9f0-23a1c8c4e902",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e1429109-1bde-4ddb-b8bc-cd0c6f7a3b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b28fe1-32a2-4b8b-8d07-78ce6eb869ee",
        "cursor": {
          "ref": "6f7d7ebe-a826-4abd-bd7b-3250e128837d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c3e3c68d-8a4f-4f35-90bd-608beee7a04a"
        },
        "item": {
          "id": "17b28fe1-32a2-4b8b-8d07-78ce6eb869ee",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "006e7fe5-47b5-43bc-94b7-8fc6f7c8e26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec22f313-bef5-4b2a-b8de-16daaee579a1",
        "cursor": {
          "ref": "9eeb4d4e-0c33-45d6-8925-cf4660e509ea",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "84fe4767-e83a-4f1d-8a71-f8363cf5f15a"
        },
        "item": {
          "id": "ec22f313-bef5-4b2a-b8de-16daaee579a1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "33030e88-0f51-470f-a991-363c067d2845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4fa358-6415-41c2-9b5a-ab25f6e1f760",
        "cursor": {
          "ref": "ecba15e1-b1dc-4c8c-b9d2-6531ac2fc6cc",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5ab39352-8ac8-49a5-9917-8ffea16237f3"
        },
        "item": {
          "id": "9f4fa358-6415-41c2-9b5a-ab25f6e1f760",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "941ae1dd-1e33-4710-bcbe-1c78ef2f73cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e6350b-e376-4ae3-a886-51b7d9e27db8",
        "cursor": {
          "ref": "f8999155-6e49-48bd-905c-607d2bcfa69d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "76227030-82d2-4db6-8fe5-aade23f46e3b"
        },
        "item": {
          "id": "96e6350b-e376-4ae3-a886-51b7d9e27db8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "57d6f2ba-f5b1-4f23-82fb-beb71974bfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcacffd-9ca2-4d6c-afe4-989fcc8071b6",
        "cursor": {
          "ref": "eef41dea-a3e6-4132-ba97-679dc1f58a66",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2ca74dda-a730-42f0-9987-b19a1f714374"
        },
        "item": {
          "id": "7dcacffd-9ca2-4d6c-afe4-989fcc8071b6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "063c6ee7-daf8-4007-bb22-5b7ceec57962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84d18eb-3932-46cf-a2f4-223520db3ac2",
        "cursor": {
          "ref": "c391db20-1a07-49b9-add9-8be13b99adf7",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77bed20e-e08d-48c3-bbd9-29aa477b1b41"
        },
        "item": {
          "id": "c84d18eb-3932-46cf-a2f4-223520db3ac2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3848497e-a6b7-46ba-abcb-530d43eecaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca6bbef-1b5c-4eec-82f4-4a49982942e7",
        "cursor": {
          "ref": "7fd828f3-72e2-4158-87a8-a60377cff716",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "37b5c701-8763-480a-9ee4-15541ffbfff0"
        },
        "item": {
          "id": "dca6bbef-1b5c-4eec-82f4-4a49982942e7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "56d2e2bc-00fa-4188-90ae-480e959bb73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e221a521-d2f5-469d-aaa7-055379157d68",
        "cursor": {
          "ref": "0c153605-c4ba-46cd-b4ef-c6b3a836095f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ba711b31-fee1-4648-854d-11569d396e2d"
        },
        "item": {
          "id": "e221a521-d2f5-469d-aaa7-055379157d68",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d978d0b3-2618-47e1-94f3-d126e3168228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7485bf-d734-4bd0-8b3e-ca2320bb95a0",
        "cursor": {
          "ref": "60db2a4f-7bae-4b95-91f0-3df9284c3849",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7d4eb5d2-b7cc-486a-9503-461cff60570a"
        },
        "item": {
          "id": "dd7485bf-d734-4bd0-8b3e-ca2320bb95a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f0a0fb57-e57b-474a-b9cb-02c10c1eeed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66684a6-320f-46a6-ba10-555ea6aac2de",
        "cursor": {
          "ref": "b49c0e71-77e9-4368-bc9e-748e3b5864af",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "89cf0348-75b3-4131-86b1-722807098762"
        },
        "item": {
          "id": "b66684a6-320f-46a6-ba10-555ea6aac2de",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d12546e6-6126-4bc0-a417-e093b48d565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e21fc3-c198-4bc6-9931-e04542f4f753",
        "cursor": {
          "ref": "fe414ecc-e180-4511-9e34-121a5abedd93",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8ef73e2f-4c22-4ffd-b252-ad281d0245b1"
        },
        "item": {
          "id": "29e21fc3-c198-4bc6-9931-e04542f4f753",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ab2e0b28-5d4d-41f4-82c1-ef227215ffa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f313ce95-0f37-4f1c-a0a5-6c5476e89b2b",
        "cursor": {
          "ref": "adc662b0-984b-4619-9584-e04c1b94342c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d8e32716-0ddd-4066-946a-7c5e0dc4ea9b"
        },
        "item": {
          "id": "f313ce95-0f37-4f1c-a0a5-6c5476e89b2b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "96684569-cf66-47a5-ade0-6bed0d8a0bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20d434e-594f-4b58-8b77-a8071995c180",
        "cursor": {
          "ref": "dd4142a8-04bb-46dd-a3d3-eb9685906935",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6d8cab3b-60ed-4f82-9a92-a6f0e5b3b79e"
        },
        "item": {
          "id": "d20d434e-594f-4b58-8b77-a8071995c180",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c965da28-3a41-44ae-8f0d-010c4ed2a498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2510a77-5471-4c0e-be8d-c39c4813484b",
        "cursor": {
          "ref": "71c55382-d3e5-4053-890a-982bdfef0b8b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "54db1fe7-ba8d-400f-bfe4-be55ae75ce6f"
        },
        "item": {
          "id": "b2510a77-5471-4c0e-be8d-c39c4813484b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aa5e61e1-4b84-4ded-82f7-9c1326f2cb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edfa89a-afcc-48c4-a516-0ea2efebb995",
        "cursor": {
          "ref": "55eb44d0-246f-4349-a597-871885bbfe70",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "00e75086-0d6b-49f4-b0c5-0842a5aa07e5"
        },
        "item": {
          "id": "6edfa89a-afcc-48c4-a516-0ea2efebb995",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d2d29f0c-554e-4e74-ab5e-c812501f1841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241d85c5-27f9-48c2-84f2-71ec01a0c35f",
        "cursor": {
          "ref": "5da28633-da66-469e-ae71-9847b53ad9b6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "37fc8e5b-6cc5-47d2-ae5a-261b8a921d18"
        },
        "item": {
          "id": "241d85c5-27f9-48c2-84f2-71ec01a0c35f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "76dcc258-8bf4-431a-9a05-b5e77ffd5240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913acc90-2f1b-485c-abcc-0283d693ea7c",
        "cursor": {
          "ref": "87b540f9-85dc-41bd-964a-49e50e3fe149",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9a8a7d8a-f4ff-43b7-99a7-356a12eb410c"
        },
        "item": {
          "id": "913acc90-2f1b-485c-abcc-0283d693ea7c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3954ed6c-0a65-494c-b23e-9c375bb1fe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9edd45d-218a-416a-9700-e6ef106c6167",
        "cursor": {
          "ref": "8460f6fe-a096-4ea3-92f6-93891c21faf5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "45d5e74f-fcdb-4a2f-9f35-a172dd63d607"
        },
        "item": {
          "id": "f9edd45d-218a-416a-9700-e6ef106c6167",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e74b25b2-309e-42dd-8404-3d323546444c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4308c846-1a8f-4c26-a756-8fcda26c37dc",
        "cursor": {
          "ref": "063f6887-f5a8-494d-a9c0-b3c05f2ac4eb",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d2671600-c81b-4335-b030-3b529310a9b9"
        },
        "item": {
          "id": "4308c846-1a8f-4c26-a756-8fcda26c37dc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ee69832c-d32a-40f0-86cd-611e8ac41642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7ad9f6-d267-41fb-9116-1b886b630fd9",
        "cursor": {
          "ref": "8a6ff680-d7d2-4d85-b772-00d07165ded9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "da93ef13-73ea-4eee-acde-749925babcc2"
        },
        "item": {
          "id": "5f7ad9f6-d267-41fb-9116-1b886b630fd9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "452106fa-87c8-4b8d-8ab3-5268ff4c54df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b0bb57-af27-4e56-b309-b9a017d55acc",
        "cursor": {
          "ref": "0b299256-ac41-4389-9636-4aed78214bc5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d1b557fa-5303-471f-9f51-71d4323d6028"
        },
        "item": {
          "id": "27b0bb57-af27-4e56-b309-b9a017d55acc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ff5df15e-4a6f-47f5-ac5b-921ddebe7a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34088235-c98a-45c8-a37f-ca87857af609",
        "cursor": {
          "ref": "65e08074-ceb5-47e4-b055-eea66f7531bd",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e625d053-26d1-411d-bd2c-8a3c89d7dc17"
        },
        "item": {
          "id": "34088235-c98a-45c8-a37f-ca87857af609",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f447e1bf-b508-450f-bc48-95943ae6e9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6a2743-29a3-449c-9486-352bea7d8180",
        "cursor": {
          "ref": "449d68db-42c2-40a4-9f87-6e49f71b7b30",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "302a2d1c-8caf-4dcd-8a2f-15e52746c4c0"
        },
        "item": {
          "id": "5f6a2743-29a3-449c-9486-352bea7d8180",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2bc509c5-47dd-4d84-be96-749330473458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74544962-d3c5-4bea-a74b-73b834dd7cba",
        "cursor": {
          "ref": "74ef94c2-65cd-404f-a816-ea795bdd8904",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dd78ba74-e70d-4786-ab7d-8b17f2ca47a3"
        },
        "item": {
          "id": "74544962-d3c5-4bea-a74b-73b834dd7cba",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "46a9eff1-dc0d-413e-914b-835a6b782ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5ba192-cd8d-4d52-b6e9-a2aced92b7b6",
        "cursor": {
          "ref": "32a1ea1d-9c58-4859-aab6-9ee4ec3831cf",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f3c1ea98-2f35-4c24-840c-a37dc1669b1a"
        },
        "item": {
          "id": "8e5ba192-cd8d-4d52-b6e9-a2aced92b7b6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "af95a91a-5859-4b9c-a187-6a1a90e7dda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792bcdf7-01a0-4a00-9373-4deae17167a4",
        "cursor": {
          "ref": "5f451d78-d664-46b7-acec-160922ca9379",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "02064b41-3dc0-48a1-9b9d-7d8ecca249dd"
        },
        "item": {
          "id": "792bcdf7-01a0-4a00-9373-4deae17167a4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a4a5853d-a369-45d9-8b0a-912818299b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5a719f-0ddd-4342-8b45-2b25147c15fa",
        "cursor": {
          "ref": "1a882d57-7459-4b1c-bfdd-09b049c9bb39",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7a8d6f51-589f-4161-9950-e22e2dff5403"
        },
        "item": {
          "id": "af5a719f-0ddd-4342-8b45-2b25147c15fa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8d5a96c6-7d21-4cb7-b80e-60ebae4edeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324e8104-2f88-4be8-8da9-e3c32141e6e2",
        "cursor": {
          "ref": "fa5ba35d-802d-4bd6-968d-3d1048977abc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0cb6a6ba-4172-4874-9495-5b2d58757330"
        },
        "item": {
          "id": "324e8104-2f88-4be8-8da9-e3c32141e6e2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "761700fe-af77-4431-9009-26f6a4ece247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9702ae-cf12-42a0-ba36-6efe548f85f8",
        "cursor": {
          "ref": "b12c1c26-4ec6-4a16-9d37-ca833d2ccb97",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "127c4f8b-7a8a-47af-9de4-144b5f45ba1d"
        },
        "item": {
          "id": "2a9702ae-cf12-42a0-ba36-6efe548f85f8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7aae8146-f70a-40ca-8e77-cc61a7fc0aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d3f333-33e7-4a69-87a3-f9a7412c0c3e",
        "cursor": {
          "ref": "a55ea553-2962-4572-8546-0c0aff8826af",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "856cfcf5-0dde-4ca7-abc5-314c9dce740e"
        },
        "item": {
          "id": "a3d3f333-33e7-4a69-87a3-f9a7412c0c3e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dd39b9a8-0f73-4533-a82a-6f4fdfc253ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7cedf1-9f96-41c6-b10b-f694c3e28c8f",
        "cursor": {
          "ref": "72fdb542-99b9-408e-92ea-eeac45b699b7",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4bf20e82-54e4-4f7f-ba79-101d23f893bd"
        },
        "item": {
          "id": "6b7cedf1-9f96-41c6-b10b-f694c3e28c8f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a5dc4896-d509-4888-b39a-6726d9800517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a31325-4384-43d8-9e03-6e5c25bca2c8",
        "cursor": {
          "ref": "6be75378-c460-4577-99a1-9a973a5ecb38",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8a911693-7fce-4cc9-ba3f-a4e2922d7e42"
        },
        "item": {
          "id": "11a31325-4384-43d8-9e03-6e5c25bca2c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "01596c73-f3ed-4ce9-bb03-88da88440594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3da867f-a948-471b-94e7-93f2ab9ef6d9",
        "cursor": {
          "ref": "8492ecbb-c2ad-4db6-94c9-4e6dfefffcb3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "024c593e-c15b-40d2-b34b-1f88c7f5f1f8"
        },
        "item": {
          "id": "d3da867f-a948-471b-94e7-93f2ab9ef6d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7fc55f64-4a93-480e-bbef-e728ea1c7c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbc50f3-9a29-4d9a-b492-3cde48ecee3a",
        "cursor": {
          "ref": "f9f1de38-22c1-4a99-84de-a07d6eb89ef0",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5fd4f84d-202d-4bb4-8528-271ab2ece40d"
        },
        "item": {
          "id": "2dbc50f3-9a29-4d9a-b492-3cde48ecee3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "42d4f064-4034-4691-942d-2206e027309d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db60f752-9d6d-4c2a-9d8e-46e929c89357",
        "cursor": {
          "ref": "02449b73-0a59-4de0-82f7-6511be51c122",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5b12c713-53ef-4a65-9ddc-e91ec0960f47"
        },
        "item": {
          "id": "db60f752-9d6d-4c2a-9d8e-46e929c89357",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b9f7cbf5-2ecf-403a-8d4d-b67b90a2c887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d10741-d4fd-4adf-8a46-3aea33075649",
        "cursor": {
          "ref": "21359086-2bc8-41cd-bd88-d489b14af522",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "81e563cd-0f21-46ca-bfbc-5f848086c12a"
        },
        "item": {
          "id": "54d10741-d4fd-4adf-8a46-3aea33075649",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0ca597b2-36b0-4052-b000-ca33360664d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ab9823-736a-44d1-ab65-89db4c53d1c5",
        "cursor": {
          "ref": "44ff0831-97cf-4a1a-892d-108149426916",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b468e3ae-0e7f-45b3-b03e-d5c57cf24130"
        },
        "item": {
          "id": "d2ab9823-736a-44d1-ab65-89db4c53d1c5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9e09c394-689c-4423-8ae2-09e3fb7f98f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eada58ef-9916-4227-807f-bc3b8def902d",
        "cursor": {
          "ref": "d2f81466-387f-40a4-ad2e-c76b15eab178",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "241e63e8-4785-4ada-8d77-40829628cc47"
        },
        "item": {
          "id": "eada58ef-9916-4227-807f-bc3b8def902d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "97cd21db-e2cb-4138-a497-22861357a0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f82c234-6ee2-4bcc-84e9-2bf3f6e88fdd",
        "cursor": {
          "ref": "4fff8c25-31cc-4414-b117-0578e11a32ab",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2826f2ac-dab2-4e31-a540-658ef10c5fcf"
        },
        "item": {
          "id": "6f82c234-6ee2-4bcc-84e9-2bf3f6e88fdd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "61329ed5-e730-41d0-b87a-7e229f1166e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a4e591-9c47-47c1-833c-d22fc0c72ff2",
        "cursor": {
          "ref": "b938bcdc-715e-467d-a2a4-0ce20fa46469",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5cb8619b-7d9b-4489-94a3-ce3c65a8c25f"
        },
        "item": {
          "id": "30a4e591-9c47-47c1-833c-d22fc0c72ff2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "af9f79ae-f471-441e-8533-410f7981b227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002221b1-4935-4c88-be0f-e8dabd9d4852",
        "cursor": {
          "ref": "e71eac3e-9834-4c8a-a78b-53b3540c9b91",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ff163fd7-0a8c-492c-8b6c-5a3ac91d76b2"
        },
        "item": {
          "id": "002221b1-4935-4c88-be0f-e8dabd9d4852",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f49f9d9c-5cb8-4a95-97ef-b583bb066421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf7a465-0851-4d12-8394-cceb14faa537",
        "cursor": {
          "ref": "772d4617-b01e-4f62-acfe-2a32e084c7d5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "10f19bac-0d65-4c44-bcba-ea5eef0c9db7"
        },
        "item": {
          "id": "bcf7a465-0851-4d12-8394-cceb14faa537",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3fafc36a-94b9-4e20-a05a-f6114259d4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf155a2-f78b-4a4f-9e74-2e1f855c8ec7",
        "cursor": {
          "ref": "5e74fe78-1325-46ca-8ac9-6ca3ffa6cb89",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "086af3e9-43d0-40fe-90a5-079f4807342b"
        },
        "item": {
          "id": "bbf155a2-f78b-4a4f-9e74-2e1f855c8ec7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4fe0983e-be4a-4855-b557-3e11164b38a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57917aad-41eb-49b3-8715-ce0463f01091",
        "cursor": {
          "ref": "574c4f4e-1393-4e69-8e87-b20dbc2b4e47",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "93e05449-5d2c-4870-aa90-8456c2ec6d8a"
        },
        "item": {
          "id": "57917aad-41eb-49b3-8715-ce0463f01091",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aed23472-aa11-4856-9266-56dd4bbc5a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3af3b4-d5d8-41a1-8029-086e20af0007",
        "cursor": {
          "ref": "3f085901-16d2-49c3-a6da-9be55b9bbf20",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b86c2708-b5d8-4abd-bbd7-052de629503e"
        },
        "item": {
          "id": "ac3af3b4-d5d8-41a1-8029-086e20af0007",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "093259be-7781-4529-99d7-ee8389e478bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1735f66f-cbf7-4581-bd13-595d63fd3f81",
        "cursor": {
          "ref": "70b97ba5-88bb-4e97-8cc8-225c7b25b5f5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6de9da86-b1de-4854-89bb-7e0467081db2"
        },
        "item": {
          "id": "1735f66f-cbf7-4581-bd13-595d63fd3f81",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cc59f5a3-bbed-4982-91b0-1b6817968147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98e31e9-82db-4eb4-8ccb-9dbf98807f91",
        "cursor": {
          "ref": "324c055f-4648-4838-8051-fbae832fb4fc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e13d7a3f-c9c0-4bad-b48b-e73df3bf58f8"
        },
        "item": {
          "id": "a98e31e9-82db-4eb4-8ccb-9dbf98807f91",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9b306757-3e24-4509-b762-ab7c18cbbbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c601d70-ef95-4a5a-80d7-f89810276670",
        "cursor": {
          "ref": "fd36614b-fd91-4a9f-a64a-6b77b1ffe9f9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dca8d8f2-651d-46b5-93c3-db284aacedcb"
        },
        "item": {
          "id": "7c601d70-ef95-4a5a-80d7-f89810276670",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7c9a9381-5f68-4652-af4b-6469b529a92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce646a44-480f-40e3-bbdd-cf2f922cf435",
        "cursor": {
          "ref": "cb166aff-e849-47d5-9017-fa1e3d08d7d8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1cea713f-8cb2-4936-a4bf-1d6eac0d0e7e"
        },
        "item": {
          "id": "ce646a44-480f-40e3-bbdd-cf2f922cf435",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c9bc8b4e-a025-4740-b6df-e169ff9355e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270d8695-3934-4b09-b1da-541fbe4c1848",
        "cursor": {
          "ref": "34de7528-6b6c-41c0-a87c-7b32ec83a512",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4745e5bd-c85e-4a30-8c23-3188a3e2a952"
        },
        "item": {
          "id": "270d8695-3934-4b09-b1da-541fbe4c1848",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c68a5c72-4ada-43ed-abdd-eb89912f7d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12aa466f-dc1f-4d6c-86c8-2568653f8f8f",
        "cursor": {
          "ref": "aec8bc56-3abf-45ad-af4d-624362e401c1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e1a4751f-a1d9-476e-af89-8cdd79046042"
        },
        "item": {
          "id": "12aa466f-dc1f-4d6c-86c8-2568653f8f8f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "de30951c-ecf6-428b-83bb-759a877e472c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7500dfdd-9f78-4ce3-b83d-1786af2d2232",
        "cursor": {
          "ref": "a58719be-5974-4883-8a54-c00584614d8c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "58814dc2-9c7e-44cd-ab0c-10e6d06b4680"
        },
        "item": {
          "id": "7500dfdd-9f78-4ce3-b83d-1786af2d2232",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "36338a76-3d0c-4b61-b9a1-1eb9905998d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a50b01-cad8-497c-bb18-89d4de6f4064",
        "cursor": {
          "ref": "ccf6fcd2-4002-41d8-adf3-a34f9741cc1c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "94833904-9989-413a-a8e3-e59d1c8f8234"
        },
        "item": {
          "id": "38a50b01-cad8-497c-bb18-89d4de6f4064",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d7ff100b-b128-4dc5-85de-bb8493c26059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710db925-a09f-46e6-a937-514d368b8e6b",
        "cursor": {
          "ref": "446c8d62-25a2-4bc6-aaa5-ad79bf2fa4b9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cc33b677-0eb2-40a5-838d-cd4c0dc51b3b"
        },
        "item": {
          "id": "710db925-a09f-46e6-a937-514d368b8e6b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "73131791-54df-4ed3-be98-7123842d3983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a020f44d-e652-4f51-9cfd-73ce54a7ad3b",
        "cursor": {
          "ref": "f4cd9069-60c8-482f-99c4-0ff31dd80be9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6ef35fac-dfd7-47fe-9b96-0406c95d0994"
        },
        "item": {
          "id": "a020f44d-e652-4f51-9cfd-73ce54a7ad3b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7c1bf33f-f50d-4688-9dc3-127949de189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024b5354-c7a3-46ef-80f2-eaf7e0c54d3e",
        "cursor": {
          "ref": "be55eb4c-46e6-4908-b457-97cef5eac382",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3912d975-9c45-44d0-8bb9-833b9d92232a"
        },
        "item": {
          "id": "024b5354-c7a3-46ef-80f2-eaf7e0c54d3e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6296dc2c-56eb-4cc5-a6c1-e5e8aba2c268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7567b017-0c13-4d5d-8823-6587427e5790",
        "cursor": {
          "ref": "07acfbcd-461a-45b7-93c1-815f9b11f54f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "49e48797-bee3-46bb-86fa-94bfb497c191"
        },
        "item": {
          "id": "7567b017-0c13-4d5d-8823-6587427e5790",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "231f7136-b3c0-4a44-9b2c-06c2a15b9c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df24fe6-8b35-4d52-ac9b-737c3a00ce21",
        "cursor": {
          "ref": "bd5569e9-c3eb-47b7-8140-ab25d80b3d72",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e662a32e-57ad-4639-8d00-cb07483b2b24"
        },
        "item": {
          "id": "0df24fe6-8b35-4d52-ac9b-737c3a00ce21",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "53e765fb-7a42-4979-8e27-4592a79a6341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd8e097-f2c7-4538-ac0a-383e45fe1ecf",
        "cursor": {
          "ref": "bfa617c2-d9ba-4d52-8160-5631d8d5e9ca",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fe188909-fe84-4632-bfa9-b3f9b0fe9cb3"
        },
        "item": {
          "id": "9fd8e097-f2c7-4538-ac0a-383e45fe1ecf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f8abf27e-2013-4a55-be85-3be3780cfd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56d6f26-34dc-4f76-bc48-ccf7396d95e6",
        "cursor": {
          "ref": "d6b54f2c-b236-45ba-b3bd-8a8a1c6b58ec",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "112ea380-afd6-400e-ac59-72ece487ce7b"
        },
        "item": {
          "id": "c56d6f26-34dc-4f76-bc48-ccf7396d95e6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a050ccbf-1875-4f34-9744-6dca931788b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594e6ba0-9392-4071-9bc7-808c067c7204",
        "cursor": {
          "ref": "688dd321-36c2-4ae7-a5e1-29f65521249d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fa44d8c5-ddd8-493b-ba39-3cdc11640d3f"
        },
        "item": {
          "id": "594e6ba0-9392-4071-9bc7-808c067c7204",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9727bbbb-e23b-412b-ac76-5046a1b9b1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb92c779-37df-42fb-bfd0-7ed36bdf6557",
        "cursor": {
          "ref": "50485719-d753-4301-b436-a9d19e484ef2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f2471fc6-9cfd-432d-a5d6-2de9a8772972"
        },
        "item": {
          "id": "cb92c779-37df-42fb-bfd0-7ed36bdf6557",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "78c92d95-aa91-4b49-939f-587fd837e8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ced4683-341a-4070-ad51-8046a658f948",
        "cursor": {
          "ref": "0757244f-34d3-484d-8396-9ec1c94dca53",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d16fed72-df97-40bb-87a0-2530c087bea7"
        },
        "item": {
          "id": "3ced4683-341a-4070-ad51-8046a658f948",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ea2bc373-bdc8-4719-a8e6-3bb550e9aba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c9a71a-0b7b-4302-9ad2-e918e7d22a11",
        "cursor": {
          "ref": "39c2c7b5-b0af-4ffb-935b-29e13cbaa7f8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "380abfd6-45ea-4bda-9835-1334f7b56d25"
        },
        "item": {
          "id": "53c9a71a-0b7b-4302-9ad2-e918e7d22a11",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "588f3944-49be-4dff-a290-6de657891890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edca9bd-1d54-4a18-9e44-c208733e19bf",
        "cursor": {
          "ref": "a5075d9d-9d5e-450a-9e2f-92ea64fc0919",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "67fa6f36-7ba5-4fba-92bf-f11daac30ea8"
        },
        "item": {
          "id": "6edca9bd-1d54-4a18-9e44-c208733e19bf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "084231d0-8328-48a5-a847-53d7b6e83040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa9c6e3-2394-4a76-a341-726855787693",
        "cursor": {
          "ref": "4e9302dd-a548-4db4-8fb2-081c92f4f993",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fdacf087-c888-4b81-9cc3-9604411e6ef6"
        },
        "item": {
          "id": "0aa9c6e3-2394-4a76-a341-726855787693",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ebe68923-8bef-4bdc-982b-d78a894562be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7cc7dd-7b66-46eb-bec6-8dcf47037161",
        "cursor": {
          "ref": "cba0faad-db82-4e95-9f8a-8c527c4b309d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "812a3c6f-1855-45ff-bf52-6cce6c76a906"
        },
        "item": {
          "id": "1e7cc7dd-7b66-46eb-bec6-8dcf47037161",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2c8c19ad-735a-4ab7-8967-a75563d3277b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8215ae-3e6a-49f5-af5e-58c6abbea504",
        "cursor": {
          "ref": "1301b5e4-7f27-482d-8fba-6f9eaef74db7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d763e702-ebf1-4239-b3c3-d9791ba73e59"
        },
        "item": {
          "id": "8c8215ae-3e6a-49f5-af5e-58c6abbea504",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a2a6b7ed-8046-4339-8623-71d9d6d83ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d48c9cc3-38d7-4507-bc42-b37ea01a0e50",
        "cursor": {
          "ref": "4d0fcfc7-76e6-4549-bff4-bd0dfe1fc916",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "75832fc5-fe8f-4bdd-a5ba-f6a1a2fb7826"
        },
        "item": {
          "id": "d48c9cc3-38d7-4507-bc42-b37ea01a0e50",
          "name": "credentials_issue"
        },
        "response": {
          "id": "64530142-fc9c-44ac-9231-672912653b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6ea0a416-c584-48e4-87a6-8450b14a40a9",
        "cursor": {
          "ref": "118c507d-104a-4719-b9b9-3e260903a4b9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "67c070ae-dddf-4b58-895b-d1a0d6cb00b2"
        },
        "item": {
          "id": "6ea0a416-c584-48e4-87a6-8450b14a40a9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f025433a-82c7-4969-a55b-bd74ba3863a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1afe07d2-0e9d-442b-8a43-39560355ecca",
        "cursor": {
          "ref": "737f747d-000b-40b2-a301-e0fe6ff77441",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a17cab1f-8df1-4649-aeb7-9e7b49cf779d"
        },
        "item": {
          "id": "1afe07d2-0e9d-442b-8a43-39560355ecca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f6fcafdf-3c17-482e-943f-34130525a8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1ab49585-b8d8-4eea-8a5d-c06bf2a3d4dc",
        "cursor": {
          "ref": "850b3b9e-1ed9-477e-b6aa-ca78918dc172",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2c06b4fc-162e-4cb8-8cd4-f985d03132bd"
        },
        "item": {
          "id": "1ab49585-b8d8-4eea-8a5d-c06bf2a3d4dc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b161cf2c-2548-4f39-ad59-ab2a1296bc93",
          "status": "Created",
          "code": 201,
          "responseTime": 8426,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ce802d-3d85-4ad4-a3bd-5a5f9c001b87",
        "cursor": {
          "ref": "470f53c1-3fa9-4f93-a6c9-3e479577bba8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a17d8eda-2b00-478e-a7e3-0a3fc4510292"
        },
        "item": {
          "id": "46ce802d-3d85-4ad4-a3bd-5a5f9c001b87",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "071e470a-7d34-4a09-8bce-8cb74d98dd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ddeb00e0-de28-4f7a-b09a-2ba2cdcb79e6",
        "cursor": {
          "ref": "081b37da-d516-451d-9a5d-0d0d1cd45440",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "43c918ad-d6f8-4419-9c2f-23e695fe55ef"
        },
        "item": {
          "id": "ddeb00e0-de28-4f7a-b09a-2ba2cdcb79e6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ebf3f3db-0ae3-40d3-8462-85f4d94208d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bc6ee707-b64d-4efb-9270-946a57e23916",
        "cursor": {
          "ref": "78a752da-d6f5-4648-8ed9-9ed22008648f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "78beb619-f714-4798-a27a-47a9d33e8151"
        },
        "item": {
          "id": "bc6ee707-b64d-4efb-9270-946a57e23916",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1b0d31c2-e91d-451b-a8b5-baa38ecccd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b963557-db09-49b4-84b8-7771d543b1e7",
        "cursor": {
          "ref": "8323ed90-c10d-4908-992e-256da3f6df54",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6cf88d1f-296f-472f-a31f-9bab471cde76"
        },
        "item": {
          "id": "2b963557-db09-49b4-84b8-7771d543b1e7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "735bac6b-d3de-4480-b024-022d8f262b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a441ae6-c3f5-43b3-b08c-6fb0d8ded526",
        "cursor": {
          "ref": "7f01ccea-2eaa-47b7-97df-30da0af9e324",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "df07b3a5-d531-474b-87a5-d5b45a8763f7"
        },
        "item": {
          "id": "8a441ae6-c3f5-43b3-b08c-6fb0d8ded526",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c8153c72-101b-4012-a716-c9eace975940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa4c99f-c4cf-43a8-a14c-22de6bc94c34",
        "cursor": {
          "ref": "fa896b34-f5f2-4e65-997c-58d3bcb148e4",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8a684f1a-22af-4a75-b878-f09daf8c6280"
        },
        "item": {
          "id": "0aa4c99f-c4cf-43a8-a14c-22de6bc94c34",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1593c132-117f-4cc1-942a-1026304352e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef0c8a9-f366-4dc5-8eea-97b286995347",
        "cursor": {
          "ref": "975bc3f3-a651-436f-9e43-c779a570d706",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ee0ebfe-16d2-4d5b-8e0c-59f728a95f94"
        },
        "item": {
          "id": "2ef0c8a9-f366-4dc5-8eea-97b286995347",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9651d866-1da5-41f2-88e6-033918d1b787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f93ce1-f024-451a-99c8-bdae00daab83",
        "cursor": {
          "ref": "d57a50dd-8a1e-491d-902d-6d3c3f3243a2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d7a8a10a-2abc-4f7f-8164-2605d1bcdd82"
        },
        "item": {
          "id": "27f93ce1-f024-451a-99c8-bdae00daab83",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a339f16a-33cb-4ec3-90f4-c127e12d8c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1b1f34-fb3e-47d3-bc80-81a2886679e9",
        "cursor": {
          "ref": "33eb0a85-ae72-4008-8100-edc9f1268350",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3cda56be-a9d9-492a-ad25-abd27154f887"
        },
        "item": {
          "id": "3c1b1f34-fb3e-47d3-bc80-81a2886679e9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c0655c49-2720-42cb-b7ae-b4b20d44bafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c228cb-ccbb-4545-b60f-b7a9ac928d22",
        "cursor": {
          "ref": "219087f2-0a54-426e-b1bc-7d98e280f6dd",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "11d3b2ca-344d-442a-b097-0fe5d6e4d36c"
        },
        "item": {
          "id": "79c228cb-ccbb-4545-b60f-b7a9ac928d22",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a93e648a-dd8d-4018-b24a-22d3088e4223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b05a9a-7e8f-45a6-a97f-14e62bbcfa0e",
        "cursor": {
          "ref": "45597445-2458-40c2-97b0-f60f0eddf8e2",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c11469a1-7997-4194-954e-15ebe77a70dd"
        },
        "item": {
          "id": "08b05a9a-7e8f-45a6-a97f-14e62bbcfa0e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d9c5627c-2092-4838-b2b1-b263db0306f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469e5a74-a91e-4f9f-9a44-379968b5481d",
        "cursor": {
          "ref": "362a4bba-09be-434f-8adb-f011060944bd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8056b46a-43c1-47af-822e-a3cc2952b4f6"
        },
        "item": {
          "id": "469e5a74-a91e-4f9f-9a44-379968b5481d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "40808e3a-b8c8-43b9-87f5-14ce1fe6ca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55190e5-9616-447b-9c16-b75d0ebceccd",
        "cursor": {
          "ref": "1ef533ce-9f30-4b32-bfeb-1e85e1294804",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "054f08dd-6f84-4b25-a850-32fc87f9f15c"
        },
        "item": {
          "id": "b55190e5-9616-447b-9c16-b75d0ebceccd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d3883db0-6370-460d-b827-d26d318c6964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ac4160-dbb5-4fe1-be3b-11fd93ea3be0",
        "cursor": {
          "ref": "07459db2-ce1a-4e3f-b3a8-97f096559377",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ebbc7389-8107-4661-b1d9-de2f4b49a30b"
        },
        "item": {
          "id": "34ac4160-dbb5-4fe1-be3b-11fd93ea3be0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0d82b5bf-42be-4bb3-8782-de248563c5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91892bea-822d-4592-8d8d-a46d70f2d954",
        "cursor": {
          "ref": "17a5ece7-df12-451a-a96b-cb14e54c8fe9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0ba5d65d-f56b-4b51-b0a4-7514532000c6"
        },
        "item": {
          "id": "91892bea-822d-4592-8d8d-a46d70f2d954",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "64596379-eed6-465c-914c-f89772198e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e3836c-2b34-4fa1-be97-b0b0a18a54be",
        "cursor": {
          "ref": "7a45d01a-8f73-49b2-b1a0-b75478059b26",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c6cd4994-e6e8-4499-bb36-771ee7da6d4e"
        },
        "item": {
          "id": "f0e3836c-2b34-4fa1-be97-b0b0a18a54be",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9f57dc5a-541b-4783-af6d-c0e6b887a9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba61ad6d-70ba-4b80-a2a5-8b8e29ffbae4",
        "cursor": {
          "ref": "f6e40475-dfdf-4d8e-a12c-e677f9d3ea54",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7df5a8bd-e9e8-42d9-8e5b-5cae9bf27b6d"
        },
        "item": {
          "id": "ba61ad6d-70ba-4b80-a2a5-8b8e29ffbae4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "43b7533e-5a87-4465-aca2-55d267747bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356ffc35-a20c-497a-9022-9a86eb8a52b9",
        "cursor": {
          "ref": "0eaf3827-1f02-427c-a406-afa535441112",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0654cf9d-3ad3-4f9c-a0a1-f9ed8f86327f"
        },
        "item": {
          "id": "356ffc35-a20c-497a-9022-9a86eb8a52b9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c4ce0738-1145-4a20-9694-08bfae152ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe87265f-8e98-4727-b668-d34133279b00",
        "cursor": {
          "ref": "d362a4ca-c48a-4b24-9827-dd167dc0add9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3ee2c782-d5e7-403f-893e-45239259db48"
        },
        "item": {
          "id": "fe87265f-8e98-4727-b668-d34133279b00",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bdfbd93b-ea9f-4eba-8459-74e093557194",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "830bf2ba-9c9b-4e47-a5da-2ccf39c25638",
        "cursor": {
          "ref": "ee17c5c0-ceb0-4a05-804c-3769c0fb785d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "684d22cf-f37a-4c49-8626-c57ab7bbf4a4"
        },
        "item": {
          "id": "830bf2ba-9c9b-4e47-a5da-2ccf39c25638",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "68b4d93a-aa1a-4014-8f1c-b49247c52d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8b85c0-04b8-4083-8bae-642af6fb6c4d",
        "cursor": {
          "ref": "f501bbdd-57e5-4dfc-95d3-fc3c7d70a5a0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "49e2c072-7c17-416c-a9dd-03815b52ff7e"
        },
        "item": {
          "id": "4f8b85c0-04b8-4083-8bae-642af6fb6c4d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fedeef40-6869-4414-8db8-84bb904f44bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7071e4-9df4-4ac8-be1c-9ffedbbfc34d",
        "cursor": {
          "ref": "e29769af-8736-4efb-93ab-5a0a3638113e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "56dfa191-de0e-43c1-9f73-4301c82d90bd"
        },
        "item": {
          "id": "6c7071e4-9df4-4ac8-be1c-9ffedbbfc34d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "db318a0e-bd56-4040-9b59-8cfbaff0d7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda41edd-9820-4f55-9634-8489f4b49fbc",
        "cursor": {
          "ref": "cf5aa6a3-5ee9-4a61-9a4f-730e26e9b9f5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f069db29-7e67-422f-a4ac-bd548318ab67"
        },
        "item": {
          "id": "bda41edd-9820-4f55-9634-8489f4b49fbc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6b7a4b14-3183-4d11-8937-d99e3397aea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de20592-2587-4d98-a1d5-21a5628c3d51",
        "cursor": {
          "ref": "a3f60675-1afe-439c-bf28-d76ee7c38ce2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a254f5dd-2e6e-443d-b9c9-7a4bb7ed53ff"
        },
        "item": {
          "id": "2de20592-2587-4d98-a1d5-21a5628c3d51",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "19f2b51c-1b8b-48fa-a155-71988abca29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4556da-f617-4dd1-9407-f1b9811061eb",
        "cursor": {
          "ref": "85e89770-8d1a-47b6-87b9-ddb739a3c2a3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4c297983-1f4b-4f9d-bc5a-bc156b4204a2"
        },
        "item": {
          "id": "7b4556da-f617-4dd1-9407-f1b9811061eb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "06c8005e-74bb-419c-a923-cc38d7fecbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaa62d3-a3d2-49d2-a2c2-15674f1471c1",
        "cursor": {
          "ref": "3e3cc861-1bd8-41a8-9a6d-53e30fa239fa",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "063dc12a-776a-4bc4-a3e0-348cc7da248c"
        },
        "item": {
          "id": "edaa62d3-a3d2-49d2-a2c2-15674f1471c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4b2aae3a-2776-4382-86e9-91d72b2131dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ddcdb3-c627-4007-8b36-672ae306bc6c",
        "cursor": {
          "ref": "01186545-c6e1-45b7-bb01-2e5772a26d08",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ce912242-95b1-4c57-9650-fd871aa949ae"
        },
        "item": {
          "id": "49ddcdb3-c627-4007-8b36-672ae306bc6c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "93e32fd0-2cc1-4138-9d76-e1fde433ff76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "f2851138-d703-4efb-b0fb-239429de55b4",
        "cursor": {
          "ref": "3927e1e8-589a-4f72-bc6e-bf8b9ea09f54",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8d10ec96-cfba-435e-9152-f2573f2c4bb0"
        },
        "item": {
          "id": "f2851138-d703-4efb-b0fb-239429de55b4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fdb65dd9-505c-4329-b620-8660e4f5d55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0420e8-ed8c-4887-98a5-c22ba1cc4772",
        "cursor": {
          "ref": "531f9fcf-d2d8-41c9-9d26-bd1471d1c956",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4fde6b1d-643a-4a40-b2e0-0cd9c89035cd"
        },
        "item": {
          "id": "ed0420e8-ed8c-4887-98a5-c22ba1cc4772",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f1d74e61-31f1-4c8b-ac30-3767dff41741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2919aca-a956-444d-b769-6c2fa04c5d02",
        "cursor": {
          "ref": "21150cb5-dab4-4e0b-a618-9d1dd35edb21",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c090de08-83ee-4814-aa3d-0deaf2622d7c"
        },
        "item": {
          "id": "e2919aca-a956-444d-b769-6c2fa04c5d02",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6d2ee9c-57ad-4d97-a937-c565d392140a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d72bb94-0f73-4ae7-ae0f-1cebb99faad1",
        "cursor": {
          "ref": "947191dd-519f-4199-82b6-45012a9dd516",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "43f31ee0-3ea3-45be-9010-5efbfbd5fcf5"
        },
        "item": {
          "id": "8d72bb94-0f73-4ae7-ae0f-1cebb99faad1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e3a5b4d3-9daf-43c8-985a-2f37bb06ea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8456803a-da41-4acb-99b7-164e30e3be0e",
        "cursor": {
          "ref": "561c1ab0-fb75-45e6-93b4-52ad76d6304b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "de40526c-c680-41a6-884f-0b81a3766afb"
        },
        "item": {
          "id": "8456803a-da41-4acb-99b7-164e30e3be0e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "27bb9da1-5463-4ff8-83bd-2d95506a2e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e634aa1-d18e-40ed-ad42-a0791b4b9949",
        "cursor": {
          "ref": "d29ecb8c-2dc1-41aa-974a-17ada0bb64a3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "de073e0e-5f8d-4a5a-8d85-75eca92cca16"
        },
        "item": {
          "id": "1e634aa1-d18e-40ed-ad42-a0791b4b9949",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8e91710b-36ed-4be1-8ccb-be851570449a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2814df5-5161-4982-a7db-2824456184fd",
        "cursor": {
          "ref": "c33bba24-dff3-4e7e-b7cc-b3e30b28e13c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "42ef4c24-74aa-4237-a874-051b04b76380"
        },
        "item": {
          "id": "c2814df5-5161-4982-a7db-2824456184fd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d5190651-7e2a-465a-93bd-b469b23592b3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f3e4237a-4d47-438c-aeb0-6344aede870c",
        "cursor": {
          "ref": "bbb28033-eba8-43f8-b1f5-135e47f32d44",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d10894ce-4c6a-445e-940d-6fa0a42f799d"
        },
        "item": {
          "id": "f3e4237a-4d47-438c-aeb0-6344aede870c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "20805681-64c2-4a78-b658-5326c57b1efd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ca2df5a2-0b13-4266-93f9-7dad92a27e65",
        "cursor": {
          "ref": "87dc6093-cefc-4e68-8890-4c111943f21c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "25e0ec00-5254-4d9b-a681-19bcfe82d2ba"
        },
        "item": {
          "id": "ca2df5a2-0b13-4266-93f9-7dad92a27e65",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f99bbde9-f908-45f9-8794-cf6cc2cb8d25",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "24bb07af-3c0c-4049-8981-c5abcc30a17a",
        "cursor": {
          "ref": "629405c2-788d-4301-b3eb-8e1f300a51c7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "591d4720-c8e7-4b21-a028-6e6230b2b75a"
        },
        "item": {
          "id": "24bb07af-3c0c-4049-8981-c5abcc30a17a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4e86b460-da56-4f63-b89d-d7c1e06462e0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "4170c8a2-8812-449a-9d3a-e1fd4150a40a",
        "cursor": {
          "ref": "a2b70f4b-4008-4c0f-8ed6-6cd5a5138e2e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "99af3a30-682f-45f7-b020-0648d53ec8cd"
        },
        "item": {
          "id": "4170c8a2-8812-449a-9d3a-e1fd4150a40a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bc7245c1-5af7-4d03-a1b8-494addd6356d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "73656873-f8dd-4034-a4ce-701c18a01906",
        "cursor": {
          "ref": "8996fd80-89c9-4792-91f2-eae898432e05",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ccf575e7-0f22-4877-be81-0f14b05db109"
        },
        "item": {
          "id": "73656873-f8dd-4034-a4ce-701c18a01906",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "51d17601-d76c-4ade-8fec-ee0a798542a3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f35aed6e-5de7-48a6-9f5b-2c7b62b7291c",
        "cursor": {
          "ref": "b1ad45f0-254d-44c0-98e3-dbc42ceba61f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bd2b7a44-23c8-4524-b926-8f4a53af7cf9"
        },
        "item": {
          "id": "f35aed6e-5de7-48a6-9f5b-2c7b62b7291c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "12939449-8423-48fe-a18b-fe258b2bb523",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c78ca1-8c4b-48be-90d9-7d1b68fe9848",
        "cursor": {
          "ref": "7b7bce42-3abf-4e17-9aec-64031c0ef8f9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "23012767-6cb0-44f9-ae5c-d51c832a83eb"
        },
        "item": {
          "id": "11c78ca1-8c4b-48be-90d9-7d1b68fe9848",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "52b45c2d-5d3d-455f-a819-1effa8e3948c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a0a23d-02d6-4dc7-9d91-d1a86fb35903",
        "cursor": {
          "ref": "6ad14f8f-3899-40e7-bf62-0788eb657666",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ec8cc2b8-473b-4299-a096-c9ac203b14bc"
        },
        "item": {
          "id": "27a0a23d-02d6-4dc7-9d91-d1a86fb35903",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea1f34b6-ad00-4be3-acc9-e1f04bfe69a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b09060-2e5c-4ebb-a948-251cafbc07d8",
        "cursor": {
          "ref": "26b2cab7-8f45-4515-9bd3-1a76dd48bfec",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fc799efb-f0b9-4d27-9789-50dae53b03dd"
        },
        "item": {
          "id": "53b09060-2e5c-4ebb-a948-251cafbc07d8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a9b9bd79-f221-4a6a-8b27-9352202a46ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d54f52-d3ce-40f1-8133-5410cc03e6fb",
        "cursor": {
          "ref": "af9bdf35-1a11-4d99-aa9c-4290ac7a353c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e8ac07c8-0f13-433b-8f21-775debc4023e"
        },
        "item": {
          "id": "c7d54f52-d3ce-40f1-8133-5410cc03e6fb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4d728d16-15da-44f1-967f-af53cd1df87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e7d9d7-0320-41be-8d31-5fce47a50c26",
        "cursor": {
          "ref": "0ff6386d-1b3f-47c1-977c-b7b7e8150652",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0af42750-9e38-4aba-9378-8c7066fb4cea"
        },
        "item": {
          "id": "02e7d9d7-0320-41be-8d31-5fce47a50c26",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3be9f4a4-84bf-48a7-8954-b2c71ce5b76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d67d263-2df0-4e7f-952b-a31a2376918a",
        "cursor": {
          "ref": "09138f6b-c4ca-40df-b5c9-85ec6d9e3eed",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8fec8b43-3659-454e-ad30-22290d7674f3"
        },
        "item": {
          "id": "9d67d263-2df0-4e7f-952b-a31a2376918a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "199218aa-90df-4821-b0f9-bd5a03a4541a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad181b56-8ba1-424a-adca-564d43b7b9de",
        "cursor": {
          "ref": "f37095b6-70ec-462e-b0ea-3730ae45a1f9",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dab2d961-6300-42d2-82bf-c639f792f30b"
        },
        "item": {
          "id": "ad181b56-8ba1-424a-adca-564d43b7b9de",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "912ebed1-d51e-4159-ac15-6d4f39191989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac553fc-a9d7-4af8-9a60-2c60f1966252",
        "cursor": {
          "ref": "f41af69b-d424-408e-9ca3-995cc6a8dafa",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "28f3cf66-1bad-4103-84d8-91d6bf31f687"
        },
        "item": {
          "id": "0ac553fc-a9d7-4af8-9a60-2c60f1966252",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1b8c9fea-dec5-4d32-8da3-3198a2ca6c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc39c7a-9c81-48bc-8c62-078aeed7b06e",
        "cursor": {
          "ref": "8660b5e6-29bc-41c3-9b7f-5e00204f0e1e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "08addd84-3e11-4c72-b41e-adb37c64d249"
        },
        "item": {
          "id": "7fc39c7a-9c81-48bc-8c62-078aeed7b06e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ff5fd265-e57e-4dba-9f8c-dddfaabb2257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3c6235-0842-4c96-89c1-96baca05c608",
        "cursor": {
          "ref": "163d16f7-2858-45be-8c87-4a97a0bf8797",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8ea36c35-b75e-449e-a2c9-7d41136eddfb"
        },
        "item": {
          "id": "6f3c6235-0842-4c96-89c1-96baca05c608",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "20ae9d9b-f168-4203-b099-7527dcf5c66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0088e5-51d8-416e-b149-5d95ff41055c",
        "cursor": {
          "ref": "679f2bb3-bad3-4dd1-8d4a-176d88059393",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "41d612f7-367e-4244-a141-99715b1dc159"
        },
        "item": {
          "id": "bf0088e5-51d8-416e-b149-5d95ff41055c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7b217ec4-1712-43e4-9260-3781fb720172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa4e6e9-7ea6-497d-99b4-d67a9ec49802",
        "cursor": {
          "ref": "57c32b84-5215-46a8-9b76-4b6b339603da",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0a3c0937-377e-4e28-86fb-ad753b16f43f"
        },
        "item": {
          "id": "5fa4e6e9-7ea6-497d-99b4-d67a9ec49802",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0f06fc0d-b6ba-417b-a424-a687778970cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b79714-078c-41eb-9fa3-3b1d4588b6a6",
        "cursor": {
          "ref": "14dc8497-5f3f-4f68-b011-ab6982421e52",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ce48bbfb-60cb-4585-9230-b5394b04ccd3"
        },
        "item": {
          "id": "b8b79714-078c-41eb-9fa3-3b1d4588b6a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a6596b78-3fcf-424b-9339-a944a37c0ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a63db6-f155-4892-9e63-7b39378fc55a",
        "cursor": {
          "ref": "4f99522c-002d-49fa-96c3-f985f2d349e2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "629f559b-528a-4771-9cb1-92fb9b3690e4"
        },
        "item": {
          "id": "91a63db6-f155-4892-9e63-7b39378fc55a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "716a96b2-8ca1-4e7a-9e79-1d96541d8b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe931134-81a2-40d9-a8af-3298a6f7fa15",
        "cursor": {
          "ref": "b8b80ae2-1f2b-48dc-8240-3db6202288ca",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "02805674-92a3-4f7a-b1a7-e54125f54866"
        },
        "item": {
          "id": "fe931134-81a2-40d9-a8af-3298a6f7fa15",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "017d78cd-aa68-458b-abaf-61321dd19a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7f6858-aabf-4b7e-8036-6b394816f8a0",
        "cursor": {
          "ref": "4676d151-1157-4d73-8c19-01ce8c763e61",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3a7a70c0-b132-477c-b78f-08022b833f0c"
        },
        "item": {
          "id": "7d7f6858-aabf-4b7e-8036-6b394816f8a0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "17654cd5-6b3a-48b4-bed0-372a161c7170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa312e3-8e9d-44da-8a2d-b6c884947013",
        "cursor": {
          "ref": "b23f204d-c0e8-4128-9b30-60fc33309161",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3a75b223-93eb-4e02-a41e-d1bb718492e1"
        },
        "item": {
          "id": "faa312e3-8e9d-44da-8a2d-b6c884947013",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "691f28c7-0b6f-40d7-840b-c5cf00e3103a",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "28671258-205c-4f71-9b09-99ff9f357359",
        "cursor": {
          "ref": "117d92e4-c8f1-480c-a598-e2dcf537ff21",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "73ed0418-c93e-4473-a195-fde274aefd5e"
        },
        "item": {
          "id": "28671258-205c-4f71-9b09-99ff9f357359",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a2cf2d9e-d350-498f-bfb3-b738dc22e542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ff90b5-755a-46b7-ade7-02856c4ea388",
        "cursor": {
          "ref": "9e89de46-4618-46f8-88e3-1f9a81a8b429",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "83e2d5bb-d0f9-4895-ad11-c1f369dcc5c3"
        },
        "item": {
          "id": "e7ff90b5-755a-46b7-ade7-02856c4ea388",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c89fdc17-ea79-42fd-b0df-0218f1eea17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c71c78-672b-468b-82ef-a847fd8a9cf0",
        "cursor": {
          "ref": "455f3c60-4525-4296-8ea6-0149fe6886d2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "37d3ed15-23a2-4347-b38e-46b2925f504f"
        },
        "item": {
          "id": "a4c71c78-672b-468b-82ef-a847fd8a9cf0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "346dad0b-388c-47ea-9dfa-678d53357509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1ea755-d749-4962-89ec-3a78c4d82b74",
        "cursor": {
          "ref": "19e66e17-ada2-4df6-beb6-c172392a2ed8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "993de555-5683-4b3d-8974-8d6c525608ba"
        },
        "item": {
          "id": "7d1ea755-d749-4962-89ec-3a78c4d82b74",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e8ff33e2-fc6a-40d2-8597-a3fdf63df53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed9939a-964d-4e1d-bde3-5f987d620f02",
        "cursor": {
          "ref": "0a91850b-be54-4a89-8e2f-95e039bb45e7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ca752556-db43-4e94-b9d0-226013491cd1"
        },
        "item": {
          "id": "eed9939a-964d-4e1d-bde3-5f987d620f02",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "889d2264-6d30-406d-b464-08aa36347702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d9765f-6916-4b13-8ca2-9fdd8862ecac",
        "cursor": {
          "ref": "4c97c5f3-45cf-40b7-8b95-e5d3b6f1974d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c73318cb-7c10-4725-b262-0e9c1b75e3d0"
        },
        "item": {
          "id": "94d9765f-6916-4b13-8ca2-9fdd8862ecac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6bdf914a-ec51-4a90-9a4b-03a4e3d71f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbb66f7-c720-48f6-93ce-4f9c0f505bba",
        "cursor": {
          "ref": "18088732-d6ca-4035-afa1-b785a083514e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5f1aaa85-78d3-421c-8491-a0c6bc980c00"
        },
        "item": {
          "id": "adbb66f7-c720-48f6-93ce-4f9c0f505bba",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9a95b67c-d05c-437b-a7f5-befc707829c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d7f942-2b9e-48a4-86b7-b30255df85c0",
        "cursor": {
          "ref": "e84d4978-26b9-418b-8a25-70bb40cf6a7c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "702e1703-fb5b-486c-812e-1754faac7cc5"
        },
        "item": {
          "id": "15d7f942-2b9e-48a4-86b7-b30255df85c0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "24687ddc-5fb6-4993-af4d-e64bffce3404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d83778-6885-49a5-91f6-13f31d3863eb",
        "cursor": {
          "ref": "f48e8009-6d75-46e2-8c77-b9f7c6d2ae9b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a942f53b-e239-492f-a5ac-ce457956a309"
        },
        "item": {
          "id": "00d83778-6885-49a5-91f6-13f31d3863eb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6a9b0767-873c-4276-99e2-6ebdce870bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecb0243-62be-4b7b-a4f0-6eb39d7eec6a",
        "cursor": {
          "ref": "86749ac1-6286-43df-8843-e8ab4a9c3220",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "69b5f66a-152b-4d92-883d-1b813519d96e"
        },
        "item": {
          "id": "eecb0243-62be-4b7b-a4f0-6eb39d7eec6a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "073818a9-16a6-47cb-a1c7-c58e5b8dc62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf8d2bf-ee86-4d01-98c0-dcfcc09b6fb9",
        "cursor": {
          "ref": "d9b07e01-ef63-4c20-adcb-ecfb2e701d44",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "931da3bd-c595-496e-b6c7-8da3dda9f4cc"
        },
        "item": {
          "id": "1cf8d2bf-ee86-4d01-98c0-dcfcc09b6fb9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "29971eed-08c1-4da8-833d-a40a64e585e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdac504-bd5e-4f44-8798-a8b415df7bae",
        "cursor": {
          "ref": "e3388e06-8416-4240-9cdc-c5434bacff03",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bb97e545-1990-413e-b679-34bf35ad4dde"
        },
        "item": {
          "id": "afdac504-bd5e-4f44-8798-a8b415df7bae",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1b1bb764-5a98-44fa-b4b2-66df53e12219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11072ccc-a9ae-475e-a451-cbaad3f48fad",
        "cursor": {
          "ref": "f30869b1-82de-4ed3-aa83-fa4b5f8ec843",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "710f818e-dcf8-49ea-9879-4d08face5f9e"
        },
        "item": {
          "id": "11072ccc-a9ae-475e-a451-cbaad3f48fad",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "879f3d21-d0b5-4ba9-a344-21bddffac3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55f0fd9-a9a6-4774-972e-c4eb7f9a8f2a",
        "cursor": {
          "ref": "e4f2eac9-31bb-4549-bb6c-9b7f53b5b4a4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "19e4fda9-d4ce-4ae7-8d42-d4f883158a17"
        },
        "item": {
          "id": "a55f0fd9-a9a6-4774-972e-c4eb7f9a8f2a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0491907e-0418-4e74-890c-3c5de4f799bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2455f0-21c4-4479-88d0-9dec5c9605fe",
        "cursor": {
          "ref": "c2cebefa-704b-4326-996e-8482b4c75942",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d5fa35af-4f74-476c-aff0-cdd3c1761f52"
        },
        "item": {
          "id": "9a2455f0-21c4-4479-88d0-9dec5c9605fe",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0cc12f00-e9dc-4a3c-acfc-d920cebb3fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887c993a-f393-4244-9948-067eaecd8478",
        "cursor": {
          "ref": "353b2323-b5ae-4cdd-b977-44c3776692a5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "024d1419-ac94-49c5-a3c1-18f3f8e5c820"
        },
        "item": {
          "id": "887c993a-f393-4244-9948-067eaecd8478",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "87d84d95-db4b-4e6e-9097-359b39d088e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d7f8e5-62d3-4f72-849d-c9157d996a68",
        "cursor": {
          "ref": "b7ebf298-c3e7-4882-9ae9-19f9c0f167ba",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "27c3ea88-6cae-4858-b0f5-6e132a30bff9"
        },
        "item": {
          "id": "40d7f8e5-62d3-4f72-849d-c9157d996a68",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ac9474d-9c6f-4ee4-b535-45c1357c40e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077395ff-1a66-464a-b8b3-135827bd5bfc",
        "cursor": {
          "ref": "2bd21282-7982-4cd3-85ac-ac33c601ba35",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "731e9637-dc27-4374-8be8-27c2a53afced"
        },
        "item": {
          "id": "077395ff-1a66-464a-b8b3-135827bd5bfc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b21bb341-c332-4ba9-bb63-9b7daf490709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d68749-79f2-4ce8-86b1-c2eb5090267c",
        "cursor": {
          "ref": "4cc70ddc-f501-405e-9b7e-ea03ad82bc0a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c9ee7162-38e9-493c-953f-01c2b29f73e2"
        },
        "item": {
          "id": "11d68749-79f2-4ce8-86b1-c2eb5090267c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "835ea207-ac37-4e60-a2a3-b661af7cc547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678bc4ca-60d0-4fb3-a4b3-3c376a4e63fe",
        "cursor": {
          "ref": "02c2f3bb-6f9a-4206-b2d0-aa2a67863e3d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cac4c7bc-78f3-4145-a0dd-c26f140fb182"
        },
        "item": {
          "id": "678bc4ca-60d0-4fb3-a4b3-3c376a4e63fe",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "195da5bd-86c3-463d-8447-0173eb10ad05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7abcdf8-8da9-4c5c-ae53-c74599e6462c",
        "cursor": {
          "ref": "20620d2f-a1ce-4ad0-96a4-ce17e54e3af5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dbaa1a23-909b-4f9b-8557-171cf80ac79b"
        },
        "item": {
          "id": "a7abcdf8-8da9-4c5c-ae53-c74599e6462c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a0fca52d-141e-45bc-8fd8-a714be92a2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcdeb8c-3df7-4886-bbbb-55841b386066",
        "cursor": {
          "ref": "ab578493-fbb0-49e7-9797-243bbd127686",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f12c0e52-df86-4919-9a69-de0bd37b3c82"
        },
        "item": {
          "id": "7dcdeb8c-3df7-4886-bbbb-55841b386066",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8889c703-5561-4d09-9073-fa252f1d58ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a291bc-bc9a-4d36-84b5-be1b3e066e1c",
        "cursor": {
          "ref": "1c8ca81e-2409-4c67-a9e7-765d8a34df78",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8e92963f-8223-4879-be74-b068d8330750"
        },
        "item": {
          "id": "16a291bc-bc9a-4d36-84b5-be1b3e066e1c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2848d5cd-d833-42dd-87be-43f6b21dda53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfababad-197b-487a-b1d0-fbe1ab0cbbf0",
        "cursor": {
          "ref": "7a6675ea-42ce-4208-89f8-4d7d6b8ee633",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a2c7870d-57e5-4ff6-946f-bc6c681e72ea"
        },
        "item": {
          "id": "cfababad-197b-487a-b1d0-fbe1ab0cbbf0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8b54f479-24d6-4e06-a464-59b8406e6c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7338eaee-0ecf-4fa5-a5d8-bad7ad66eecd",
        "cursor": {
          "ref": "546d5ddc-b0f3-4960-93e6-b053890c43b6",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "43be4672-8879-4e1b-9411-64f69b6ee533"
        },
        "item": {
          "id": "7338eaee-0ecf-4fa5-a5d8-bad7ad66eecd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e5936232-3257-4a56-9bac-4e9b954ee614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc1d0bf-db63-42cb-9809-eed25424577c",
        "cursor": {
          "ref": "2704649b-3f9c-41d9-b951-5b014b4959a8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e11161cf-6709-4ff3-92fb-0050d18e5593"
        },
        "item": {
          "id": "2cc1d0bf-db63-42cb-9809-eed25424577c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "639bd1c6-165f-450b-9c1e-c7d1da9e9a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0d9ede-03bb-4703-94f4-d2b4545a9c88",
        "cursor": {
          "ref": "bbdef895-0907-4233-82d8-6ee0e64a47ad",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "db853508-2fd1-45b3-a42b-4b916d8af085"
        },
        "item": {
          "id": "4b0d9ede-03bb-4703-94f4-d2b4545a9c88",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "880b6937-53c5-4bdf-b9c9-48606b578623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe398f72-6e3b-4eb9-88d6-6cf5cde6e248",
        "cursor": {
          "ref": "db7a69ca-4bcb-4b69-901b-7e36b5590424",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a89386da-136a-4722-865c-4e4d41ff75e1"
        },
        "item": {
          "id": "fe398f72-6e3b-4eb9-88d6-6cf5cde6e248",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "75ac07a8-47c5-4754-a6be-6d2de9291e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1207beb8-aded-4ca9-b2a8-d23f547d4a0e",
        "cursor": {
          "ref": "cec9a6e6-ba2f-4b13-81f5-8813b0b2a2da",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "52dfd5a5-36ea-4808-9646-2ceb33ffdce6"
        },
        "item": {
          "id": "1207beb8-aded-4ca9-b2a8-d23f547d4a0e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "728dbad4-c5c1-471b-a835-e626343654bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f184dc83-026a-45c6-827e-45a924d937b6",
        "cursor": {
          "ref": "12052af7-c74b-4a60-afa1-68569e2755e3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd8d6749-2250-4fc6-b224-98fb5495e33c"
        },
        "item": {
          "id": "f184dc83-026a-45c6-827e-45a924d937b6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6f01f19c-86ea-4ae8-8e88-5a6b2e307b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa411d96-d350-4b02-8f76-d269e61ac4e7",
        "cursor": {
          "ref": "fad8a309-9d4a-4495-816f-aedac04f0eb1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d42a0ceb-4070-4a7c-a2ba-e9de10d4b3ed"
        },
        "item": {
          "id": "fa411d96-d350-4b02-8f76-d269e61ac4e7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bae70662-673d-4d3f-8bfd-3c73d08b919a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3775a95c-6bd6-458e-aea6-4a1b50ec6d3e",
        "cursor": {
          "ref": "ede72b61-ea65-4c57-8963-198f505ee9ad",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3c730b7f-d78e-4cb5-b52f-0a009b94d08a"
        },
        "item": {
          "id": "3775a95c-6bd6-458e-aea6-4a1b50ec6d3e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a83be7c2-945d-4673-9985-6f94115a8d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13796861-8fe9-47b5-883b-4582aba40cf9",
        "cursor": {
          "ref": "494eaee3-63e8-4527-829d-01debde28c88",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f5a3d3b8-a231-4c43-baff-b48d289ff5d7"
        },
        "item": {
          "id": "13796861-8fe9-47b5-883b-4582aba40cf9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "12c26c1e-ebbe-47f0-9760-e7332225300a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04e7d86-5c6a-4e2f-890b-ddc62047d70b",
        "cursor": {
          "ref": "34f6b216-07c6-4aa1-bb88-0db538e2d857",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "884bbb5f-ac55-44f3-bd2d-c05ee8aa718f"
        },
        "item": {
          "id": "f04e7d86-5c6a-4e2f-890b-ddc62047d70b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c083cfb5-4953-4e36-9e1b-4286c5085972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b42405a-c8f2-4ef0-8594-1f09cd918efa",
        "cursor": {
          "ref": "b569a2f4-fb00-4528-9cbd-255bbac0bf4d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "abd27cf6-1641-42eb-98ba-0b2038a90970"
        },
        "item": {
          "id": "3b42405a-c8f2-4ef0-8594-1f09cd918efa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1b155302-aaad-40b8-a939-18670f028100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdc9d3c-3679-4082-aa87-902836d9f5f4",
        "cursor": {
          "ref": "d2978192-522a-48c9-a207-7a380d4c1afd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2c330bf0-73a4-4edd-8d2b-b46f87c3155e"
        },
        "item": {
          "id": "1fdc9d3c-3679-4082-aa87-902836d9f5f4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bc5cf08e-ce93-4023-9188-e6ebf58bc707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3080c1-755f-4219-987c-50db92de5a33",
        "cursor": {
          "ref": "ee909e09-40fd-4d28-bbe6-430dbab4e766",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5f453cdf-4a08-4dd4-9932-7c9cb185ce16"
        },
        "item": {
          "id": "ae3080c1-755f-4219-987c-50db92de5a33",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "69a06d2d-247b-4246-a028-02d069505985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad5c8df-f6c3-4137-ab20-4b5e280f192b",
        "cursor": {
          "ref": "f3d2dfaf-adc6-489d-ab9d-6e0afa30a7d0",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2fed4a26-3363-44b2-8aa4-d95adfe7e791"
        },
        "item": {
          "id": "fad5c8df-f6c3-4137-ab20-4b5e280f192b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "84fd7375-3795-4637-b08a-9069f5722e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb2e0fd-d1a0-41a9-b8f8-05365d98e6e7",
        "cursor": {
          "ref": "bf958952-aa24-475e-bf9a-7c9bc2387eff",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6b6150f9-b654-442a-baa3-d1db868a45b9"
        },
        "item": {
          "id": "dfb2e0fd-d1a0-41a9-b8f8-05365d98e6e7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "169e73b4-a780-4c83-b10d-f1a14bd3eaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656af4d5-aa8c-4512-88f9-c00770e5a4c4",
        "cursor": {
          "ref": "021fd584-16eb-4e5d-a9f5-37e031390ac3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2bdd45a2-7f10-444a-8277-505ae5ba9fba"
        },
        "item": {
          "id": "656af4d5-aa8c-4512-88f9-c00770e5a4c4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "536c90ae-4c22-4fc5-b2c6-1a6a96e9c0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add3949c-030b-4dbc-aecc-2c408076df4e",
        "cursor": {
          "ref": "440c46c2-9501-4fa8-9108-929c8d4881f9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bd252aee-d8ae-4199-80b3-b6d8bd89cba4"
        },
        "item": {
          "id": "add3949c-030b-4dbc-aecc-2c408076df4e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "239afc96-2285-46a9-8950-6cc50d1117ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a68f91b-b723-452a-827e-420f2ec515e6",
        "cursor": {
          "ref": "8a83fc7b-7858-4356-8aec-ca4cff394bd3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0617a40e-507a-4195-a519-2c199571d88c"
        },
        "item": {
          "id": "2a68f91b-b723-452a-827e-420f2ec515e6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1598725-6355-467d-8b72-1143df08d647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bd2a88-6022-497a-972a-6573c7f74276",
        "cursor": {
          "ref": "63a3feae-244b-4d3f-b1ef-4a31542616a9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d031f0c7-f2b1-46d0-b649-3013fb1b7d66"
        },
        "item": {
          "id": "86bd2a88-6022-497a-972a-6573c7f74276",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "49c62754-92fa-43ca-bcfe-a2d68e2f1313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa0ccb3-af46-4d86-9415-0d00259b51fa",
        "cursor": {
          "ref": "30dfcdda-f7c0-40f8-b732-de7697895d1a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "feda057d-a13e-4629-b378-8b02305ef720"
        },
        "item": {
          "id": "7fa0ccb3-af46-4d86-9415-0d00259b51fa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b4642e09-b1af-4506-aaca-9cbbcefb9922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f625a43-093e-47a4-9245-d600a4f2a905",
        "cursor": {
          "ref": "573a9ba0-4a3c-4149-a0cd-a5d861e6cb60",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2b5215b4-b8f0-484a-ae30-065083370717"
        },
        "item": {
          "id": "7f625a43-093e-47a4-9245-d600a4f2a905",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c85075c7-01cb-4514-ba6f-675754fb1fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc4dc30-eb04-4723-8bfd-516ecb068014",
        "cursor": {
          "ref": "82dc5b64-61cb-47cf-a1f4-637d83a8a2fb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f54f80f1-8091-4385-9f22-5df4e93469a4"
        },
        "item": {
          "id": "2fc4dc30-eb04-4723-8bfd-516ecb068014",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "205ca7a0-4227-4fab-b4f2-0b86fe5555ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d2dabf-fef0-44ea-938b-027837a9df4e",
        "cursor": {
          "ref": "1cd78835-d5e2-4b8c-bfab-c37582a03eba",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8ed7651d-b2d6-4ddc-8082-f2a3bbae7591"
        },
        "item": {
          "id": "99d2dabf-fef0-44ea-938b-027837a9df4e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c8fe013c-b341-4b3f-9382-58265ee588b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e61e18c-508c-45af-9f23-5b9d17373207",
        "cursor": {
          "ref": "1ba32189-f396-471e-bb71-7934dba7167f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "302961d5-459b-4a0e-b40f-1a7bfbc3c05f"
        },
        "item": {
          "id": "0e61e18c-508c-45af-9f23-5b9d17373207",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "45e51ed0-5897-4c5b-9f29-fd7cc6402cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcbe8b5-aabf-4b65-a39b-33380dbac5ab",
        "cursor": {
          "ref": "20920bcd-6c02-4fa2-8548-b35b3606bc74",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "581590f7-0da8-44e7-b0b6-b1ca30d941b3"
        },
        "item": {
          "id": "ffcbe8b5-aabf-4b65-a39b-33380dbac5ab",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f3060d6d-a7a0-4a47-b630-fff7c4e34e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03a64a5-ba80-4e29-9eb6-55bdd44d8acc",
        "cursor": {
          "ref": "2d865bd0-95d0-4095-9c90-c0793c08ff07",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "57d890ea-b3ad-4f27-b446-1297235f359b"
        },
        "item": {
          "id": "b03a64a5-ba80-4e29-9eb6-55bdd44d8acc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "75fed4cf-e9e9-41bb-91d7-d9f30d8f97b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab5e20c-03b7-469e-81b4-dea2c835e164",
        "cursor": {
          "ref": "5b74d0a4-1cae-4948-bbed-fc4a1947bd56",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6a9dc733-fd38-4494-9ed2-bf9785a40d4b"
        },
        "item": {
          "id": "eab5e20c-03b7-469e-81b4-dea2c835e164",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f38ffad7-0840-4c1b-86e3-47ea59667612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556bd032-3f17-420c-b66b-c20658877716",
        "cursor": {
          "ref": "554ed139-1940-4385-a910-0169d396c98d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "88814ceb-2d1e-40e3-bda7-1e0bccb58b0b"
        },
        "item": {
          "id": "556bd032-3f17-420c-b66b-c20658877716",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6eaf274f-485f-40c7-9327-8d47a6299db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd80118-0091-4fd9-8533-6910572ff356",
        "cursor": {
          "ref": "94d02f58-0040-4075-a3fc-e5e8b6d33c3d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7fdfa223-0a89-4ea4-bf3e-f60bc0d03ade"
        },
        "item": {
          "id": "fcd80118-0091-4fd9-8533-6910572ff356",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "688ef6f0-58c4-4cda-82aa-0d60598885ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cf8519-a974-4822-8c0e-4a50840d0073",
        "cursor": {
          "ref": "b17ee464-9850-43da-98f3-5bf11b09a651",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7db7b85d-96c5-4373-a9ff-39c83f617474"
        },
        "item": {
          "id": "75cf8519-a974-4822-8c0e-4a50840d0073",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "958578d2-6366-4bbb-878e-3921a034d7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15d489d-6e2c-47a8-b3c1-7af966a70575",
        "cursor": {
          "ref": "cbeaaf6a-5d07-4f71-873b-72ae5ac82aa0",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ce617d31-96dd-4f3c-b4d6-6a3897a9eb97"
        },
        "item": {
          "id": "b15d489d-6e2c-47a8-b3c1-7af966a70575",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "69c33a62-aabf-4e50-99af-c1f5a034fbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76cfa2a-1e6d-455a-9618-4ef4cb795157",
        "cursor": {
          "ref": "4d783640-4fd9-43a0-a2ce-f6a52bf99c40",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "02bc3f69-8054-4c74-882b-c403ac12d9fc"
        },
        "item": {
          "id": "b76cfa2a-1e6d-455a-9618-4ef4cb795157",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c722eeb1-d1e4-4494-88db-267831a855ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3873d60a-873d-4ed9-bba4-392a782bf530",
        "cursor": {
          "ref": "d0954ff2-3311-485a-8a3d-76c297aad7ff",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9c9ebe7b-3b3e-485b-90ac-784d317eb7b6"
        },
        "item": {
          "id": "3873d60a-873d-4ed9-bba4-392a782bf530",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4fd5b2d3-3a57-4450-beb5-08fc5624cb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca754be4-2585-4bf7-bbab-538bc86d4eae",
        "cursor": {
          "ref": "babff5ec-f1e4-41b4-9ec2-80fc33d0e105",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6cf364a4-182e-44e1-9a69-fe69e4722750"
        },
        "item": {
          "id": "ca754be4-2585-4bf7-bbab-538bc86d4eae",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e5e7da5e-0e4e-4a27-8d13-3e49678402c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee784b5-d72b-4ac9-9003-6debd2002a21",
        "cursor": {
          "ref": "4593731b-699a-4a90-8bc3-8cde7dff8f01",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "64b7f997-3e07-4c4d-a9da-4ea3b9b73a51"
        },
        "item": {
          "id": "4ee784b5-d72b-4ac9-9003-6debd2002a21",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8e48e52a-baf1-4008-82bf-f64259880ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d506dba7-8ed6-4fcf-b56c-eb4c1b93fc1d",
        "cursor": {
          "ref": "fe756eb0-15cf-4da2-86b9-a8c0ed123fe9",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e859bae2-bedd-4892-815b-1d2fd9b0b647"
        },
        "item": {
          "id": "d506dba7-8ed6-4fcf-b56c-eb4c1b93fc1d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f31c6ec5-c863-4eb7-b79d-b157c8a2a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb65105-7e20-404c-850e-23a8bf4b2208",
        "cursor": {
          "ref": "6c350177-4180-4edb-8b77-7822e09c1c64",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "30f1d832-6c03-43cf-a8b3-f53627e6d75c"
        },
        "item": {
          "id": "5cb65105-7e20-404c-850e-23a8bf4b2208",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "56641f35-9899-4172-9725-1594b4a7188b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2254942a-ac18-4d21-9b69-9a0ff93907c9",
        "cursor": {
          "ref": "d482a898-fa95-4f55-8001-b629b92c9832",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d7d83b5b-f41f-4ba0-867f-192af886cf53"
        },
        "item": {
          "id": "2254942a-ac18-4d21-9b69-9a0ff93907c9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "87154367-649d-45ce-8249-9caac5425687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bff7e2-d276-475e-bb73-29f2293717cb",
        "cursor": {
          "ref": "93deacfb-f2f5-4e35-aec9-5272be1334ae",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a6caebb1-c117-421d-9464-7a791ef82afd"
        },
        "item": {
          "id": "14bff7e2-d276-475e-bb73-29f2293717cb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "88eed4b9-de1e-46f6-81fe-b0ace4729422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cface52e-6824-4a66-82d6-ba438a39b05c",
        "cursor": {
          "ref": "e6164229-394f-4260-bcb0-a687352452f9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "142b6168-b8d2-46bb-9f55-507dc9475fe7"
        },
        "item": {
          "id": "cface52e-6824-4a66-82d6-ba438a39b05c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "af555ca7-60b5-41f9-9d01-0a75ac3f4064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc0d8e8-8f23-404d-ae4d-8a527da9c519",
        "cursor": {
          "ref": "bcc4597f-5a0b-4a50-a6c9-70616805caaf",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "76de422a-f459-4413-9e81-db6f3474691b"
        },
        "item": {
          "id": "ecc0d8e8-8f23-404d-ae4d-8a527da9c519",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "09e6655c-9799-4ecb-b09e-c45a9172be22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcd590e-81d9-46bf-92b3-854e06da9ef8",
        "cursor": {
          "ref": "d905cdf7-9fc6-4bff-9bd9-33fc82f09956",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c244c1bb-e7d8-472c-9450-5e920edfac18"
        },
        "item": {
          "id": "8fcd590e-81d9-46bf-92b3-854e06da9ef8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c03f9d54-d8cd-420d-bd71-1690ce5db891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e749697e-18e3-4bc7-ad6e-8bb01d216262",
        "cursor": {
          "ref": "de8be533-aaf3-4a7b-9b52-227e7a22880b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c4970613-6d66-4729-b8fa-cb6693a9def7"
        },
        "item": {
          "id": "e749697e-18e3-4bc7-ad6e-8bb01d216262",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d676fb4f-00be-4b92-a45c-fbdcbd607c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814ed655-1085-465a-8ab9-90534606a6e1",
        "cursor": {
          "ref": "f113f258-167d-45c5-8f16-9bfedff260a8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "390d95e5-8dbd-4378-9ff9-4b5fb408d02c"
        },
        "item": {
          "id": "814ed655-1085-465a-8ab9-90534606a6e1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eaca3ad6-fb99-44bb-9232-0f07f41b6b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc666826-a3ab-4845-9abc-48f67826a0c9",
        "cursor": {
          "ref": "bd8d23cb-fcdf-4e63-a02b-f0ac1c7483b2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2b2f993d-e270-4fd5-af6d-306aace39192"
        },
        "item": {
          "id": "dc666826-a3ab-4845-9abc-48f67826a0c9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4a2a6c1d-0678-4f38-bd88-0ce13ebf22fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1495f0-91c2-44db-9437-2ca0de7c9ea3",
        "cursor": {
          "ref": "0d7a2a0e-172c-439c-8e67-a1ded2087350",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7275d505-12ab-4581-95cb-4fafff303a1e"
        },
        "item": {
          "id": "4e1495f0-91c2-44db-9437-2ca0de7c9ea3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d1c4cece-49e1-4bb5-b000-68f2b90b2134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab18d20-5070-4fd2-ae47-87c0e0ae7cb8",
        "cursor": {
          "ref": "2ebcc34e-f06e-4045-991c-1755c426a2df",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "53d852b3-ba91-47c6-855b-c48eb3be5a90"
        },
        "item": {
          "id": "dab18d20-5070-4fd2-ae47-87c0e0ae7cb8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "08f56fab-bb08-4b6b-b9d8-f1cfe4273b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d5a3ec-4232-4c43-acbd-9478be64f776",
        "cursor": {
          "ref": "fdd9de9d-39c1-494a-971f-2b6c55dd58a8",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "437da7f3-1fc6-44da-9a2e-601f2a8201f7"
        },
        "item": {
          "id": "b3d5a3ec-4232-4c43-acbd-9478be64f776",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "afcfd632-2f5b-4636-bdc3-fd95ce25c09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50da07d-c30e-469f-99f6-0458ed687d7e",
        "cursor": {
          "ref": "a7cf1bef-ab55-4027-a510-68b6fa0424af",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2cc98ebd-75b9-4373-a62b-7a6a0c8c5087"
        },
        "item": {
          "id": "e50da07d-c30e-469f-99f6-0458ed687d7e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "92b9e75a-ec7c-422d-9cc7-49a9bdadcbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdfda86-937a-40ed-8b02-deb6ac51e110",
        "cursor": {
          "ref": "c0296563-4059-4556-a879-6456a5cdde7d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "443f21f2-c100-470c-a1ba-ebddbb30882d"
        },
        "item": {
          "id": "7cdfda86-937a-40ed-8b02-deb6ac51e110",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "857ec57a-a75c-4cbb-9b8d-70e8c99950ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebc289d-7adc-4b81-a46e-fc22c30fd49f",
        "cursor": {
          "ref": "07b8c1df-5c83-4f4b-8dde-6560579ad8ce",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b3ee820b-e4cf-407e-9e12-40c83df26f5d"
        },
        "item": {
          "id": "1ebc289d-7adc-4b81-a46e-fc22c30fd49f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "be9f44c3-1117-483b-9c61-63ad0f227741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e20770-3b18-40d5-ba01-a3d616367443",
        "cursor": {
          "ref": "1751bcfd-9fae-405d-bd07-63fba1378ee4",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "183c6c6e-813e-44c5-92c3-0d62475d18bd"
        },
        "item": {
          "id": "49e20770-3b18-40d5-ba01-a3d616367443",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6928cb0e-0f80-4b9f-994b-69b58d49447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cde011-6889-4d12-81e5-6f3250233856",
        "cursor": {
          "ref": "bbff46aa-8794-4b0e-bab3-388466c89635",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "795cfee6-4f0b-47ad-884e-ccf1ecfb63d7"
        },
        "item": {
          "id": "82cde011-6889-4d12-81e5-6f3250233856",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8aa40abb-e79c-4f7f-9a85-e5b726beaa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566dee37-ff29-4b68-9059-12408cc4a2e4",
        "cursor": {
          "ref": "9bdd98b1-9585-4b65-820b-2549f6a6f76f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2a9eedfa-c5d3-496c-b976-c7c942844a49"
        },
        "item": {
          "id": "566dee37-ff29-4b68-9059-12408cc4a2e4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a0b2bfbf-d858-4878-8d99-e496676b641b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b3d7cb-7947-4f71-b132-6b0fea40135b",
        "cursor": {
          "ref": "da1cca67-af1b-48e7-98ac-c87d7ade9e23",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8bdec79a-089a-4b20-9ba4-2a716e946544"
        },
        "item": {
          "id": "e1b3d7cb-7947-4f71-b132-6b0fea40135b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d026d086-beac-494c-907f-fe5040d6a234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe356c8-1dea-42ad-bbad-50e786281f20",
        "cursor": {
          "ref": "daa9d7c0-b601-4f7c-b4d8-96444829ce20",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "55c02359-e4ea-4c52-9fd4-e4f804d638d4"
        },
        "item": {
          "id": "cfe356c8-1dea-42ad-bbad-50e786281f20",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5160113c-561a-4c23-818f-cc7fd3cca5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490882e8-a019-4676-b702-6bc4502804e9",
        "cursor": {
          "ref": "667c1801-0cf8-4a86-a9a6-00e5c2619ec6",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2d5d2eae-87b8-4e21-b571-7b16201fc796"
        },
        "item": {
          "id": "490882e8-a019-4676-b702-6bc4502804e9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e458d479-68a0-449d-9242-c282356b1847",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cc23cf-3a88-4e75-915e-de45168bfb74",
        "cursor": {
          "ref": "f120e51a-1443-47b6-84bf-a919d08f05a6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b4dff2d7-cf8e-4379-8ee7-06da1237eadd"
        },
        "item": {
          "id": "79cc23cf-3a88-4e75-915e-de45168bfb74",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d062a20c-5c4e-4d2b-9741-6b807eefacf1",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "23968be0-b40f-4266-b7f2-8b62a6f41828",
        "cursor": {
          "ref": "c098e1be-c246-47a7-beac-db560459b6f2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "995f948c-19c7-47d3-94ce-7a93689a6fb0"
        },
        "item": {
          "id": "23968be0-b40f-4266-b7f2-8b62a6f41828",
          "name": "credentials_verify"
        },
        "response": {
          "id": "efd379fd-ced5-4426-b2b0-593b3cf5d74c",
          "status": "OK",
          "code": 200,
          "responseTime": 2335,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b261c5-cf4f-4713-b5b4-001d7db35560",
        "cursor": {
          "ref": "deab9e6d-adba-45cb-ab3c-fd0eafb3864e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4e2ccb58-569e-4f93-8c28-e76bfa212dba"
        },
        "item": {
          "id": "a8b261c5-cf4f-4713-b5b4-001d7db35560",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "045cb6f5-915c-40ca-bfc8-9e7a5e4a0158",
          "status": "OK",
          "code": 200,
          "responseTime": 2493,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b97f70d-9cb2-4de3-8381-f62323a31905",
        "cursor": {
          "ref": "52329aab-8b60-4a31-8668-3b8a0851436d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b7e647cc-e718-48a9-9ccc-82732ac1c5d2"
        },
        "item": {
          "id": "6b97f70d-9cb2-4de3-8381-f62323a31905",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4ac38e04-3f12-4432-a670-8c65cda339a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b97f70d-9cb2-4de3-8381-f62323a31905",
        "cursor": {
          "ref": "52329aab-8b60-4a31-8668-3b8a0851436d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b7e647cc-e718-48a9-9ccc-82732ac1c5d2"
        },
        "item": {
          "id": "6b97f70d-9cb2-4de3-8381-f62323a31905",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4ac38e04-3f12-4432-a670-8c65cda339a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a642cb-8690-487e-9f0c-f3ede6f90dd2",
        "cursor": {
          "ref": "f960ca9e-5e3c-40e2-ab55-3712449ced8d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5e49a4da-6b22-4dfe-997b-625ebebe6a97"
        },
        "item": {
          "id": "36a642cb-8690-487e-9f0c-f3ede6f90dd2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1f4f63fa-bdd4-4f41-84f1-342d19b5ff21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03973a1-6def-4993-92cf-0d203aa7db5f",
        "cursor": {
          "ref": "c0eeb8de-b519-4101-8890-441d725c4e6e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1a3b8d1f-586a-44bc-8ce1-6b48574a321b"
        },
        "item": {
          "id": "b03973a1-6def-4993-92cf-0d203aa7db5f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "18d01444-571b-480f-bc75-9452193ba241",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}