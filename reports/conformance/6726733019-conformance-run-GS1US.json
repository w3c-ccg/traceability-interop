{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "413a07a9-b3fe-4583-87a8-3abbf4ace68e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "16ea6986-b64c-49c9-a4b6-745f75334afe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51018ae2-1ffe-4e1c-9903-41e923acc302",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47b63be2-3632-4e3c-af84-9072d33dc192"
                }
              }
            ]
          },
          {
            "id": "29d39e3b-1a2a-44dc-ac82-8e72d17bffb0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5025f532-7d11-42a3-b865-25c0eef991d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "00978f93-1a72-4abd-a3c4-05ce1fe8221e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "312d031e-68aa-4892-8272-b50cdd447eed",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9fe99341-a0d4-4fcf-a704-b8711a887c1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86dc76f4-943d-4281-ade8-7984d6043334",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f602a04-10d9-4085-8f5e-4a1a6e479b85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a95ea89-e94c-4d62-8f71-ee5c02b4b284"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2075df4-0ea6-4e6d-aabc-87f17d8c0561",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8ce3836-0a66-4d34-b04b-19d481fad294"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5015684c-38c7-4376-90dd-aca9bb0425d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acca77cd-c2b4-4803-afe3-64a7415df7a6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2facb5c-32df-4906-b7a2-7880ef6e93eb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "59544cdf-fb15-4033-ae0b-e91a5b21085d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3524de7d-40dc-4e4d-82b3-412f488ca1ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daf6d703-7e2b-407e-9083-4c4d26950288"
            }
          }
        ]
      },
      {
        "id": "ded0b62f-7912-4520-ac3d-039c82bb83eb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e9e5a40c-9c63-42e9-943e-f0dee972a0c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "179af0f9-f43c-4dd2-b9a1-d3565d4a9e5d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b333299-9385-4654-b35a-c821225001e8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccee5759-b553-46dc-97e0-acb6ccc4fcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6043f304-469b-4bad-b679-550d58e39b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd5c04f-7970-4d44-990f-c1a96b12ade2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b160c43e-5a58-415c-92e5-4fc6a0286ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "894391c2-0a3c-40fe-ac99-5559f14ad310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d5b9ba-5ac8-4e81-87a8-161fe5e20f21",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c40031e-8416-45ec-a025-d4af53f848a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eca2cf63-380d-4140-8883-22b25584ee69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9168bc1-18da-4c0e-9299-6e81214bf841",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3ddfb4a-f285-4b94-97d5-55990979c36d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f83f04-cffa-4e5d-8879-00262741bafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07681141-39e4-4dac-a629-c9d580421d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6d1812-711c-49fa-bdf6-e001419b7bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71add41f-ff57-4148-bd4f-863384fe42d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2ba8c0d3-54d5-4954-88c2-9297fc91cac5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbd4ab8f-4296-44a4-bb8c-616fae0d0b1a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a32be5b-6c0b-4d00-9141-3fee226db425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6e54dec5-3c6d-4af1-9c90-4e8242936adc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "575b54d6-b824-4d69-bc85-f3cbf5ef1894",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "61a7af52-657c-4548-8552-03a5a256266b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a136661-31d0-4b2d-9ff4-b05d0d89b98b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f1ec0d2-9b2a-4309-a2da-d6c7f4789c8b"
            }
          }
        ]
      },
      {
        "id": "44b696f2-904e-49c9-8a5f-3ec0b07f8b37",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6b594814-50bc-4b51-8f8b-fbc8b8a663dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "782d4e68-91b8-477b-a126-0d7ac666c140",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "296d8ce3-ce08-4724-a892-8a81629f2398",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0a15c5-1120-4c6f-ac09-23cce33f66ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b2dee6-ea7f-4e25-bb22-42cf1788fd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e02ace-e43d-460f-861a-92efe622ec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a713357-3495-4c8f-b279-f62317645ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c5d0da-1b93-47b4-95bf-9e6ab41164a9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e8213e-7aaf-4f6b-887e-10c6d832a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ac8d95-f73e-4fe8-b546-bc6705ad9b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eb3fdf-adc5-411c-95ae-9c4aaa91f668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a16d01ad-75dc-4f45-b5bb-a55788a88a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89cc200-57e6-4f72-8e6b-f300c992ad15",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa46e8-25cb-45e0-98ee-b518226b3a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7ebefe-6c94-40e6-9470-bc7b2dbb45ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f87467-5934-44d6-aa85-d9ebc4bed349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae9e9b39-c8c4-4510-894e-819f68817372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37337c42-bf79-49ba-ada2-cf9b2701c9a9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf8afa2-f702-4906-8692-ee0c645f8b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688c79b3-dfaf-43ef-ae8d-45166f780761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5b4309-6a44-45ce-94db-c92f5bcb4025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "188ba3cf-5884-44fb-845f-6a74f9b246b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e2e5ad-5b5f-41ef-994c-80ab472a02cd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e409da-89d2-49b6-a145-4d75597b648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c19a19-aa0c-49a3-9e3e-c524e4b57d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c925c589-7ff4-47d7-9cd2-6663301b9b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "595c0c30-bb02-47c7-89de-6738e2a07058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd46a437-8b33-4f25-be89-c3b489bffdf0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41fdd9-bb20-4383-b2e2-cd5d3d7f9608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6a1a6b-b61e-49be-a225-1dc878806458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0907d5e1-4219-4cbb-8279-20c8b58662b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d08336ef-e2d9-4a43-8935-8af47c5836ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a2a0b2-c932-453f-9c74-1597e70fea14",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb956d4-2a6a-47ba-add4-d65a06826825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16d8c5a-6237-4605-89aa-7bc09f64ce6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c614761-4572-4982-90ee-9fc0cc3ff089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "969e4e97-3dd3-49f2-875f-42a44a9c7f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b6600e-7fbd-4822-9664-4383b88c174d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39be884-4b0e-4253-8939-497cc14c1787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef11571-d160-402e-a0ab-71192325865f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e1492d-67c6-44ac-beef-4cad7464de47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "866bebb0-1caa-405a-8290-520903d40f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a182d84-55ae-4b8c-89d9-5d3a61fa60dd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc29fa9-addd-4969-9fa2-020762077650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002b5ca7-2fa3-421a-ad2f-0c675bfef154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727dd09b-d0cc-43d3-b4b4-85ca1a5df953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4c1eb92-79e0-4279-92a9-2c5ce272eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b59117-fadc-4ef5-8e1e-a82b0fe3bad2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fa0da1-6680-4ad8-ac25-f89bebb5e64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53db7c53-e871-4628-9197-f7155b537d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e0f349-fcc4-49cf-8b14-67f14dd77956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ff5154-5ca0-4ab0-9517-e8d308780077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8131a5b-b6f7-43d4-8948-37bc0b129973",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f72bbf-6231-41d5-bded-22404f3a7a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19687b1a-c4b4-4ef6-8e1d-dc88ac9b2614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc487259-ab33-425b-bd05-c22618e4b571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e2b64c5-6b97-49a8-9374-eb373a4ec126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d4b68e-2286-4dd8-aed5-9361110bd818",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea0417b-96a5-4914-856c-3a2753434f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d266ebf6-0ce8-4888-885a-85cea43b7fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197a8704-2e4d-4867-9ba5-a5aa9b5d9d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3fc779b-df3a-4aaf-b7c3-64e1ce9afb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad206376-afed-42c6-9d95-097ac1fda938",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37527aa7-808c-4665-b35f-edc7aa37a669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245cc5e5-5376-4889-8dca-0b384a4612b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c82e1c3-0dc1-456e-b2b9-20db7922076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d935c9c3-c3a9-4a9c-88ee-9f25fc728234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc73286-db0f-446b-812a-a5fb8f3cca15",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e03de1b-30de-49a9-bf37-30afc306ba6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7ef7ef-45dd-4b64-a409-b5c449f505fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3974cbc1-f5e9-429c-916c-42b0c9e9f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53056a83-e85b-4f93-9ddd-9933cb65f882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fc803e-4660-4651-9be0-174e2bff0f22",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5005f2f6-dc5b-43de-a64f-1c3bf9ad134c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a633e392-55c9-4c5d-8483-04a404fc378a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f00aed4-12f5-4a91-93bb-5f58ffe0a443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24df4639-d26e-4a52-9182-a1f1b35cfb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd0d9aa-83f2-485d-afd4-d441ed7efe35",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f0006e-f2b7-4d4e-a0d0-00568f5b54a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95db70d6-afc9-4716-bf86-4bc855eda144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66de3afd-7a18-4cb2-bfbe-3cbbebf1305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "075eb977-a8e9-40fb-a1e3-231a2f5f3559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c01566-b7e7-4261-bd91-55d2948ca966",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3b5c7c-cac1-4efe-a850-e711f88a8461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34679e71-7395-47ca-b1eb-b9d4a604d4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eca77c-0b71-4597-8ad8-37fddef13e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22518ca4-0762-4e5b-91fc-46d05c4fb16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215c51d0-53b2-49eb-9746-fd9ea5f24459",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f85404-8ebe-4479-885e-f27f1f1f07de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1e7880-2b42-455f-9805-5e87e3a02cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ab6d5e-e35c-4ae8-9487-d2227ae97876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf03506c-76b7-4329-a9ff-868771034d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1281f137-574e-44fa-a387-03f7e0651ff6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ef5376-fa32-43bf-80fa-7de70faf43dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db0cdf4-3f66-4949-a12d-0b286b088b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae8a36e-8846-437c-bc46-58080f8af9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f666a7b-de34-44b3-81bc-9b0c8d80818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a28e462-6ca2-47a3-8027-18930303755e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624b2828-d124-4fbe-b56e-a0318b08b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a1d54e-b3a1-4894-a003-621c69bf4ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bb3eae-978d-49d1-8327-d6cbe2921a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d690eb6-dde6-492c-b817-9e6cf8059db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d598cf-0e80-4300-acb7-8024a14fcb52",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84b3489-998d-4f0a-acd5-c8977f4ddffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212b5242-b568-4eee-952c-a1b4ab1711e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3ffc19-541d-40ee-b2b1-49c5c914caa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72445f4-1db5-4f17-a4dd-8819a8449f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca6c19e-f261-4db5-ad33-83977a83dda1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d35f184-bedd-4904-b0db-151763b889aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6574ee69-3e22-40ae-a752-48f265d3caef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fdc52d-1c9a-4443-a9eb-3a5224f9f5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c01431d4-4872-44ba-b9eb-6de69bf3050a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc034c3-4b07-4320-b416-d537c272644c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1470c42f-0d85-40e5-b8eb-1ea411efa1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c2150f-26fe-4af7-a3bc-8ab11cdd2d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02319975-841d-4eca-9b9e-aced135d62c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "908d2d60-58ab-4f69-a65b-16225f7d9397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955a1deb-6f70-4e96-9650-dd3c5440ef72",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4820679e-c611-448c-b680-98a92b3374b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00be2cd4-61cd-47f1-9205-0ef130250e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8b2448-2d22-4209-a06a-409ed18671ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ed456f-e646-4c92-8b85-07db647db24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d7e358-da24-4193-abf9-cca2e57e390c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716138aa-3028-4073-89f8-e284ec10740b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc86ed4e-aa26-42df-ab08-d233d3014af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792a039d-06f1-4f78-ac57-8f50fe9c89b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0a69b7-ecca-4972-995d-e457bc3b8dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9752d84-211f-4c9b-b2cb-2300ce8d278e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898a3c9a-6527-4970-9cf7-d6776fbaa0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf94cf3e-24dd-4eb0-8ccf-b1eb5e076f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ddd492-9c01-40ed-a67b-0ff8f1f5e15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "285a1931-b704-443b-8897-e1f17d21e5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafa13e9-4e4f-4d83-8bd7-630f5161c371",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05984d02-ee0d-433d-a281-09eb85721d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c39690-2d48-478f-9f17-579d13fb46c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87392816-d4c2-4373-9957-af44b8f670a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f72390-84c0-406e-9d0c-b9377a5298b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4274ce4-fe65-4904-8485-545b292196fe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacab104-26a1-480b-833d-421387991371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c487f765-2afd-45d2-8ebe-53d1bf1b575d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5843ac-491b-4147-82d1-6df2bc82f611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc0852a-ea77-4939-808f-f6b4ce58164a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f57e462-77f8-40ba-bb22-bf8cdc8a2663",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c08793-36c6-4272-a239-0b85e8eae748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14d0092-5890-4205-9ebc-94c0c2c97625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3458d9-36eb-4eca-96bf-ba2ceac105fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bdad5f-6f7a-491e-b1d4-9a1170e64aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9097cff-c8c8-429c-bafb-92c34be6ed53",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8a4db3-9c53-4846-b238-c8c9bdd949cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554f418a-7202-4e9c-bb56-1f43b55b8ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16080f7b-3f11-4dcf-9442-0e8ad7c88e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f63deef-ac79-4e51-bb92-974cb6cf5d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d80b3d-1153-4581-9f7b-bc5009c3ac22",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefd974a-b3ad-4eb4-8f62-54520aff21a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5325b9ff-6a55-4756-9757-bd5bedb28a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92e4cb2-5424-41f8-9cb0-3ded58ff12d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ced49ab-0141-402c-9573-444427715bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2515ccbc-7af8-4fad-8762-1c8cb632cc93",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38bf302-076e-4749-b5fd-bd383fc11c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8da0c47-3e77-4bb0-bc91-afea5e73c1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966c7e78-69e3-41f4-b5ae-65a741078061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c276ac54-2a42-4983-ac6d-f032867b485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ba0719-b73c-4664-ba98-8bbda7324d34",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661b00a2-bfbf-4ee3-aeb2-8a8bbb5378d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba7b55d-eab9-4e1f-b44d-d9fb1dd3eb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6196eb-8518-4687-a3c8-2234333a6103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5b8e51-2c11-470b-880a-155b6bafbafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b13b7b-ddcd-4398-825b-8f51d4ab798d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e800d59c-f834-4fd3-8ac8-cd5ced7e0436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521a8d79-3762-4fb5-8ef9-1876737ad891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b97b83-d2d6-4e83-af4b-d94ecb46d1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3913bce-5c0e-49df-86a1-33ff9180e1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2054542-3ce5-4e00-ac55-4f4a4bd9f52e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4748e0-28b4-4b3e-a01b-046f5d40514d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a57e7f3-b7af-402b-94b5-335b94a13d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8a48f8-0cd5-4c62-9e66-83b8828bb5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "11c66cd2-1a09-41d4-bc86-e8c5b61e53d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d1ed4c-5687-45fa-ac4b-3eabf6c221ef",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e21831-d225-4e4d-baa3-1cfed2c34a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41efa176-a74a-440c-8376-4286b636fbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a554d5f-d5dd-4efa-8bc6-3782e0f889c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b34cc9a0-16b1-4687-bb7d-0347a0df85e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58a9f37-5f09-492d-9c66-8348156a9267",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b8f216-0315-45aa-84c6-0328441ae562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb85c64-4056-405f-a505-7e3b560b894f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a61eb1-2dba-41e1-bf51-c4b93dd00864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b642f557-81fd-4329-bcc7-e8f4d5724c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56c2a45-0c8c-490f-9a54-3312c73a28d4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428415f8-4100-444e-af21-c9e0c5489d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c840793-c518-4025-8de7-c8d4341155f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a5ee46-79e4-481b-89d2-58aeaa14066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "906cf714-3348-4183-a3e8-3f2417951284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ec1b8c-5838-46e2-bcf6-667591e32655",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f6a0b9-e0d6-46c0-bae0-0fdee94f7654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c9c659-6dca-49c2-b692-65576934154b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b7775d-bae5-42e5-9c12-c7ee5725dda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd2df92-2533-478a-868c-e4989ddaa143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff38915-09ff-46b0-b275-f53e1870745f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6b356c-9cdd-403e-b919-07f9b584a70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7daf456-140f-482f-8e35-9586953db234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fedbb5e-f5cc-4540-80b4-bb33246f60d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23adcb48-04da-4af9-bb1f-68d625a3dbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2291b52-09e9-4081-b253-d36cd5c99b6a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c472b88e-11bf-4260-9e68-c7e65189d356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb98fb3a-ebe5-47ed-ac64-67cac9d90cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc456185-36b8-4424-a0a8-7ffd7b33b96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f4a2f7-5572-4efb-8b20-5d1353ebbe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487135ff-45a1-4dc8-885f-8ffcd3605063",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9efd17a-af67-48a5-b69f-e38076d29b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fbf76d-6781-4ea2-a025-b07a7c47de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0333a4-46b3-438d-afe3-89589b46a5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "799d4bf4-17f5-4daa-a13a-7c141ccd7734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b589215c-b2ba-4d5c-9be6-bfc07d06e94d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e43abde-1a21-40a4-984e-09a84c1993bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae28b301-6a18-4fc0-a30b-be5ccbb2c38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85798d54-a0c8-4c4d-ac76-eb425719646f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a335b13-51cc-45eb-a9f6-d06cc9aa392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e38726a-197e-44ff-888e-b5b2fba074c9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ad5b38-85ef-4f0e-a52b-9cd18e631c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fa4695-68db-4b06-b571-e3ee335e92d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c57d3c6-6c96-4a91-93ab-b7d0c07086dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc21163c-63f5-47dc-ba1c-bb61dd8600a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad9ab7f-b7fb-4b7c-82c4-85252337ad24",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4f8b2a-bb45-466d-8e7a-9c92986b991a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85ef38d-dfe4-493d-98b1-c7acd723875c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae96679-2375-4ba5-ab73-9d7798584223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d4909d-ce2b-4db6-8691-6cd1fafe841e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c604d2-1aaa-4671-8846-43b1dbbe9efe",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a9a3aa-529b-490b-9969-69fe9e6d9864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3959da-7f45-4fe7-a0c9-3fb99652e85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb3257d-d8f6-4291-9fd2-272db912d4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab26946b-0811-4aec-974f-8fc764919cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7737f9-0a4e-40a4-bc04-26b41d42aaa3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda0757b-cae3-493a-8092-668a085b9cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d67575-9df3-4e9f-a565-90d2c2013ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe411c5a-abcf-4f39-adf5-b988cbbcf439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c61bf41d-8d20-445e-bc24-fdd6b7598ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e44204b-341f-4d29-beb9-d62fe517d7a2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c91d84e-100a-40c9-8a6a-e002e30ed999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51cab1d-4a9e-4455-8ccb-21248311c01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9657b29e-a6cc-40c6-890e-bd748784a6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cacd9ef7-d0bb-47dc-9587-e65825248813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85513269-c07b-46ed-b183-15073b79d721",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b96cbe-548f-42f4-8a13-02935121b32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bd0185-7001-49cd-8f06-058dbcd3efd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abea7f1-858e-4679-beef-b55c34ccfef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ddaf38-e394-4fda-9806-7379db26f19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254f1199-4533-49a9-8dbb-d8e82316b548",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d451d982-70a8-4678-884a-587b1336b350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f524aa0b-6124-4370-86a9-bf5ecf82043e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af42229-74c9-47c0-ad7b-3c18a3973ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a61393-92e2-42e9-9c32-1061e94e3ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993aa043-da9f-4067-b10d-ccdcaa907fe7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9816ad1e-7e7d-472c-91df-e4b5b85d172a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9bea8a-1855-4985-ae1f-fa5b5ee6717f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555b9a57-3297-436e-bff5-a6c32e6b16bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e09f08-cdab-4188-a4fe-860a35ecfc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36a7b24-a070-4ac8-8457-3fa3d14c5244",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d155045-3d50-4ba2-aa65-14a74a19c389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7697b7d-044b-40e2-b83b-321cdaeebcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc21721-da33-47ac-bf88-ef8f9f830865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "548e90e1-34e1-4c43-b30b-956bde4a33cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0f1dd7-cf83-4fe2-8acd-500b3e8a0112",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a507a459-d409-4a82-b2a4-d6ea0092be18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d124552-3d58-4ffc-96da-7866e7ad2f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e253a49-a205-4512-bb32-13d7396e5f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff25d70-6d4d-429f-a4dc-4fd1f0065dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478745d3-860c-48e2-85d3-9273fc3c2fe4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7a2204-f31c-4409-950a-99ee195d7603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d161e46d-7cf5-41a7-8cfa-801927c5d84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa05d48c-8e8c-47c9-9e1c-57805af0d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8632f8b-f8c8-4916-b53e-a955d7d14ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3ed4fd-3980-474b-a01f-ee8d430fe8c2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6899136-b2b5-401c-9e6c-1e51e0ee3381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850779e1-4018-45d9-bbe5-a11277d259a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c3abc4-6995-4157-b226-7f2686cdb39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "983f0fef-3143-4bf9-ab2a-fbacfbe577a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ad3be1-ad4c-4a50-9b1a-d0e7bd3ac0b5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7f5582-d380-4de8-80bb-1a081b052eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db94c85-56ab-4cfe-957c-a4d4f2c0b5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b2f815-d78c-44ef-afd1-22b4322f4263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4be12814-46ec-4a94-a10a-746e7a000f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99a2b47-7a0b-4fd4-8b93-7fd27432beaf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8053b8-9932-4ec5-b7a0-f6d4ab6299c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d4dc21-ed93-4322-960b-86e045f4b27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d27424-7c33-4da4-a867-9b71a9319fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df527b10-379c-4450-9171-a09c773b776e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad203457-756c-4e7e-b049-bdc67ece565d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb1f725-834f-4a38-9813-26581a978c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3d06a0-2af2-438a-a3b1-9f66190f25f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a06707-2fbb-49eb-9b85-d14d65b123c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c426c05-aefd-4b6b-93c5-30104089df8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5906a685-a7c4-4dd0-9ddd-c1dc5a535827",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd26c9fa-df1c-4c84-bafa-bdeff82837fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cae78cb-1f29-4da8-8fc7-e3c0564b8eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da28ba2d-d251-4ae0-b92e-633c51fa85fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f574cfa3-1995-4082-a1e2-b15321969809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea0e37f-2f3a-4bd1-bd6b-5440c81f87e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b957dbff-9a96-4abd-a322-ce6765b9bab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2474e011-7948-4cea-97d3-830d6b1b1b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee418b9-0219-40b7-b89e-ed4158f27ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "033b7634-511b-4a82-ac81-a1d29b2a1cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dfd5fd-7c60-4f95-9a57-da1232e2f5b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cd9a08-7f54-417f-8e5c-786c159e6296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1789be49-833b-4428-807f-be312fcc4dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077337da-c10d-42f2-ad89-c52926ac9978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5780b722-b720-4601-b5e7-9d910c139515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b18cbca-1d6d-49fc-933f-d939b0383b46",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8401a0c-fb2c-49f9-b79f-d94899eb02f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c170a281-c355-4214-99cb-1915505db1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65af0f9c-aae7-44dd-aaf4-4beb35a3b232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac01c30-ff9d-407b-8aca-daa8f010fcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eec247-e5e6-4529-941b-b7f341a19198",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cff51fb-198a-426c-b806-c14d2579b306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ef354b-ff5a-44a2-b1c8-3a05a9ea88e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03464b0-d3c7-4206-94e4-3e96ddb80931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2804c1-2c50-4a2d-9984-267141e79b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb767ac-adbd-45f2-97be-b75f5c5ae787",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4377dc-7fdf-4d8a-a284-8f943f7d6e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e582a9e-ea07-45d4-94a2-2d84b6d66d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00e7203-4380-4a0a-9e0e-9ea8b1cf5c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f44b62-e7e2-4e42-8831-1ca0dc477aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b493b436-e76c-4a4e-8e1a-e8266eaab822",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd20a62e-bce1-4281-8091-d9515909ff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ec3aa6-12fa-4f9d-b0ec-c942316c5cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e0bb29-1951-4ee1-ae4b-6f7587d2fb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "228c2277-163a-4883-95e3-6baa1e4d6917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e733877-9ac2-4973-95e0-2b99148f71a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5084e59b-6853-4676-b8b4-b57247b3415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da8786e-829e-4b75-a24c-56454dbee127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a8de96-9aea-425f-a44f-4175910660f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c22c8dc-6839-44ca-9278-bd148b9df66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7186b033-7990-47c8-95e1-9f588966e083",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c88f7a-178e-4cbc-b6ef-d47f4a02c01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da26b9b3-be14-4610-88b7-f3127ecb04a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9a189d-4a98-4bac-b199-acba73e81343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c54d6cfb-7dac-41cd-8440-a88e8807e3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a8574f-d81c-4411-ae6d-1451a626e9e2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2600dc3e-7754-463b-9d61-273a81c886c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945d1d98-890a-4531-bcf2-df4592278c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956a0ed4-cdcd-407e-9634-f63dc15c4e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2428722-757f-49db-88d6-702389f7e868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c790f347-a409-4f50-a3b4-74c188b10df4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86200ddf-a472-43d5-8aa3-6263b103a8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7df964-86eb-49dc-bd37-d8b957f3e200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99940528-bce9-4df7-9738-c4c0cf61acb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "152c1ab7-dca0-407b-b13b-00de2051d157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e345a528-85f8-41f3-817a-0c89dd6e0210",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd1c1d7-7b75-413c-8b4c-1bfac3f61f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35144c3e-34ca-4c6c-a0ce-6fddb53b5974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8480c68a-ce45-4cd9-b4aa-c4f304a0bb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24fe45d1-5b8b-4853-a625-57dc62557493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95057403-aaad-4097-9311-378ddab2280f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eedff17-e3c2-4f56-9aa3-0eef50a3a2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03be3dde-4a51-44e0-a850-a30814bb68b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570f2f86-84ae-4e04-bcab-25452338fc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80cf3a5-5434-460e-b925-315494436f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28bdaf5-74f0-4413-a280-f316e2c8c564",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6f3aea-bace-4d87-8306-883dcd7a63aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44dbd479-8a64-48dd-934b-cea0caf72dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c4f435-eb3e-4adb-a251-5d20942cf4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c42a52-ea5d-4ffd-b73b-be3a1699d5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef9cf15-8ab8-486a-91f9-eff63753f151",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56bb097-7977-4459-8f01-65021e108220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86d199d-bbcf-4e12-a355-d1fbcf39e8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9e7655-ab38-4056-99a3-7397e446ba0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65f0e0a7-8807-4726-8530-d7c9cf8a7b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ad3674-0716-4240-8655-a468ff84e2fc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac18768-5a80-4e40-9411-3636dec151ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9a6352-52b8-41ec-beb5-a7688a2d7cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e48762d-f69a-4500-a72f-de14c6a1b744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0517d447-3bef-4878-9301-4934f2656bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac5cc72-c60e-414b-b32b-67f0e1dabf0a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025784fd-30f5-4a35-a677-c71d3afec2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dec6115-04a6-45f2-99c2-3338598adabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541c8cd0-b2be-40f9-ab37-8453b7ba4e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebf6b3c-9bf4-4637-a709-310700b554c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4f06a3-147a-4142-a8b2-4570167d9410",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dd75cc-c88d-41b0-9ba8-6d8b82306b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ef876e-de4c-4d09-8e0c-936cfdf3085b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5aaf1e7-e24d-4a8e-899e-d7993edbe836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69791664-e779-4b0f-ba2d-d636ab6d9a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357afe10-1708-4b0b-9899-539cb745b796",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715d6ab3-86a2-41f5-959a-e6de5505cf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6867cd-06ea-4b59-bfa7-97ecf1dfbc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e233826-04dd-40b7-87fc-3cd8ab402a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd9f2d0-6c01-4a71-b71d-6aa73d8601ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15b9068-27c0-499c-9cae-c99aedcf0846",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc1ec08-e538-4ff8-a22f-63c6f71951ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036283a1-46b6-44f8-bf15-f67b6b378283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8bc777-5806-4cd4-9aa6-1abde2fb1551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df233e1-7075-4068-a58f-f23c4a084993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39357956-80b8-4e48-94de-bf41478f915b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80113f89-f723-4259-af91-f5702f0664e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d979125a-b730-4553-a257-8fde540cdecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecbbf7a-9fdb-4b18-a8e0-9850f86324e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf927592-0436-493d-b3be-f2cdcf824fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85d6718-8353-42bb-8158-4e90f7b95a9a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08510e5-0cd8-4146-b1b6-37e539b29262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b7c117-9fc6-4631-bb51-ca24d4bca6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188f954e-1825-4c68-a5d3-dab682ef06ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2642948-5452-4081-ac75-17dea09463c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d28ac5-f876-48f6-8462-cc0c0d359998",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e34a8b8-395c-46e8-b215-cbed0316373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baae31f1-d791-416a-b3be-3f37601bdc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9243db-04fe-431a-b61a-9d8b8cccbcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d160b1a6-7ff3-45ac-989e-58d342bc9f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ea40fa-e0b4-4a5f-839d-a99fd71cb19f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542d60f2-e283-4c90-8dfb-706355061969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e66ad5a-0be9-45e8-9e19-ab1be6cb9750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c717cc-2e20-43b8-bdab-8187c789595d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8bde77-9f37-4e26-ae4c-dcb8d6e18466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe598c45-f0d2-48f2-a776-f277335d7bf0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f29b80-7b22-49ae-a43e-0f64477d1e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3c56f8-c57c-422e-90e7-9430bcf3c753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f497259d-ee0a-471c-a343-7706d5116eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c998623-35a0-4565-8d10-1166505e948a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445a298d-1816-4704-825d-f63aa5a73f14",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fc5153-05bd-48ed-b7e3-6f58f0351df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac190f6-0201-45e8-a937-7b5ce3a90f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fffe587-2ddf-40f9-a12d-045b8d345665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "370fc585-bc11-40fc-ac04-46060f4ee267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d40ddcc-3e89-4181-9b6f-033a9510a4eb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d11a19e-9420-4fa5-bb46-c9468e31a7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ea329f-6d8d-45f5-b539-6b554b9d2390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c255af6-b5d1-48e3-8476-cfb165c08235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d03222d7-b6e6-44c5-a223-9b285c9d6d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2675a479-3eec-412f-8685-c9344e5df702",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91034e79-05b0-4e99-8f74-5e62f228d7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431e12fc-9911-4501-bcf4-53fdfc03c438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca279138-fb09-4b1f-bbf0-1ace003e2cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eac197cd-4cdc-4a49-9d4f-f2eb32a5c35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cccbbd-0116-43fd-aa9b-1faef9a8c2bb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d16d676-0962-4136-90f4-c81a44ed9293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bff321-ab54-4e8c-9745-a65c1c95ca3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28289e48-a90e-4561-86ac-0f725f0d0a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ae24ed-5e40-45eb-b2d7-7a6bb5ce8ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1446471f-b4a6-4a1e-ad05-5844721b2617",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bc93b1-d55b-49d0-aa97-d769cdde7ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3035db2-7e45-4f0e-8ef2-5ceba8a2e5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be562341-a5f8-4254-8041-a0221858720b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89c102dd-70d2-468b-b519-59052472d309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab773b14-d697-414b-a034-2045a3bda967",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0799f90a-f4ac-4876-a739-1d2d3dba5e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117176b8-1e35-4ec9-83f3-1d3630260b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed4d07f-512a-42d2-b676-13ae1665e95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94cc63c2-f4cb-4cf9-b852-f42082fa5320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed250f7-c9b4-414b-a99a-32764baaec38",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb9784e-513b-4488-8331-f7a5081d9e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aea439f-4824-4235-8951-b909f80208b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c34c10-e104-43df-bcb6-354b1b8c5f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4e0474-e317-4453-98e0-ef5ada587792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b929db2-bbcb-4216-8285-39a73df74b0d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cb191e-055f-4cbe-8606-616827c677f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befd50c0-1a8a-40ec-ae1f-f3ea21bb1dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfbddf0-e4aa-443c-98f5-eac8757d9b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84e37697-cd62-4860-8d72-c5434ba6ff26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c89abf-8f54-4e9c-b06a-c31d82d17cd5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f984343e-957a-4514-902d-f6fa596257a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4ccc239a-797b-41e3-a676-12ec8d48e36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8411d48-fa2f-465e-8de4-d5daef2004b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f81c0b4b-cefb-4c03-a759-0eec70cd43b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22f59ad7-66e1-445f-b41f-e3f727902d10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b67e4bba-4e92-45e2-b901-d6ebd04ad1a1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8925640-80f7-4de1-ba36-e0b41da7ec8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4b7d90d-8e38-4642-a82e-baca2374328d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb806f30-c4a5-4210-8132-72b31f18f070",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d96ac1-307c-43b7-b4f1-ef7d86d5251e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96dbceca-58d5-4995-8e76-e57aab7b7d53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb675eb8-1a06-4fb2-8260-2e633e4c412e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3149bb2-962d-4a2a-9903-98186b938dd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26f25851-20a2-455d-848d-329fde922dc9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cc72df3-ed72-4c6a-a948-35017ea990c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07d3a829-ff39-4556-882c-88be21fdc0d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6b2993ca-e380-405d-8cff-9bf99eed22c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f900ed8-944a-40a6-9d62-eae1ee0394f9"
                }
              }
            ]
          },
          {
            "id": "886b7559-721f-4972-aa45-bc484d38a730",
            "name": "Positive Testing",
            "item": [
              {
                "id": "745d4c09-e3ff-4b82-b5ef-52a40ab4c949",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "eee0c19f-6876-4b84-875f-7f3c281721c4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd30ece-74e7-4aea-8708-52c9a781da0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2de877f6-f3c9-4de3-9bad-07163a1ffb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1393256-337f-494d-be80-794f61d94e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95f7480-38ae-400d-9576-52513b7e1e5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79d38250-8bff-47e3-a341-b5abe0ac67e4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "646fd69d-25b5-4c31-a325-364d4e5891e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2596a33a-f35e-4919-96d6-975a4d919319"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fac0255-dd51-4a04-a1ab-024dd12a6a39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6fdedc6-43bd-4c97-abc7-21af5178df5e"
                    }
                  }
                ]
              },
              {
                "id": "1b947189-3094-4f57-8a04-a86ba6530ab6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3d03550-fe6a-449a-bfbb-dc2f0c7e204b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63b40794-95df-4483-9e16-71fdb8b7bf57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e65efc08-497c-47e5-95aa-6075aa425b9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05b84423-3e05-4275-ab29-b02cd6e83ab9"
                    }
                  }
                ]
              },
              {
                "id": "0d08a6c1-0396-4887-aeaa-7ba50d24b102",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12884765-a7a5-4879-b39f-82a5669422de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5839c8e-051f-4274-92ff-2e2c1dfb7501"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f9210be-9a9c-4e3f-97e2-b8c7a0309579",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13dd69e1-8451-4330-9efb-a87938f4b233"
                    }
                  }
                ]
              },
              {
                "id": "68f439f4-0ce1-4323-bbc8-a8d0e930fabd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d42d5471-6ac2-4996-9a9d-660fd6944189",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43450505-13ac-4e81-9217-fe18e107c704"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59d05bc8-05de-4863-a970-0b4eb59bcfca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "68ae8fbc-f8d0-4b1e-8749-412334a72a28"
                    }
                  }
                ]
              },
              {
                "id": "c6e10bd9-b6a2-415c-86d7-2e8da3ebbb51",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d68af96-4391-46b2-874b-edc9ba57bcb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b396865-fbce-4f5c-af82-9e25628e7dc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0358ef8e-5b6a-4db3-b0eb-60e8d6b9c7ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c231cd4d-5c9f-4a1d-880d-d89b48bcd35f"
                    }
                  }
                ]
              },
              {
                "id": "b0242e9e-624e-492f-9150-83207e8970e7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5fc72c5-ccb4-4153-a98b-b31977b89d20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1acdb176-3ba2-4ab8-91e3-0fb26c87fe36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7549dbea-a4b6-46bb-b117-35b6cbef3276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8da01e37-82ef-451b-adb0-537b8a48e1e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf3df13d-27ac-4d2e-a719-7b70343c875b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7cca2df-6ec9-4b4d-8469-65918d9cfcc3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b98e02f-b9a3-4d30-9acf-4a0271c26a54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b71bb2cf-06fd-4833-8ef1-c3f9e367a095"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47385664-60d3-4a65-82d6-bd9980d2ebf6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c20d6254-10d3-43c1-93ed-339618d6c0b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4abb446f-aa52-48f8-83a7-2813dc61669a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53150d63-83f6-4c69-8e2b-ebe9a5c8f76f"
            }
          }
        ]
      },
      {
        "id": "d8338884-a664-4704-b889-4de8cb7f6e44",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1267192f-9766-49a6-9416-5256371ca94b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1314a86c-e332-45cb-bd83-1e6cf269f034",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c74c4a26-94db-4a39-afc0-f64932ef70e8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8446a1c0-73cf-4ae3-ae14-e42879b89d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c35cd8-716a-411c-afe7-73e3a3ebd937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79d0320-d34f-4360-bcef-85feff6db1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a3cb06-337d-4ee2-a542-6fe09fea8ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e22912-7267-443b-991f-4743ccf6fa82",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73a3c8c-8ed4-46be-af6e-586750a295fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cba873-d2a8-4fb5-bf17-3ad34a72437f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a765a602-8498-4d7c-95e5-d2f4f6c838db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2843ad9d-1ced-4c26-834a-f90edcc3fdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59929dd5-b63a-4f74-84d9-bda42249ceec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a920cf4c-09d9-47c0-a7ea-e814645b21a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de36a649-ddcd-4907-8aa4-1746dcda62cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6bff23-a614-464f-8472-bc82f974be1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5e44c6-67d0-411e-b78b-d195c3dbf91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3c4b2e-e324-480e-98b8-dbd7c5321173",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b799939a-10f9-4bc2-865f-c5db4fa33cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ae4bb0-38bd-4204-8e80-a920395864ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db81bcd8-5adc-4b22-9928-eb446a47d15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60180d6c-f6e5-4134-abb3-13d4557da25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60439da-0622-4404-94f4-a7b4ba4cce97",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed6778b-2a6e-4aa9-9f0e-237f5f5403df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191f40f4-02d6-43cd-9dc3-8782feadf25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39ee6db-1ed9-4918-bf19-5c1bf1c86ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f453cc8-f253-4beb-8157-8620ddba9d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d49d776-f776-4b9c-b931-e2fc49deebca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591b81ca-4134-4e10-9ca5-13b13e2562cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc719621-0a72-450c-bc27-54658499cff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de18c39-e378-4ef9-ad08-728e43486747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24098e8e-ab00-483e-a2f8-128be14b9cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789ad36c-06e3-40ad-861e-a11f9df99c79",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f21837-cf1a-4cb4-bf23-00ba8f25b7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468f1616-a7b4-4f3c-9c50-1ee985e39034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bdeb33-103c-4114-9840-d0f0a7009fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e4bf49-8eb0-44de-be82-2c927f8395fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20732d16-e6ec-4ef2-8bd4-1bc455d8f879",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e62791-5e3e-4975-8a6c-08f54341b004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21154468-9189-4cec-9990-49069b490baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bc4b31-0798-4b50-8de4-ee8abbcc77fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "335b94a4-5d9b-4ecf-9aed-593ae6ad062c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf28d063-e5b0-4cc5-9096-877f12addbb8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb14570c-c164-41bf-a7aa-7430a275c113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acd1dae-76fa-4551-8bb4-bcfb5482e335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee640bc7-50e5-4686-be0d-5999971c72f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "240342ad-2dd5-4dc2-ad96-e01e27d39125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc24cec3-9e37-4e4b-a6aa-691b263aa884",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18e531d-1f94-4375-8422-bf10d551a9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa006c8-8fe6-403f-986c-e3eecf4700c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41abc29-1831-4b65-8f99-b1a4941a3703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf3f7eb-4935-4052-99b4-de1f3cf48173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6f1a4f-b610-40aa-9e07-2bfa33297b9f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb5f84e-2615-4de6-9dac-656528b3cbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00566999-e4bf-4fc0-964b-4b0d15685a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8e8599-2d6e-4fe2-b7aa-7021e98f9d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6a50236b-48be-49d6-8b1d-c3b9901ea941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738922a4-e62b-4a17-b0cb-c3cb218fd9ed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea33465-8095-42af-b9ef-f7a8815c70ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cd508c-bef9-4280-95e8-abaa25ca8ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d516083-c312-4d20-a0c3-dee070e115e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9636bd9-c546-4d31-a8d7-0fc53366f040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc2faf6-5790-49d0-8989-b8d2accefa3e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff000b06-aeaf-4f80-be5e-67272d95c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a22c89-70b2-4cc9-8d99-229de5462423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c9805e-a676-4e90-821a-04ca648a7992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c451b647-8337-4993-b784-158c12456c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf968669-6041-4209-8af9-b2147d2c7f6a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab115555-7c31-4c4c-b5d9-3af0ced36b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b2a3cb-fe43-4805-9714-8d953e960696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e44a03-193f-4c17-b0b3-e8d19aa984eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e909ae-f6f3-47ff-b998-b4a248146e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e97e22e-8a2d-49be-ae39-90dc0313b350",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92f9703-05d3-42f3-85d6-a77e981e414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f633a11-e281-46be-99ca-37ec32946e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69dc5c7-ce23-432b-880c-c97b863134f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7301fb2a-c55a-416c-8251-f5d120c2e659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9925fa-3f8f-49f2-913d-51e078481259",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be71d0a-01e0-4750-a461-4cb769d8f9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c29487-59ee-464f-93a2-c18ae6cac4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ed1392-2995-4421-b835-66b7a259e21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "413220a5-0acb-4daa-af53-55e272698fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534da8a0-181e-4b20-8642-fffe699e1783",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1957ef01-7498-4473-9caf-9e0dfc48fcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4f77a2-21a9-46ec-9668-ee44cacd5d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2638fe76-d6fe-424a-b14a-fae053938dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3e0e46-d101-402e-af4b-a2b89c5a5a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a5289d-8d98-4850-9a35-5d8bed88767f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe0627b-b4a2-46b5-9c84-a8ac14da9e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3d17b2-f4c0-4983-b28d-94daffffdfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314e7f6d-9622-4e93-a35f-5390e14f1a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "435c4f8c-4065-4fad-87ba-ebb33a72bf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf75bc2-be9f-4727-afc9-0bade63ffa13",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d8fd1e-8304-41d9-8052-6b0a8815aaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd067300-bd2b-42cb-97a1-b9f3bf5d27ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0aa64b-b211-4aed-978d-3890faf0c383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64781d7-f551-4417-a404-2aa08289ed44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff47832-d8f9-417c-9a6d-c611b7eb068b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7548fadf-ddd0-4f30-890b-fe19f669e5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcd2365-c888-41ea-b2fb-cceabd66c09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27ee83c-c194-45d1-b180-34db59721a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e269cd47-b450-4b0b-97bf-11feae590c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5694938c-f231-461e-bc7a-0859663a05d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223098e2-4c67-4e9a-b70b-aa75ddb0dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d23047-6940-433a-a3c1-f779ce1cc7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066b8326-2ea8-4af3-a497-78db0dc99742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fffc9bc4-46bd-427f-afb6-8e7fbd41c437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5db5ad-401c-45c8-90d2-df6568aaab96",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecf08ea-edb3-4b4e-9472-fe0087f7d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce51cba-6529-46cc-9d14-83d014a629c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2a3e5b-a823-4cc8-9807-98e1fb420d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f7e7d0-d29d-4521-9617-b9dd5722d587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f13e77-e355-4c8e-9043-7ff2955ad2b1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6496f08-fc08-44c5-8229-15494b8c9941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6fb00b-28a1-4803-8de8-d368045b8769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c467c653-5a97-4363-be00-9cd695cc7222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e053432c-c59b-4ff2-993a-9507ea7acbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b1fbfa-7e91-4781-aab5-7bd206265bec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa56bf4-6544-4bbe-9c84-fb247e35cc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d09913e-c8e7-4afc-bd26-8fdcde367151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cbc5fe-d949-4dc8-b977-11ea44ddb6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1867b613-2abf-4028-a6f5-6d652664f0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052aa24a-e900-42ff-8b55-4333e241dac0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18b2ac4-5fdd-4a93-9430-6099d1ac0b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d1c775-c90e-42ef-8739-5c70dc618819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659711db-a7da-457d-a010-939ef9832ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc97ebcd-1d93-4174-a37b-02d7849c1346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6ca19e-1c13-48a9-b76c-c573a243cf1c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f036eb-ba9e-4817-bacc-ad26f00c2722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791b069f-cc9a-4f13-b2e3-eb82f7aa10a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ac2033-6b2a-4117-80c2-7d5ac549d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d97a89-d9cf-4ae0-8c9e-9edb2ba0ece3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb213d0-9129-474b-964b-4f8a2e26d705",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5badfb7a-4140-41ba-b486-d2ae1d2f6841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e47d91-db7b-40af-a9a9-895c139408ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be104906-6e7d-4d18-97f1-d3f197dc31d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a85bf5e-c65c-4398-b560-62c4238f2b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab1c916-e70c-4254-8b39-3f0eb0e79a7d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcd20a4-a4ad-4ee4-9dd3-fed606e2aff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0eff1f1-9ff5-41b4-8528-2b361f8c3362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed13e932-bd2f-4445-a029-35e5ceb6c707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8443017-2e90-4074-a77d-0d4717b53de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d04edc-1d07-462b-8716-b4977476b927",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53942b0-0189-4271-83b7-3a315bfeec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d1bca2-e765-4634-9311-85885367f337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a17589c-5420-43b4-97f4-ca3f18ee7ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b82d1e-8dec-47e3-b7de-1e6a36a3f154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a57e0c0-17d5-421e-8247-d1dba807364f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1825193b-41a0-4fbb-85a3-7636c9db2597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06b8681-6eae-4de2-9d0c-ce8cf34fb958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9af82e4-d98f-4bb4-958e-355070013fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b72d0cbe-63c0-4690-a5c9-dddc7bb1f2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43157fec-d90f-4917-8174-66548d41ffc0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4fd912-75d9-4bc7-b3cf-b9e609890b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ce834d-855a-49af-a010-18736bb7fa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e950570b-d489-43bc-9131-3906b71fd579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c48ca3-9ec4-425b-b217-146fac0c5a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5605378-8ed5-4ba0-92b1-3fcbcc1569f1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6badb36-0193-42ac-acd8-7dcad45d264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56f7ff0-060d-4ef0-bc29-cfda9c34e3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f22c2c-72ae-44ad-bd17-5898f2e95e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac0aaca-dac1-46e3-a4b2-5e51a66f2074"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea4fbe23-b9e3-40b7-9810-b34b18879e37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a9d40d2-96f9-413f-b88b-355abaa3f871",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8163d8b9-0707-406a-9935-f312c23089af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2cd3e7-574b-466a-a568-b8f9a57883a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdbd7f1-fac4-4822-82c6-0344acf6c3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ae08ee3-658c-4ceb-81b9-13a708f03e8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0506d1eb-e697-45b7-bea7-c015d0d7a2bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2b3e872-0f8d-4b1c-a39d-dc8f9ce58285"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "289d392b-656a-4186-927c-016433ac12e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edccbb89-45e1-4f87-93f4-0324a7fe13d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cee7c9eb-452e-43d9-b5ad-1a264000dcc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e179379c-958b-4ebf-9b1c-de428c71ec95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7346a2f4-27bb-4833-817c-127a7224225c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0222788-12c5-43f1-9e0e-dd83f158c54d"
            }
          }
        ]
      },
      {
        "id": "0d0c348b-f821-42fa-965f-d6ebc66c504c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "aec9a323-f027-4636-94ec-27cb66a1a421",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56aab145-39cd-4a72-acfb-74202e0ac96a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a9cf6bb-58e2-45e6-bf6b-b52a33c65c89",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80580c45-f105-452f-b664-4dc6de3de0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f68867-e729-4a7f-a862-ea8f6706f430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704aaa51-39b2-4c3c-bd04-6fe749e93eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "35503e85-1c54-4975-a26f-18d426dc9079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dacf18-2d4b-40fd-b58a-fb76731516f3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd95c55-4f5e-4be1-83ba-cd0525411431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c31724-5bd6-4eb6-8722-e5961eae47c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6179e47-42a0-4ed0-9768-c1df0caab60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7111743-260b-45b9-a7a6-f20750ac490c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc92c0b-aa1b-48e7-8c1f-36803d686527",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9905d593-7a66-4872-8e31-d3921c3c847a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13281e57-9e30-4669-b1cc-3aa9f68fef51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe29e848-dadf-4ed1-ba80-d6a031e9e76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "170e008e-30b1-4720-a9f1-dcd28ab05450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd131db8-9b94-44fa-ba8b-b4bfe596e40c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ac1f96-0ebc-4275-881b-580cd586a3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d83398-6787-43bc-83e3-174ca2c9c084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847f3a54-3934-4ae9-8a6e-f4d9e887d43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d8db8f-59e2-4b0e-a969-ef7e8b9ed81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a4e2bc-ccc5-46ea-bf55-4151c5a3702a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90141d61-1fa5-49c2-89a6-150e99d10963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070e38b9-6757-4778-aad5-33d58f86591e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb54877-f95d-4c47-bb8e-216aa45fd281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74d1314-20c9-40c1-a33b-45556b3dee69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391b9a7a-d290-43dd-b45c-3c8b18cc3384",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60976cdd-7b5b-4974-b0ae-7e17cbdbe9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeaf482-b90b-4746-83ed-ff8664bc1b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971bc4ce-9e5c-4082-adcc-8363ab976749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f18cea22-4357-4766-bb3e-a66a5737301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282479ee-7dff-4736-bbfe-c5b965e7a3f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b00c2c9-f9f0-4f06-9aea-a80cac1f55d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa5c5ec-4b23-4355-8e1c-a477530301fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697fe0de-4a9d-466f-80a0-5a9e0f6f84c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "76043fce-023d-429e-9ba4-16a5ac7eb026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f97e07-6dda-4cdd-b0c5-cf2603deeb08",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffea4e9-a0cf-44c7-b833-1b7c347a91f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeab1f8-88c1-45bf-b8db-a3d097121f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086c8285-e4f7-4765-b74b-68b27c2c2065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6018e1a8-0aa0-49e7-8e94-ee7cde0d58f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331fb4eb-4b0c-4703-a4e7-4cc4bca2ab42",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1838ea9-ed7b-4ab1-8f9c-a8e762621260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73c0bc8-be06-4419-ad97-6f3baddcebfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea5c1e1-f01f-49f2-a9de-27a4f140da85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "082a5c11-e757-4d16-8b1c-b8ede7c39208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f61a0f-f5a4-42a7-b818-fb16a1f2ef6f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f489879-86b7-40ea-9bb4-89f761240de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b51a9e9-13e9-45a8-a234-602774cb0a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffd537b-d483-431b-a902-361af4612059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "629bdd50-951b-4491-a1bf-b9ba41b6053a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bbeede-cba7-477f-9b2b-f187ec2ce670",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677b4120-35e6-40b6-b71d-aad7b196eeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f511e293-eafc-4798-a79d-e83829d4f94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44b7ba-81b4-42f9-8940-82d4a7cf2597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e3771224-049d-4c23-bb64-f92e2f76862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758e2797-3cbc-49a0-b23c-6b7e1c92f300",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2aec67-2157-4d82-ac1e-394016052b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcc2c51-850a-43f9-8305-6c1e9e744af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc7fd17-7cc2-4fec-b5d7-278a13e7b9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc321962-5b14-4ba4-9eaa-5a53e896fa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f249e53a-cf1f-4cce-9a4c-ad748b97097e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855963a7-3774-4357-88b0-256109ef7287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b069975-ce72-40b1-a6d1-fa870cb7825c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1377ddac-e653-4591-844c-7e1758ab231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdb9aa1-cf9b-4c06-9b04-6e4419c6779c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85313899-ecb6-4a01-b696-4c758694bbfc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b93fe6-c893-449d-9235-f31343d721ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253bb072-fbc5-46a2-9c6f-8c6785673644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a2c203-715d-4077-94b1-7e73df3a239b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc58524-38db-4449-a280-d4569398c28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c68dd7-009a-49d1-8f65-cec39c46ae2a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851fcb4b-e530-4eab-915e-c22de527323a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221b0bb2-6904-49cd-bb2d-840ef8fe4dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7472f46-7181-4e71-940a-3ab4d6d0dd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d0acbb-b50f-43db-af31-46cff735910e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50a6cc3-7a5f-462d-ae7b-a61cd9a0ef93",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ed33f0-1d0b-444f-a524-b5cc7b6d7894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ebf72d-f248-4370-8cc2-51d6f1ef7aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c78b5d5-d24d-478f-aae3-21acb5242cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "51bfe168-6e93-40a1-9756-66a5dfe827a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba94496a-89f6-46ad-abfc-6f1a24d5ba2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dec859-fdc2-4333-b6d1-655771a5fc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e16f404-6d15-4b1b-bca6-f2a2175b7813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e5eee6-2d15-49b6-91cf-502cccaabe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a075ab03-6892-488c-a7f8-408d15d258fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9befc3-f932-4140-9a01-26349d6764dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15db8164-1620-4ffc-878e-71a498b5560e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71615961-0aec-4bb3-93cd-87ac869c3843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83374d0-8151-40b7-9011-6e2f1a4c4b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "578b9c11-223e-4228-baf6-bada13b86f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0582179d-f00e-4fed-a63b-638705f14f15",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cdcab1-93c9-4530-aae3-55029c9d8a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136fdf4c-be6e-49b2-ae5f-55668bd2ce87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fa5ced-ca6b-4bd0-9e13-c2569f6f6285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "609294f2-1e69-45dc-b75c-1d1a91141d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3df6f76-5334-43c2-8e3c-69f361c815ae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf100af-158f-4dbb-86a7-e48e0858e61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08c192c-b016-4361-837e-02655b51b34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe5ae4d-0836-424f-8b6a-d0e1d43af1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6328310e-76a3-4f78-9174-e55e1c4ae21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b3f4b6-7dbe-4c1b-9eb7-33124b0a48cc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13892d91-d148-4a22-9562-c3aa3d8b147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee731e7-46d6-4e86-a396-a3d874433d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfac8de-9546-47ed-bdcc-2f81e41fa901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5759ae31-b305-470e-b7d9-26b6758fc62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2621d8-9cfb-42a6-afa2-ddff92966f81",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58ec9cf-fc61-4100-b2e0-d0c4f0693bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687d0e07-32f0-4252-bdf2-70cc268e1a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebb61f4-a5e5-4123-a10a-1965a83fa7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb73d12-c6ea-4865-a5b0-0bd42d01762e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d052b10-aebf-4a02-91ed-307b4ecd1963",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0518b0-7e74-400d-8d84-0c99f76017f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9690290-d7ff-4935-8f64-c17147ad2861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4f84a3-6f49-46cb-aec2-5326beee8e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3314fb6-60cf-4022-bb40-b9d8464d0fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d15343c-375a-4d07-b4cb-9395a40a34e6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44761c5-9b50-4ba9-a167-d9067ac3c32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad5a9b3-fc40-4ee0-ad15-cfbc12385d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5760cf1-2583-4573-bc79-ba9dd7b838cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba2c779-8a6f-4d61-b2ca-a3c8769823f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d850f70c-dc7c-49c4-8b07-721084f598e0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc1acfd-65bd-486d-8e3d-51717d72f96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b160361-63d7-4c90-98bc-6d244a941d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3948b35d-7e04-4f65-a41b-a5845b09e0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cde492-f6b6-4d06-a364-b5665a65ef53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761ca376-22ea-494f-98a9-4f2e1f3603c2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26917ec-db37-492c-9574-c6b823736d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999ff841-b98f-4552-8dd9-98044336473a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cec313-debd-40a8-9971-e3431d693fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "463015c6-5056-4228-9df2-ab8b3dbf615e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e34eb2-8180-4677-8b5b-1bc8e00786c5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c89463-8d8f-4605-91ad-6dc638c67b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c241d8-3959-4b70-8b29-ef564f982074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f25cdc0-5899-44f2-8431-486b70ae5212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a65fcc-a40d-4f06-93da-3f93bb3f7a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e506d5c1-38a9-472d-9f76-675870fa1811",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1655468-b1bb-4371-b83d-ff9da464a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3f337a-7147-4d4f-8892-57dcc232b330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89391417-f7da-445f-8322-12afb591565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b56ad03-d260-462e-86c1-c19191818b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b78384-4d66-4343-8b98-f9223029e7b4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b19f15d-d7fb-472d-b43f-c53f11690fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efebb4c-4416-4c5e-a9dc-e2d385a73480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b28fc58-289e-4cee-8562-7ff64915aa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8309a783-eef1-49e9-98c0-d040bbce9750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2ef344-7c2b-46fb-b059-67c9980bfc34",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee99c2d-0a0e-4ba9-a91b-a16aff79fddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e83f6d-1949-49cb-b68a-c809ab2728d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf35507-36d8-48a9-aba8-4b11baa1ac7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9e1310-32bf-4a18-9b0e-1d661cfb264e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46854be1-fe04-4ff6-b21f-bc6ddaaf80df",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54fd531-f408-41ad-9b51-88c16a0c0a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbe772a-a271-4f98-8e59-727494497910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c801390-9948-4840-b539-50bc7a0fe239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e53218-10d9-42de-abc8-1db0b62a908a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3567a0-4b4f-4e88-b174-baf45a5573fe",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b1a82b-cbb1-4a3f-b7fd-0e8b81e15706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ffe393-53fe-448b-a772-8a9d27d41591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb4892b-e388-41cc-9e42-2e7568e0a7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8c28f1-12fb-41e3-83c1-a5a33012138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab22a4c2-d21b-489c-ac03-d2e4974e0b48",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d774b019-8fa7-4406-a2f8-7e1e7591626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97b6771-097f-41cb-9375-d165e7663763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3ef6c3-1117-4319-bc52-577206ab0708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "485845be-9972-4642-b03c-40313345dc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e496ea-6de9-4285-886c-f50fbe513240",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8159ca-f841-4032-a8b0-dfd41afcb82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724c0f1a-04ab-443d-bb1a-9bac8c9f762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fa0a00-e08e-42ed-9717-bc733f0ba2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d905dcff-78ad-44d7-83a1-d0dd151cde8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea628a4f-e0a1-4d26-8e9a-75d5ee0938b3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3479c695-6870-4550-8a1e-b11e1118dbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d0d493-a4c9-450d-8498-84d20170eb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf235e0-7ae2-451a-b980-e02dd5a1cdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc85d12-b24b-46fe-b096-525214f5a5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1da4e40-a016-4c2e-a69f-44bdfc4f723f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94a90a3-ee46-450b-8d34-31b23d14d697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d76b66-6f7e-4524-934c-84b3c185bf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9d5363-96c1-42b7-9271-0aaf85c460b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75bb69a9-b919-493e-8f8b-7fe3e9efbf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dc13b0-27e6-41fb-90cb-62fd03839501",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c94856a-3880-4653-a03e-79a66e308877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36931ad5-7403-45ff-b74f-f2bafed3f03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e219fd31-86b9-4a55-9b50-f2c47405a9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a73ebc47-ba16-4d19-b844-68312b71c855"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40d0a710-cbe5-411c-b055-f520df983637",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1aa5be06-841d-40ba-9ec5-cd5a73ebd577",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9f11b5-a96d-48bb-8831-bbe360e5359c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48b71e6e-e713-4801-8803-3209585a753a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb753766-3d7a-4063-9111-af08219aabf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ac38a43-dd81-4cf7-8879-25a52b056815"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8d2cb76-f5b8-40bf-bf8e-9e48c89395b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d99a5833-e8ac-4aef-ae53-43931fb128e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a939cb0-57f1-4e15-a0f5-0a03c4a0e131",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1b1454a-3c74-4cec-a7ae-348446fbf5a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33f99a46-85b9-433b-b272-2f4f05af5513",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e94b3d8-a967-4fcb-8d65-7377d48c0961"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef0264bf-dd98-4317-94e0-9be2a7b007f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5c06009-7f15-4ca7-9a96-6546c81b64f5"
            }
          }
        ]
      },
      {
        "id": "73e83549-bb5e-4b20-9fd3-25b00d1861f8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e2a148c3-a3df-4b79-af86-a1ca263fc207",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d592416-4e2d-452b-9cdc-f807db2a95b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e795e43-4780-43ad-95c7-75576854ca9f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d643fbce-e532-4b0e-83de-8e39b252b044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f24ad5-932a-4cb7-89c0-7ef0de51066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ebee47-bb46-4c9a-8a28-be02032d06b0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a08f20-3be9-4650-b308-acffc7a9ac49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa5dac4-d66a-41b7-bfde-086a7054507f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8389756c-b4be-4af6-815e-294d8d40d993",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c201ebab-11be-4b38-9bec-7345604d05f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ad7e69-fbf0-43e5-8698-57c47673407e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b84d98-4ef5-4c73-a2eb-59956c12fdb0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df76a60-131f-47a5-a7d9-d265b7b4141a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4d3d96-18a1-4d53-981d-45c5a4e605ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627e5fea-8bc1-474f-81ba-e87e0d1984f2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3c54e5-9546-453b-a8e9-49f0049f1607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27465588-0a81-45a3-8b05-67345f4c7650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae77125-0010-4a3b-b3af-ceb5d3138fb3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa1d60e-7bcc-41dc-b94c-2d8d42b6fc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238bdb25-dbb0-4a68-8efa-76065c36804c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54599b34-8dcd-4913-bc91-e786574cf5ef",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ab301a-83a6-438e-933d-5a78a42d9f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969ea3e4-ec36-4c42-bd9b-2b53d4d016d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4112c010-3367-42ba-8f06-bbe59384c933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fb10b1-5c59-48de-854d-0d4a9900d69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174abd2f-5e4e-43bb-b63f-66fa8944f794",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a095ff54-b04c-462b-b86f-c6d2ee35652f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98f79696-2b94-4443-87ea-cd3d640828e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7401868-1af8-423e-b804-91e6fdd46331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a574a91a-3455-49ca-b63e-319175ec3e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d95751-74b4-45d1-b1c2-d4f5fd20939c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1e98ca-3dc7-4a79-91a5-ef9535459775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e4aa268-5a95-4e6d-9f97-44709e11f501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dbab1f-a925-4ecb-86f1-85f5b1a50dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4179c43-7b53-41f1-8c49-07d1fd5cb555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92de585d-7f6b-4411-8851-e67c7c7da34d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953ac36f-250f-4839-84fe-9f0fa5589fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4624a25-757f-4d85-8314-ccf0103f1250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a5add-7bde-46d3-acbf-6c1e38484a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1603f994-1d8b-4238-aea3-b57f2b259682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e622ff-4858-4399-a7a8-c1f1b9102e21",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991e0ed0-d511-4ce4-9dbd-70eb24c45eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adb1877-cf4c-424c-9c99-0829d4b01fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1ddb83-a04e-4b54-9713-181c2fb0381b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377ce207-152c-4ae2-8a1c-2fe2e613355b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b1d6f7-d772-428c-8b86-43a2ae783a0f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10daca6e-16d6-4688-b507-812dfacbcb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8afb10-a4a7-49df-a19a-cd9c6516d27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d94a49-249f-43e5-94eb-a48686237416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5b343c-51a8-4851-a3ae-a6c878eb7780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40494ac0-e17a-43dc-a64a-3aa047f3f621",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9135a3-3691-4a5b-a6b4-02fa65344962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "965b8a6d-0567-4d71-8b9e-18fb1e5b0487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a0264d-b75d-423b-b356-14bf1a543e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd140a10-ba11-46ca-ad1d-19101b0b1c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca211467-7bc3-426e-b545-b1ae806aa19b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efbffab-a41b-439e-b2b7-51d758bc49ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbb250f0-a745-4224-99a3-d55ddff4c69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05afdfa4-a158-4478-b003-a04a992a820f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec629ab-653a-43a4-8b52-e33dbde24899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342fcf79-f56b-4663-8866-fd91938626d0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310b218e-e0f3-4efb-8b24-d40b48af7584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "374f2a7f-d8e9-42cb-bc89-50aa27c72901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e193eec-8f01-49c5-81a5-e3aea2f625a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b42ca73-569b-4e46-b479-13763b828731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df2ba3a-3cf2-447d-a37f-5462c475cf31",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe135807-ce98-4015-8703-ed15a97049d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0866e5-a2e0-4641-9a08-c18fc360fba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed6c1f7-5ec6-4be4-b3c6-f50339aba4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb097d1-675c-411e-9cff-141598ecc8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a88eb28-56e8-4e11-aae3-5ab970386fc6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d113b1-fcb0-4cdd-be21-5ca907b61ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd90a17f-9dc9-41dd-9b5d-dc44a9a59fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00046988-f5fe-470f-89ab-8b9e4407dea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a1c751-fce5-43f7-b788-53617e557f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae3b73f-c65a-4b58-9557-019d3a5488bf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6827d7a-36c2-44fe-a23a-f6b6d736c7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08db9170-566f-4f15-be0a-d8d9133c8698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc882af3-0a77-416f-9dee-a8583003564e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b550a0e-0abe-496e-a63d-8baa480a1cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59356e3a-0424-404f-a98c-594f42353d26",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ef1805-7d87-4de3-9c28-9cc6d967d9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e49bc1e-164e-436b-a49e-48629971d2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9661255-8fa4-492f-a3c3-8692ac6f2736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de77b79-ff65-43a1-8eca-24b7df639851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad66d26-bb5a-49d0-87fd-32b3831144d5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f60b08-8044-4262-ab54-cdcbb610652c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767f0bd3-4887-4122-8f5d-f8346ee78fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a91f503-ba22-4dca-8ded-56a85f07fe02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c32694-a60c-4f11-8cd2-1835aebb54b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e35402-427b-483a-90dd-5a5b90dce60f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d17d11-5bbd-49ad-a501-3272a02c1236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d5998b-c8cc-4f44-97c1-3c2a0ed418bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d049e92d-e272-4e5c-8c61-9dab6d9cb120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159d080d-adb1-49ed-bbd8-711354c6e583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e571976c-da69-41bc-ac18-b441a2a68bb4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e45c2b5-617d-48ba-b04d-e7d0a105037d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7cbb42-7fca-4393-ba80-f037d8e126ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643a3193-9997-41ba-81f9-04514ff6af72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fab8377-b506-4c48-a782-6667ec0b9967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876ca4ba-582e-4c9d-bbc8-4e034ab1a3be",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a90f976-b04b-421b-abbb-55e1c68947b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23c35ea-1ccf-4e7e-91fb-166d22b9da43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3d2ae9-c67a-44cf-8813-348392988033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a4976d-bb9f-44c3-8734-c439d6817668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cc00e3-836d-4a9b-accf-f30d4c2dc644",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4466de-b690-4689-ba54-c0d4531ed89f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077a15e2-891c-48ea-acc4-c22643040052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a31922-a67a-4368-9daa-65d6256f7520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da706353-72d1-4a46-a19a-99e066866af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b17d588-5b2d-490a-9d50-b7517b1c6b07",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20264612-2c2d-4181-896b-a9a2bc1d356a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd92b4d9-46dd-4e92-ab5c-eb114cca5f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df87dfaa-fc80-46f2-a532-3bef2e5fc579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb166e8-73f4-4f64-99bf-af0393b74880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94195872-7589-4b2a-bb0d-41c1efc98a95",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf593f9d-2490-4821-8791-5121e939ee19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed736fc9-b0a5-4c04-b3f6-3a0f444d877f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bddbdc2-84f6-4525-b044-5c07bb2f22f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee740e3b-d239-46d8-b03c-30be17d722f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d71af8-bb67-4658-87c5-f9219584f1cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46eeac1f-8827-462a-8b3d-70a8fabe6a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544c7a19-3e90-4d94-8aa9-68d511981088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27929ad-c8aa-4a3c-a0b5-17b414739448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4db6358-0c7f-4846-a7e1-a9fdbed9d88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dd2f7c-2258-40d8-b7a8-5f377aa88b8a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3592758-c0f9-40c4-826b-4c7fe9766e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e21f2a7-7857-482f-9fbe-9d9267398770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3507336-62ac-44e9-8019-65d84b41a2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8678dc7a-2522-4b9e-8380-66fa1bd09d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3afa18-15e2-4382-a5e5-55608684bdec",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d125c2-b165-4723-810e-b44ff69ce4db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3250db-ac2c-456e-8c72-ebf26d83ffb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2d352d-36cb-42a0-ba5c-420fcc077c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dee9715-44d2-4e00-8181-b976742dc754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273c464f-6232-4716-8851-bc287121a536",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6f1617-5a11-4c79-b450-fcbcb3712abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c55e699-6699-4a47-b9db-ce803edd160b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137f6cca-16d1-4c12-9655-cffcb2780537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca53db1a-6c73-4cb3-8997-88d7e52d6e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad459c0e-56e2-4d41-a5fc-7b664b927297",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507bbcbb-1578-4713-ad65-61664875f90c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b17eac-65fd-4d0d-a03f-6da9970bc4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5f0735-c726-4c0e-b031-42c3a8f46890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9053106-6fc8-4312-bfe7-3f5dd14de758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988899b2-db09-4bd6-b1e2-30ec71b650b6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d273742c-9667-43ba-aefe-dc3eed1daef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdcf83f9-b903-4664-9e3c-2703e0e3a232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749a994c-c4e4-4496-946f-666f37553815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6ec60c-1f81-4e53-ae2f-dc3e7c0efd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2598d11d-14c2-4dcc-ab25-2dda3f17fbf5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6551ae1-210f-4790-b2fa-d5794bd51ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "928b6f9a-b245-4053-ae6e-979070a88144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f45f54-a0b1-4e87-9db0-5000e93f4a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363e415a-57f8-4495-bd19-20e60be8570d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3903387-4805-4ef5-aed3-84fa2673065d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e885bb61-9a4e-4b75-94ad-c3a87dd0a1ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1748109e-f9e8-4069-ba09-47db696197e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2299bd-8a84-4971-a01c-5d0628495543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeca8afa-9459-4521-9681-cefff9598fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b38148-dd82-46c7-9fc0-6a39a475154b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff5295f-8a23-4e8a-a69e-f3686aa4e713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779d6944-f4ae-4dbe-a3c6-90e0557d3308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c8c4b6-15ca-4575-9945-1bdc16d44272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870722d4-0af3-4e41-b9b9-cfb40774a329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b082322-4499-4faa-babc-6a8519190c05",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a34887-299f-4d20-b2a6-d0415421c572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0d7cad-93df-47f8-915c-38ab27e8804c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1f37e6-7a3c-4572-a051-5d2538ad8ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0188cff8-f6a0-4bd9-8cd6-9f17b95252c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5555bf-ed47-48de-9c21-8a3c859a738e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689ff077-68e2-4128-846a-ea989e9e0cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49474b41-e7c4-45ef-be94-873547e3df36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c310706b-6400-4638-9149-d6e3b9ba8365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb20be1-2819-4127-88e4-afd6c2cbb3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fd875a-a839-4ada-8728-ba9ed89fa70b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585cff91-65e8-49f4-a86c-f14e20cea8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2ac37b-7bd0-4ca9-9716-71cad9fa468a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee119d44-e9ef-4732-a951-912593e75b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2a8cd5-8c9f-4e1a-ad97-429355db9c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ebd652-11f8-4eec-a45f-c8865dc227ff",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c41cec6-a9b0-40e8-99dd-bd9550d71ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3451fd1b-bdd4-4c65-8709-a222369b53cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442f8297-c2be-40ce-ae1b-be5202f6f2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3a10ab-27a9-46a1-8b4d-b4a5f4eba94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1772f1cc-5a72-414e-ab2d-6b446a553204",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd77e9e4-fe38-4b3c-8f90-8e9da738d553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a74e65-17a4-48b6-9e23-06dceec5298b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90076c2-d6c8-425c-9e0f-68b3d2f287db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0101500-97df-4cac-a9d0-7e1358b73269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c13fb0-e8e5-4026-a9af-919d10ce9917",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77eabdd-6563-4537-912e-f31fe948acf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab22fbc0-66fb-4647-8d72-18964dc6ea71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be719fd-7972-4d91-9c6a-3ed4b6d5c081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b4589b-b3b7-4431-8084-183d5e55a05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5004525b-96bf-4b1e-88db-51ae8ce1603a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185e6e06-1fd4-4026-9300-6820ef2ce0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b67505-0d45-4621-b078-367d6be8bc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7640ef-5da3-4014-a521-10191ca0d5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d99aa8-39b4-4748-86d6-e2ff21cd625d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557a62c5-dd30-4b7e-b85f-d9f6d0663a72",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8270b04-0452-4463-a779-2b4ba439ea9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87068c8-27d0-4de4-966f-3bf3484097f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69ef9cc-a74b-4a83-899e-3dd4c5b8d5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fb9c68-374c-4774-93df-b953365187e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea6e10b-78c7-4b0a-bbbe-99b23ed82093",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36ccefe-4b77-4ef8-875b-36a24438552f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef196b05-96fb-4f82-b1a5-83022ea04321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ca782b-151b-4434-881a-638f3cd27dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69311b9e-3527-4d0c-bbc8-49968ee9234d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63061b0c-990d-4e9f-b503-dab11ae2203e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd30a52-e97a-47d6-a69a-5ca04742c817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bcbf37-7fb6-4a57-b7ae-8922b8c06750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e345fbd9-ab4e-45cc-84b1-5ee6ab1570b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498ad78d-d36c-459a-bee1-9a90c700aef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3815066f-7ecb-46fc-8647-68a394c48e0c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e350470-173d-45bb-a35a-7dbafe1798c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ab4530-c51e-4b96-bada-6bc2456860a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06a5efd-f1d3-4976-8115-96ed9d29f54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6066e7-9833-4ef4-aa17-dfe682939348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e076ecd-a890-47f9-96b8-13b7881939dc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce54ae7b-acef-4e96-85cf-32209b54e9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da97ef56-d605-4781-9a93-d7a60a07bbda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0de2ce-4064-4368-8384-65a78bfddf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12f0282-af7e-4c97-9375-e75df462894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c257847-57dd-4352-86b2-47a3b700d6dd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a907809f-a559-42a6-9b2e-a988dcbaf714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d09142-a9a5-4ad6-b6c0-9c5a8718fee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc59859-2223-40c9-bc94-f7d65cc25f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01382dda-2594-429c-af52-278c76cfdd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4ccc89-8962-45a8-bcdd-93948aab6acb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7083523-5e2f-4023-99e2-8550815a148f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947f4d3b-ed19-4df4-8597-cb44a5ffd9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35024a9f-3fda-47c7-8566-ac49249680d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fe1277-0b1c-4a68-a5c8-52ad9efd7c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c5c9e8-242a-444f-b02b-0ba0a91fa468",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c401f843-2370-4733-bc92-68fe0e4605a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e34cc3-c1a0-4907-b055-930afea5c012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb350dd-404d-4123-937c-46d45c936e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746e5a5f-ed59-4220-978d-676f40f0de1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d16fe9-cd3c-45d7-a59c-11f559aa3afe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442c8602-6b4d-4e7d-82f9-4dcf354ce1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b6ecdb-4483-44f4-8fb1-d00616fcde64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9575bfca-42e8-4a3f-ae7e-d89cb605f66d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d886885-5ce6-4b06-8d4d-e8bff6a10925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2f7850-de37-45dc-89e1-513a535de184",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635bf6a7-4b9d-4e55-a375-8ebfdb5d9397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fecad1-3057-48ab-a2ad-7e680c35c711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d497a39-d107-4685-9799-e962e740583e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352493fc-05d6-4af3-b02e-2b8678bced8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c57fc2-d98b-4a5b-a33c-6a4cf403a484",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb15f7de-0637-4fc4-9ea2-3b4a3ec51aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef307e02-631f-450f-a7f3-8e200b9082dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b883dc3-87f7-4cf3-a93b-384a95cb0ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3e4a98-9a29-4194-a5ff-f351344185b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cb42c8-4f76-4e08-a7fa-bcb301e52680",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3205a3a3-3353-4baf-b3c4-85ca8b2a05e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587d98b9-37b8-4006-969b-d61701138a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5392503b-b97c-44d2-a27b-62089449c669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fe24a4-dc17-45ef-9e34-2b51ee854609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f5b04a-41be-40eb-8eee-6102d6cbc27a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9652d801-8fa5-4e09-9f70-2b119052e29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7d2621-da31-4a85-84b5-79461a71455a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d56404-9505-4c92-a5e0-e072b2b75135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9968e629-924d-45b0-a4d5-72538586fbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2338e11-9d6d-48ca-b137-29468866dea8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425b0ad2-93cf-4427-8e75-5e10d5a60666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3055aa5d-f3b5-4a94-937b-a64976ba8f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757cb3ce-a68b-43e1-a8fb-8544f00d513d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555d5145-ee1f-45fc-894a-49d4b3824311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a145f4c-3169-41c8-806b-9d9c18a6d746",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad99ec7-ba0d-4e7c-b63b-892417953bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76280fc5-b958-4442-a57e-8ad514025e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923964c5-2033-40f4-88e2-968ecc8d8b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39222376-c793-4dd0-aa05-bfcae1f207a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dd4705-d066-437c-b46d-253889219724",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568550bf-0df5-4276-af25-82f6d9f85e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffda9125-14a3-4732-80a5-57196b44a0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0fc7d5-7a3d-4c7f-ac02-f4318c41d16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e9d057-478b-4473-a16b-7f01a538add7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02f8dc7-36c2-4676-a657-50c08e9e6ca5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322958b0-4f7b-44cf-b571-a046a5d7e226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b176dea-fc9f-446b-8175-1b017fee0490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce92479a-b683-4c5c-b4f2-4f3e2ed70a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e421af3-94a5-46df-8689-1bbefa947026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0425b9ea-9c34-4de1-ae34-fae2334e049d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4b2692-29d4-4205-830c-7d77b1093bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59e14cd-55b1-48f9-915a-22195a7525b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee16019-9344-44a0-bc1e-2e434818fc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ce6f05-346f-4b38-af0a-6653d313ae96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d11078-c92a-41bd-954e-83df2536e3ed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bfbf3a-877a-4787-b448-6710585f213b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f842dfe-2ee9-4565-964a-5ee48d86bd2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2f0402-1c9b-48ec-8581-9339c7848faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8413b71-7a34-4ece-aa85-bbc97c85fe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33482f00-674a-4bac-8aa9-f0d33d43f5f3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba0501a-c553-485b-bf88-768662cb12a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71dc2a3-4a72-4469-8011-d7741df41d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9da031-bd88-4065-b3d8-72a99d6e3c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224e6695-388c-44dd-aa11-87b33f672699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e15c808-9596-4f20-b764-c82daa7f1bdd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d813913a-120c-42c0-91f9-c0b355ea7e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bc00d8-9ab1-4084-a36e-f270afcbbcc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d252e227-a0b4-46ce-bb27-25369939ece4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a1c4f2-8754-47ca-b424-d6cd8c633ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e44655-14ad-4077-93cf-bcefc4906ee8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1863df-e4d9-45b3-9eb2-eb043782d559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0d7842-4d26-4245-99b8-10b7b82b6afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba897172-b4e8-4452-b40b-efb5e9ef5461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421d8957-012d-48e5-81ed-06dcf5459f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab068c4b-84a4-4e90-b421-b3a629210928",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821c97e6-56e3-43ce-aa30-914f00c8eb27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abe2afd-aad8-4b49-9b11-ae560e40f0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f87c204-289a-402e-8bcf-cb2791222f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c32cf0b-dce4-440c-9df2-00d7cde4c69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c5eacb-9030-4e25-8dee-476570f33c1d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efe409e-097a-4756-9207-8cb59fe01c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bb593b-e641-450f-800b-beccae4ea14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ba0470-6367-493a-9fd8-641248460efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b30431-e5d0-4ad4-9e64-97806fb44848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccee1af-e216-44f8-a596-654ea2ac88a8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877c5209-db26-4c92-8db7-bdde978fc82d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bd051a-eae8-4ebb-a50e-4690e0de26bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899dcd37-309e-4533-86fe-1903a5551d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008d27fb-c91a-4626-84e4-78c147482ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e960325-e513-4254-af19-e86a865ef565",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aacf39-0030-4338-8178-29ecafb6df77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06cbc1d2-3909-4c4c-b79c-56cbdc3707be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742cca37-0455-4258-a355-7ee1723b0699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3979a19-0909-4bdb-aeba-192afb2184e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9859325-b60a-4daf-83a6-338a88386ab1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59dd343-16e6-4bec-b3e9-99c861acf7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc49948-083a-482b-a37d-741a24a0ba9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a2e60e-2dc3-4d9a-9dcf-78bcb47ffc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27dd313-98f5-4eac-a5c5-e73907a7ca18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3a6edc-b5bd-4f65-81c2-0f1f0e1fdcf8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47424d6-37f9-4877-ae6f-5866eca514fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f839fd95-f0bb-4ccd-b433-2a2d4325cc37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa09792-7586-4f34-b2c3-4a96a16058b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f129db7b-79c5-4ab1-9c8d-1892b0d78150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0645fa7-c215-41d9-920f-14228d5150d2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19f3362-fd78-440c-b9e2-3188fbf79e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1801011-d854-4bf2-b284-6df4f64e9558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc0693d-f4c5-4d73-a1eb-609c55ead93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad95547b-cf50-4947-8bb5-1227eda246d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d881e912-2a3a-415e-b193-484ec1242aeb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2e1917-40a0-43e0-890a-c5db4b04bbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce632c01-e05a-4661-a3bb-73353af641e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44b25e5-b58e-45e3-862a-79f1c757f192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17d3b8f-56b7-48a9-b687-34c44eac797e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e680cc-e204-4b00-893a-7afb1d22e864",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20e33e2-2b10-4fcd-8215-8af722119643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c7d8e6e-3496-4380-b2cd-9cac8ed5a2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271fe6a6-7d91-4e86-a692-4c2cdd7e244f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c094e4e-9370-4d0b-adb1-0353536e67f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a537b9f5-1b97-4ebf-a8b6-304d69acaa33",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca87a46-ddd3-4a7a-a723-9d188f4f4fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ea3280-82b6-4994-980f-2606d274141b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7389bb4b-27b9-4adb-8503-1fc10ff5f71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ec56cd-bbcb-4e0a-9c9e-5b1e939d8751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4223d3-f60c-4763-bd1c-772ddd4b4216",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67855850-0638-464f-ba89-28b3c3649f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d7125a-edb0-47e9-9e8a-e5972c693956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a3ddb8-b1c2-47de-ae85-562e9612ef1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e093dca1-e246-43e1-849c-74695f775130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b27884c-115c-425e-b660-fc2e69db8454",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa62e495-4dd9-49ec-a608-8de8aad3e028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dcadeae-91a6-4595-a2c8-8e649d44a8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58039fd6-be58-4175-bf8f-04464956840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57297dfe-41df-40cb-ac2f-f8d904f8a5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fea3f9-7c74-4bf7-91cb-b89fa06b71a3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb4bf8f-5554-41c5-99a3-2829d0b865ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9240c39-7471-4360-bfe2-f8527f1ee304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb8d5c2-f0cb-4fbd-a92e-c374f4356fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef931592-fbb9-401b-81bf-6adeb1ef3ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7d5ab3-e012-413b-ad99-681e129a92ff",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f2bdf5-0fec-4ec8-be2f-c41f94144264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da392abd-09bd-42c0-a506-c26c814f7724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0097124a-56d1-4b8e-a8c3-07a9eba7ec01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb38722-98fe-40c3-9aa6-7d49392d6a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652f40ee-b61d-4981-869f-f99e861b67d6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013b3f17-506f-4089-9de4-f014373604c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d71ab9-819c-478c-949e-61d4ee669eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a137c8e-0a42-46f6-af77-36156143762f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa0d920-2bd5-456f-896f-537de4608a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a91d221-e449-4b8d-bcd5-c60434db3358",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbc036d-aa6a-428e-9d27-58b799dc653b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fdbceb-b415-40db-b8c0-5299db19ae64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eb54de-2403-4a25-8810-3b1b8d4598cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11abb99d-4a48-4832-a13f-97ec8fd9c00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751d76f9-48dd-4d3d-93d8-f91f723f7844",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df608f60-5bd5-43cf-85ae-73803be99e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db70e43-349b-4260-b2c6-013a11d3cb49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280c7593-1f68-4d91-88a0-b9aa3083d085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1728bbd-6326-42da-a3f4-1000adaeaaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68e9097-8a5e-45ce-a884-4164bebb3716",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28d29bb-dc27-456c-b260-d8fdd9763e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f440732d-870e-4972-83d9-9ea48c45f3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a86f31b-5967-4ce0-82b0-cdf4f4d85291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a50d1e3-ceb8-415a-906f-5b53a9187199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10794553-091d-47c4-a671-df895225817f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a744eed-35eb-4bca-baae-f3c3511104d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb023af-d8ce-4483-99c8-cb48c93cd27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39702fed-0e40-4fe9-8bf1-32a6aa3acadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86f292c-2f15-4e9e-9d06-972413a3cdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1698b2-580f-4b24-be91-431fd3ff6559",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d43e4b5-d367-4354-8a90-a1151e5c0f47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c380f3ef-6b3e-4f78-a878-e37225a593cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4bd37e-bbbe-436a-bb4b-04b1a0b4a3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3007d2eb-be0c-425e-bd33-a34353f8f00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfdeef8-a510-4f95-bb26-81ffdc3bfb0f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5071ec4d-20ac-42a6-b239-cb1f79927c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d36c3d5-b442-46a1-bc86-c50887e8fd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64e550a-ec37-49b2-92d6-6399d703017b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddd74a6-0e3e-4ce7-a6b0-2b73596a6c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a230c7-d2a8-42a6-b0d8-ad5ac11d5b3b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4b8103-ae65-41c3-81c4-f7b6ddd3babd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb04ba69-be5b-4dba-8284-73c246cdc86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c45300-64cd-40b2-a4e6-b5fccdf5417a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd237087-3b6c-4932-9f10-e3838312c890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22b3d82-da79-4a20-a456-06b8e5335a4b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d2132f-7dee-4139-b299-07cbf91744aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362f7403-3485-4978-bc86-0cf7d1c16785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02250ee5-e719-42a4-bb88-72647f2b7fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca965f7-77a9-4591-86bb-79aec64f83dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50c17a8-1d19-4815-b3d7-da59c9162cd8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c530e84-b49e-4173-aad7-f40f1612ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39647ef7-1873-4ec3-9ab7-bc912d733728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dc9b1a-ba79-42ee-8645-340b394e62a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceab1644-c753-4015-938e-b200f4b237e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a626a037-995a-4d50-ba64-da583aae4943",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5ea674-db47-461b-a4ce-f8968b5db264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6e38e9-3209-4725-a61b-6535d9b4a2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f2c58d-8a98-43d1-b17d-6c0033a804b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d2a1ef-78bc-4436-8b93-bd9e888439f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6a8fb0-fe1a-4a81-acb4-fe2a4ae824a9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c93276-e898-42ba-b600-631170811fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd474f9-750b-418f-91bc-81dd62f8acd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba960791-c5e6-4284-aec3-abf0f6a812ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fc4de3-7f10-4a34-b6ce-c2ca52c7bd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca417ec-d3c3-48df-96e4-f3a02bba6872",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d345c8-094c-427d-b6db-422e2b291d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6019e9c-e5ba-4ce0-b340-45b6b2e2a677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff1877d-7622-474a-a6c8-62e55436c5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b85c232-cb99-4a34-afbd-58288dbdc9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28b69fb-f581-4e90-ad60-621f9f688f4d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b043204f-b39c-4a23-a6b0-c0dd4206e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef620863-4d2b-4e08-aecf-e6952b73209d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b987f80-0184-4b42-b8e3-25989e93cc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc00f99-7680-4e96-a63a-f1fbc330aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c11e48f-34a4-4138-b593-c0fb0622dfe5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605762cb-450d-474a-903e-484640cc74d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0533925-9a4a-449d-88dc-c3b50ef5b150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9affe6-3f0e-4ff7-b56b-7f31af2fa8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75db898-6dd4-441a-978f-f9f76e133d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd35879e-e04f-4734-8c29-5eeb5565dae3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb67045-366c-4c7d-9f88-6bbec1ba4516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7458ce5a-5817-46da-8282-fc0360478a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee11e1b2-3b1d-45c1-8df5-adbcf6154a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da815f3f-73b5-4d4d-a311-e23c7920d32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cdb067-6dd1-4657-97a6-86cb06dac526",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34f2e15-3478-45df-bf33-982d9286db24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4f427fe-ca52-4ee4-bb71-7a5870f5cf99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db9398c-43d8-4b7e-a2c5-bf99b524a3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f737c3-d2fc-4c07-9cee-885ab0179d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4044d1a6-11d5-43ed-a599-651f029815f4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32618db-96c7-4864-a064-a42193e36eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5599d3d-146d-4e2d-a7af-58573a84f663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17554bf7-9644-4052-99db-657239133d87",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7591787-9900-42a1-ab49-bd888327973e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751e4820-416d-40ec-8142-edc51c341cc8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6790bf-5014-4386-b197-2feee3f3825f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c83a955d-4380-45d7-b283-be8b27c745b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b205d581-d5c9-4359-9e91-c2b79f692e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e057fc4a-a66e-46c7-966f-bd555c925cbf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc13c069-52d2-43c7-83ba-f71322961d71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f294d044-7865-4fa0-a1f6-5e679b96f706"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef15d612-2a76-4622-82b8-b3987f5eb696",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce73a775-5905-4428-bc8c-f2e805c15c2b"
                    }
                  }
                ]
              },
              {
                "id": "2ef90661-9b88-4fd8-a0fc-c2f1604dff6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87be43f3-cfac-414f-bd7a-367b2f76aab7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbb44bd-ba83-4be8-8396-482f412c2ad0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8abbfa90-6c96-4cc3-9c69-06fefeda8bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd83a40-51cb-4df4-88de-f71381886ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe046dd2-8fba-4d6e-b7be-d1e8468179e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c617fd7-f742-4683-af00-851433ccd434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8597ca64-75ab-475e-a94f-55b8165e4d23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32dbc349-e26f-489e-84dc-47ee2c6f1b25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f920b4ec-4509-4f5f-9522-9374de0e94c3"
                    }
                  }
                ]
              },
              {
                "id": "d420c3fd-282d-408f-9d2a-c05b7a765163",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ad80846b-de38-4406-a942-a582f7944f87",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab96aa5-87d0-4b72-b726-ffcfc6e49dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2588a83d-40f9-4d3c-8dd3-ab7c1eeae1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415ba3b4-66e8-4578-84c2-046f0eb36dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4eb75bf-39b2-42dc-b712-9074c3244ad0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a80c2bc3-db1b-461f-8d9c-b8a8b11d9e52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6638809f-6a98-4ab5-95c0-769b160ffafb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c34964ec-281b-4ccb-9166-c92127dc0f8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5dc51f33-c532-4c85-9174-632d09c1b1ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab88ea2f-4491-4214-a165-27802c395d27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c59ebfb-e765-459f-8d86-57febd07382c"
                    }
                  }
                ]
              },
              {
                "id": "742d1534-34f6-4548-8897-3cb47095fb38",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "351529bd-a698-46ca-b12c-43183b11de0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6a9948cd-6d5f-4022-bb41-8b2bebd71ba5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f97075ac-a5d7-4200-abc8-5d67e15601bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a9e5e56-05eb-4422-bd85-d48f4c80c563"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cce0a65-b424-4553-b451-8d2d590fdc61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "21e58d0f-e995-4767-bfee-15a72e513db9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92544557-429f-4c84-a9ac-f5c859fb3f01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aaa4a83f-cfe1-4987-98fe-4615376e5708"
            }
          }
        ]
      },
      {
        "id": "16c7f988-dab9-4277-ad36-64faa41d921e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dda5e99f-5432-4c05-8258-a754c102dc57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef3d8f9b-f2d0-432e-9f66-771091293faa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cac0cb62-16b2-441f-85d5-e73627e0229d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d5113-5900-412f-8275-545afa3045fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "077f5b78-ee29-4345-8ff5-1920d5b217e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b9dc25-e1ae-4911-88c7-b6872495cee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd8a7c78-fad2-41f1-8f27-ccc27da6097e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbae939e-d907-47dd-ae4e-e40138608322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d608bc01-699b-4ec7-9143-81f112c03486"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c9b8084-685f-434e-a822-371c65796204",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "000cc52c-71af-4921-af36-52b329a8d11d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "124856f9-8109-4ae1-9e6c-c97b64bb261c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9ace0487-4b2a-434f-aed5-0cebad2be182"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81b22562-3abc-4984-9f8e-39d3c5fef38a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c403e4e5-2a6b-4c79-b067-0cb980c774d8"
            }
          }
        ]
      },
      {
        "id": "440d7706-a5b5-45bc-b1b5-a27a7e1c99b3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6b039874-271d-4254-aca6-c7bc63ea3d33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2579109-5e6f-413a-bb15-b92900289886",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a5d14d3-e98b-45cd-8abd-866e01f9a83a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b65a569-debe-4f16-9795-27b8132830ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69fd6c57-5193-44a3-893c-dc849b1ef3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a67881-8d76-4820-bf04-9200ebd17ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89f29a25-3ccd-43df-beba-8a2642503e31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f80ec9bb-be5d-4d9b-a109-f15dd838ae9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dcfebbf-0dde-4963-8521-c85b76d3f5e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5f39ac5-a574-4ece-8dc4-d039675cf348",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2046f9c4-3027-4806-989b-35f73a9347cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b9c999e-dc47-492c-962b-4f0e9afaafdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1bc15c0-cba6-4641-b0b2-abe8d105b6bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ead9e99a-d107-4b36-a3d0-97772de2895f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22b62969-a079-4820-bb82-1a0fda56fd83"
            }
          }
        ]
      },
      {
        "id": "17d4b053-6e23-47b5-acc4-bab940856738",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "acb2cd66-6c86-49ce-82bb-e5bcbd03a845",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03442c88-1412-4098-83b0-ede40eba83e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a0bf81c-8682-4c8c-a209-7b0d25852505",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3050df-50e9-4684-966a-b28fee4cb779",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "293d8c64-a7ff-44dd-b4fc-8f340924b826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d24445-9a79-4538-8286-365ddec0d7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1e949d1-a4a5-472e-b1c1-ef73e21c6f1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab199abc-6a15-4f89-bda3-c7d7fc92e63b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97d489fc-89f1-492e-a763-b4e357b8f3a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "452dc7ed-7638-4c0f-a88e-979b70ddec27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ca12804-9c4b-4cd7-9d22-a987e3d576e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5649b006-df56-43c0-b87f-6f8f5209a1c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "122fb2f4-7156-4d0e-a72d-c6ba2e18d2c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5819c5b7-7415-4a35-b563-cf606a37d715",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "475e9fec-824b-4394-8f6e-79915eeddb30"
            }
          }
        ]
      },
      {
        "id": "814f7fad-b0e8-4e3e-9362-ae996e7c255c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b277c4c8-d1cf-47ae-8083-b0d81c3ec727",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34a1b091-66c7-48da-b4bd-b6da0d161cef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "16979be6-de6f-4995-9ca5-ba6a5b837bbb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64aa1bc6-1560-4077-90dc-efa46a841b4e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18e6d811-ba4f-4a4f-8c0f-461ed06378a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 81.49824561403506,
      "responseMin": 8,
      "responseMax": 4565,
      "responseSd": 369.85727569278254,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698885222948,
      "completed": 1698885258151
    },
    "executions": [
      {
        "id": "16ea6986-b64c-49c9-a4b6-745f75334afe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8213ad6b-e175-40d8-b382-504e264ebd81",
          "httpRequestId": "5f1283af-b873-4015-bfe2-ebc57267f95f"
        },
        "item": {
          "id": "16ea6986-b64c-49c9-a4b6-745f75334afe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eadfd5ab-e126-43ac-8424-668410acb498",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "29d39e3b-1a2a-44dc-ac82-8e72d17bffb0",
        "cursor": {
          "ref": "ec9a070d-549c-48d8-97e2-63fab1c10a5a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "50b1f996-8425-4c26-981c-3778357601a2"
        },
        "item": {
          "id": "29d39e3b-1a2a-44dc-ac82-8e72d17bffb0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fd4fa706-48d4-46f3-8fee-d49ddd4bc74c",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "86dc76f4-943d-4281-ade8-7984d6043334",
        "cursor": {
          "ref": "a1650fc9-c333-4ff2-bc2e-e52db3f89646",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "31a324ef-a742-4af5-b5b9-fd10eddd99d2"
        },
        "item": {
          "id": "86dc76f4-943d-4281-ade8-7984d6043334",
          "name": "did_json"
        },
        "response": {
          "id": "35819a48-abb8-4c75-af7e-7093def2a3f4",
          "status": "OK",
          "code": 200,
          "responseTime": 173,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b333299-9385-4654-b35a-c821225001e8",
        "cursor": {
          "ref": "d5904517-18c8-483a-b5cd-546fa1ca5786",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "35cbe11f-be3b-4a82-8f37-a55ab0f75a54"
        },
        "item": {
          "id": "8b333299-9385-4654-b35a-c821225001e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "214f17a2-9ba3-45b4-acfb-6473fecd31da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 498,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b333299-9385-4654-b35a-c821225001e8",
        "cursor": {
          "ref": "d5904517-18c8-483a-b5cd-546fa1ca5786",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "35cbe11f-be3b-4a82-8f37-a55ab0f75a54"
        },
        "item": {
          "id": "8b333299-9385-4654-b35a-c821225001e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "214f17a2-9ba3-45b4-acfb-6473fecd31da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 498,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd5c04f-7970-4d44-990f-c1a96b12ade2",
        "cursor": {
          "ref": "3bb7364f-c31f-40b1-a80d-1af2f2b82b5d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cefdbfa3-fd2c-4852-82c5-b3f17fcebb13"
        },
        "item": {
          "id": "2dd5c04f-7970-4d44-990f-c1a96b12ade2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6b8d1eef-409f-4426-8722-bc4a8a76f0b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d5b9ba-5ac8-4e81-87a8-161fe5e20f21",
        "cursor": {
          "ref": "c428bc4c-3e8f-49b5-a6db-f338dc18a485",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0e24420c-03c5-4ed0-bd22-52e8ac8b193d"
        },
        "item": {
          "id": "f0d5b9ba-5ac8-4e81-87a8-161fe5e20f21",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5420d121-3f74-47c0-888c-7b34d8afa1a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ddfb4a-f285-4b94-97d5-55990979c36d",
        "cursor": {
          "ref": "596b198c-da8d-4cdd-9e45-0986e5be71ed",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "51a71b98-f847-42e8-b0c3-01b794168416"
        },
        "item": {
          "id": "e3ddfb4a-f285-4b94-97d5-55990979c36d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fe06cc2a-ee72-40eb-810b-5a16bd357a24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd4ab8f-4296-44a4-bb8c-616fae0d0b1a",
        "cursor": {
          "ref": "15e366a8-0991-461e-a0f4-54ede33d2184",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1d61b14a-3227-4f20-9914-455fa5d5b566"
        },
        "item": {
          "id": "cbd4ab8f-4296-44a4-bb8c-616fae0d0b1a",
          "name": "identifiers"
        },
        "response": {
          "id": "790b5464-5cde-4c90-82cf-0e9ea65165cc",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296d8ce3-ce08-4724-a892-8a81629f2398",
        "cursor": {
          "ref": "8120f5c1-9867-47fd-aa2a-178e8689fad5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "75d5348f-6759-432b-873b-b5eb86ea85d8"
        },
        "item": {
          "id": "296d8ce3-ce08-4724-a892-8a81629f2398",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "485193de-0adf-456c-9d9d-0519bfcc6812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c5d0da-1b93-47b4-95bf-9e6ab41164a9",
        "cursor": {
          "ref": "aec14c40-e996-4b8d-8cda-3f8035f6a9ba",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0ee40dca-b194-4ec3-87c9-0ace1b506f1c"
        },
        "item": {
          "id": "b9c5d0da-1b93-47b4-95bf-9e6ab41164a9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b16bb211-db9a-48f0-8571-7931b94fbd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89cc200-57e6-4f72-8e6b-f300c992ad15",
        "cursor": {
          "ref": "1c2f284e-8a31-410b-9f83-6639a81da408",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f67bc8db-2f11-4816-8c1a-3b5560535c72"
        },
        "item": {
          "id": "f89cc200-57e6-4f72-8e6b-f300c992ad15",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cd9c85d9-6c16-49c4-a96a-4486f829da32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37337c42-bf79-49ba-ada2-cf9b2701c9a9",
        "cursor": {
          "ref": "3ac2bd69-36d4-4c78-822c-83dca54f2830",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1d76a91c-6fc4-489b-a206-35bf935052ff"
        },
        "item": {
          "id": "37337c42-bf79-49ba-ada2-cf9b2701c9a9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0abf1988-1163-43b6-aae7-950b3a85bc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e2e5ad-5b5f-41ef-994c-80ab472a02cd",
        "cursor": {
          "ref": "da02f3f1-7e51-4119-b531-73423b58572e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4de20a63-20f2-4513-a3b5-fdc0ee73048d"
        },
        "item": {
          "id": "c9e2e5ad-5b5f-41ef-994c-80ab472a02cd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "31eb1862-67af-4b23-9958-1f734789da0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd46a437-8b33-4f25-be89-c3b489bffdf0",
        "cursor": {
          "ref": "14d6bcbd-2001-4b01-9367-b1a6509e08eb",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "90b3ed50-2e0d-41a2-b410-564d9ccdfba4"
        },
        "item": {
          "id": "cd46a437-8b33-4f25-be89-c3b489bffdf0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a251029b-b568-42d9-aa9d-bb4aa21d5090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a2a0b2-c932-453f-9c74-1597e70fea14",
        "cursor": {
          "ref": "f0f1a7aa-89a5-413c-a81e-46f6d84687b9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f559d691-aadf-4dde-b550-52d2e8e44d5e"
        },
        "item": {
          "id": "80a2a0b2-c932-453f-9c74-1597e70fea14",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "516e96e3-624b-42d8-9d0e-a85fdac79b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b6600e-7fbd-4822-9664-4383b88c174d",
        "cursor": {
          "ref": "4ec97a8e-9c90-42a5-9fa7-6cce14eac7be",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "42da6fa3-10af-40da-a418-2c94d8086a2d"
        },
        "item": {
          "id": "a0b6600e-7fbd-4822-9664-4383b88c174d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b54adcc-166b-4bfd-a00a-5b7e641f1cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a182d84-55ae-4b8c-89d9-5d3a61fa60dd",
        "cursor": {
          "ref": "9f2f03c4-4440-4336-bf37-51f1b61b71dc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f694d656-aeb9-418a-b191-fed9a2d7431c"
        },
        "item": {
          "id": "2a182d84-55ae-4b8c-89d9-5d3a61fa60dd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7821a79f-102f-41c9-b455-5618dd2201f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b59117-fadc-4ef5-8e1e-a82b0fe3bad2",
        "cursor": {
          "ref": "a5d45da7-0937-4f5c-990f-ae48636a424c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "24f1b0b5-3ec0-4dcf-b6e1-c6b83a9fa318"
        },
        "item": {
          "id": "d2b59117-fadc-4ef5-8e1e-a82b0fe3bad2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "efb9b47e-751c-41de-a58e-f762963b3977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8131a5b-b6f7-43d4-8948-37bc0b129973",
        "cursor": {
          "ref": "a8baea41-bfa9-4fc7-9440-0e358b94402f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f46fbf5a-7e55-4b4c-ba2b-54796feed199"
        },
        "item": {
          "id": "a8131a5b-b6f7-43d4-8948-37bc0b129973",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "14586beb-3e23-45b0-b5c6-faba9443deff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d4b68e-2286-4dd8-aed5-9361110bd818",
        "cursor": {
          "ref": "565c68bf-8982-4207-afdc-b86c33b2ff6b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "86f985d3-3924-4df3-8be1-6d5fb9268cb3"
        },
        "item": {
          "id": "f1d4b68e-2286-4dd8-aed5-9361110bd818",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "890c2b98-a409-4987-b2bd-cb32c06e978d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad206376-afed-42c6-9d95-097ac1fda938",
        "cursor": {
          "ref": "5cb2080f-0f2a-4692-b074-69f2f1d6e89a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7cdd228a-cdc2-4b6c-97bf-9a988e800e11"
        },
        "item": {
          "id": "ad206376-afed-42c6-9d95-097ac1fda938",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5c8a7ca7-1ba3-4dd6-99cc-1af1b44af6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc73286-db0f-446b-812a-a5fb8f3cca15",
        "cursor": {
          "ref": "9c6d41bf-d815-4338-aaf2-ce89098cc20f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3b1cfe88-f21e-4a04-bab4-0806f1f8a599"
        },
        "item": {
          "id": "abc73286-db0f-446b-812a-a5fb8f3cca15",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fe83d3af-4bfa-4324-92f2-8cffe8ec8724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fc803e-4660-4651-9be0-174e2bff0f22",
        "cursor": {
          "ref": "d8abee38-e305-4174-ac51-926bf00b8365",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fb6d28f1-c8ba-4172-88ac-ab43b9064867"
        },
        "item": {
          "id": "14fc803e-4660-4651-9be0-174e2bff0f22",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "82b9ee82-8a8a-4d9d-9918-27ca7a701f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd0d9aa-83f2-485d-afd4-d441ed7efe35",
        "cursor": {
          "ref": "351b3b21-f8dc-4331-b860-6db2d9076e40",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8dd71e79-3d54-4466-8834-61740e7763f9"
        },
        "item": {
          "id": "9fd0d9aa-83f2-485d-afd4-d441ed7efe35",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "110985c7-bbba-4bd2-b862-d58f470e4c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c01566-b7e7-4261-bd91-55d2948ca966",
        "cursor": {
          "ref": "985200df-71ce-4c81-99a1-e4311adaf5aa",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ee79a740-68f9-4c0a-83cb-e6ddc9c260d6"
        },
        "item": {
          "id": "56c01566-b7e7-4261-bd91-55d2948ca966",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "571991cd-dba3-4a72-952e-1951e419df6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215c51d0-53b2-49eb-9746-fd9ea5f24459",
        "cursor": {
          "ref": "e456c68d-e0cc-4acf-847b-1b86cf614869",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e954dd7b-b148-4084-b792-f043a0ed7073"
        },
        "item": {
          "id": "215c51d0-53b2-49eb-9746-fd9ea5f24459",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "af8f16bc-00c9-4a6f-90fb-6feb837688d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1281f137-574e-44fa-a387-03f7e0651ff6",
        "cursor": {
          "ref": "b07b4691-dd9a-4841-903b-7b70582fe9c9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b5fc7a55-8d5f-40eb-8571-63058b69c527"
        },
        "item": {
          "id": "1281f137-574e-44fa-a387-03f7e0651ff6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6fda2014-ba06-4b31-a764-dd0311b753c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a28e462-6ca2-47a3-8027-18930303755e",
        "cursor": {
          "ref": "b9924949-d878-4596-9fea-e4ac6b250670",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2b63709b-4f23-4061-be36-3a40b24220ff"
        },
        "item": {
          "id": "7a28e462-6ca2-47a3-8027-18930303755e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fd68780d-2ff7-42f0-b088-a679cc668df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d598cf-0e80-4300-acb7-8024a14fcb52",
        "cursor": {
          "ref": "72b337e6-0ba2-46af-814b-762f8052baf7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c1e5dd3a-d3a0-476e-a997-5343ce2af21e"
        },
        "item": {
          "id": "d2d598cf-0e80-4300-acb7-8024a14fcb52",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0a09d093-3026-4a04-88ad-1e43db05639e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca6c19e-f261-4db5-ad33-83977a83dda1",
        "cursor": {
          "ref": "3cd748c6-97ec-4aed-b42c-b8afdce969aa",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dd2ea245-782b-4849-ad89-917bee2e0c44"
        },
        "item": {
          "id": "bca6c19e-f261-4db5-ad33-83977a83dda1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9ae7aa35-2ab6-43cf-9842-b9028335c237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc034c3-4b07-4320-b416-d537c272644c",
        "cursor": {
          "ref": "aa874310-b087-42d9-9376-c491b67efe38",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5570e63e-ee09-451b-8f76-7101e6e41f5a"
        },
        "item": {
          "id": "7fc034c3-4b07-4320-b416-d537c272644c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8baf1946-0c37-43a4-b4ed-17c6fb8d8c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955a1deb-6f70-4e96-9650-dd3c5440ef72",
        "cursor": {
          "ref": "e8201e9f-bb05-4778-ae70-36c30009ad19",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "943ac121-65e5-452c-8da7-076e809e44dc"
        },
        "item": {
          "id": "955a1deb-6f70-4e96-9650-dd3c5440ef72",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7c2ecac0-25ec-4c7a-b2cd-ebc1b4e0150e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d7e358-da24-4193-abf9-cca2e57e390c",
        "cursor": {
          "ref": "eb4f56f0-c006-4b78-9916-de064b6351f4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9e98bdfb-cd26-4ac5-be14-7cc7cb60d0f0"
        },
        "item": {
          "id": "59d7e358-da24-4193-abf9-cca2e57e390c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3ccc147b-6820-4846-bfa5-fcd6f9d2630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9752d84-211f-4c9b-b2cb-2300ce8d278e",
        "cursor": {
          "ref": "f623f2b9-5f6e-4256-91ee-536c2e369b63",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d7d61628-36a1-4570-ac3d-3ff2036d1783"
        },
        "item": {
          "id": "f9752d84-211f-4c9b-b2cb-2300ce8d278e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "82bb3d26-6360-4acb-806e-9cfdeb09b429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafa13e9-4e4f-4d83-8bd7-630f5161c371",
        "cursor": {
          "ref": "fa4e810f-dc16-4f34-b4c0-b6da788160b8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8fa9f7c0-dd51-4069-85c6-32c8176dc4a4"
        },
        "item": {
          "id": "bafa13e9-4e4f-4d83-8bd7-630f5161c371",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3b65844f-d4ae-4761-abec-09e39ad366e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4274ce4-fe65-4904-8485-545b292196fe",
        "cursor": {
          "ref": "ba740e0d-b3f9-421c-a89d-51c313a5b38b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a38529e2-22d6-4680-9010-d5b7a9d6cf2c"
        },
        "item": {
          "id": "c4274ce4-fe65-4904-8485-545b292196fe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4ded666d-ef36-40d2-af99-8c03dbe7c5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f57e462-77f8-40ba-bb22-bf8cdc8a2663",
        "cursor": {
          "ref": "9914ff4f-0cc0-401a-9f4d-647fd3e73795",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a50c0a0b-1231-4ce3-b609-38782d02ef5b"
        },
        "item": {
          "id": "7f57e462-77f8-40ba-bb22-bf8cdc8a2663",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "de50c5f0-1582-4bd1-a2ae-c286659a1e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9097cff-c8c8-429c-bafb-92c34be6ed53",
        "cursor": {
          "ref": "5455601b-8cba-466d-a72a-d22df1087e28",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "de589a83-4a21-4dc8-966c-96517ab9e99e"
        },
        "item": {
          "id": "d9097cff-c8c8-429c-bafb-92c34be6ed53",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "25062be0-3402-4f15-8b0a-daf224fc3e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d80b3d-1153-4581-9f7b-bc5009c3ac22",
        "cursor": {
          "ref": "35505308-62b7-4b3b-907b-398eadbf59a0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ead2a2d9-9fa0-4162-9845-3cbf2b0a6d9b"
        },
        "item": {
          "id": "49d80b3d-1153-4581-9f7b-bc5009c3ac22",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9d701df8-8820-4c1c-8ae2-56753045808e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2515ccbc-7af8-4fad-8762-1c8cb632cc93",
        "cursor": {
          "ref": "7bfcd6df-edaa-415b-b059-59bfc1f6f5c9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f3e3fbce-ca2b-497a-990e-cd0a5d272cd4"
        },
        "item": {
          "id": "2515ccbc-7af8-4fad-8762-1c8cb632cc93",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "772f7412-7ef2-4c93-a24b-0ce5fac3396b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ba0719-b73c-4664-ba98-8bbda7324d34",
        "cursor": {
          "ref": "a4483d62-9c33-4347-9ffa-9beeb9a8d9b0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ed926b0f-5a13-4a8e-b101-368a8e31a0e1"
        },
        "item": {
          "id": "b5ba0719-b73c-4664-ba98-8bbda7324d34",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "efe31f3a-a282-40e9-868b-34426da3893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b13b7b-ddcd-4398-825b-8f51d4ab798d",
        "cursor": {
          "ref": "851942cb-ef17-4f5f-9139-06bc2c16894d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "aca70598-eb3e-4d56-9084-9687b5a42114"
        },
        "item": {
          "id": "05b13b7b-ddcd-4398-825b-8f51d4ab798d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aa37cb5d-3558-4caa-87ed-bd65dbfe6980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2054542-3ce5-4e00-ac55-4f4a4bd9f52e",
        "cursor": {
          "ref": "4d72eeaf-0241-4ef1-bf77-71ee9f126345",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "017e78e2-9be1-4e41-b69b-84c98e4e26a6"
        },
        "item": {
          "id": "b2054542-3ce5-4e00-ac55-4f4a4bd9f52e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "50bf47a4-bea9-4f49-aad8-0dee9355ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d1ed4c-5687-45fa-ac4b-3eabf6c221ef",
        "cursor": {
          "ref": "72b73342-bf7a-42bd-baa9-0383232d90e6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8df62760-661b-4ac2-b2f9-3afd326f1bcc"
        },
        "item": {
          "id": "87d1ed4c-5687-45fa-ac4b-3eabf6c221ef",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "80fb5b5a-0071-4984-8b70-c2ef7d87404b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58a9f37-5f09-492d-9c66-8348156a9267",
        "cursor": {
          "ref": "fc3e13b5-e12e-4efd-b72f-bc5091e4ea17",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c9c80bcf-fd5e-4934-85ed-2fa49a3328ec"
        },
        "item": {
          "id": "f58a9f37-5f09-492d-9c66-8348156a9267",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c2c7157d-28e7-4585-9b82-a79c696904e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56c2a45-0c8c-490f-9a54-3312c73a28d4",
        "cursor": {
          "ref": "616904eb-ac5a-4276-926c-1658c7460baa",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "31d7a19f-69b0-40e3-872b-dd6bd4882332"
        },
        "item": {
          "id": "a56c2a45-0c8c-490f-9a54-3312c73a28d4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cac012b0-5969-479e-8bb8-ad5ff9e97b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ec1b8c-5838-46e2-bcf6-667591e32655",
        "cursor": {
          "ref": "0f4a54fa-da23-44bd-b533-a9e9dc2e9adf",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "76ca4e57-2d96-41fa-8508-ee0421d0e3aa"
        },
        "item": {
          "id": "96ec1b8c-5838-46e2-bcf6-667591e32655",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ca336095-f789-4f88-8612-c9eafb403278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff38915-09ff-46b0-b275-f53e1870745f",
        "cursor": {
          "ref": "2d819b03-df31-4148-a55e-d9fd1ee15830",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6f2b00d7-6bbf-48fe-b40c-9b19a31bf751"
        },
        "item": {
          "id": "eff38915-09ff-46b0-b275-f53e1870745f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0153f3a6-e590-4a10-b54b-2e70d178a6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2291b52-09e9-4081-b253-d36cd5c99b6a",
        "cursor": {
          "ref": "d7c5cca3-4644-431f-a499-3867b2abdcd3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e4e284e9-ee48-4c5e-9c43-baa2886fdecc"
        },
        "item": {
          "id": "d2291b52-09e9-4081-b253-d36cd5c99b6a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5bb495e7-c3ba-41ca-a952-ca00c59658d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487135ff-45a1-4dc8-885f-8ffcd3605063",
        "cursor": {
          "ref": "07843c62-d4f5-4615-9b17-63bbad8aa9fa",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ce273b30-690c-423a-8b0f-3ee2e83d067b"
        },
        "item": {
          "id": "487135ff-45a1-4dc8-885f-8ffcd3605063",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "45f40c05-6c59-4309-916e-0f0266d46fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b589215c-b2ba-4d5c-9be6-bfc07d06e94d",
        "cursor": {
          "ref": "a9f98721-74d2-4af8-965b-feb1b92db634",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "48ee056b-fe17-4281-8ea0-2f8109bf4116"
        },
        "item": {
          "id": "b589215c-b2ba-4d5c-9be6-bfc07d06e94d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ce901b91-10b5-488a-a09f-d057269c2e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e38726a-197e-44ff-888e-b5b2fba074c9",
        "cursor": {
          "ref": "af850f67-3686-4006-a27b-4698b580c4e9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "19814939-1a60-4cee-84ef-3e4f3695ae5e"
        },
        "item": {
          "id": "1e38726a-197e-44ff-888e-b5b2fba074c9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9157eaf4-63e4-4498-8da7-4e578edff75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad9ab7f-b7fb-4b7c-82c4-85252337ad24",
        "cursor": {
          "ref": "8a799135-a3d6-4e5f-89e6-199a986c05ac",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4d33cf88-b0d0-4c89-9fba-f8d93dd0a051"
        },
        "item": {
          "id": "9ad9ab7f-b7fb-4b7c-82c4-85252337ad24",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f0ae73d6-e0e7-499c-b440-d9f2720b5881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c604d2-1aaa-4671-8846-43b1dbbe9efe",
        "cursor": {
          "ref": "f510163e-fc6b-4c13-8efa-5a7f1b03b8e8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b87e8cfe-8e0c-4b44-acd4-fc43f51c2cc5"
        },
        "item": {
          "id": "61c604d2-1aaa-4671-8846-43b1dbbe9efe",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c3313c96-dda6-4e39-8107-6cdd120469ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7737f9-0a4e-40a4-bc04-26b41d42aaa3",
        "cursor": {
          "ref": "93562fa2-fab0-4286-b6fc-a6cda1bb7874",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f35c43b2-7139-4727-8f2e-f0d6f2341c1c"
        },
        "item": {
          "id": "ce7737f9-0a4e-40a4-bc04-26b41d42aaa3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "61e1c430-daaf-4a9f-ab8e-3b0cc9aa091b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e44204b-341f-4d29-beb9-d62fe517d7a2",
        "cursor": {
          "ref": "5722cd8e-ae73-4581-a01d-942bf1385c49",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2fd6753b-d70c-4cc1-af80-c3e2f66bbc51"
        },
        "item": {
          "id": "6e44204b-341f-4d29-beb9-d62fe517d7a2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "85a7647d-f459-4314-9a17-4ab69cd15a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85513269-c07b-46ed-b183-15073b79d721",
        "cursor": {
          "ref": "809b2dc9-bca4-4cb4-805c-b377160d45b4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "64d858e4-b103-4f47-9afd-386e069390cd"
        },
        "item": {
          "id": "85513269-c07b-46ed-b183-15073b79d721",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c9e41780-5fa0-4136-b439-62ba9597d596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254f1199-4533-49a9-8dbb-d8e82316b548",
        "cursor": {
          "ref": "2b8cb328-640d-4d4e-bf23-5a36ef4d2c60",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ad764893-132a-4edf-b373-dca2834277c5"
        },
        "item": {
          "id": "254f1199-4533-49a9-8dbb-d8e82316b548",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "782c01fe-8023-4f71-97bc-3d963d72dea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993aa043-da9f-4067-b10d-ccdcaa907fe7",
        "cursor": {
          "ref": "712aba5a-4d41-46e9-b758-4a08e3c37bd6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "049bceae-23ef-4c21-bcd6-c6ac0fd3c3ca"
        },
        "item": {
          "id": "993aa043-da9f-4067-b10d-ccdcaa907fe7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "60030ab5-2e21-46af-a6d4-b25ce6151fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36a7b24-a070-4ac8-8457-3fa3d14c5244",
        "cursor": {
          "ref": "e64a07a8-66cd-4d30-a762-39ba772f3dac",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aeaec056-11c3-4b9e-86b7-e96fe9e29522"
        },
        "item": {
          "id": "a36a7b24-a070-4ac8-8457-3fa3d14c5244",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "147ec92d-b06e-4bc5-bb32-34276e1b580d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0f1dd7-cf83-4fe2-8acd-500b3e8a0112",
        "cursor": {
          "ref": "66fdb6a2-ea1e-4a57-8299-f2e314e23f08",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9363dc91-d459-4b5b-bc59-6cc0c405b9bf"
        },
        "item": {
          "id": "ca0f1dd7-cf83-4fe2-8acd-500b3e8a0112",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a24ca496-486d-445a-b932-9f6ea8a7cf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478745d3-860c-48e2-85d3-9273fc3c2fe4",
        "cursor": {
          "ref": "505a928b-81e4-49fa-a0fb-d2124b2b5cae",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a944823e-f5b7-4355-8ab4-92d765c78175"
        },
        "item": {
          "id": "478745d3-860c-48e2-85d3-9273fc3c2fe4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "12b2fe59-2e45-410a-a19e-c5d3d279e5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3ed4fd-3980-474b-a01f-ee8d430fe8c2",
        "cursor": {
          "ref": "a54146ee-e353-4c81-a3fd-f2485ad94075",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "784fe031-3db9-4ca7-9605-2ef9049372f6"
        },
        "item": {
          "id": "bf3ed4fd-3980-474b-a01f-ee8d430fe8c2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5da9d786-6c48-4d0d-aae2-89686681ddb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ad3be1-ad4c-4a50-9b1a-d0e7bd3ac0b5",
        "cursor": {
          "ref": "db21d42d-7f6c-4fbe-a47c-778bbad410d6",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a6fbfdcd-6927-4196-b2cf-cdbe0af9a45c"
        },
        "item": {
          "id": "f1ad3be1-ad4c-4a50-9b1a-d0e7bd3ac0b5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f255ba5c-806f-4adb-87bc-27d2e539b2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99a2b47-7a0b-4fd4-8b93-7fd27432beaf",
        "cursor": {
          "ref": "46b56f57-2bdf-4e9c-8572-95b786f543cd",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b04c551a-67f2-483c-9283-06a862bbd996"
        },
        "item": {
          "id": "b99a2b47-7a0b-4fd4-8b93-7fd27432beaf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fd8e4e3f-67b1-4180-a7f9-2623e3c33178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad203457-756c-4e7e-b049-bdc67ece565d",
        "cursor": {
          "ref": "6e8437e5-66e5-4d88-b3c0-77f22399dd2e",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aafb3048-ec75-44b5-86a1-3fbe65624b7b"
        },
        "item": {
          "id": "ad203457-756c-4e7e-b049-bdc67ece565d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d937c23d-2b93-40f7-93df-6d12d67e5c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5906a685-a7c4-4dd0-9ddd-c1dc5a535827",
        "cursor": {
          "ref": "665fbe6f-f62b-4112-9815-dbdfd4b18363",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "976738ec-d7cc-4719-a52a-60d765820128"
        },
        "item": {
          "id": "5906a685-a7c4-4dd0-9ddd-c1dc5a535827",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fb6da31e-6e69-447d-b665-e3a8ca60c75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea0e37f-2f3a-4bd1-bd6b-5440c81f87e0",
        "cursor": {
          "ref": "3b3b516e-1504-4d6f-9720-87a6ea6d11bb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "68ba48e9-4ca9-4806-8e93-9c4f9ea130f6"
        },
        "item": {
          "id": "6ea0e37f-2f3a-4bd1-bd6b-5440c81f87e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fe8681dd-35c4-470b-a37e-eddea5fcb584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dfd5fd-7c60-4f95-9a57-da1232e2f5b7",
        "cursor": {
          "ref": "7245ea8d-060e-4e6a-927f-e2d1c813a858",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "82327257-fce6-40eb-ac85-a6795329487c"
        },
        "item": {
          "id": "73dfd5fd-7c60-4f95-9a57-da1232e2f5b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bca6047f-c5fb-45e5-a1a3-aa1886083968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b18cbca-1d6d-49fc-933f-d939b0383b46",
        "cursor": {
          "ref": "37a33ec4-98f6-4a42-950b-65baf2880627",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e5a062e8-18a6-4414-a9c4-5a9da6d1d330"
        },
        "item": {
          "id": "8b18cbca-1d6d-49fc-933f-d939b0383b46",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3a94a852-881b-4ad6-b7dd-38189e089f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eec247-e5e6-4529-941b-b7f341a19198",
        "cursor": {
          "ref": "7389ed8d-5745-4211-8a68-66aeaf0993c8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0ecd6260-8205-49b3-9fd1-a8ea0b805711"
        },
        "item": {
          "id": "f7eec247-e5e6-4529-941b-b7f341a19198",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5121368c-3d43-4bef-82c3-ee4ff5272c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb767ac-adbd-45f2-97be-b75f5c5ae787",
        "cursor": {
          "ref": "298b95bd-760e-4dd4-a326-358f5a02d5da",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d883ec03-3a7d-488c-be10-a36ad6ef8633"
        },
        "item": {
          "id": "1bb767ac-adbd-45f2-97be-b75f5c5ae787",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "011f9308-d6bf-413e-901f-f4298c81ddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b493b436-e76c-4a4e-8e1a-e8266eaab822",
        "cursor": {
          "ref": "7df8e170-0266-46c5-b851-7d700089f0df",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1cff0dda-f509-41d8-9c70-f3e705f95c23"
        },
        "item": {
          "id": "b493b436-e76c-4a4e-8e1a-e8266eaab822",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f8dd3f19-9737-415e-868c-804866306a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e733877-9ac2-4973-95e0-2b99148f71a7",
        "cursor": {
          "ref": "87c681f4-bc88-40e3-b9f5-d83b2faa370e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0448f4b8-599e-4d52-a5c3-9b0d4f296d29"
        },
        "item": {
          "id": "4e733877-9ac2-4973-95e0-2b99148f71a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5febef94-bc56-4d7d-a651-a07d116d99b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7186b033-7990-47c8-95e1-9f588966e083",
        "cursor": {
          "ref": "13b5a2c0-ce51-42bf-b74a-c8ccb3417d39",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "da955c8a-90d5-4680-8ec5-c33c2635d6ca"
        },
        "item": {
          "id": "7186b033-7990-47c8-95e1-9f588966e083",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ff0819e2-4d9a-4add-9aa2-daff633b8bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a8574f-d81c-4411-ae6d-1451a626e9e2",
        "cursor": {
          "ref": "51fa1d49-559c-46f6-b29b-eda71d3384c1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ab13bad4-0f6f-4155-844d-10c7fa39dcbf"
        },
        "item": {
          "id": "29a8574f-d81c-4411-ae6d-1451a626e9e2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "945d7fea-c292-4be3-9b57-833e6c8c2e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c790f347-a409-4f50-a3b4-74c188b10df4",
        "cursor": {
          "ref": "2477632e-ce36-4dff-b36a-58132ad5a1de",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d8779133-6788-4a28-8fa0-4a3e410ceca4"
        },
        "item": {
          "id": "c790f347-a409-4f50-a3b4-74c188b10df4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "82be8de5-5699-467e-9deb-e1e1a2e66e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e345a528-85f8-41f3-817a-0c89dd6e0210",
        "cursor": {
          "ref": "745706d6-d950-478c-8100-67d299fda088",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5d27ccab-90fd-40c5-aab5-d5decbd05b47"
        },
        "item": {
          "id": "e345a528-85f8-41f3-817a-0c89dd6e0210",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "65b057c5-b3df-4ddc-beeb-da3ebeee8ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95057403-aaad-4097-9311-378ddab2280f",
        "cursor": {
          "ref": "8ed2480c-54f7-43ea-94c7-4bb3a12b12d2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "08446906-d451-49f0-b334-55ab33b2b1c5"
        },
        "item": {
          "id": "95057403-aaad-4097-9311-378ddab2280f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "231a789c-f072-494f-8233-0032c3031da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28bdaf5-74f0-4413-a280-f316e2c8c564",
        "cursor": {
          "ref": "e7d4824a-d010-47af-86b4-3f38edda113f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f3985d86-0cae-411d-8e8f-3144654bd25e"
        },
        "item": {
          "id": "c28bdaf5-74f0-4413-a280-f316e2c8c564",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e1ef38a8-f9c7-4571-8eff-0a4c30acaa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef9cf15-8ab8-486a-91f9-eff63753f151",
        "cursor": {
          "ref": "5400f187-ef12-40d9-ace0-49d840803248",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "965d8c7f-4077-4714-ad65-1049e9f2f233"
        },
        "item": {
          "id": "eef9cf15-8ab8-486a-91f9-eff63753f151",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9b04deec-9402-460c-b5e7-a39a10b7a9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ad3674-0716-4240-8655-a468ff84e2fc",
        "cursor": {
          "ref": "d5c52f2d-80ff-4816-9a2b-e40be202af15",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3dcc867f-acd3-4dc6-be59-d6c999f12516"
        },
        "item": {
          "id": "28ad3674-0716-4240-8655-a468ff84e2fc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "365c4f7e-e24e-4d25-afa7-e8672787e41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac5cc72-c60e-414b-b32b-67f0e1dabf0a",
        "cursor": {
          "ref": "b6973c19-f049-4acf-9c07-f8de37811dd6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bc2c679b-9ca5-4e5e-baa7-e72d01abd1f5"
        },
        "item": {
          "id": "6ac5cc72-c60e-414b-b32b-67f0e1dabf0a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cb1ce239-5dab-4746-8b2e-fac1abe5b0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4f06a3-147a-4142-a8b2-4570167d9410",
        "cursor": {
          "ref": "c808a80b-da26-4af9-b45e-3a315cc6bb86",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9d8b9622-d811-4101-8f0e-9b525ce3e6cd"
        },
        "item": {
          "id": "7b4f06a3-147a-4142-a8b2-4570167d9410",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "352eec11-da26-4039-a0a9-5ca8f12a700f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357afe10-1708-4b0b-9899-539cb745b796",
        "cursor": {
          "ref": "ecc8460b-7b60-49d6-a3d4-0ce67a16d188",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2346bf38-a9e7-4ee6-a65b-976623b1fc88"
        },
        "item": {
          "id": "357afe10-1708-4b0b-9899-539cb745b796",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8364c76d-e2fe-4219-b574-b410c58d5f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15b9068-27c0-499c-9cae-c99aedcf0846",
        "cursor": {
          "ref": "e0f60af0-7145-4c5e-bc96-9da4c375b25d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aa213b4c-60a8-4675-a9c7-0a2580ea575d"
        },
        "item": {
          "id": "d15b9068-27c0-499c-9cae-c99aedcf0846",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "09ee1004-e550-454f-81e8-479f1d81461c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39357956-80b8-4e48-94de-bf41478f915b",
        "cursor": {
          "ref": "3ed1c76c-f83f-4f36-8de7-b5e7a9d856e1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "484e20c2-edde-4d2c-9616-27bccf8e4a18"
        },
        "item": {
          "id": "39357956-80b8-4e48-94de-bf41478f915b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f5a4e615-a716-4034-9f74-e073570fdcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85d6718-8353-42bb-8158-4e90f7b95a9a",
        "cursor": {
          "ref": "6f6abdd1-095b-4ab4-8a09-1a0c321f1f89",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b2eb7e09-5276-465e-8002-d92616d8c73d"
        },
        "item": {
          "id": "c85d6718-8353-42bb-8158-4e90f7b95a9a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4d0998d2-ac7a-4286-879a-26f5fe1c19d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d28ac5-f876-48f6-8462-cc0c0d359998",
        "cursor": {
          "ref": "93fdd770-d057-404e-b7f4-6cddaa3b0f23",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8114008c-b638-4f89-9d1f-4d7845b181d2"
        },
        "item": {
          "id": "a7d28ac5-f876-48f6-8462-cc0c0d359998",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e4440578-f724-4c4d-b1d4-7e6a147bc3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ea40fa-e0b4-4a5f-839d-a99fd71cb19f",
        "cursor": {
          "ref": "bdc1344f-205b-4425-b00a-1d9bd0b65915",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8b0b2c38-12b2-421f-a9aa-604b4b5b7b16"
        },
        "item": {
          "id": "37ea40fa-e0b4-4a5f-839d-a99fd71cb19f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9aa9513a-d57b-4684-85e6-302c999bb260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe598c45-f0d2-48f2-a776-f277335d7bf0",
        "cursor": {
          "ref": "848c3d16-9164-48cf-b921-d59971735c5d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6a5cfc22-81e8-4c22-a064-f48e75d5c909"
        },
        "item": {
          "id": "fe598c45-f0d2-48f2-a776-f277335d7bf0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c5fec3a8-69e3-4d17-9d6d-e99265411033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445a298d-1816-4704-825d-f63aa5a73f14",
        "cursor": {
          "ref": "5e5b41e9-5e6b-42da-8bae-ab652766ed26",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d1af9d62-4c72-4e1a-bc53-4244beb70f4c"
        },
        "item": {
          "id": "445a298d-1816-4704-825d-f63aa5a73f14",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "48a68a30-f156-40f8-9784-b3077a3d9f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d40ddcc-3e89-4181-9b6f-033a9510a4eb",
        "cursor": {
          "ref": "0ce03dc9-e91f-43eb-b243-73e2fc653fb3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e4e8ee3b-bc98-47c7-9aa4-03a0324143bf"
        },
        "item": {
          "id": "4d40ddcc-3e89-4181-9b6f-033a9510a4eb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fa0380e2-b2d8-417e-8da3-6a7162937698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2675a479-3eec-412f-8685-c9344e5df702",
        "cursor": {
          "ref": "de630f1c-5886-4093-afab-6b4da8943b1a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "420d91f9-2a27-4b68-b863-426ad49c549c"
        },
        "item": {
          "id": "2675a479-3eec-412f-8685-c9344e5df702",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2cbc1bb6-f215-49e8-aac6-e9b7ef4363fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cccbbd-0116-43fd-aa9b-1faef9a8c2bb",
        "cursor": {
          "ref": "1097b080-06ca-404c-9318-6430e28746cb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e7c5b596-a500-4228-b8d9-ea24cc4138ae"
        },
        "item": {
          "id": "c9cccbbd-0116-43fd-aa9b-1faef9a8c2bb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4ad849bc-8c39-4a6b-a2dd-975295bb8829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1446471f-b4a6-4a1e-ad05-5844721b2617",
        "cursor": {
          "ref": "0cc50fc0-bd62-430e-ae62-2fcff63cfb12",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6f077db7-7963-49ec-bb24-9084a3b9e0ae"
        },
        "item": {
          "id": "1446471f-b4a6-4a1e-ad05-5844721b2617",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d938b074-20d5-4b21-b62e-821338b44ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab773b14-d697-414b-a034-2045a3bda967",
        "cursor": {
          "ref": "b3abd4c1-0146-40d3-a51a-b371aa6e218c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6e726741-41dc-4630-a74b-a2da3fc082a7"
        },
        "item": {
          "id": "ab773b14-d697-414b-a034-2045a3bda967",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1ae955cb-5e65-4717-9134-b542c1a6e718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed250f7-c9b4-414b-a99a-32764baaec38",
        "cursor": {
          "ref": "9d5c840d-e3d7-4f46-a2e8-a0298e46c3e9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "17e78c08-e7be-4d20-ae63-c3f7ea1f8344"
        },
        "item": {
          "id": "fed250f7-c9b4-414b-a99a-32764baaec38",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ba0c3072-b951-46b4-8404-ab3148378519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b929db2-bbcb-4216-8285-39a73df74b0d",
        "cursor": {
          "ref": "27d75639-5313-48a2-b2a4-815fd97214f8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fe4c994a-1734-46c6-ada7-2317b265a87a"
        },
        "item": {
          "id": "5b929db2-bbcb-4216-8285-39a73df74b0d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "36d1243c-0129-4513-b82a-bf4efb022bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c89abf-8f54-4e9c-b06a-c31d82d17cd5",
        "cursor": {
          "ref": "6a91daf8-ac82-433a-9aa7-0c8c6bf2f3a7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "55989f2b-10ca-4b36-b455-f7a311b3b479"
        },
        "item": {
          "id": "56c89abf-8f54-4e9c-b06a-c31d82d17cd5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "57a53f68-374f-40af-8168-298459c1ebf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67e4bba-4e92-45e2-b901-d6ebd04ad1a1",
        "cursor": {
          "ref": "08b53325-9a96-4059-8f56-d27aba8e708e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "96095e66-ba84-42b1-8d43-48e0cf286a7d"
        },
        "item": {
          "id": "b67e4bba-4e92-45e2-b901-d6ebd04ad1a1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fc5789af-9a9b-41ae-8ed8-e4da5007a14d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee0c19f-6876-4b84-875f-7f3c281721c4",
        "cursor": {
          "ref": "e7da2405-5218-4fa8-9a04-61d3e0f167a0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9b79bbe1-bb7f-4619-9572-2fe5116ecaa0"
        },
        "item": {
          "id": "eee0c19f-6876-4b84-875f-7f3c281721c4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4e75ee91-f00e-4db0-b5bd-5809fb480a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "79d38250-8bff-47e3-a341-b5abe0ac67e4",
        "cursor": {
          "ref": "b1645c12-2f3d-4bce-ba5b-5cf45ea71282",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "98e8f313-7fd6-4309-814a-864ad2a6ea4f"
        },
        "item": {
          "id": "79d38250-8bff-47e3-a341-b5abe0ac67e4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "21fbbc6b-4643-4002-94b5-1eb8b1953f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1b947189-3094-4f57-8a04-a86ba6530ab6",
        "cursor": {
          "ref": "b309b1d9-3a7f-4f45-9561-eef45e5b1d46",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "35dd1a70-ab62-4ddd-9438-8586857089c7"
        },
        "item": {
          "id": "1b947189-3094-4f57-8a04-a86ba6530ab6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1c5835ac-510a-4d5a-a197-1eaa516a2f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0d08a6c1-0396-4887-aeaa-7ba50d24b102",
        "cursor": {
          "ref": "ec37d9ae-b19b-4f48-accb-e4f6a22a4558",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "39e39153-6b21-45d7-8302-86599273506a"
        },
        "item": {
          "id": "0d08a6c1-0396-4887-aeaa-7ba50d24b102",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "609acd00-de53-4148-8daf-0b4d2deb2a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "68f439f4-0ce1-4323-bbc8-a8d0e930fabd",
        "cursor": {
          "ref": "ace8f50e-b6a1-4e1f-87d2-90cb2f6b0008",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b5a3327a-ee35-4b66-b789-659db549c604"
        },
        "item": {
          "id": "68f439f4-0ce1-4323-bbc8-a8d0e930fabd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4c5623e9-9fa1-4e26-a5d5-f534f27bc11e",
          "status": "Created",
          "code": 201,
          "responseTime": 4565,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e10bd9-b6a2-415c-86d7-2e8da3ebbb51",
        "cursor": {
          "ref": "293c2839-9ed6-420f-855a-38fc49b4b1c7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b8302fb8-6290-45b5-b147-faddccf68310"
        },
        "item": {
          "id": "c6e10bd9-b6a2-415c-86d7-2e8da3ebbb51",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4ff570db-82d9-4580-945d-504789060184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b0242e9e-624e-492f-9150-83207e8970e7",
        "cursor": {
          "ref": "1f68a206-bc35-441b-9db4-a0c2160bddec",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c4849fd5-915c-47f0-9054-7553bd96cae6"
        },
        "item": {
          "id": "b0242e9e-624e-492f-9150-83207e8970e7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a1acd51c-c2c8-44bd-821f-7b1b8d3ba13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c74c4a26-94db-4a39-afc0-f64932ef70e8",
        "cursor": {
          "ref": "f0f0ff05-9eab-47a7-94bb-e99bdeea6b61",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cbfd1e87-a82d-453a-95d4-ec0226566fa9"
        },
        "item": {
          "id": "c74c4a26-94db-4a39-afc0-f64932ef70e8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ea08847b-04d1-4d1d-9d10-0e1fa4c24eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e22912-7267-443b-991f-4743ccf6fa82",
        "cursor": {
          "ref": "8638a4e9-ddf3-47ba-838d-509cb34eab67",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8dd0e909-c570-478a-a960-638a065fa7cf"
        },
        "item": {
          "id": "90e22912-7267-443b-991f-4743ccf6fa82",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "671b4933-b5cc-4872-aace-dd279ecc19f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59929dd5-b63a-4f74-84d9-bda42249ceec",
        "cursor": {
          "ref": "47e70fee-d928-4221-9765-dbbd70a986bd",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6cfae7ab-9dc5-4075-80ff-0e3d3aff8a19"
        },
        "item": {
          "id": "59929dd5-b63a-4f74-84d9-bda42249ceec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da3cbd99-3267-4f0e-a74b-4ddb6b24cb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3c4b2e-e324-480e-98b8-dbd7c5321173",
        "cursor": {
          "ref": "99a67221-7488-4664-8962-67548973510d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2e7f2c85-56fd-4595-a03d-bdb7d166c88f"
        },
        "item": {
          "id": "5c3c4b2e-e324-480e-98b8-dbd7c5321173",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7f831c6d-a925-468b-8e7c-82cae72ce464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60439da-0622-4404-94f4-a7b4ba4cce97",
        "cursor": {
          "ref": "b26013e8-3890-4230-88f8-d0c8227631e7",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6897b959-d8cc-4c6e-9b34-37e54812665b"
        },
        "item": {
          "id": "d60439da-0622-4404-94f4-a7b4ba4cce97",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c092b401-700e-44c2-92a2-20141f8204c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d49d776-f776-4b9c-b931-e2fc49deebca",
        "cursor": {
          "ref": "f807e07d-8f37-4b88-86d5-3936f57a9e26",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4d7b88bd-c0d3-412a-abbc-ca0b23786e3b"
        },
        "item": {
          "id": "8d49d776-f776-4b9c-b931-e2fc49deebca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fe607929-6c28-4ef9-a965-e5d11e4b9147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789ad36c-06e3-40ad-861e-a11f9df99c79",
        "cursor": {
          "ref": "6f3f6412-b30f-4b41-9d85-713685e00f80",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "44aab428-75ea-44e4-b00d-1e0b64c9076c"
        },
        "item": {
          "id": "789ad36c-06e3-40ad-861e-a11f9df99c79",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5a5749b2-526c-4aa7-9051-86edf8222bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20732d16-e6ec-4ef2-8bd4-1bc455d8f879",
        "cursor": {
          "ref": "b49686be-5a9b-4d8e-b084-b6c73df4c778",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "20f28500-342d-43b7-9a76-0db82d604464"
        },
        "item": {
          "id": "20732d16-e6ec-4ef2-8bd4-1bc455d8f879",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1da72651-2705-45e5-86e1-f3ddf63e7e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf28d063-e5b0-4cc5-9096-877f12addbb8",
        "cursor": {
          "ref": "c1fb9e5f-38b0-4476-9a3e-a71566fb4efe",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d5cd3d5e-c514-4484-b8a1-bf546235a110"
        },
        "item": {
          "id": "cf28d063-e5b0-4cc5-9096-877f12addbb8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "28591422-c5d4-4448-8fbd-a87aeb9fe6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc24cec3-9e37-4e4b-a6aa-691b263aa884",
        "cursor": {
          "ref": "436e4514-c2c4-48ed-9897-5c8968790375",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "84c2a0eb-1600-4e7e-adc2-b440bebfa1f6"
        },
        "item": {
          "id": "cc24cec3-9e37-4e4b-a6aa-691b263aa884",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7466eb53-6ffd-4eab-9a0d-8ceb9140d6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6f1a4f-b610-40aa-9e07-2bfa33297b9f",
        "cursor": {
          "ref": "1fed2cd8-7c88-4267-9bdf-efe992cd2a58",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "59961261-47f4-4558-a7ba-7224f9302e14"
        },
        "item": {
          "id": "0a6f1a4f-b610-40aa-9e07-2bfa33297b9f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0a9aaeee-a8c3-46b4-8581-8fafa8b57e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738922a4-e62b-4a17-b0cb-c3cb218fd9ed",
        "cursor": {
          "ref": "d7cfdd25-8750-448c-9566-1eb9ee5e2f12",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "41e79263-136f-4ad9-9030-9d30408ee868"
        },
        "item": {
          "id": "738922a4-e62b-4a17-b0cb-c3cb218fd9ed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "76b11f60-e1df-4a70-bf87-b2a4ad7d5b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc2faf6-5790-49d0-8989-b8d2accefa3e",
        "cursor": {
          "ref": "92965849-9bac-4080-8d2b-4b319b5eac5f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c63dff1e-137c-4c7b-828e-4007e7a26f8f"
        },
        "item": {
          "id": "abc2faf6-5790-49d0-8989-b8d2accefa3e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3100744a-2f4c-4b3a-bbba-c9e3769a1d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf968669-6041-4209-8af9-b2147d2c7f6a",
        "cursor": {
          "ref": "9a2703e4-fc57-4919-aef3-867f0e2db314",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e5738b10-8a00-4b87-b455-83739b3a362f"
        },
        "item": {
          "id": "bf968669-6041-4209-8af9-b2147d2c7f6a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1998a419-599f-43b5-88ec-f0bf3fef0c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e97e22e-8a2d-49be-ae39-90dc0313b350",
        "cursor": {
          "ref": "febc221d-84eb-4f53-b8c3-5c38c7b612bb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "699ecbfa-e975-41ff-9112-f34cacbdb965"
        },
        "item": {
          "id": "0e97e22e-8a2d-49be-ae39-90dc0313b350",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a84bfe76-6ce7-4a6a-9a36-c1e678ca09ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9925fa-3f8f-49f2-913d-51e078481259",
        "cursor": {
          "ref": "1c7893ee-ea1b-4f7e-8c84-2fe59df58f7b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "578e37b2-d11c-420d-ba8f-02c25823a7e2"
        },
        "item": {
          "id": "cc9925fa-3f8f-49f2-913d-51e078481259",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "152d55dc-472b-4d3e-a646-1114b9676c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534da8a0-181e-4b20-8642-fffe699e1783",
        "cursor": {
          "ref": "1284aa81-99c5-41d2-ba9f-e16476d44395",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "240eba02-faa2-4df5-b1fe-677e91af9b8c"
        },
        "item": {
          "id": "534da8a0-181e-4b20-8642-fffe699e1783",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "292bd45d-c8a8-4b2b-af42-82891b9c78aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a5289d-8d98-4850-9a35-5d8bed88767f",
        "cursor": {
          "ref": "c9b83347-a428-49c7-b1d6-9131c89531a7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "72fb2926-a2a6-4a30-bd5c-82ffae6a4543"
        },
        "item": {
          "id": "12a5289d-8d98-4850-9a35-5d8bed88767f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c5b42e12-5c63-4bac-89d5-325353f6ffd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf75bc2-be9f-4727-afc9-0bade63ffa13",
        "cursor": {
          "ref": "f15f107a-abdf-437f-ae4d-b4f14c131f89",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f43af76b-d0e0-4760-9df5-8a87076efd8f"
        },
        "item": {
          "id": "abf75bc2-be9f-4727-afc9-0bade63ffa13",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "64a38765-e26d-4389-9fa9-eef84e833aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff47832-d8f9-417c-9a6d-c611b7eb068b",
        "cursor": {
          "ref": "46bb93f5-fb20-4cca-b97d-5e929eb1b8f3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b76d352c-54d2-480b-9c35-e360439bdd88"
        },
        "item": {
          "id": "2ff47832-d8f9-417c-9a6d-c611b7eb068b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "980a6ef4-c474-4774-9e40-bc34b7986139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5694938c-f231-461e-bc7a-0859663a05d0",
        "cursor": {
          "ref": "0a0db003-44a5-45c7-b9d1-b4c4de455578",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0a41c3d1-8948-4198-801a-495765c94711"
        },
        "item": {
          "id": "5694938c-f231-461e-bc7a-0859663a05d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "91ea3e99-d937-4949-a2de-d5972dee69dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5db5ad-401c-45c8-90d2-df6568aaab96",
        "cursor": {
          "ref": "0bfbf582-5779-40fb-9ff4-65d8a6d103b6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b624f383-9d39-4d5e-bdcb-194e477cb484"
        },
        "item": {
          "id": "6e5db5ad-401c-45c8-90d2-df6568aaab96",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0714d681-496a-40ed-9c59-ac50b842a55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f13e77-e355-4c8e-9043-7ff2955ad2b1",
        "cursor": {
          "ref": "39b96074-834a-4b3f-a692-e02161a57e0e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "80eec6b9-d3ec-4a4b-be63-af2518bd4115"
        },
        "item": {
          "id": "18f13e77-e355-4c8e-9043-7ff2955ad2b1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aea3af6a-7ea3-4651-9b21-c21207e02b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b1fbfa-7e91-4781-aab5-7bd206265bec",
        "cursor": {
          "ref": "27b2beaf-212c-4702-9250-0e294b0c6455",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "25e66e32-bd17-4eed-a50a-ae3bb9c5368d"
        },
        "item": {
          "id": "70b1fbfa-7e91-4781-aab5-7bd206265bec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44ea9506-bc2a-4f24-8e24-048afc5d84d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052aa24a-e900-42ff-8b55-4333e241dac0",
        "cursor": {
          "ref": "cf2d29f1-0d06-4892-94b2-deaf78fe873f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ed0c2e13-0334-4d27-b4c5-d9bc6a9a278b"
        },
        "item": {
          "id": "052aa24a-e900-42ff-8b55-4333e241dac0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2e50a13e-a409-483a-969c-56f61bf15c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6ca19e-1c13-48a9-b76c-c573a243cf1c",
        "cursor": {
          "ref": "38389401-d214-4971-8cad-da4cdeab72e9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d32aa5d3-93ce-40d8-97f8-fb41ebc8186f"
        },
        "item": {
          "id": "7e6ca19e-1c13-48a9-b76c-c573a243cf1c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "330e24a6-5906-4b60-a034-9898be646f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb213d0-9129-474b-964b-4f8a2e26d705",
        "cursor": {
          "ref": "235a54fd-807a-41ea-8937-ad5b7b493682",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a4f123b4-bd3a-42cb-9950-3c4e21322ad5"
        },
        "item": {
          "id": "edb213d0-9129-474b-964b-4f8a2e26d705",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4b21c88b-2ca1-4f14-8708-0d67a00c9222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab1c916-e70c-4254-8b39-3f0eb0e79a7d",
        "cursor": {
          "ref": "5b51837e-8c56-45fb-8700-cf6c6042aba3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "66a3fb77-f2c0-4e13-9931-6da0986712bd"
        },
        "item": {
          "id": "dab1c916-e70c-4254-8b39-3f0eb0e79a7d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7293ec9e-9222-4171-833c-0071b74969a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d04edc-1d07-462b-8716-b4977476b927",
        "cursor": {
          "ref": "48960f29-94de-4bd9-aa6e-d335619bc02c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dfbe3a00-848d-421c-80f5-661d08523b45"
        },
        "item": {
          "id": "02d04edc-1d07-462b-8716-b4977476b927",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "411d52d4-120b-4407-945d-78f41cd221f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a57e0c0-17d5-421e-8247-d1dba807364f",
        "cursor": {
          "ref": "19a0d3df-ed4f-4304-83f5-73da91be5409",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f58fb4c9-4b36-46fe-9615-4a9aae3abcfe"
        },
        "item": {
          "id": "7a57e0c0-17d5-421e-8247-d1dba807364f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b1fd1a51-972c-4e93-ac79-c7c68cff1c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43157fec-d90f-4917-8174-66548d41ffc0",
        "cursor": {
          "ref": "f3524b71-6f76-43ac-b03c-b9f0cb501b7a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b3aaadc8-ceba-423e-959c-d44106f9a04a"
        },
        "item": {
          "id": "43157fec-d90f-4917-8174-66548d41ffc0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d8a7ea1b-6e07-4e0f-97c2-3e092071851b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5605378-8ed5-4ba0-92b1-3fcbcc1569f1",
        "cursor": {
          "ref": "6c83f6c3-eeaa-45f1-aa01-c2ba94d27cac",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "624d770f-4fcb-43a5-8bd4-1eeddaae5c1d"
        },
        "item": {
          "id": "c5605378-8ed5-4ba0-92b1-3fcbcc1569f1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1ffc8fec-da83-4d94-bd84-cf644a55fbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d40d2-96f9-413f-b88b-355abaa3f871",
        "cursor": {
          "ref": "02785ee7-77aa-47ba-9efb-9ceb49123853",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aeb12123-fbe8-42a7-b88c-10cd8079b422"
        },
        "item": {
          "id": "6a9d40d2-96f9-413f-b88b-355abaa3f871",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ccc87ea5-e733-4c74-83bd-807142c93c6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9cf6bb-58e2-45e6-bf6b-b52a33c65c89",
        "cursor": {
          "ref": "d201b070-d090-4c71-96f4-8f92ba027d4e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "305b3f21-ce1e-49a2-a5fc-23ea2afa9ec1"
        },
        "item": {
          "id": "9a9cf6bb-58e2-45e6-bf6b-b52a33c65c89",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "089dc97a-b86c-454d-852c-9f09f8fc8c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dacf18-2d4b-40fd-b58a-fb76731516f3",
        "cursor": {
          "ref": "8e5c5309-9e5d-44b5-b086-83d7569781af",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "04942a5b-508d-46de-b847-04400fbbf359"
        },
        "item": {
          "id": "c5dacf18-2d4b-40fd-b58a-fb76731516f3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fdf0c562-dab6-49e2-afd8-a7414595da4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc92c0b-aa1b-48e7-8c1f-36803d686527",
        "cursor": {
          "ref": "e22ae3ba-f431-43a8-983b-ae31aec03cac",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b9a54af-ea5d-4232-aee9-d30b61eda222"
        },
        "item": {
          "id": "9dc92c0b-aa1b-48e7-8c1f-36803d686527",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2b78a811-19f8-47f6-b07d-3ee059e40626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd131db8-9b94-44fa-ba8b-b4bfe596e40c",
        "cursor": {
          "ref": "f3717672-0858-4897-a8b4-12e67f4ee187",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a5d56f8b-d630-4489-8507-f5fac67819e7"
        },
        "item": {
          "id": "dd131db8-9b94-44fa-ba8b-b4bfe596e40c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f3a3526f-a68c-44db-9fe9-de45da4912ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a4e2bc-ccc5-46ea-bf55-4151c5a3702a",
        "cursor": {
          "ref": "6b74f8e6-c8ba-4b12-abee-c82cb551b87a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "18a27de3-0338-4f86-ada6-4f249f3c8c9e"
        },
        "item": {
          "id": "b7a4e2bc-ccc5-46ea-bf55-4151c5a3702a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "257ef99a-2b92-49f7-81f1-3709eb3e1525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391b9a7a-d290-43dd-b45c-3c8b18cc3384",
        "cursor": {
          "ref": "875c9e99-7681-4532-8e9c-8cab83b3296c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a9e8d065-435d-4824-bf8a-452330bf63fb"
        },
        "item": {
          "id": "391b9a7a-d290-43dd-b45c-3c8b18cc3384",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61bb0e3b-394d-4491-aaad-0fc67286505d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282479ee-7dff-4736-bbfe-c5b965e7a3f9",
        "cursor": {
          "ref": "43e3510a-da3d-4ad5-8d15-fa96f593d532",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7b0ad651-2c3b-4614-a29a-89264b0c6ae5"
        },
        "item": {
          "id": "282479ee-7dff-4736-bbfe-c5b965e7a3f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8dcdb0af-7d26-47b0-b9c2-adb50f600bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f97e07-6dda-4cdd-b0c5-cf2603deeb08",
        "cursor": {
          "ref": "1b3c3f1a-6d39-4919-b691-330ed78ebcf6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "27f362df-7083-4b75-ad34-38c89b65f58e"
        },
        "item": {
          "id": "e2f97e07-6dda-4cdd-b0c5-cf2603deeb08",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "28ac9131-0175-4157-a18d-ffdbb32c7f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331fb4eb-4b0c-4703-a4e7-4cc4bca2ab42",
        "cursor": {
          "ref": "9da07cd1-4d05-4d28-b5a0-e305202ef285",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "21a8011c-4dc1-4082-ba7f-2f5cf93ec509"
        },
        "item": {
          "id": "331fb4eb-4b0c-4703-a4e7-4cc4bca2ab42",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "544ab073-0613-4181-b926-6fa6cce7f45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f61a0f-f5a4-42a7-b818-fb16a1f2ef6f",
        "cursor": {
          "ref": "86985c40-a4f9-47cf-a093-39cd312e8983",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7455c117-b5cb-424c-9933-38ac9b1aec1f"
        },
        "item": {
          "id": "76f61a0f-f5a4-42a7-b818-fb16a1f2ef6f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7fbb9415-8058-4987-89f8-392e71e28907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bbeede-cba7-477f-9b2b-f187ec2ce670",
        "cursor": {
          "ref": "d9651640-3397-46ef-aa17-15b20ac4b12b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eac724dd-f9e4-4cd1-8fbc-92a5d8ef96a7"
        },
        "item": {
          "id": "90bbeede-cba7-477f-9b2b-f187ec2ce670",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ab760048-3b24-49bc-93ba-7630180a5910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758e2797-3cbc-49a0-b23c-6b7e1c92f300",
        "cursor": {
          "ref": "68d25874-08bc-4268-8c6e-a2a762414170",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2810cafa-f0ab-4ffe-8b35-1c1458b7886a"
        },
        "item": {
          "id": "758e2797-3cbc-49a0-b23c-6b7e1c92f300",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c33e9823-cba3-411a-82b2-77d191935e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f249e53a-cf1f-4cce-9a4c-ad748b97097e",
        "cursor": {
          "ref": "bae34dd1-64d3-4bab-a279-80e9a1aef71d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ccd5c7f3-674d-4be0-9203-be9a59dea733"
        },
        "item": {
          "id": "f249e53a-cf1f-4cce-9a4c-ad748b97097e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bbb80210-41f6-43c3-841d-49c7a2bdce93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85313899-ecb6-4a01-b696-4c758694bbfc",
        "cursor": {
          "ref": "f3bb90cb-a867-4144-8718-2cfa1f37b491",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8ba72671-1651-49c1-99bf-6ff496708bc7"
        },
        "item": {
          "id": "85313899-ecb6-4a01-b696-4c758694bbfc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a2725d48-38fe-4ae9-ab7e-95857d15ae35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c68dd7-009a-49d1-8f65-cec39c46ae2a",
        "cursor": {
          "ref": "0ff5112b-d9fa-4530-bfe9-45c0a7b04b1f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "64970ec0-4bd3-4483-b46f-fa10ad37c43a"
        },
        "item": {
          "id": "45c68dd7-009a-49d1-8f65-cec39c46ae2a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "41a309cb-bc8c-482a-8de1-7301498f9852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50a6cc3-7a5f-462d-ae7b-a61cd9a0ef93",
        "cursor": {
          "ref": "cc2bd5a2-1d4f-4096-bde2-d4ee2bc8dfde",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1eecc7a0-1e77-4a0b-b692-25e80de0dd1f"
        },
        "item": {
          "id": "c50a6cc3-7a5f-462d-ae7b-a61cd9a0ef93",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2c238e46-2372-4279-8d2a-2be433c16ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba94496a-89f6-46ad-abfc-6f1a24d5ba2e",
        "cursor": {
          "ref": "21b5785d-77e0-4dd4-933f-b22a78e38d00",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "39177b51-45e2-41f7-b3d4-a5421849ff48"
        },
        "item": {
          "id": "ba94496a-89f6-46ad-abfc-6f1a24d5ba2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c507afd7-4d86-4859-8035-61cbfd6cba5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9befc3-f932-4140-9a01-26349d6764dd",
        "cursor": {
          "ref": "0bf1b280-e926-41dd-98f3-8fdb6170dead",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d34052e7-5ee4-461f-bd55-83078c8233eb"
        },
        "item": {
          "id": "ea9befc3-f932-4140-9a01-26349d6764dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4609d932-5ca6-4593-ae9a-5576a52a61c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0582179d-f00e-4fed-a63b-638705f14f15",
        "cursor": {
          "ref": "5dbb1867-4ee1-47ee-810f-1d120b7a8e8d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0e4ecbda-70e7-4431-9d30-989efa7e4c7f"
        },
        "item": {
          "id": "0582179d-f00e-4fed-a63b-638705f14f15",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ae71bbb4-5f61-4b65-8087-c5a4ed56c728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3df6f76-5334-43c2-8e3c-69f361c815ae",
        "cursor": {
          "ref": "f5f0c498-aef1-4511-956d-132f2bc12d91",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "80f2693d-46eb-40fd-bd1c-a8bdf18a13d7"
        },
        "item": {
          "id": "e3df6f76-5334-43c2-8e3c-69f361c815ae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1ac20c6e-e373-4468-a117-3d0a2d0c1d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b3f4b6-7dbe-4c1b-9eb7-33124b0a48cc",
        "cursor": {
          "ref": "0c28b5f7-c30c-41f0-a8ae-78d7b393697d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "45584d8f-c790-45e9-bce9-2f67884e25e6"
        },
        "item": {
          "id": "36b3f4b6-7dbe-4c1b-9eb7-33124b0a48cc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8b1fd7bc-29b0-4665-98f5-a66cd5741b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2621d8-9cfb-42a6-afa2-ddff92966f81",
        "cursor": {
          "ref": "32c13c84-b2e9-4610-9cbe-47b372fb1e4f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b4ce16f7-4c24-4671-b05f-d2fc82bc92f0"
        },
        "item": {
          "id": "bf2621d8-9cfb-42a6-afa2-ddff92966f81",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cd185f8d-c57b-4efa-9614-d56b32e527de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d052b10-aebf-4a02-91ed-307b4ecd1963",
        "cursor": {
          "ref": "b970d13c-61ea-4f5f-a38c-2c58e70212f4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "380f2a8b-7275-4c7e-a286-93e3e418260c"
        },
        "item": {
          "id": "4d052b10-aebf-4a02-91ed-307b4ecd1963",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5261e48b-19da-4cdd-9d55-56af154418cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d15343c-375a-4d07-b4cb-9395a40a34e6",
        "cursor": {
          "ref": "e3702344-1d3c-4e07-8448-8b445ff8a080",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "21807c65-5720-4641-92a4-999bb3a67186"
        },
        "item": {
          "id": "8d15343c-375a-4d07-b4cb-9395a40a34e6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8eb37280-3b18-410a-af79-1df9e3e52eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d850f70c-dc7c-49c4-8b07-721084f598e0",
        "cursor": {
          "ref": "8c4d2bba-ff75-4f33-af75-d5ba8c466dc3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "47d338d3-fb3f-479f-bfe7-e87aa507214c"
        },
        "item": {
          "id": "d850f70c-dc7c-49c4-8b07-721084f598e0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7da1615c-3d5f-4624-bfa2-17b91d5cff12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761ca376-22ea-494f-98a9-4f2e1f3603c2",
        "cursor": {
          "ref": "14c7e809-7887-4bd9-aa87-9aab07729fb2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0bc05ccb-a991-490f-a44e-a4436c3a6ce4"
        },
        "item": {
          "id": "761ca376-22ea-494f-98a9-4f2e1f3603c2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37bdb0b7-531a-426e-aceb-c5cfe675cfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e34eb2-8180-4677-8b5b-1bc8e00786c5",
        "cursor": {
          "ref": "79b002af-2b16-4d45-be46-91eb6efdab14",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f90dcc0e-ab4c-4dcf-b23c-3823126c594d"
        },
        "item": {
          "id": "98e34eb2-8180-4677-8b5b-1bc8e00786c5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d11c0b72-e239-4c47-a185-2a0e4bae2adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e506d5c1-38a9-472d-9f76-675870fa1811",
        "cursor": {
          "ref": "131d3a54-852f-4546-b8d5-fa26ec835eb8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "55da13e6-351f-44a3-aecc-82836ebce91c"
        },
        "item": {
          "id": "e506d5c1-38a9-472d-9f76-675870fa1811",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5fae8c2b-1060-4371-9a1d-4f185e5dee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b78384-4d66-4343-8b98-f9223029e7b4",
        "cursor": {
          "ref": "63cc3303-d666-4128-9e51-f19b67ddee73",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ce789213-0efa-440d-ac8d-1c8a7e6d45f4"
        },
        "item": {
          "id": "80b78384-4d66-4343-8b98-f9223029e7b4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d550a48c-2a74-4d5c-8d6b-abc31571fc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2ef344-7c2b-46fb-b059-67c9980bfc34",
        "cursor": {
          "ref": "db110508-1080-43dc-87f5-4098bd154345",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5cebe062-d052-4813-9b86-c68d954aaa97"
        },
        "item": {
          "id": "7d2ef344-7c2b-46fb-b059-67c9980bfc34",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "84f68de1-56c1-42a7-95b3-b5205063318a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46854be1-fe04-4ff6-b21f-bc6ddaaf80df",
        "cursor": {
          "ref": "801678eb-3b91-4b18-aeed-913a6241e217",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c3f456a9-fd84-4dff-941e-38b4b1ecf87e"
        },
        "item": {
          "id": "46854be1-fe04-4ff6-b21f-bc6ddaaf80df",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "44317d9a-1ed7-45fc-bd68-6f4f3ccd749e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3567a0-4b4f-4e88-b174-baf45a5573fe",
        "cursor": {
          "ref": "fc19713d-30c4-4fef-96d9-da122ee29101",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "65751130-8fa3-42fe-ba6d-676dcd61b52c"
        },
        "item": {
          "id": "ab3567a0-4b4f-4e88-b174-baf45a5573fe",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ba3ffa11-02da-4da4-9a57-e6480b1a8487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab22a4c2-d21b-489c-ac03-d2e4974e0b48",
        "cursor": {
          "ref": "0584a2a6-10b4-46ff-b71e-303bfa8ccac5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f91f85b6-328e-4523-8a53-3d828f16be92"
        },
        "item": {
          "id": "ab22a4c2-d21b-489c-ac03-d2e4974e0b48",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4d96324a-6e62-4e8a-a6a3-562677110abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e496ea-6de9-4285-886c-f50fbe513240",
        "cursor": {
          "ref": "daf284e0-afcd-4e55-983a-3de8be49307c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "31f4549a-8643-48a6-86bb-d0735d179e66"
        },
        "item": {
          "id": "70e496ea-6de9-4285-886c-f50fbe513240",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "03343f6a-9b3f-4629-a494-ff0f4a8eb26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea628a4f-e0a1-4d26-8e9a-75d5ee0938b3",
        "cursor": {
          "ref": "013957b6-a71d-44a4-8dde-a8ee05d08a41",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f1140728-d904-4482-b5ae-6057be96e518"
        },
        "item": {
          "id": "ea628a4f-e0a1-4d26-8e9a-75d5ee0938b3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8edf9b5e-56db-4c6e-8723-1deed263c4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1da4e40-a016-4c2e-a69f-44bdfc4f723f",
        "cursor": {
          "ref": "d33fe8cf-3254-4b9b-9b20-0e3f1ab1d63e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3c5f481b-8908-488d-9242-f14b72d80274"
        },
        "item": {
          "id": "d1da4e40-a016-4c2e-a69f-44bdfc4f723f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5e069f2c-aa6e-4991-9abe-37b81e5adbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dc13b0-27e6-41fb-90cb-62fd03839501",
        "cursor": {
          "ref": "748a7af5-c18a-4eb0-86de-a65158043054",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "93c48e02-ee87-4100-94de-0005fcc2b973"
        },
        "item": {
          "id": "17dc13b0-27e6-41fb-90cb-62fd03839501",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2074edf2-5a62-4cc6-a340-98ad91111372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa5be06-841d-40ba-9ec5-cd5a73ebd577",
        "cursor": {
          "ref": "cdd10059-ea25-4991-b0dd-af2cbe726f03",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6a022c57-e349-4ed8-b3c7-1bc901e2973b"
        },
        "item": {
          "id": "1aa5be06-841d-40ba-9ec5-cd5a73ebd577",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "048c7654-c96b-4b26-bc94-bb188b661a57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e795e43-4780-43ad-95c7-75576854ca9f",
        "cursor": {
          "ref": "ab5de8a1-8eb9-4774-acfa-c448ab3fe84d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "48245a05-a7fd-4e8d-be39-c9ec5d3f1310"
        },
        "item": {
          "id": "0e795e43-4780-43ad-95c7-75576854ca9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fa63b489-3206-4dcc-8a36-32c3a50b88d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ebee47-bb46-4c9a-8a28-be02032d06b0",
        "cursor": {
          "ref": "1f5dbb6a-1c3a-4c7d-a677-4046d5303676",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fea43cd1-6f8f-41f4-a9b6-29e4ba8cc622"
        },
        "item": {
          "id": "21ebee47-bb46-4c9a-8a28-be02032d06b0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "20e3dca8-3dc0-4c1c-9932-7afb1cb975ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8389756c-b4be-4af6-815e-294d8d40d993",
        "cursor": {
          "ref": "dc82e072-1d30-45b3-9218-26d103ad1ca8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1107edd3-f9c9-4ce6-8f41-3745fc9af052"
        },
        "item": {
          "id": "8389756c-b4be-4af6-815e-294d8d40d993",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a229eac9-e3e5-4d16-aa08-6c0be40e4711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b84d98-4ef5-4c73-a2eb-59956c12fdb0",
        "cursor": {
          "ref": "19db748a-34dd-4cba-847c-21d81544f579",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4ba1bf60-b22b-46fd-be2f-a51e215d9d5c"
        },
        "item": {
          "id": "c9b84d98-4ef5-4c73-a2eb-59956c12fdb0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4c6fdb5e-d07d-4c5c-b9b2-b92fbf5c5b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627e5fea-8bc1-474f-81ba-e87e0d1984f2",
        "cursor": {
          "ref": "ae825ba6-db9b-48b0-ae62-04d63976fb79",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ec7658f9-3b53-4835-8977-a08c366f6f4a"
        },
        "item": {
          "id": "627e5fea-8bc1-474f-81ba-e87e0d1984f2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "df092bb5-e739-4b4e-b99e-4b13381ec777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae77125-0010-4a3b-b3af-ceb5d3138fb3",
        "cursor": {
          "ref": "3545ff6d-cec9-47c1-84ee-b3d1fbd8ab6c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6e90fb00-cb8b-4c40-a881-ef438235c200"
        },
        "item": {
          "id": "3ae77125-0010-4a3b-b3af-ceb5d3138fb3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7aae0746-b071-4d33-95c6-e6213fc7215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54599b34-8dcd-4913-bc91-e786574cf5ef",
        "cursor": {
          "ref": "0f74295a-dfa9-4f08-8c3e-4a6faa5b3ccf",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "846b905d-4371-4425-a409-ae542b2808f0"
        },
        "item": {
          "id": "54599b34-8dcd-4913-bc91-e786574cf5ef",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c1d4e208-7bfc-4fdb-937e-61eb10004300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174abd2f-5e4e-43bb-b63f-66fa8944f794",
        "cursor": {
          "ref": "467a3223-1db4-4288-8064-1737d23b5c5b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8ffc5e63-bb93-4735-9f5f-58b177ff6fe6"
        },
        "item": {
          "id": "174abd2f-5e4e-43bb-b63f-66fa8944f794",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a98c880a-8785-4946-9dd3-a53982c9288e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d95751-74b4-45d1-b1c2-d4f5fd20939c",
        "cursor": {
          "ref": "e58d6219-03e7-41db-bf88-2ac5176929c3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e5c8ab9-3618-4b5b-a0c0-582d2968dc52"
        },
        "item": {
          "id": "80d95751-74b4-45d1-b1c2-d4f5fd20939c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "400cb38d-cf3a-4878-9dd4-77f7ffd9bf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92de585d-7f6b-4411-8851-e67c7c7da34d",
        "cursor": {
          "ref": "b38aa8f2-c4c0-42e5-a427-a3bc88c16889",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bcb1e03d-6065-47cb-bced-db0288d52205"
        },
        "item": {
          "id": "92de585d-7f6b-4411-8851-e67c7c7da34d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5ee61a16-2449-4c20-93f8-4df8360b83d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e622ff-4858-4399-a7a8-c1f1b9102e21",
        "cursor": {
          "ref": "019a3ebd-4bb0-42c3-a8bc-ebffa5be2885",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "026890b6-6d07-45bb-be57-c75bb899bce2"
        },
        "item": {
          "id": "82e622ff-4858-4399-a7a8-c1f1b9102e21",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8571c90f-112c-436d-85d9-00113c334a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b1d6f7-d772-428c-8b86-43a2ae783a0f",
        "cursor": {
          "ref": "e1d72273-7bd8-40aa-be40-5e6286c353a5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8b8d4977-8b8b-494c-b2ec-9691d1553737"
        },
        "item": {
          "id": "e5b1d6f7-d772-428c-8b86-43a2ae783a0f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "93a06495-f5d0-4467-b2ab-17c7f82ec3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40494ac0-e17a-43dc-a64a-3aa047f3f621",
        "cursor": {
          "ref": "bc8f4b15-9a8b-42cc-853d-22e6ed826436",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "089ff6f1-40a7-48c4-b97f-3c7d1b29870c"
        },
        "item": {
          "id": "40494ac0-e17a-43dc-a64a-3aa047f3f621",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4dec6ad9-1b71-43d1-8053-7de42703607a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca211467-7bc3-426e-b545-b1ae806aa19b",
        "cursor": {
          "ref": "5becb135-4d2a-4111-ab1f-36b2031cb946",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0564285f-6206-49da-b51b-5275e32d95e3"
        },
        "item": {
          "id": "ca211467-7bc3-426e-b545-b1ae806aa19b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "42b86b20-08dd-4d23-9abb-cc2635fd65df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342fcf79-f56b-4663-8866-fd91938626d0",
        "cursor": {
          "ref": "c829a1f4-0289-43bb-9b12-e4fd61c7107d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "489e709a-8d5b-4057-96ec-3f3eb55ee545"
        },
        "item": {
          "id": "342fcf79-f56b-4663-8866-fd91938626d0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4e604caf-bd4b-41bf-a07b-320721156765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df2ba3a-3cf2-447d-a37f-5462c475cf31",
        "cursor": {
          "ref": "72cf8de4-c321-4d0a-acee-0ca1618e3977",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d4ad661d-85be-4094-9ec1-72133fa97c28"
        },
        "item": {
          "id": "8df2ba3a-3cf2-447d-a37f-5462c475cf31",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a68c511d-2e01-4323-80e8-64fc6a5ef91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a88eb28-56e8-4e11-aae3-5ab970386fc6",
        "cursor": {
          "ref": "6a8d7075-e3f1-460a-9944-6c157208fff8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "da273235-06af-4127-89b9-4daa3aa49fff"
        },
        "item": {
          "id": "8a88eb28-56e8-4e11-aae3-5ab970386fc6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2d5cc5c8-9cd3-4254-a5d8-9811f1e352e3",
          "status": "OK",
          "code": 200,
          "responseTime": 141,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "3ae3b73f-c65a-4b58-9557-019d3a5488bf",
        "cursor": {
          "ref": "763db734-7f29-494f-89c8-565a5417df17",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a1efe62f-5acd-46a9-9ed3-8cb1ab51ea6d"
        },
        "item": {
          "id": "3ae3b73f-c65a-4b58-9557-019d3a5488bf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f625f605-834f-4638-86cc-1165229daa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59356e3a-0424-404f-a98c-594f42353d26",
        "cursor": {
          "ref": "3bc51d8d-5dd7-409b-bedd-23d13214b943",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4b5ae417-5c13-438c-8c64-4abed257fe69"
        },
        "item": {
          "id": "59356e3a-0424-404f-a98c-594f42353d26",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0e70c443-c727-40ed-a8b0-fa6adf3c69b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad66d26-bb5a-49d0-87fd-32b3831144d5",
        "cursor": {
          "ref": "2f0fc5e2-b2c8-4c2f-9fe4-d1a2b36ebbae",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "22538d3b-12a5-41d6-8129-13da34e4d546"
        },
        "item": {
          "id": "5ad66d26-bb5a-49d0-87fd-32b3831144d5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "64969e2e-d643-40d6-a3ea-732928964b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e35402-427b-483a-90dd-5a5b90dce60f",
        "cursor": {
          "ref": "f409dcb3-e405-4e17-ab5b-ef799044ef9e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c17a95bb-7ac3-4d7c-9bee-868a5c2525ba"
        },
        "item": {
          "id": "e5e35402-427b-483a-90dd-5a5b90dce60f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3c85b352-6c9d-440d-a84c-36437f6642d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e571976c-da69-41bc-ac18-b441a2a68bb4",
        "cursor": {
          "ref": "4406a0cd-bd55-4403-99e1-ead2f11b74d5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "782cceae-c5e1-4716-b24e-eef73db452b7"
        },
        "item": {
          "id": "e571976c-da69-41bc-ac18-b441a2a68bb4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "420324af-004f-46db-8226-6bbb0e000f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876ca4ba-582e-4c9d-bbc8-4e034ab1a3be",
        "cursor": {
          "ref": "e7d68229-033a-4632-bc01-02a8e12828db",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "798e56dd-e05b-4116-8b19-87174be5497e"
        },
        "item": {
          "id": "876ca4ba-582e-4c9d-bbc8-4e034ab1a3be",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b3a4a275-b5c0-42a2-992a-a97ce2aa1625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cc00e3-836d-4a9b-accf-f30d4c2dc644",
        "cursor": {
          "ref": "ef7f0b58-f077-45e5-a8ea-3e9412b98335",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "68bf5769-d36a-445e-83fd-92829ef88b4f"
        },
        "item": {
          "id": "16cc00e3-836d-4a9b-accf-f30d4c2dc644",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "26b6c1c3-0065-4ecc-b526-b07bfc2ee317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b17d588-5b2d-490a-9d50-b7517b1c6b07",
        "cursor": {
          "ref": "52c35d09-d88b-4cbb-b41c-e6df3ef3e7b3",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a864b5ef-a074-4967-8106-d351643d992d"
        },
        "item": {
          "id": "5b17d588-5b2d-490a-9d50-b7517b1c6b07",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "034e9aa0-166d-4905-b934-45c69150f03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94195872-7589-4b2a-bb0d-41c1efc98a95",
        "cursor": {
          "ref": "bd454b1d-6f00-4502-b1fa-370397aeab20",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "44feb0e4-15b1-4f1b-a5ea-e6689ad73e16"
        },
        "item": {
          "id": "94195872-7589-4b2a-bb0d-41c1efc98a95",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d82e1812-e633-4874-bff4-48ae02fa8c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d71af8-bb67-4658-87c5-f9219584f1cf",
        "cursor": {
          "ref": "274e0607-c48f-40d1-a788-43d0d192f7e8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d1e4c771-5a69-45f4-81e0-9f6d73622753"
        },
        "item": {
          "id": "54d71af8-bb67-4658-87c5-f9219584f1cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "84be7762-5b6f-4430-ae3b-0daf4df5cb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dd2f7c-2258-40d8-b7a8-5f377aa88b8a",
        "cursor": {
          "ref": "d7683f11-43d5-4d79-8372-9c8aa97e107a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3689f0f4-1a29-484f-8b62-aece472cfe22"
        },
        "item": {
          "id": "f7dd2f7c-2258-40d8-b7a8-5f377aa88b8a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ef47ff6-0d40-40f6-a70b-c85e06a37603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3afa18-15e2-4382-a5e5-55608684bdec",
        "cursor": {
          "ref": "7a9fe994-abc6-4cf2-ba54-a0f75883cc42",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c7206636-6adb-4ce0-9218-b330ea2fe663"
        },
        "item": {
          "id": "be3afa18-15e2-4382-a5e5-55608684bdec",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "87d6aedd-9bb1-4728-98f6-1815b8d6d24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273c464f-6232-4716-8851-bc287121a536",
        "cursor": {
          "ref": "619e38cb-b8eb-4c44-9692-692a78019750",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "62c5f036-b228-400c-a010-74e1027d3775"
        },
        "item": {
          "id": "273c464f-6232-4716-8851-bc287121a536",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d5f059ab-1a7f-4d17-b3ff-f58006b2e40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad459c0e-56e2-4d41-a5fc-7b664b927297",
        "cursor": {
          "ref": "07e3d47b-8d3c-4e39-8ac0-9bc7e93a3347",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "599f33d6-5023-429f-af76-fd8b1b555c87"
        },
        "item": {
          "id": "ad459c0e-56e2-4d41-a5fc-7b664b927297",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c3b7f8fc-f40e-4de3-8540-ebdc846df9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988899b2-db09-4bd6-b1e2-30ec71b650b6",
        "cursor": {
          "ref": "16eacf27-51d3-4fa0-97c9-2c056c56eb0c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f084b17f-d966-4941-9210-77919cc8d2d9"
        },
        "item": {
          "id": "988899b2-db09-4bd6-b1e2-30ec71b650b6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4d897669-1e92-4219-bc88-d89502afe9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2598d11d-14c2-4dcc-ab25-2dda3f17fbf5",
        "cursor": {
          "ref": "e879449e-c9bb-4273-8713-9e37b4f72561",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "53cde6f3-41d1-48e7-a558-20e82097531e"
        },
        "item": {
          "id": "2598d11d-14c2-4dcc-ab25-2dda3f17fbf5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3c3e9ac2-3990-4c93-b613-43cd3335c370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3903387-4805-4ef5-aed3-84fa2673065d",
        "cursor": {
          "ref": "cddc5da2-95a7-40d5-9462-f49a00f3aa3a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e7a65b4b-5aa5-49ad-813a-8f3c4b727c0a"
        },
        "item": {
          "id": "a3903387-4805-4ef5-aed3-84fa2673065d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a7656a1c-ec39-4521-be79-52127bdce79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b38148-dd82-46c7-9fc0-6a39a475154b",
        "cursor": {
          "ref": "c82817db-fe2a-4673-a0f8-c795f33210c9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6cebdbff-99df-42d6-a79d-59922dde22f5"
        },
        "item": {
          "id": "60b38148-dd82-46c7-9fc0-6a39a475154b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cc2b25a0-dac3-4f44-839c-639c41e11048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b082322-4499-4faa-babc-6a8519190c05",
        "cursor": {
          "ref": "dd47d785-d5bf-443b-b419-1e0a4ce10478",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bd311156-ad64-4f8e-92c7-bc9f64bf36fc"
        },
        "item": {
          "id": "8b082322-4499-4faa-babc-6a8519190c05",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1aa24c89-4020-4bfb-8217-ac5a6ba5ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5555bf-ed47-48de-9c21-8a3c859a738e",
        "cursor": {
          "ref": "2867f9e9-9c38-4294-9ef8-86d07f736427",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2ddfd75c-3a7e-472a-9c58-b5457c059c3a"
        },
        "item": {
          "id": "5b5555bf-ed47-48de-9c21-8a3c859a738e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "79c92603-ef5e-43d5-95f4-5833a226fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fd875a-a839-4ada-8728-ba9ed89fa70b",
        "cursor": {
          "ref": "6236bdbd-971b-4f6c-8d7e-20233c421c20",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4bd5099f-a673-4f3c-9212-27a64723b4cd"
        },
        "item": {
          "id": "c7fd875a-a839-4ada-8728-ba9ed89fa70b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d7e38a7f-415e-4980-879c-a1587a6600bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ebd652-11f8-4eec-a45f-c8865dc227ff",
        "cursor": {
          "ref": "9ed0647a-df90-4ad4-a07a-5a35ba666cab",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a0bbdbec-96e6-40eb-a714-d7346b47e2b7"
        },
        "item": {
          "id": "d1ebd652-11f8-4eec-a45f-c8865dc227ff",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6ee38e55-5e70-4dc7-8bfe-bd2d12f3f90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1772f1cc-5a72-414e-ab2d-6b446a553204",
        "cursor": {
          "ref": "4912d743-7ea5-4418-a231-e73ab6a7ef8c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6b713b63-cf54-4e1d-9121-17e51e232771"
        },
        "item": {
          "id": "1772f1cc-5a72-414e-ab2d-6b446a553204",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2e0c2be2-5f3d-4fa7-aef8-753477912c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c13fb0-e8e5-4026-a9af-919d10ce9917",
        "cursor": {
          "ref": "a14d4436-142e-4571-9c45-9eabefe79fa6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9658f1fe-f3e2-47a6-a373-f7866f732269"
        },
        "item": {
          "id": "b9c13fb0-e8e5-4026-a9af-919d10ce9917",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "27cf748b-8acf-4fb9-9d3c-30f1033fbc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5004525b-96bf-4b1e-88db-51ae8ce1603a",
        "cursor": {
          "ref": "11d9c4fb-47f9-4807-8cd0-e3bb49c329db",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "91aee4b7-4e45-4e96-83b5-f1d7814e2b15"
        },
        "item": {
          "id": "5004525b-96bf-4b1e-88db-51ae8ce1603a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ff3812e1-431a-478f-8355-107f950c8099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557a62c5-dd30-4b7e-b85f-d9f6d0663a72",
        "cursor": {
          "ref": "5198868b-78e5-4d28-9a70-5e594120550b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d4afcd4e-84cb-426f-a8ce-d25024d2543c"
        },
        "item": {
          "id": "557a62c5-dd30-4b7e-b85f-d9f6d0663a72",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "79cbf4df-108d-4f74-b9ef-3c2973c097ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea6e10b-78c7-4b0a-bbbe-99b23ed82093",
        "cursor": {
          "ref": "8f9ab241-1de6-4ac5-918f-e0823a4470d1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "29b0a0ee-558d-47ed-8812-e7e49e023af3"
        },
        "item": {
          "id": "3ea6e10b-78c7-4b0a-bbbe-99b23ed82093",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e4fb986f-bcd7-4397-b1e7-81897846419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63061b0c-990d-4e9f-b503-dab11ae2203e",
        "cursor": {
          "ref": "9535793f-1e37-459a-b32a-cfb3f0c013b9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d0ba71fd-f124-44f9-a658-0443d33a6ca6"
        },
        "item": {
          "id": "63061b0c-990d-4e9f-b503-dab11ae2203e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9d3df40b-2033-413f-ad32-a664ad3ba5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3815066f-7ecb-46fc-8647-68a394c48e0c",
        "cursor": {
          "ref": "eb02db13-0120-4233-959e-cc57dbc527bb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a5703802-8841-4434-afdd-5e06598c3546"
        },
        "item": {
          "id": "3815066f-7ecb-46fc-8647-68a394c48e0c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d61bfe32-1da5-4073-bb64-c344be14ce3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e076ecd-a890-47f9-96b8-13b7881939dc",
        "cursor": {
          "ref": "e08acb0f-94b1-4943-a681-2ae694cde393",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "70503471-1656-4d44-aa95-e93b70e406f6"
        },
        "item": {
          "id": "7e076ecd-a890-47f9-96b8-13b7881939dc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "536f8907-c84c-4d94-8a6d-0ed808e4dda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c257847-57dd-4352-86b2-47a3b700d6dd",
        "cursor": {
          "ref": "572120c7-8a9c-4953-9d96-6233a4c8d3fb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0314efe4-8df3-4d64-be3f-b5be379fe910"
        },
        "item": {
          "id": "4c257847-57dd-4352-86b2-47a3b700d6dd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "92c08770-f356-4020-bba4-3bff5fb36321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4ccc89-8962-45a8-bcdd-93948aab6acb",
        "cursor": {
          "ref": "90268b84-9a2e-4fd8-9e3a-52482360f4d8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "01209432-51a5-457a-96c4-b74c6ebf2d90"
        },
        "item": {
          "id": "ee4ccc89-8962-45a8-bcdd-93948aab6acb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "115df16f-82ce-4375-891c-0d28fad08c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c5c9e8-242a-444f-b02b-0ba0a91fa468",
        "cursor": {
          "ref": "2e552c1c-31d4-4ed6-9052-922ea033e7b6",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c68a84b7-7d07-4209-9bf1-0d8300ea1968"
        },
        "item": {
          "id": "c4c5c9e8-242a-444f-b02b-0ba0a91fa468",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9c8a0425-36e4-4b3b-9e44-4e0e7ad13133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d16fe9-cd3c-45d7-a59c-11f559aa3afe",
        "cursor": {
          "ref": "d7609b52-8d36-47e8-8705-cd89b464d3cd",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4eaa020f-caf2-4c8a-bc1b-2617c99e71e5"
        },
        "item": {
          "id": "c0d16fe9-cd3c-45d7-a59c-11f559aa3afe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3384f487-169a-4475-8660-482dbb640f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2f7850-de37-45dc-89e1-513a535de184",
        "cursor": {
          "ref": "65d1b72a-9686-4598-979e-5e668038ae61",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0ec2738d-929b-40ff-bad4-6589ea5b5101"
        },
        "item": {
          "id": "ad2f7850-de37-45dc-89e1-513a535de184",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "34cbac6f-b0dd-4942-b673-704356ec6a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c57fc2-d98b-4a5b-a33c-6a4cf403a484",
        "cursor": {
          "ref": "f47c4184-79d6-4589-a3b9-e8736869ac97",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8e4e14e2-fcc0-4622-97e2-6b237747a956"
        },
        "item": {
          "id": "97c57fc2-d98b-4a5b-a33c-6a4cf403a484",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0d106e72-860b-4a71-9a31-e28b3d83dfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cb42c8-4f76-4e08-a7fa-bcb301e52680",
        "cursor": {
          "ref": "6fa8f7f1-a813-432a-b71c-c12a336309e5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ff91c8fa-13b0-4c60-8beb-fb490a70e329"
        },
        "item": {
          "id": "b2cb42c8-4f76-4e08-a7fa-bcb301e52680",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "64480a5c-fd34-4c0f-b78e-694a088dbfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f5b04a-41be-40eb-8eee-6102d6cbc27a",
        "cursor": {
          "ref": "455c9ea8-f0e6-40c9-97d1-069604b71d70",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7050c3d7-350b-4f87-b6cf-921fdc7897fb"
        },
        "item": {
          "id": "d8f5b04a-41be-40eb-8eee-6102d6cbc27a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "66b83561-c0f5-4e7b-8242-1c64620cff0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2338e11-9d6d-48ca-b137-29468866dea8",
        "cursor": {
          "ref": "4b3f8665-f07a-4459-971e-f8663ff63177",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd484d5c-dd91-4731-954f-ff95a384f4fe"
        },
        "item": {
          "id": "c2338e11-9d6d-48ca-b137-29468866dea8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "674030ae-6e59-4512-b5d2-196a11d0f309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a145f4c-3169-41c8-806b-9d9c18a6d746",
        "cursor": {
          "ref": "1c40d3e5-1624-4c94-a259-436ae2f78fca",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7682df81-3322-403e-9332-56554924fa06"
        },
        "item": {
          "id": "4a145f4c-3169-41c8-806b-9d9c18a6d746",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "baf42abb-1fc9-44f0-b0d7-1f7ce191dc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd4705-d066-437c-b46d-253889219724",
        "cursor": {
          "ref": "7cd50148-0b39-452f-b2ba-91d7afef4b76",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bf9952a8-ff46-4543-b149-2bd5a9b0b1ea"
        },
        "item": {
          "id": "91dd4705-d066-437c-b46d-253889219724",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "657ac47b-04d3-40cc-9af1-1f5187e584aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02f8dc7-36c2-4676-a657-50c08e9e6ca5",
        "cursor": {
          "ref": "bc247f95-920b-424e-91ec-1f80c4eedcaf",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4ac8ad6d-13c2-435c-9b8a-8dce2096f37a"
        },
        "item": {
          "id": "d02f8dc7-36c2-4676-a657-50c08e9e6ca5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c6128f20-4ae5-464a-8afa-66b4d3324692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0425b9ea-9c34-4de1-ae34-fae2334e049d",
        "cursor": {
          "ref": "23a4f601-24b6-4f61-924b-17cceb0ece6d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ffcb2b27-60c2-44ba-be87-b641b3d86b92"
        },
        "item": {
          "id": "0425b9ea-9c34-4de1-ae34-fae2334e049d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ecbfca3f-56d2-4d2b-9e5f-33339e57e0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d11078-c92a-41bd-954e-83df2536e3ed",
        "cursor": {
          "ref": "a12992cd-ce41-486d-921b-ac0259a003fd",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "420ef09a-5641-4686-b246-ea37ab33ba5a"
        },
        "item": {
          "id": "d1d11078-c92a-41bd-954e-83df2536e3ed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "042d088b-76a4-4fb6-9c05-432716cf53c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33482f00-674a-4bac-8aa9-f0d33d43f5f3",
        "cursor": {
          "ref": "ab571c5b-6d09-41d8-8dab-77925b5b5951",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2dc27163-5b2b-46b7-850d-32ab35c2c919"
        },
        "item": {
          "id": "33482f00-674a-4bac-8aa9-f0d33d43f5f3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "72017813-99bb-4b7e-913a-dbf6c37e60b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e15c808-9596-4f20-b764-c82daa7f1bdd",
        "cursor": {
          "ref": "5627361d-bdf7-466a-8abb-510f1f6bb46b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c9e99d26-579f-4ade-bdd6-cb689e8f4051"
        },
        "item": {
          "id": "2e15c808-9596-4f20-b764-c82daa7f1bdd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a4d0fb6-8350-49fc-897b-f41fc4e840c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e44655-14ad-4077-93cf-bcefc4906ee8",
        "cursor": {
          "ref": "646ba257-a930-402e-993d-5cee1ca7e29f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6c1517c2-4c07-4920-bfd9-6d3f4aa81f5a"
        },
        "item": {
          "id": "46e44655-14ad-4077-93cf-bcefc4906ee8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5e53deaf-ce18-49c5-b391-c514c1173450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab068c4b-84a4-4e90-b421-b3a629210928",
        "cursor": {
          "ref": "694c6f60-5e6b-4277-b870-15df888f2a34",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ca93d7f4-2213-4669-99dd-0ea1ac55c65e"
        },
        "item": {
          "id": "ab068c4b-84a4-4e90-b421-b3a629210928",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1f9a26a6-4e9f-44cc-82e6-7454f491a4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c5eacb-9030-4e25-8dee-476570f33c1d",
        "cursor": {
          "ref": "eb00833d-8670-4518-99ec-d1f7f88c1b8d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "49617228-b7e4-4bfa-abc1-64552a2e9b42"
        },
        "item": {
          "id": "e7c5eacb-9030-4e25-8dee-476570f33c1d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aa47721b-dedd-41a4-9ef0-bb1e2d22f00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccee1af-e216-44f8-a596-654ea2ac88a8",
        "cursor": {
          "ref": "483bde43-1709-457c-98d0-653bc4c71286",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ac5cf93-cba1-4f0e-9eef-7a0bab80a0e9"
        },
        "item": {
          "id": "1ccee1af-e216-44f8-a596-654ea2ac88a8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8dfbc004-89e8-4933-8f69-6361079318a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e960325-e513-4254-af19-e86a865ef565",
        "cursor": {
          "ref": "4a400caa-1cad-4214-97fe-e46a8fbe42ba",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ecc96137-9b1c-4ba1-8b8b-a034552e0f66"
        },
        "item": {
          "id": "2e960325-e513-4254-af19-e86a865ef565",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f59dd191-7997-48fb-9042-ea54c1f6cb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9859325-b60a-4daf-83a6-338a88386ab1",
        "cursor": {
          "ref": "9ffa211e-94c2-429a-ab46-1fbd580ab40b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f2585a54-c6f0-493c-9a49-044859a9a585"
        },
        "item": {
          "id": "f9859325-b60a-4daf-83a6-338a88386ab1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8add34fe-3ba4-4a08-9a82-4b2947255242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3a6edc-b5bd-4f65-81c2-0f1f0e1fdcf8",
        "cursor": {
          "ref": "27210c9a-5aca-413e-9bbf-65ada6fb965f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c35a996d-685d-4c64-b9f4-ed0af96b2a08"
        },
        "item": {
          "id": "1c3a6edc-b5bd-4f65-81c2-0f1f0e1fdcf8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "03af8dbd-4394-47e5-986a-9f1de8b3a546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0645fa7-c215-41d9-920f-14228d5150d2",
        "cursor": {
          "ref": "74da43c9-f47b-4a92-9988-cd83ba5d563d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3dda12b1-502a-4048-917e-addd74cac991"
        },
        "item": {
          "id": "e0645fa7-c215-41d9-920f-14228d5150d2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "87a47138-739e-4fe7-9c02-2106db8fcf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d881e912-2a3a-415e-b193-484ec1242aeb",
        "cursor": {
          "ref": "33469914-8172-4b69-8a51-2b6849736254",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "78fc5f6c-3702-4ff1-a2ef-f1a6cd046073"
        },
        "item": {
          "id": "d881e912-2a3a-415e-b193-484ec1242aeb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4dbc2b4b-b943-4395-a318-da9256fd6fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e680cc-e204-4b00-893a-7afb1d22e864",
        "cursor": {
          "ref": "9f650f39-c299-48bd-aeab-62fefa9109b9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "62137ad0-e869-4ef2-8bd2-a572c8d2d615"
        },
        "item": {
          "id": "e6e680cc-e204-4b00-893a-7afb1d22e864",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9b2b47a2-c2f0-476d-b5e6-6ed912b6f543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a537b9f5-1b97-4ebf-a8b6-304d69acaa33",
        "cursor": {
          "ref": "17358de3-5e41-4cb2-bc2d-08827f0044cb",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dfb42132-b823-4634-b866-acbf872df16f"
        },
        "item": {
          "id": "a537b9f5-1b97-4ebf-a8b6-304d69acaa33",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "53f7e6ce-e9b2-4c86-ad40-6f78ec59ffec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4223d3-f60c-4763-bd1c-772ddd4b4216",
        "cursor": {
          "ref": "408bcdc2-4139-49bc-af06-721185c94654",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1f4dbf46-8b0f-43c9-80f0-99d31f1ce2ba"
        },
        "item": {
          "id": "6a4223d3-f60c-4763-bd1c-772ddd4b4216",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a1c17c49-d943-496a-88bb-0479d928b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b27884c-115c-425e-b660-fc2e69db8454",
        "cursor": {
          "ref": "9595e33c-942f-4272-863c-f3fb9afda5b6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4ff40595-fd00-4ab0-abe7-417a20652900"
        },
        "item": {
          "id": "7b27884c-115c-425e-b660-fc2e69db8454",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f7831e93-2852-4958-9a23-397972e5a04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fea3f9-7c74-4bf7-91cb-b89fa06b71a3",
        "cursor": {
          "ref": "c155a1a4-57f5-498f-b64b-9cd517c52db5",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "810a500f-1baa-4b1b-af74-e08394ad3f48"
        },
        "item": {
          "id": "f8fea3f9-7c74-4bf7-91cb-b89fa06b71a3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cc3b73da-00fe-408a-86df-21cd049b82ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7d5ab3-e012-413b-ad99-681e129a92ff",
        "cursor": {
          "ref": "4bfc4cbf-617c-4e1c-a9bd-0f786acd12e9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ba571e64-966d-4c58-be3a-d01b60b8b5f1"
        },
        "item": {
          "id": "de7d5ab3-e012-413b-ad99-681e129a92ff",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2912c4ed-958d-48e7-b0cc-41af53fc0f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652f40ee-b61d-4981-869f-f99e861b67d6",
        "cursor": {
          "ref": "99ae735b-85ab-4dd6-8731-de572a730556",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "918103bb-f033-46d6-90ac-8c96809fed8a"
        },
        "item": {
          "id": "652f40ee-b61d-4981-869f-f99e861b67d6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d6246274-5afd-47e0-ac10-5380f6e6f1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a91d221-e449-4b8d-bcd5-c60434db3358",
        "cursor": {
          "ref": "7db0b4cb-7179-4952-b824-21bd3a682964",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cc54562d-3b41-4c09-9959-68097e094e2f"
        },
        "item": {
          "id": "5a91d221-e449-4b8d-bcd5-c60434db3358",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "320f8664-722c-4d45-a99f-c4d7c354d442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751d76f9-48dd-4d3d-93d8-f91f723f7844",
        "cursor": {
          "ref": "efcb3277-1beb-4050-b81d-e556a2a58648",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1570043b-e271-47ce-9983-c2b8866d8303"
        },
        "item": {
          "id": "751d76f9-48dd-4d3d-93d8-f91f723f7844",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f72a4ed4-ffcb-477b-8280-aa2d54c9f30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68e9097-8a5e-45ce-a884-4164bebb3716",
        "cursor": {
          "ref": "7b62596e-b596-4dc0-9cee-78d17c356767",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3650b4e0-1190-4f07-a02c-a6ff954be474"
        },
        "item": {
          "id": "b68e9097-8a5e-45ce-a884-4164bebb3716",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3aaf2460-4e2c-469b-b727-a53bfa8c4d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10794553-091d-47c4-a671-df895225817f",
        "cursor": {
          "ref": "c11dbbd9-6cfd-4c73-ad55-8c6fbf9242b5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e0adf67a-823c-4741-bc8c-efb3567c5af9"
        },
        "item": {
          "id": "10794553-091d-47c4-a671-df895225817f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "da15c3f9-b139-492b-937a-65f54e12d75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1698b2-580f-4b24-be91-431fd3ff6559",
        "cursor": {
          "ref": "df00afd7-0220-48af-b013-68f30c564299",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a648dbb2-f276-42d6-8f55-3daf0c612264"
        },
        "item": {
          "id": "ac1698b2-580f-4b24-be91-431fd3ff6559",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eb19984e-d77b-4472-a24d-bc16cd6e92e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfdeef8-a510-4f95-bb26-81ffdc3bfb0f",
        "cursor": {
          "ref": "6733aea0-1e79-4423-b452-83d2e370c33e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "af9ed6e8-04f4-4a20-8e18-96e59580b5e1"
        },
        "item": {
          "id": "0dfdeef8-a510-4f95-bb26-81ffdc3bfb0f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9618fac2-dceb-4b9d-9768-e3f8a8c18fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a230c7-d2a8-42a6-b0d8-ad5ac11d5b3b",
        "cursor": {
          "ref": "0e4e6ea5-a11f-412f-8a6e-c6e7c4c1fc1b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5670f91d-79fa-415f-ac6f-2035fa539841"
        },
        "item": {
          "id": "35a230c7-d2a8-42a6-b0d8-ad5ac11d5b3b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e6edb490-be3f-46db-b159-0a11e1dbd0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22b3d82-da79-4a20-a456-06b8e5335a4b",
        "cursor": {
          "ref": "1bf91222-a5f5-4b8a-b17a-bf1f6bd96632",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "525a7fe9-40e1-4515-aab6-30bd194723fb"
        },
        "item": {
          "id": "c22b3d82-da79-4a20-a456-06b8e5335a4b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "81488100-7fe0-4403-b81c-4a780d74dc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50c17a8-1d19-4815-b3d7-da59c9162cd8",
        "cursor": {
          "ref": "b3a90549-9b25-4311-b04b-4517fd2b90c5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0e7bcb59-fac4-4d21-8ba0-81e751941cac"
        },
        "item": {
          "id": "b50c17a8-1d19-4815-b3d7-da59c9162cd8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b306e482-2166-45e7-b39e-b754da62f97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a626a037-995a-4d50-ba64-da583aae4943",
        "cursor": {
          "ref": "b5906322-61f8-4bbc-be40-70b2ad242e44",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0778f1cf-ce61-4af6-9b28-fd5bd9355b93"
        },
        "item": {
          "id": "a626a037-995a-4d50-ba64-da583aae4943",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "284b62ee-4988-4ee1-ab55-36b6e49806e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6a8fb0-fe1a-4a81-acb4-fe2a4ae824a9",
        "cursor": {
          "ref": "07b1018c-6b5b-4f4c-8f53-60025d46bbf0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "38005d1d-dea4-44db-b471-29981f54d296"
        },
        "item": {
          "id": "4b6a8fb0-fe1a-4a81-acb4-fe2a4ae824a9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8646beb1-8afb-46e6-84b6-c042f66894d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca417ec-d3c3-48df-96e4-f3a02bba6872",
        "cursor": {
          "ref": "5e9fbbd0-3c41-41e6-91f8-ff7e59012093",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b75dae50-3862-4d7f-af62-9f14e7dd5f29"
        },
        "item": {
          "id": "0ca417ec-d3c3-48df-96e4-f3a02bba6872",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d064d3bd-a8d4-4839-9889-9f59d8347b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28b69fb-f581-4e90-ad60-621f9f688f4d",
        "cursor": {
          "ref": "e444bf94-cf42-406c-bc6b-4a8f987c7686",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "866053bb-a36a-4a51-95ee-d4a69f34e0e2"
        },
        "item": {
          "id": "e28b69fb-f581-4e90-ad60-621f9f688f4d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ea79394d-1c1b-4a75-a06a-86b7d9c80882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c11e48f-34a4-4138-b593-c0fb0622dfe5",
        "cursor": {
          "ref": "d8d99075-580b-40a6-a140-e18a46a657b2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0bfb6095-d604-40c3-85b7-b201194f73ab"
        },
        "item": {
          "id": "4c11e48f-34a4-4138-b593-c0fb0622dfe5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e42e8bcc-219e-4f06-b27f-69ad42cae56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd35879e-e04f-4734-8c29-5eeb5565dae3",
        "cursor": {
          "ref": "f3ba201a-c566-4c7d-8c86-dbc17fc8d3bf",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "67a472c8-10fe-4c0f-906d-462a14d816ce"
        },
        "item": {
          "id": "fd35879e-e04f-4734-8c29-5eeb5565dae3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "054c28df-7a5b-4f9f-ab61-32ea8c96d38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cdb067-6dd1-4657-97a6-86cb06dac526",
        "cursor": {
          "ref": "514ee1e6-6d15-4899-85b6-fd254b3c8493",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fe9827ea-83f5-4849-80ec-7604084d3404"
        },
        "item": {
          "id": "75cdb067-6dd1-4657-97a6-86cb06dac526",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "228532bb-bb66-4c4f-9c84-935d7169c4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4044d1a6-11d5-43ed-a599-651f029815f4",
        "cursor": {
          "ref": "f8dd96dd-aee3-4bdc-be73-702ff76ed229",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "76a674b0-ca9d-4d96-b980-3dedfa0a0291"
        },
        "item": {
          "id": "4044d1a6-11d5-43ed-a599-651f029815f4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6695ae15-9737-46f5-a0c8-23b0b30b1588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751e4820-416d-40ec-8142-edc51c341cc8",
        "cursor": {
          "ref": "d1c0b678-732a-4b02-bb44-11faab7c607d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9337d88a-87c3-4823-a860-f1ed73c84b72"
        },
        "item": {
          "id": "751e4820-416d-40ec-8142-edc51c341cc8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a6308e66-db0d-41bf-ab80-9776626d04d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87be43f3-cfac-414f-bd7a-367b2f76aab7",
        "cursor": {
          "ref": "af5ca3e2-b5c9-45cb-ac35-42c95f71452f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "726dae27-b0fa-4858-a087-b7ff7718fc13"
        },
        "item": {
          "id": "87be43f3-cfac-414f-bd7a-367b2f76aab7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "665ed5f8-3c9e-45a5-87e6-4a7b9ae074e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad80846b-de38-4406-a942-a582f7944f87",
        "cursor": {
          "ref": "b7819c94-f521-485c-ba86-132cd7f1f9c4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1983e72a-6be7-403b-a688-b2002cf31e65"
        },
        "item": {
          "id": "ad80846b-de38-4406-a942-a582f7944f87",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4e70b30a-c915-4cc6-a9e3-52d9c50f2689",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6638809f-6a98-4ab5-95c0-769b160ffafb",
        "cursor": {
          "ref": "97a17042-efbe-44c3-b788-8ee62ad17b19",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d8c20989-c3bb-4525-80a4-896fbd9c3660"
        },
        "item": {
          "id": "6638809f-6a98-4ab5-95c0-769b160ffafb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6f26bd17-35aa-4c3e-b426-ed785d606c82",
          "status": "OK",
          "code": 200,
          "responseTime": 3321,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "742d1534-34f6-4548-8897-3cb47095fb38",
        "cursor": {
          "ref": "fb4b0e8f-b653-4587-bfed-dd16cef2d260",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2dcfe782-49d9-40f8-8394-f6afd4850aca"
        },
        "item": {
          "id": "742d1534-34f6-4548-8897-3cb47095fb38",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "60677b17-7437-430b-aac7-4be4f9813a8d",
          "status": "OK",
          "code": 200,
          "responseTime": 2670,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac0cb62-16b2-441f-85d5-e73627e0229d",
        "cursor": {
          "ref": "96f3555b-f9e8-4d04-bcea-3d54477fe5a6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b6078d21-503e-4ad3-9d0b-00ccfa91479b"
        },
        "item": {
          "id": "cac0cb62-16b2-441f-85d5-e73627e0229d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afef1700-0116-45a2-aede-368d982f3a29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac0cb62-16b2-441f-85d5-e73627e0229d",
        "cursor": {
          "ref": "96f3555b-f9e8-4d04-bcea-3d54477fe5a6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b6078d21-503e-4ad3-9d0b-00ccfa91479b"
        },
        "item": {
          "id": "cac0cb62-16b2-441f-85d5-e73627e0229d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afef1700-0116-45a2-aede-368d982f3a29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5d14d3-e98b-45cd-8abd-866e01f9a83a",
        "cursor": {
          "ref": "d162a770-a67f-42af-9337-607e95236ca5",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "deac7934-a08a-4ceb-929f-1f70afae4d3f"
        },
        "item": {
          "id": "7a5d14d3-e98b-45cd-8abd-866e01f9a83a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "624b5aac-d00b-42dc-81cf-c3c2d5e5f0bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0bf81c-8682-4c8c-a209-7b0d25852505",
        "cursor": {
          "ref": "972c4a14-ec60-49e5-bb07-974aeba28a84",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "169e9102-9b06-4bb5-ad3d-87d1a99ae0db"
        },
        "item": {
          "id": "5a0bf81c-8682-4c8c-a209-7b0d25852505",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "82c095a3-dad1-42d4-a94f-42f7a2d30422",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}