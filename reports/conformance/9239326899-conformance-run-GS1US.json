{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "072237c5-4bbb-4245-a9ba-3162fa132b8c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c2245cad-6c7d-41e4-9bbd-f5a2da4a2950",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48c94b5f-d81c-41b5-9033-c53e212fa838",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8e96c60-e04f-46d1-a948-9352c8b6a63c"
                }
              }
            ]
          },
          {
            "id": "0c596e09-1e46-4359-a91b-e8bbee4e945f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1f75432-0e50-4c52-bf22-90e4679b9cdb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f40f8fe4-b44b-457d-bb34-01a47abca170"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0bf998fa-068b-447a-b4d3-2beff2673694",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a0795ace-0c10-4d81-81d5-d5c4a8b6fc68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e1a2ef8-d9a2-4f35-b7c2-01f0b63aed09",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ace757b8-9a58-4ea1-83d5-2eef1903cf3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8a11c81-1d09-4b64-b58b-0a4aa1047559"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec4a1114-1396-4bf7-94a6-ae53cb838e84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9387976e-688a-444c-853d-eb15cc85f915"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "214fac70-0171-407b-8a69-64b91145edcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ace77cc8-1b6c-4bc4-a218-5989cb345eae"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91f1894b-e19c-45f7-8800-f5c16060a169",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c3971b81-a494-4ef8-8bbd-16a38fe17a7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d4285ca-7da3-47c1-bda9-5a756cabf683",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "325fbc82-6180-4abe-bb47-5aaf8affa1a6"
            }
          }
        ]
      },
      {
        "id": "320a7c11-8dec-4ded-a1c0-3aa984c6480f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ba4f2400-f05b-4c97-b395-cbbe1b89557b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4132868-3817-4d02-a45e-c1df6c99a3a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5f782c3-426f-4b97-bef0-eb3bac8ae8af",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea48ee17-b8ae-43a4-a19b-e063dcd95626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1f335fd-e5da-47a6-ba3b-63e9982df8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e201934-e94f-487e-89f8-71d2f2311489",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff329be-f88b-4e65-b83a-d5750eaabc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cc8e592-7850-46f3-a38d-d51c4a37483a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35a00e2-da65-4e1a-aba8-c7ee21a693ad",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26765628-86d6-4e4d-8395-1e0f0da20a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d0bee76-3ee1-4041-9be2-80995d80aa40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65a183d8-96c9-458b-8e45-5eff94bd9ea1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0edfe06d-2c1c-4981-98a8-f7843cc6bb02",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546b4bb7-ccc8-48a4-88eb-3ad32515164c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cd2f985-aff0-480a-8f34-0349e1abc09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab82cc3-1f35-4b0d-8078-7908dbdc66d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613e8259-93a2-44c0-9e66-6a89586f27d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "92274cd6-5526-4c51-b55f-83c8237311b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a11bc4d-ca6f-47fc-93d0-ffc4e8871546",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee22b275-e46f-4b87-b93e-ac33e6dfd137",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f887599f-5a41-433c-9aa3-4496cc163a68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb180ab0-9745-4809-9827-c2af70e3ba65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "69a60b54-85f5-4e1d-a7db-4bcd2f6fdf5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e884d6d-7576-414e-8161-9b60a9093b14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "634b36f2-09a8-4964-93a0-1e77bd402e6f"
            }
          }
        ]
      },
      {
        "id": "77f9eff4-fe42-4a01-b8bd-55f2446b62f4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0f2f98c0-6a49-4972-b198-e7c1be5e4d5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "facbec24-8cbd-4471-bd4f-4026c28f4c3f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7b037d22-abe5-4ae7-beef-a21374129a86",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b23ed7b-456a-4dd7-afbd-5252bc3a11d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817a657f-bfc5-43ce-8518-1d44ee62e791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260d6209-8f73-44b1-94f2-af9ccda01c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0934942c-f4d2-42bb-9171-279d38b9f500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59727275-1c06-4725-99ce-b6b42623fcdd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd1d833-be09-4fcb-8c7e-604fd73f6fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d871bc-61fb-4fb3-bfbb-83585b3f1949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b401464-1d49-4ad4-8a9a-4c6d148f9b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2382653b-0f79-47ee-9aa8-14419d12a8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713a0bd3-0d86-4d1d-8133-cce1aef17d73",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aae83f9-3001-4fd3-bc6e-81fff90f3a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315d3fe9-d687-4493-8488-17d2c652f73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39d9745-1a7b-4355-8a1f-69e030cc6338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc060648-5fc5-4f39-915a-1ae01b1c57a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1bba98-1ec1-46f7-a565-6e659273bdc4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426a9a3c-86cf-46bd-a6b9-8d58d383c2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d7bbc3-621e-466b-9024-a1da3347b9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0311cf-839a-4d31-ad8b-afd0ff52708b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac288b6c-dc77-47c8-92f3-df08c8bf0b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34829ebd-21fb-4c05-b373-1c0e6e9b1e91",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1f781e-8969-4514-ae04-a1350698f7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802d962b-73e0-4a9b-b785-b07f4338e520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebd8ea1-f9bb-4c58-a8b8-52c4ab352f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "837acae9-7e3c-4667-8b26-b8d0081cabe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972f884b-ef4d-4de1-8806-c95061304ad9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962ccb29-329b-45f5-9629-0757d4f53a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720bcb3c-cc94-4881-9af6-214b34c6156f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc567a5-e820-472c-b50f-a2d94337b8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d7a72c2-c576-4890-9537-b5b31e15f56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8982ca2f-1284-4bd8-ad0a-0d26bafca9c2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b9b764-ba53-4aa6-95b0-901d856b64fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8ac37e-f8e8-4d60-97b1-22f9e2ff5981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e7c19a-0089-4d12-867c-0a2c12b6023d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf2a2203-e7d2-48a9-b586-46c47a2f1c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fe0aa2-e8d5-450c-b02a-a995e01c84e8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942ccd9-14f4-4865-ab3e-b63f28644976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83b3b05-cd40-4556-bcb2-5cf79fbc488a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ed6708-404b-4fd8-ac3f-10b08125cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f81b728c-fc13-4bb8-b032-ed9249d6b8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b77f502-3a6e-4a5b-876f-075a04697346",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0480847d-2a1c-408c-986b-fc5b23b35ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9e9369-f8d1-4167-9dc8-5c206275a3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b83a0c-8d4e-44b0-b3da-945a4cdc85dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e717efed-be2b-435f-9e07-a74cf1bda351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfc306f-d991-4ada-98b8-bf9449539a79",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac1f54b-65e4-401c-b49a-b5869ec79470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7224476d-3d19-4c4d-9278-6a5c595c7cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed87586-1803-4095-b2f8-36eb95f026ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b818fd9f-8391-4123-9f13-2461962b5463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f274fad-63cb-4695-8958-344e37e4fe29",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba398e-718e-4437-b08a-5b263c71c5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7d4440-5543-4070-b1ac-08824b48e6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f13dd8-0dd3-43e9-8664-dab5777dcd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b48d80a-cb5b-43aa-b646-2a122af11bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f91f3a-3a0a-4f56-bbb6-dbd88568b967",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b9786e-e76a-4cb3-8f98-8a0e07686f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34a8a8c-0df2-4c8c-b1ee-e96f1380def1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05996e4-3fa8-4799-a3a1-df872e9c0fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba861b98-0717-4cfc-a81c-93968f8afca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a4d565-5304-40f9-9257-a63571863767",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49153aad-f8c7-4ee0-8780-536baebd4b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944881a3-d5cf-4ade-b7f0-4abb5b91ec65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d2d5b0-161e-4ea1-ad59-7b08ead53d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf179740-b444-4d96-be36-ee77af778ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fbb0e5-2bd8-4057-ad15-18b6d99d19ec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e569493f-25ca-457e-85db-4d150085661c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb175fb-c96a-4daf-80a8-334a1ace6e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ea556c-e6fe-4bf0-8dff-ba5aee926e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca0ff912-17d4-49d0-b691-d4b387b4b510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14dbc01-8146-4807-8b87-1160f8807b20",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cf2a8c-7625-4f31-ae64-5a1a5f6f9f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b38e3b-3ec8-40f4-8c08-98c91dac4e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a678331-8a31-41a8-a09f-6ba990e6fe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ae0cf93-9d82-4339-986e-e9667d2dd7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d2b88e-1f1c-478a-87c7-9006a86fc72e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd28863f-911d-423d-b953-7d73bc992522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa73768-94e5-42ba-a790-d86681341773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931682ba-f9fe-4e99-9d62-79338102bf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41c76526-c6ae-471c-ae84-0f83565dbeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10f20ba-62e5-48ac-a400-7d61933b2809",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfc5883-f185-4685-815b-b97e2b0ad060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db9a8ca-6b89-488a-b448-f0ef2b662d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb6e069-ec44-4b67-aa67-260576235d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d545d259-0a10-4681-9f41-37ea21fe07eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76057be-e2f2-4cc1-b92c-d4d8729c4470",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2458488-744a-4824-8418-06feb3a6c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d9ac8f-ba59-486e-86ea-30a0f38033a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c69ffeb-b93a-44ae-b4f7-477621cf0e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f6ff09-d8f5-456c-929a-01b41f119b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfc69e0-d061-4b52-9284-052d98ff2ac6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47218d34-b501-4463-97ee-85622ec7c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e261b8c9-71e9-49f4-a1bc-c5c602f4a0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9703ef6a-d641-4b07-a38a-454eb448eb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcc9ba2-e55c-4467-a1d3-cc0c4cc3d65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2782e247-1cc6-48b6-8ac9-80b594bd0ec1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408f26b7-e2a8-44d0-a9f0-af594c6ab38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f01fab-7f73-4200-ba17-e38c6be81698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6167486a-4516-4b5c-9f5d-9d336896e10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddaef18a-a2ea-4dd1-87f1-38129687c20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06e754a-c007-4eee-81fb-d4ba098712e1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a7fce0-f160-4dcb-a171-4b327c556e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5dd1d7-937a-4b4d-92fc-242b5e4545d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbd77d4-9677-45a8-ab4e-61bdc84a1626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f07f066-d441-48dc-8487-29702f76d56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc970a58-ba0c-403f-8166-1b71a913bb7b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2092bf-2f12-4643-a4f9-1cc212589d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f1a697-e939-419e-8f46-d49db27e4634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9628585-c2a7-43c8-afb1-da95dd614433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "122f1e1c-6957-4cb7-8a38-077433b69f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93e56bc-6111-48b3-8f95-038a1af85b0e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0bc28b-9577-41b7-99fa-db03234e4046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5b2996-3e57-4a2e-9c30-3c5ef4efd2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6428db7b-e736-49ed-84a4-b0aa174e757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c76283a4-6177-4980-a0c4-9a9b2d213170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830c7df5-cc46-4a22-b5f6-9a0ce2b5628e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a452bf4-58c5-4d60-9f8e-fdc5f58d4a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a7462f-1802-4da9-a152-4ea25ce070bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13301fb-7634-486c-a899-49f7ad0762fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3269cd1-95d6-435e-a73f-a4c235e32a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dde55f-4b57-4998-a869-4b15fe1b2f5e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e477c5-ae8b-4259-aa87-2203554447f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83eb24a2-503c-4b6c-9fd4-9c7da740fd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec8139d-bf67-493e-913e-dbf3a621436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02760a5e-84b5-423d-9fe1-7b775c15e423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce0f9de-609a-405f-a26d-b63dd4a2ef16",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecf4def-276d-4361-abfe-f3918d45b5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8573d399-c273-4bb5-b9d9-70eece3d6a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4680edc5-9bed-4411-8e72-7f796a84974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77aca4b-419a-4ba7-b1cc-90a1a679c498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0946c2-b954-41b4-a7ec-30a0042b9701",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f44a0d-24c7-43d1-88fa-089bc137b26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2616bcd7-8048-45d2-9e8b-73775c86b14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e547a34-3757-4228-926d-a3292b9a3896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "279ce4bb-f87c-4fa7-8f44-b17935f2549c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24e9c72-a2fd-4365-bee3-fabb177b7c97",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2863e72-09a5-42d8-801e-bada672efb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e602ca-afaa-45ac-93f2-5647673c2fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee081f6-7178-4dcf-83a7-6d6acc3e9262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0749e7-2f4c-4b3c-8b4d-62985734a107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed1e619-c199-4410-b15f-cf5ba450f47c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e19635f-001c-4a5a-a330-a3d90c6b4598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd54e37a-113b-40bd-8ce1-2dd7fb1fb25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258c96f8-33e4-4627-aea2-e264d9504d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd2224c-5917-44ba-99ab-a8e3ce7d6fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a7f7e4-766d-43e7-a0c9-11f93577b826",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373d201e-0b49-4346-85a9-6cde7531f84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5816930b-d0b4-4179-bc7e-130dc05e437f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0fcd0a-a7ef-4947-89dd-04acd32c4d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1269f9af-b8d7-4cd5-b8a7-006632e0d1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36333dc4-de08-40c3-9b76-3e3561ff0883",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189e067d-3a9d-460e-8acf-dfc9ae850cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb9494f-5643-4f8d-9b4e-213503289f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98612e60-9995-4ccc-b203-05cfd5c0ff2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76dc88ec-15fb-4be0-bcb5-ec9725ef97b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a684c1af-e7dc-447b-95f6-069eea14033b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783c6bf3-c415-4abf-b41a-f33625af11cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2974c8bb-1fbe-493d-b81a-da36cfb96ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc46bd67-81cf-4cd4-b873-191ce7a933ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad95c53-c3a3-4e50-ab7a-8c10914b1a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373583c7-4c8a-4e7e-812b-175a2a287c38",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b71a0d-4eb6-4e8f-9bd5-a7636aaf92cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19d3c61-0951-4632-a66a-bacdf62a7288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72150110-6d51-4cb2-b05f-10c5a7721f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "906f8cac-372c-4c4c-9acb-1c45d956a5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20508d1-24d8-4536-ac8f-6af28ef08b17",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7988120-7fc4-45cd-94fe-e1cc2045a174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81255762-8289-4d99-a587-0f02605ff8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bea2f42-070c-4eee-a578-c472b3ca97b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "201cd802-8147-4786-8e67-1f0fdea95875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa5e99c-0bcf-48e5-b08c-9de61d90a364",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141a4b14-dfdc-45a5-b4d7-38a2e02ab920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a20c75-ca99-43e4-be8f-52ae410bfc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb06541-218c-41d6-9d56-c815035caae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1f40564b-daea-4de8-8e9a-2588aaafdcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f14702-ee7f-44cc-b37c-d0bd6191331d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8b2a41-1b6f-4e87-9682-e2700d31ef50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fee63a06-702e-42e5-860a-d111aa95a92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40aee51-57e8-4595-985c-ab5108048f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81689c4c-17bb-4fd0-8922-0a3a9ad318a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5affa9a9-66a5-404f-9a9f-f6d41b089868",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2ea1d2-f115-4333-80d4-efd084ba22a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4ead1d-603b-43d7-8fff-75384f81ca63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e19a8b-f5b9-476c-8dad-a13795ee045b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdecb09-2b15-4014-82aa-faf1034a08c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c4f574-3254-4bcd-82e5-5d75b4b15694",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb38e148-4f0c-478b-bd6d-58926a73f690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a94892-cc27-47f4-aa27-b0532e307a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eaad33-cf17-4e2b-b2e4-ada1e3554601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e472d4c4-fb81-49f1-ad82-d1cc468b75c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d608204-989b-427d-8804-8f05c95449bb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109b58d1-82e0-47ba-b3fd-26f376d65c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f88801a-9acb-418b-be9e-21746e29e320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b635d6-2386-402b-b000-c1354646103b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba9167f-a0e0-4cd3-b908-385d71ffb948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f6a770-4aa9-4500-ae95-e0d3186c5c5f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e612ea8-6bae-4fd8-89d3-5a9fb5d5a48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c46dbd6-c107-4132-b416-bb3fbe5f7e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7ed4c9-12f7-4c20-87cc-fc7a067c0a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea98ca71-69e8-49a5-8d91-6ad470e012d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa18fd6-b83b-47d9-b6a0-5f9f2a28b4b9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51d7033-e7dc-44d9-b63b-cf9cfb722228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995a4d3c-5097-43b8-a267-51b9872215e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67b763-5e15-4343-a144-87a2539d005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78a02848-3f38-46fd-9665-5683490847ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f1526d-e507-4cef-9776-e897c23691f5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed902108-fc3c-4a58-89c5-04e0c72efbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdb9c53-40ce-4a67-9810-b6d2a46a8dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c613fe06-8246-48c8-8423-8bf0a73e7f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "763b1a59-2903-4896-bc9b-aaf38a9cc9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a7adf3-1ced-4b49-ba96-c322e0723f3a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1121bc2d-400e-491a-a550-5d2e3147af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f872a6b0-19e7-479c-bdee-55d46e1947a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a596c7ef-dfff-4870-bb4c-6604ab16c206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfee5b60-7172-40f6-8c9f-cc3dc96eb8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b482cacb-708a-4afc-9e57-462cdbe45fea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077aa2b1-3127-4c86-91e6-e97ec798e2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e2eb40-2710-4d14-b2af-85fdcda1f090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91b4cfc-db08-49a2-8f8a-71a45a276c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "16400a86-0972-4955-8c53-a7646783798f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc2cc55-1085-462c-ba04-7eb065a5f7a5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff5d3ad-247e-4dcd-8edc-adf519ba9b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62690299-99ac-480b-b8d1-fcb3c099b894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac593dc-9aa7-482c-969c-ed0ce7f075a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae676dff-dd39-4451-ab4a-6c0ea831886a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e373aa79-33d5-4da2-8215-ade4fdb2d71d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9267dfa4-a88f-48dc-929b-d953ae5e88a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28698919-ad42-4e33-a5c1-d54f471ea64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b21274c-6d73-4ee6-b1f4-4b74e1d4cb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef8a82b-986d-4128-8a6a-ecf820f8bf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de47a48-c9c2-4641-b675-cbb9f10d285e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6672c91-6d27-4bf7-b51c-8e33da27f636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d927e27b-4010-4ae4-84e1-60b678788b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6057db6-81a6-4b63-a7df-38055acc0897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bec8b0-20d2-4a51-b55a-4b4fe0b0ffd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454ffba3-5138-4c59-99f5-0f0ceaaf36c1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3b5e1e-6533-4510-945d-555858161b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73771f40-1b5f-4d5c-b45d-8d59d0dd6ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2554c2a7-5a6f-4aaf-baf2-b7603b0327af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ae3778-4893-4708-8a6b-2c9f48b617c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de54fa55-99bc-442f-b027-cdef7b09e5f7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c3d733-ba7f-420c-ae24-f2fd162a47a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a54d1d-dc7d-459a-8198-670bc905172c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aed80b-39a9-48f9-a24f-9f7f3a34ca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2111bbd5-cb59-4126-b40f-f09905b38a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6d004b-cb5f-4130-b471-b26c07762b45",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb1792e-626d-4be7-92d4-13d23217365d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a424faf8-b044-4ed1-8f67-dbc7b5702dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d9662e-04dc-4899-921c-77a38715a84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33df1019-4d78-45e4-b1dd-7b74e8ef6178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f88762-b844-4674-9944-c7211bbbe0c2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a148a4b6-213b-465b-a752-61ff1c950576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede808cd-78e7-4d5e-b9ec-ad2998a30659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e674d46c-8a82-4c93-baf5-fa3b2ab0a7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d3810d-5181-463e-b897-df91724ef16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b584f9-92dd-495f-bc80-2708df8812e5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d2e26e-8401-43de-984c-502dbd121264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303ea327-80de-44d8-81d0-34cc18ee6ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af9a21f-eaa6-4e52-ad82-b82e2d4ecef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b5023a-72bf-4bda-be63-8dd56926b13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f08490-9cc4-4e4f-934a-98fe5321a488",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caa4c80-d2cc-474b-af4b-088e146cd58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7dd866-0d33-468b-9811-0f1863dab2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb2bda3-c66c-4005-b65c-43498ffe8321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09236de8-ccc4-4b98-b3dc-206097ed7b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fec8cd2-f7d5-48b8-af77-7614b0a4b90b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338fe44d-3a6d-4df3-b225-987dcfccea85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4762cf-0db4-4e21-9417-c0eee60c6ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc2250-23e2-4288-a529-415983d95ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f918d2-a46f-471c-a621-aeb07af045ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525090ac-105a-4a9e-be69-011aea1b13d6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6523556b-f893-472e-9537-b2c291dc2571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0c361b-d009-4c5b-b2dc-80e622b3fb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d7341f-cd23-47ae-aa46-093e6cb952c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db184b55-2b8a-4d48-a1bb-a6912f6a882b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f94c60a-d136-4ad3-9703-207e2beaf9e1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dec869f-ff99-4278-8c8b-27b5d0a56281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66592cf5-f711-4709-906e-d67fb1730576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94551be-e57a-49b4-82c6-955f2c7ac4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c99f31-9f81-49bd-9e29-3eeee7b7cbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f226b3-c720-4bc0-aaae-db722fe8da0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7074ba3c-8feb-4c5a-9a31-7de3248d7dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e4186b-e668-4390-b175-b96983dc634b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383197a6-94ee-4091-896f-a0233474a821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc4051f-1fc9-4301-b521-8c7ff99345c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1ae274-0478-4b16-b111-3309e86fa88c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b147c8-7c4c-45a9-80dc-5d95799e9c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5addc29-5f4d-4e90-a897-6f583693f2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1c92e1-951b-44d2-8b2f-3233866bcfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f8bfb0-449f-4fc3-b677-0e0cd6d16d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd51e1c1-5191-4f7f-b7db-ddf20f1afc53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce8af34-d8cd-4e75-bdc7-08f10166f4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b3fc32-cf0e-44bd-81be-a328945a38b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac8a30c-b44e-4d17-a9d9-f610df4f1919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82d57bdf-b865-4bba-9f93-4d90a97af399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4157c91a-80c5-44b8-be5b-adfdb82aaaeb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da0520d-bb0d-4eec-987e-0fbac8b873d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59160a73-f265-401e-936b-372c85b5bfed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d518cd25-8475-4e77-9b6a-4ea32aedd63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e50614ec-8aa1-48cb-a76e-9cec0d1ba4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776d531b-b14d-49cd-8c35-99756f5cb076",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b47962a-0f61-4f7f-a922-3b2cc446a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972442ed-2eb2-4053-97b6-5a0a5c7cfba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa965a1-973d-4c00-ac84-d376d99526b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "23ff2f2d-3bdf-4fd3-8a3f-9b80cebee678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277efd86-ad0f-478e-8f7c-b8013f636267",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8ead28-a7be-4cda-870a-63ef9ac95ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5aff71-d468-4a64-90b8-db6b57d93098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577cb387-dd99-4a02-a11f-6ad50cd2774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "765af680-61f3-4c6d-a893-e639f6feab90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9748bf6-f400-43bc-9c0c-f4ce9796d7a2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714586d1-1c25-422d-8062-6716e8d8fd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09e5d8c-a2ef-4d06-90b2-5e824eae63c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffdab09-63a6-44e4-9a9a-a73c7c4cfade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbada059-77f6-4d32-905a-8f7d1de5deb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc27ac9-031c-4bcd-b0e7-c90cd7b59634",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a033fb-5ec6-4c9b-9041-089f4b2bb420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b66e1b-262b-415e-b016-55c7bc51cd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8093fdf-6503-4841-8c8c-6e2cf2267271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f20a50-0d25-4016-b25d-d704cea86fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f82ccf-8804-4e85-85b1-6c749d72c518",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7573068-e6d9-416f-aa03-51aa9caf8da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3c7271-2085-4ff4-be92-a805646e1948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4577ba-813a-4877-b21d-22fa98c778e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e21030b-01c8-4169-9394-196fd469502b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726f2d0b-20c4-4628-a0ed-e2c83fa4c746",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894fa75b-b9f6-4ee1-8733-76f3c2b8320d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba1322a-2be1-425c-aef8-a77daa3ce9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e227c76-b49c-463d-948f-f6c4baadebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b89e2f-cd85-4ba8-92a2-01a55a57d22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90d87b1-e711-4668-9614-c79fc3e958c6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55764356-9be3-495b-968e-7c947e9724e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2352dc27-e2ba-4c45-b6a6-a31ab6e45c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a59de4-79f4-4d0b-93ea-7f333e82f731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9312036-3bed-4c21-a2e0-969bb9c277de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe35c76-bce4-4223-9f68-6a4f960d9f0d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5f959b-72fd-4dd5-813b-8b66d5880d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d938f8ea-5967-46e0-af3d-dd5daadbd382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa52a2d-83b4-4567-92f6-545c2f4e9de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e31ed7-1f4b-424e-97e9-89c1fa3ea5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8667438d-7be2-4f81-877c-2d18315c0089",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e23c19a-fee6-43ee-aad0-78957c2cefed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f716f01-f09d-45e9-8716-fa2a8393bbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae65e78a-2bcd-4386-95a7-d5235cb656fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c318dce8-6040-48c2-8366-25d972b4ee10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee2e3de-5625-44be-b088-c58df25c32d1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256eb7f6-5642-4745-b3d7-da92f0429032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bf24d9-5206-489a-a408-11c584d1f413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986ba39c-4b58-4cb8-a79e-3d522d0f4368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b8057f-c45c-4732-a0e9-b8f81ecf27ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d37fd3-18d1-4377-abf3-63d0bf7873f9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cfba87-5a78-47e1-a2a1-142525437105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6673770-13e4-4e49-8d5d-fa45a8887864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d314e321-fd6d-4856-9cb5-e16af5844619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "083476d6-2477-444a-8923-74debd731517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5bb533-a343-41c1-9568-b32ca2699433",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba524559-d049-4f8e-944c-1d5e68d710e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b022fd-2df5-4c0f-bebe-60317505fde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a846d5fd-930a-4cdc-92db-b96fe2989863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a0d276-22b7-48f6-b631-0b8a745b0f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddab097-18dc-441f-9f9c-b23892300bd0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4628b35-2f47-4118-b98b-591c57b31c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3760aee-168c-43b5-8c6f-4bb452e4e277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722e2cda-941c-46e3-ba4e-4d52d7f0c8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "108caf90-216c-44a8-8b06-88cf33bf81ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a329b4-ea1b-432e-820e-0a56c8fc2092",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcad8941-68c6-4ba5-8851-ea447084c5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1f3651-dfbc-40fd-8ed6-2c94a2eada1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dff5f0b-6b73-474d-a243-7ab38933b309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4917e36-e50d-49ca-922a-f2eb8c8dd0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106c6bf5-57d8-430f-acd1-4041906cf23a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c38179-3050-4be7-843e-e950db98d176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3ed7f1-8282-4254-92fb-4f18448351ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe41829c-fd29-4672-86b5-d19db3983df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3965beaf-dbba-4133-b667-c1da834ae1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc44a9bc-3683-447d-93ec-442d7a58ce1f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777863c7-4b7b-4c30-9574-6f1c8edff6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05988dd3-fe3c-49bd-a2dc-01df4c314744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d7cea9-79f5-4e8a-a0e3-7f2b5ed03edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75d4f7f-8662-49be-9f28-7e22ab55bb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f198ac-5210-4094-bc90-22a6713fe650",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92cd102-0224-433e-adeb-113b820408fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4cde93-7dd3-4616-b6b7-38c87b6cfa8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd30aefc-21a6-4bfe-ad13-0a74d7de839e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f63b74f-3b31-4437-829b-b51380ceb246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dd91c6-33db-47f8-9ae8-194959e7644b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cde8ad-3e8d-4776-8aa8-af7ba3e6c253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c19a9a-97a3-453a-ad43-bf3cf98db574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72517c0-46bf-454c-916e-2424653ccfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8ca586-c09e-41fc-8844-4439518bef1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca4145d-b5b2-4519-aedd-671c54acb2a8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57da1603-8589-45d3-a110-fe806097f814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63812b54-d15f-4cd7-b1be-b79dd6567acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2c712d-36fb-4fc7-82ae-f8a2bc0f9f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af9e41dd-d8f7-40aa-905b-9a863122248f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d0438b-2bad-4e47-9d1b-5d7a081a8f24",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230d57e3-158a-4fb8-82fe-253e8cff4777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e373819-e568-490e-8597-a5b10eca0fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835062ca-7448-4567-bb30-4c43ff2f9f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3a1e72-5be5-4ed6-abad-e163b65999b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbabeae-6ffa-4f01-8acd-a27f5bbb70ef",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adb56c5-d123-48f9-9303-dbca884d571a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085cdae2-571c-4eb5-843c-1d4078324d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd704df-a515-4295-a0d0-f1f5841cb1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f114c3-4d10-4588-a3a7-e45e7327b576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e3f46d-c118-49c1-9363-975b22b1c4d8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66618745-da7b-4ca2-9052-bd2e8bc1e50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622b2c97-072a-4c05-96bc-f6307d329657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7100336d-1d5f-45d5-baa9-b303aba2d7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3a2633-3979-4fd7-8193-c41820ab63b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f23d39c-eb82-4109-8a9a-746566a9b102",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb62bdd-4494-4ef4-a584-8d0445fb05bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6364a3-8772-4d6d-89c0-19d55c69ad38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a31c9ba-43d5-4c91-a170-49b751e66a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d43e369f-82aa-4961-b2ba-ce4fc54285cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b64e25d-f977-4cb1-959f-d4ddb6f3960d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bd4720-b774-431a-b405-59268c2eae5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003372a9-fdc5-432a-bb46-968e649ada93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2ce227-f2b6-45e4-9274-da708d33ff2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e922732-5535-426c-9551-431f1e67118e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da971354-feb4-4a4c-ae43-dcfa8767fa04",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4271902-5188-4426-94c9-9333e701a064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311875af-a707-4ecd-bb45-f51655369556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0169ef73-c33f-429b-8f0f-3b34955d0a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "287431f6-9fe4-4fc9-879a-6dcd40bc0416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb59852-6b2b-4848-bc56-50acb29b4990",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7285b23-68e6-4c6c-adcf-78a897a95928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c2468d-d215-4211-b92b-3b7f90407970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd0021d-0e12-446a-89ff-172533e1d2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "133a5a32-f749-4cc5-a702-746b6127b463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18148d26-e8f2-4f7d-8409-cca7079fa193",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dffa60e-dbb3-4375-8a8f-72f2e309078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4a0b55-d233-498c-b729-024d7f984238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b64ad2-132c-41e1-8309-d5d211521452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef58734f-4b22-4895-9aac-d05771515198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8426c299-99c9-4694-bf06-dc1cba8c6d55",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e657f1-14de-4d32-99bf-ddc6a8211100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031cf811-3d3b-4b9d-adc4-337f95175f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dba837c-d79e-4f3e-9edb-06347c5f80e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bff01962-4323-4864-ab95-0e9953356fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1738a4d3-6b17-4f01-80d3-94737a2e4613",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e419acf-974f-46ae-9b63-3e764dfdcf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b95537-aa3c-4c95-8f20-cefe735aada4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221559bb-1839-49bc-848a-454221b0ad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8514810-7c20-4a0e-a1cb-01d726652565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06a24fe-531c-419e-a475-82615301f8dc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7c03b2-a012-4164-9509-3ed9fba4d82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbbff4e-3eee-404a-8a77-911223d01304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62761490-b716-41e3-989b-a33967c52ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "013a217a-ebf6-4dfe-a0dc-b26c881e084d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a173ab5-3a3d-4044-b19a-eb540083da9d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9f878d-fd41-4587-bd99-7bb139e4b843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13420fd-cb1f-4f47-9f43-983e62ecfff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32355366-4eae-42e3-8070-f976e1011b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd5459b-01a9-4f69-8888-f6d34a9f8b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d4b558-0e3c-4e53-b72c-18edf5ed3649",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae1f620-64af-4875-9657-38c007ab2cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4c4c0d2b-ec73-4920-9214-8eb2af7d58fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05ed76b-da08-47d7-9159-d51289810e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a21a215-b706-4f64-9e74-4edc586511c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e52180f-f5e4-41f7-8bc8-a41803435b26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8077b760-07bb-49b5-bc1e-7d8f8a05037f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dd800c-3e8b-40e9-8d85-50eea12edb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d101dcff-faa9-4d20-a03f-c1e0dc009eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f608ab71-665b-4028-ae3b-e2b8b1934022",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "523b01ec-2732-49a4-90cc-496cc44bc581"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5810e2b9-194f-4930-9497-dbf3ff67161e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d41bb75-5013-46d6-abe3-aa02147abb24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9050f161-1904-4c62-bdee-bfcc6acebe68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d2d98c7-dd12-4dab-873c-09b85715bc6e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "503d39b3-0d85-446a-b817-0d1b557aaab3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92631333-9445-4db1-9a13-16567cc3c4f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d12613c0-faad-49cb-8288-afefcdaa71c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e08fb32-877d-4d87-a792-3023aa89cc6e"
                }
              }
            ]
          },
          {
            "id": "dff66476-bddb-40b5-89f4-6b000f949c8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e659454-ef1b-459e-bc6e-bf4c553325a5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b3532e3f-1242-4a9e-801b-e6e0871b4d87",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd37e045-e056-4681-87ad-146b7e16dfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "76ba68e8-9d6d-4752-aa97-1bdfea088a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9845063d-0c19-4135-9345-3ec5a955061f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf468410-d62b-4677-9303-d98313cca424"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f008f026-3eca-4478-9df5-26370e0db3aa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed200f74-19d5-4580-872d-18ec46e3587b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b65f70eb-7af1-4658-b235-baf120757351"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66bd74e3-5f75-420a-8e24-ec407a188b9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ff3adfc-4538-4b58-a1a3-bff7e3202fd7"
                    }
                  }
                ]
              },
              {
                "id": "b6304afb-b2d9-4c0a-8388-1c15d8411688",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2115c6d6-1e04-477a-9d3e-f9524742c534",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63596bf3-ca9d-49ba-a7e6-661bea78e919"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36b150c-6dfb-4186-a8a2-792578ec4a01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8aa4f86-832b-48c5-a0ed-4be6fde47d53"
                    }
                  }
                ]
              },
              {
                "id": "40094d71-ef75-485a-aa3c-14a768e3317a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be070bb-abba-4509-96f8-4e8332210215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c6e30b3-f0a2-412e-9700-89735113887a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa1539e8-1e2d-4802-aec1-6f9ab5fc3daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1176ba8b-9751-4d86-ae9d-278d38baf68c"
                    }
                  }
                ]
              },
              {
                "id": "cb752b01-428c-46f5-85fa-0c4c6dadca21",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13af1418-582e-4c2a-8625-b059ef440106",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc4bef3d-ea62-445a-af49-3c645859b7a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22fc0b3a-7be5-4013-aa92-a62b01d0b435",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bcd1b780-ed8f-40bb-8c6b-5ed0f3e22971"
                    }
                  }
                ]
              },
              {
                "id": "ea0b4648-cfdd-4408-b628-ec551fff5506",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77f8d0f3-cce9-47af-9cd5-cddcb71397b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59898208-7080-401b-854c-2b642a8b5afc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65a36e2b-a519-42dd-9dd7-c0aef4c4c501",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7f4846e0-3eb3-4b17-91ce-ebd566acacea"
                    }
                  }
                ]
              },
              {
                "id": "0866e32c-433d-40f2-b9f0-63a58742ddc6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c58eb50-30b3-44fb-ac63-ec8886ff5f50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b47a4db-501d-4dbe-a388-d79b4f8b018c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b00facf6-7543-4b08-a441-f9cf921e5c2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "acb6c2dd-cc83-45d4-b2ec-f920c8324bf7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0953307-22ef-4b09-ab03-401ac7094134",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a454c34d-2f91-4c51-895e-a68818f90798"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec26142e-2090-4644-9002-33c0dc38b08a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb0aa98c-5467-4d9f-9eb3-c295a458e1eb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33415926-4ac7-49b3-8ba2-4257bd79cf83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5c53a611-9d18-41f5-8d58-d6cde34012ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e02e0c3e-a5d3-45f1-8e5d-4a40d6c3ee45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "771f7aec-88dc-4c13-866e-567b74ed1917"
            }
          }
        ]
      },
      {
        "id": "7f3c3eeb-2d7c-45b5-818c-773dc94e593f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e20ee9ed-6386-4052-a21b-db4540279454",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c9e5bcc-bf33-4d9e-b409-111e38cb7d7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4a93fce-17ec-4a85-a060-00ff83cc1465",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5f3b63-accf-4d04-bdd4-716362aa2a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072efb46-92e8-4eaa-957c-912a20ea866b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff60d33-780e-431f-92e9-52419a655204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7d1a85-af06-4e06-b7db-6ed5682d13c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c9f15f-0a01-4738-8afa-ce0bbfface5d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1cf562-321c-4de2-b36e-7d1185fb2065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f187caa5-d895-4f07-86f4-e45743bbc05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5121625b-8b10-446d-aac9-8ad66cc0c79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d097fcc-8bce-4b8f-a1a1-e056bda18bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d208160-5785-4bf0-88d7-0ad60c50edb6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8273e50f-5fcb-4749-8a16-88e397cebade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c2fc71-97d0-4e6c-bf35-aeac97b723a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c063cde6-dbad-42eb-94bc-c114cbcbecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edaaa0c5-5e23-4588-a65b-bef2e0b8f011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499fdd3d-81f1-460a-be9a-f29786e59139",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a74bfd-8d9e-4906-a87f-fdce436cdc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1265c9b-b655-46d8-a8ca-d892fde49d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decc7fda-3508-48eb-a25b-a1dc66ab13e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3398dd3-2b8c-4647-ba19-35af28ae49fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ef67de-8288-42b4-87d3-343629b85631",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3be6eca-9b1e-496b-951b-037a7febb1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea11d69-ed9c-4e4c-b800-ef52569f6871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7804caff-fd50-4266-a2f0-de49c62ffedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde46ed9-0f0e-4826-a7c9-7093e2c42e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf212d7-0650-4371-9ac4-57772e9ce98b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44903b76-3bcc-491e-8869-f508ac1a37f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8b0557-c440-44be-8a89-b9522edf210b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7bfc08-aba1-4992-b244-689ddd457431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab4b4f7-c135-4bbc-8a6a-5a744131182c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5811628a-46e8-4a2c-80d0-29277188eb8c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b410131-57d7-4de6-bb1b-82dfe2acc42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a3ab75-6219-411a-8ab1-34bfc512b565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cfbe2c-bd03-473f-b1e8-32c95c184532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3861c6-2e13-4c04-82c1-175ebbd5a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be01444f-b3ca-4988-bc9e-49c578770b40",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8224419-201a-4423-87c2-205495415655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b196a3-c646-439a-81b4-3a57b4de1479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d2ea86-bc8d-4a38-b0c0-49516de9330a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5c142f-9978-4de7-bef6-9ebd50ac3fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0534a08-7a0d-41c0-a62a-b8941d521eea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221b1ec7-fea9-4ba7-b4e8-2b588940c208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a33901d-a8b7-404f-aa2a-e05006394a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7398fb25-e53e-4c91-815c-1e4e7e5d4aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "684545ce-0569-47b8-891e-3291f339d0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349d876d-fdcb-44e4-add9-0caa71fd578d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5d6dda-fd0d-47c2-95b9-9838bfb3dd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88045581-8206-4463-bd89-4665abf44598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd2a584-2c84-4b84-97ba-f4fc3438f136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfd622e-c596-4b92-9f05-f2dfb71a8bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798724da-ec0f-4e40-b606-a207e1fdc3df",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6ab503-e9f2-4663-a986-36242adc9cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85fbd23-1ef0-4516-b61c-552ab4d51061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413cd0ab-0575-4cfc-81c6-d3b5bb64230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1d82dae2-6262-471a-9518-2caf33ea5e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0924f9-b5e5-45f0-ae84-57a56192cfcd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80417e4-5ffa-4ddb-8be0-236e7f2b1939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7653b67e-82d7-4383-a75d-2aa959f8e5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b78bdca-59ae-4d02-8cb4-9f97793fc733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59ba4cc1-228e-4467-ac2b-227a81ae5bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eb4f17-7b41-403c-a82b-a54dff1e013c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aaa649a-b698-4634-b521-085b7cb3a24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d34e4f3-7e52-4bf4-942a-b375501f769e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfabdfd-df8a-42a3-a046-0574e46a2ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "513380ad-3047-4432-9455-cce0ae8bb9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64ba66b-8bd5-4b3c-88d8-a7f31f1500df",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075b1cda-d07f-4e3d-85c4-cf62090b2e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a61bd8-c513-4ce3-a808-7a826ce64b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d4fd72-a344-42ef-b691-87ca7703308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc541f3-091f-4496-a124-a7a416406996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb9a06-e9a8-4f20-a9d7-5f4d0b7e77cc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7690e317-0aab-4046-b7b3-5f295ee25f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb221f36-6f03-4899-bf5d-507c99da9d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d62d3-03d2-4e3e-861f-f94dbe73ab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b32db3-641e-4565-9de5-705eef9cb235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d47c39-d8c4-48aa-92ab-894ab1936fb1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5464d7-e200-422e-a737-daf1de7e0b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cc87e8-a52f-46c3-9f31-dfee0fc51fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ba5086-b591-41ac-a6a8-2cc9096aeebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8314b7-77e5-4949-af2d-8b9fd413edc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8887d5-1fb5-4859-8a98-b94838aa7974",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2916511e-ecd5-4c6d-93f7-40ceffe39960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108b525b-dbee-4adb-b503-48b4e81b4e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f895fb29-f163-43fc-9b20-93731a39866b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c34cbc71-a310-4d1f-8615-a6503efdd9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956df282-d763-47c9-bd39-c05cf6f7ff03",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df030423-6738-495b-9351-84d4ed5f0e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0b90cf-de82-4677-932c-e9d7c315a918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6483615-6f91-4f70-852a-e924396d577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc16e76-5e28-4c43-9ce8-50f793f3edd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332dbe6f-2fa8-4c05-9ef3-9c8bb23e00b5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97b4e80-7652-474e-b09d-5a3a389e8394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cca9b5-885f-40ea-9eb0-ee208323fb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbe3107-6bba-46d1-8ee9-efcd1ab5928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e212f86-d688-4fdc-8950-59f663270980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf2d205-e93c-4493-932c-753017b26d74",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b616745-6d03-4a10-8878-8b64606d3025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db491b31-f913-4d87-9489-454346a2ffe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41419c67-7eac-469f-9dc0-da23a92275ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "782c1987-2f7e-4162-b683-624e1f0e7ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2bb8b8-f55f-49dc-aa44-7c4417efab0a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c8e2ea-492f-4ef2-bc57-0d07c7bf6c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8396a4b-1d79-4045-be58-d9e0e0b4b5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be3f88c-b949-4e2c-bcc0-96f0e23e57d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08f73b9-7a0f-40ca-a171-178b4fc5869b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2766e52d-e0c9-4381-b9ae-dbeaca1d8159",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4899a3-cc0e-4070-8c3f-022de681f1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7836fe4b-6965-4f2c-be31-b6a2440fb511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ed7a79-5f22-4d5d-bc49-c1274a13612a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebeba4d-3313-447f-a2ab-eb95366dac11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4a71bc-4268-4ce8-93fe-862ea5707061",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc11b307-7341-4d91-ae81-fa190afdae87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7119aa-0962-4440-bfb4-7f4ceb0202c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160debb3-07c7-4709-93d3-06b3019aecb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a2e0b6-802c-4848-8570-9ca27c99326b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f58d99d-f4b5-4d85-b9f3-be5685d8f40e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106edffc-9b88-48ce-9995-40a571175130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b564c8-a38e-49dc-8b62-dbbe46d17f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9322a01e-4337-4f34-9a33-f52649d0f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cf2068-2b0e-440f-a5bc-a41dabf24e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab44933-d1ad-4349-bd19-702488311ed3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbccffb-7468-4765-9d46-06062fb95871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3b0257-a831-45e5-b0b6-c6c0ca8176d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e500cd6-c457-49da-bafb-7b1809f6251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "455016a6-5fbc-4f2b-9f4f-43c328a1e711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53782be-74b0-4b58-adec-57d4c3d9d88c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee54c1e1-f992-4e87-9b2f-eaf157d0605e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a69c152-7f24-455c-9a59-0d18c224b03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1d2309-ac47-4483-81de-38ac60305a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f69a491b-ca45-46d8-901f-07940a1d14ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9be012-e9eb-4424-ab02-388291094b9a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7413ee40-249a-4d21-b9dc-9462589040b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0f0b0f-4046-4aa8-be38-e614e798ed86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c0b792-dea2-45aa-98b8-9ea46f45b26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75a726b-a11e-496d-8064-dc224a3557f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85426c21-2c86-445c-848c-c7e5949875cf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80382260-1e2e-4ccc-88e0-3176b629d40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e60778-fe20-40af-996e-ca52ee7dfa23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00253965-0fcf-4f72-b43a-8b32d1576c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "781919e2-5e59-4f52-9fc2-175955824729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aea576-be3a-445b-843e-0b2910451b80",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92afe3d5-2899-4d5f-9878-e2fbf2958be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7effbe13-21e7-40e8-af60-00c06172dc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b2702a-69d5-4c3a-8935-7b9ca011a17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad90f10e-adda-48cd-aaed-013075316a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de01d70f-d2c5-4868-8ea6-a59243e616b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86d38c5-e372-40f6-90a9-0a12a4a23cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75de15d4-4fd2-42e7-94fd-ffea6c8e8350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3504d4-a1ff-4168-8e5d-bdd4b8706085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c72ff1-a4b4-4940-acd3-1506452afb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71336bb-a253-4d1e-a182-4db497885010",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64df75a1-8572-464c-9bcb-211ec797023c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163898e8-9dc3-4305-a75a-d965f5161b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6cffd-2791-48b4-b9d8-3491a68eb207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4fc9c2-8d9c-460b-a19e-297864a27261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43db7e47-144f-4308-a214-36ad7f88a995",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a5ef12-ff24-4c59-ab02-bd90bf6759fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53ca887-1f34-4ca9-8407-2d4511be68c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf419af8-49b3-4a32-b2da-19fb5f202ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d83e0a84-0f1c-4f61-9fcc-14dbf8105abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bc7daf-7612-4869-b225-138d0327e6d6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cf4b14-bf36-460c-97e0-9cccdfb49d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78982219-3210-42bb-a6c8-08977fef10e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351d5265-6de7-4961-afd6-37c730c46429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1fbccc-9f52-49ea-a71b-eaf63df74200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b33cb6-d8cb-40c2-9059-3c86d5c47351",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732c220c-1171-4c6c-be33-8bf79c940c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd1fe0f-cdfe-4146-ad15-b9d83eeedcfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b52b96c-42cd-4776-ac1d-df69a750a066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc47a4c6-d1a1-420e-9b78-e0658050667c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f9ceb4-94b5-4912-8700-6d98cb6a829f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5912297c-2454-43ae-a2ca-1647e33f0e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f1b408-20a4-48fb-a3fd-f2afe1865ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881d1639-f6f1-4bd6-b9ae-1473a135104f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0397b0d0-2864-4015-ab96-6bda474baa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018829f3-70d3-47ec-81c9-a43ff4dfd853",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6ddef4-3f01-485d-adf9-9e56c493ec91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de4c38e-4aff-425a-bb82-dd8cd8b946f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3dd0d0-5fa0-4d32-9737-0a0aae58407a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "920bcf8c-93aa-4643-814f-14d226a3320f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2263a121-2a60-48aa-bf89-028b6e932a14",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae211aa8-38fa-4c01-beb3-59609b626ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e8b350-27ec-4e0e-a66c-14fd829f07e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ed2b0e-0423-49d6-abde-6ab68ac76863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e39a57-63d3-4492-8963-447b1b1e94af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8973c77-a268-400a-92ef-a8dc4e692a28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1f22a65-423f-4aab-905a-be922702dfd6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ff8ef2-0538-47bf-8ff7-f4b699fd43b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc48757-f934-4b18-a9b2-13f6a3fcb86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf7fbee-55f6-4aa1-b0a4-9dbba02fb2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e38271b-39f2-4217-b50f-4b8a508d8fe5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b72182e-efc1-429d-92ab-c54f9957ae06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8df039a9-c200-4285-9998-032c0265f0aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b376f0a-bc17-4170-b5f9-ae2ce28e14e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55d4fa80-6a7f-492e-87e9-90d2635a3435"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "806c606a-b058-47ca-ab74-c3459135bfe7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6c87287-f640-4b3c-8342-2ecf93cf3563"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "687e359f-d0fc-4cdf-9511-8470913e7a4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2057b78-27fb-48b4-8fc2-c4b1c3c2bda1"
            }
          }
        ]
      },
      {
        "id": "0fcc662f-31d1-42ac-be4b-5844017bf801",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b92c1139-9370-4c44-a161-b45a892dd860",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dda9f93-a9e0-4189-859b-13e6a9dbec70",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b37d395-48ec-426d-af7b-a3f9cee57454",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8562ee8a-378b-4b1c-bbad-e9894f5ab567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0af5c54-5322-4f08-86c2-e6b17a075956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f99b5c-49f2-49d8-996a-ed8434d19795",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e324c7fc-e77b-4c30-adec-4c95b8f83f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbeef0a-3eb6-4b33-88ea-87f78f8ed322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a4a77a-8b53-432b-b6b3-0c9d4abfddc2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa94808f-117c-4ac8-a4e1-82e36b453ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2669387c-3e6c-4bc2-87e5-a8fa256e428f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c933d38f-e7ba-4680-924a-686f550054ae",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c0c7c3-d24c-46d4-82f8-7c77c2056e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2465458-3e66-42dc-8afb-e099be9d62e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f5f97c-6936-453c-b15b-99e26fc4ab29",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e625f43-81b2-4be9-a7aa-86ec231356eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53129486-93cc-4fc2-8fc6-0ede7b214a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a321b37b-7d41-4b11-b4c4-bf408621e292",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122f4d1e-84ae-4983-b30b-087112d72873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6cb434-0eba-4269-b6ee-87815f46054b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdb59a3-2a89-40c9-88f9-b3205ffd599f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0fb14f-2544-4e2d-a7cb-ba518339865f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c15b70-970f-4a6c-a6c2-1faa1cbb5127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0d3dea-9bb5-421f-88e5-99dc18402490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a05ba68-f507-45f2-a89b-6fd53b0b0ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb79f2b-7bf7-4d56-a2fd-1a8630be45a5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d725a0-c0cd-434e-8b77-25137e774437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845cac1d-721b-4666-b916-b2510b4ee700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c900f6da-a567-4b59-9846-c23795f74c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d12b6b-f4ac-453a-ac2e-2f47f966aba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418a8aa1-600f-454c-adfb-6a1857430b3e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0aeb1f-8441-4b84-8b2a-75a0753b095c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5563f34-42a1-4292-838d-ba1931311876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65057a27-f80b-4d65-b945-c315ef8a3b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363b19d0-5971-4090-b93f-86bbef56dd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac02867-145f-4d8b-909f-70251c78750a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c5795b-04cc-43bc-b84e-a6ee8d292157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a3af4d-8c80-43c2-9843-76e49deafdf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9f311b-a5dd-409f-b0f3-43407a88d261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da2138b-92e5-460d-a566-950b90bc8a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b155348a-80cf-449f-9813-db6c5ce71459",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88723883-2ef0-47c3-9ea2-851d7f2dbca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb291806-b705-48f5-b11b-9e06f5435f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0b1a37-bfe2-470f-bf9f-6584bd16241f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b527f229-7ea3-49e3-a034-c974f2bdd50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b3431a-1a1c-4a07-b9c4-a0962e6a95c3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa42e6b6-1d1c-4012-8b27-29d1b3181902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e014da-d436-4640-900d-e252c05b0cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfbfa48-3c92-4bf3-8ca6-978fdf856ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fd1247-ed96-4ac4-b11e-3fb14aa178f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bcb46a-2870-4025-9742-a57815b33b00",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a863ab-0bb0-4440-818c-d336165801ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b0dc37-4e0d-4658-87ac-de0bd9363194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48c72a4-861b-43d3-bbec-6f5e75636529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18b586c-8464-4949-8e22-14d5737541e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4eca39-1d79-4b1b-9d41-38efc863248e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a172687-cebe-4f31-aebb-897bc011acc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58169d17-4970-46c6-a56e-665b6ae06cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a1fdce-e945-4aeb-8d55-a42a411b6a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5364d3c-9510-46da-b91a-b94d405d453c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d201b2d-e2b5-4b8f-83b0-37deee508dda",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d901ac-474d-466c-a1d6-d3bbf1b6bda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1216ae1c-da51-47a5-ae06-79f0ee322a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0537ac-0be3-4f61-8c88-7c425789f680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e37465e-116e-494a-828e-2acb6765627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535f4719-192c-40d1-89de-83a837eaf2ee",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58765291-5bf1-45d9-9a10-8f30dd4cce9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6afb36f8-fe10-49f1-9223-595f8107aace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22102c8-9fbf-4499-ba11-abea2c9e8ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf88c18b-6e17-48f5-8cfc-7661f45b548d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9094e1a5-579d-4bf2-aace-3328b7abf138",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9013d1e4-3d46-472e-a196-fd28c19d902e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16047a52-13ef-423e-b4da-8d071d3c9d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4fcff8-c1cf-4a88-9da5-9bce001365e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eb61a0-3d74-42a7-9b67-15f8479a0e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df39f10-0117-45aa-a917-c48ab1fdbe02",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250b3cb7-ba28-42e7-8186-43471b0c274c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986e94d8-7efc-45da-9985-1fe1ff39496f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24645a0-1687-486f-b92c-e603c27d9443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857a0db8-12e4-4a9e-9add-b4e3c1075d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f68bfb-cc62-4300-8a40-de886896abcd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbdc2e9-1ea1-468a-852c-e2eed7b4f83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6235663e-3d18-4c12-b633-5fe89de00269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d34e2f-7236-41ba-b4cb-8fb3ee26ee93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1746146a-b96f-40c5-9757-d011e64397e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6e6121-96d1-49a1-a698-d96503edfd05",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6299ac3-d85b-4e26-b82f-5226d93accdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71c65fa-d186-4273-87ff-920074221ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac9aa64-df3f-4d48-834f-a87a722ce804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae662bc2-023b-48cf-a909-34c2d04f6b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16db99f-1b15-4359-a68e-835741cc920a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c186160-5fc7-41bf-87a9-2c5917ca5027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2279d86d-fb42-43ac-96c8-28594f5f2a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9887cb58-6082-4e81-bfec-4102ec643352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12994b3-8209-40ed-a92b-05c45be5f10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c004b5-93f5-4e24-a5c4-3850307fc7a4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a98f92-3d2a-457c-be40-a03d58ceabd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993cccbe-3505-4bb6-af25-72a247ff5c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d25fdd-f0eb-4008-80f9-5ddb09004582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101b9562-ef08-45a4-8ec8-e4d0a8eac8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc48767e-2f18-4441-85fe-7ef69362bd57",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c264f90d-5537-458f-9a5c-a36bd419c660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1257ccc-d2a4-46df-b002-744d214ac700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d6e27e-5b07-40df-afc6-526f583c55c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f2d7c2-bf6f-4b34-8a17-cb54a0264cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9712f5-d79b-4bda-96cb-65e292045d16",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792e15e6-d2f4-4923-bf4a-1a7239b98288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2b7a2e-fad4-4040-b998-133009091374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d9bb7a-1fe3-4922-a91c-4fc75d9230c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31224755-ccaf-43ef-8848-80a226b8e72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1cd304-ab31-4943-ab10-f8401bb45f20",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc28abb-4b9e-4279-a984-8c45b766d384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce7ceb71-0e87-47aa-a741-11ad185f5e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b658e4-6c73-46ed-915e-0a67e887182a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f766a00-0725-49b7-9092-f2ac7324f984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4003fcc-d8b6-4bcd-a5c9-cc2ff87948f9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd5ec93-b376-488c-8f58-8646f7c677d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4edfa39a-5112-4535-89b0-ec436bfc392b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9316e58a-a0b5-4053-a2c0-d79d6bf0b29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dadc9d-7845-428e-b831-142e9f09d692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842edb34-e140-4ea6-9603-a660f9accf70",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16e4d8e-f6bc-4ca7-8478-e125d68cd697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b008590-3356-4beb-b3a0-665742f8d6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7e03f6-a1a5-421a-87c1-a64e4d073267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cfe5c1-cb1a-4168-9fd8-795c3b8fc763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21f8499-f2b5-4801-9c22-3047a98eba6a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77e5e9a-c019-4f98-8256-752f36892b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f850470e-8cc0-4676-a7dd-b01218563476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cff00de-ad2e-4e01-90b6-f31edd615799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d453984-575d-4391-a3e9-ed52b26a0af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6d66fd-0438-4dc3-a119-d99d7e975416",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add08e2c-38b1-49b7-924d-20632d617f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a98a0590-751c-46ed-9e37-6861c6e59948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af6d85b-759c-435d-a72f-050fa956e7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45face0-8918-4158-8d71-fe18abac01eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1381f3-0a1f-4245-8fca-9efd07664a81",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c87a384-b9f3-42ce-9201-7f8c492c88ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88efa4b-c84b-4b24-9588-23a5e9b89635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4888221a-619a-4f2b-97d2-653cca42f762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57212472-3e7f-4ef0-b500-49f29424b934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a38647-810d-45f7-8403-8b2dd2a163d4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1054fdb-4403-4cc5-ba92-63d84ce760b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee1ab669-5838-4bee-9668-3222250f275d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbe00b2-cf8d-4ac7-95fe-e34b2fc1e7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09e8ae1-d938-4adb-a73f-60a595212aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154fcca7-9e93-4426-9bd6-9c74a13bb9cf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd8de86-1e97-4439-a420-3431063224a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd899f5-e89b-4c0f-8cdd-e6c5239b682d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27270f48-2580-4d08-b0be-5a3e18085191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9f523a-7a48-4499-98df-266840a2ba0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba31cc4-dc33-4d30-99a7-6053320c4539",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3b6569-2eb0-47ac-8584-8ef104f77307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5800063e-ef2b-487d-98f6-6a615bacfa25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ae5582-41bb-42df-b857-1cff9deeb937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f4c982-a10d-40b7-97c0-a8fa93f38536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69279be-82f6-4dc9-92dc-9b767c1c6016",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8227cd7-52f6-437e-b5a2-e6be15857140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171f1d21-a0e7-4a44-9cc6-f0f249df4070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043da398-8446-430c-a851-8c29f475e31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472cfe07-88ab-45a7-92a4-b5752bd9e0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101d9e80-a8f5-4c5c-b44e-f7a079364d94",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d5921f-f5c0-47ff-abfb-9b511515ded6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f228dc18-3e74-4427-91bd-0f82930fc118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1520259-d4cc-43c9-b4ba-a365b0f5c263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bacfb8-ab16-4524-b485-e49b10c2f8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a0ed95-9178-46b1-b679-04b9395a7178",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f14d448-3cd8-4edc-ad5c-b6ce99248f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d77579-8ac9-4bf0-9ec7-eacfddec8035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c62523-b4a3-4341-8a9b-614ea497d5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d8c937-4ae6-402c-9761-69e051ff099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814c2e70-44b6-4a9a-8e99-d3cc204c3357",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201a625e-fa1f-4851-8a8e-1bfe3daef38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01562ab2-55a8-45b1-9445-4670c2118299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f755c79-6a46-4892-bfa3-50c27b7068c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154bd823-915d-43b8-954e-4368fd78c1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e231c52-31be-4518-8df9-f76a935cda4a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c56507-57be-4386-884d-50137b97b1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7717b6d4-0881-4d69-974b-547acdc2befc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361f3e23-7b2f-44a9-ab9f-007ff20dfd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddfd35b-a9eb-4156-888b-7a5ee3ee370e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b246813-5f0a-4b88-b8c8-2453916f997d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20066541-ed65-48e9-b303-663076b40516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee29b8c-51e5-4d26-8d28-26ad33a35b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a084526e-ab2e-424e-b5ff-24b8dbfc701e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284cfa03-bd40-4f7a-88b1-96f7cd26f71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5010e591-5d3e-458d-999c-9abd31e75cba",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88549f84-e035-4300-ba1f-fd588dcc7030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213cac0d-252a-464e-986c-f80936e36375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23719a6f-1c0f-418c-a28e-2ffbe641e336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6850b64c-1948-4aa0-9c53-35847e5098a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7446a6e0-0a9e-4990-b725-542367a85a70",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f8621f-9cee-4597-a996-6c160aef3893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8bcc9c-4d87-4c8a-80e5-8cfbcd87ae0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2d79c3-d378-45bc-bab8-3bde951e0352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b33f09e-de58-4436-8cd1-cbde22dc424c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6ef207-2246-40d0-a04f-d3c614d470a0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593cab75-c4a4-4119-8d31-1a12a5e672c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6771a858-594a-4787-aad0-3f16a5eb7c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0160fd-6360-45d5-8792-4f8d5431b410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247e094f-6fb6-4688-bf4d-57f0a94235a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc10b8bb-ae10-46b2-8750-8ca731f3ad23",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd4e314-1208-433f-8513-fbddf646d6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf8d020-b1dd-48bd-bbad-de370f5fbfc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcd215a-66a0-4c37-8513-0edf85fa6211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccc123b-49f0-4b22-b16c-31edcd2019b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e7e02c-89a5-40ec-893a-b50a56baebc2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e60964-d106-43a5-9e43-bd5da2d8b6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fdd6fb-fc5b-4c09-b842-37e248817bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea92a559-ab32-45d3-906a-e2d70b0c4f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1b8085-279b-4120-90cf-01b20683ae05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e88c21-037a-4141-b43e-fb8ec8d73c18",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7aa784-9d95-4e19-9cdc-c1bb6cd5b9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf13714-a579-4421-8e8e-c694f68f02e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5d212c-f544-4a12-8b0b-99904a7b3dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a639a2-382e-4673-a579-a94859abfe01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d0560c-9c6a-4f5e-a0a7-fbac49a720db",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fa39f1-ae06-4b98-a3dc-06ab64921de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee8e273-4ad5-4f9c-aa3c-788667475252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a352aa9-448a-49a8-8a1b-c9a7f3d16ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d09f02-dfc4-4183-a42d-c6d3c892937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fcea48-b8d8-4244-831d-ca0e5426b7c8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a03711-cdff-4947-818b-f492884113c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed2188e-8250-4a45-85e5-964553ed3776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb20931-6400-4c17-b06c-7a126a86c06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05de0ca-caa5-47cb-a83f-a740a46e6b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5888c3-8268-44b9-9c01-2f1e75d1f05d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc3a17a-970a-4c6a-8805-3575fa0f4d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d7d18e-138d-4082-93e5-79d7647c796e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae43c510-e5dc-479f-bce9-9281412e1c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdb302c-bef5-4e50-b143-18c6f6d6685d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61580416-6a72-4bea-ab5e-07098032b54d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b80410-a943-4b9d-8d24-fb2dd6a0de8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc86b76-1c3c-40a6-a588-12ce981f158f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea7d379-d571-42db-8512-f75261e2df6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6a03e1-66e7-44b6-b928-62b6a53af5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0df4ba-9868-44a7-8f14-982ff2edcaaa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9113c8b-6c00-454b-98f8-fafdfe8a3b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5650c4de-f07e-4bdf-a517-6ddd83f32d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ffdb49-7ae0-4502-bad8-6d944a12f7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbd82ec-0ad0-4514-b7c8-302a6501d7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4834b1a2-8f0b-45ef-a3e4-803f7adf2980",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d634efca-ab5d-40cb-9ffa-74f074a68758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dac69f9-6ae5-4052-8a33-65e611b06e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f385451-1985-439e-9dd3-ceed7f5fb09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3b9b92-edb9-40d5-910d-81de73925b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03099f0-9b59-4d5b-a32c-7e6107286ca0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b28f38-96bb-49ad-bcec-f6cb560cb813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6c1f5e-f44e-43dd-be50-d96f31f787cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9654ce26-7855-4c7d-9729-1c3e56db0745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd255a5b-9cbe-4e30-a472-b554823553a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5264afe-c055-4dc9-97ec-0667103c001a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249d4112-c6c1-48bc-8a2c-bc0978322561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a4a294-68e0-4694-8908-1aea19c20832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d6315a-5813-48a7-8059-f389dd43a12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3360d060-2756-45ca-9591-9f02b67f717a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53c6f1e-f04f-4569-8e95-b63ddb1c87f4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b7e245-faa7-4842-b40d-2ad198f6443f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c3f349-fae3-4928-8284-bf6e92e535a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879b0782-193c-4bf4-86d6-5b0de8424dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597da4e8-0078-41c9-8d77-4e4ceba2abfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1820a805-3c8a-4dbc-b7d2-b6bea4f932ec",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9284dd-7103-41e1-938d-91df6cf0a88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1269d272-237a-4015-9311-e1dfe1db1c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe93e07-b6b4-4feb-93d1-de819fb9a1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd431c8d-835b-4e81-83fb-69dad51d286b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fa8954-f933-4385-b29a-ee0b84c67971",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049cab2b-2d6f-49ea-af2d-b63aec2a7760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6197142-53fe-4355-8318-90e91f29bf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe63ef7-0052-4c4e-86be-eb86bac7eecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ccb6dd-0909-445a-9a84-97d05d39c5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913228e-b66b-4e93-bed3-5e90193fe31d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb5607c-7948-4d23-90d4-bfdadf2c405e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c875f71-c1f6-4251-a106-43c32437dc4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f80d704-5e40-4b5f-a4c5-039dca3d98fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da23ead9-69e0-45e1-9459-68a56f00c991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07109c3-0704-4686-ad2b-a5bf128571d0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049bbcd0-8842-4633-82d9-df87384cefe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e2cbe5-bb63-4753-8112-744f21b1b80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba75cf3-811f-4f4b-9aa2-4ca6b9027596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9803b234-2dcf-4d4f-b193-6d282ec666be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fd4f29-e67a-4512-8c04-df44edd97b66",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035c439f-ce76-47cb-ac2b-16c64c0a62b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ffd242-7dd4-4b37-87b6-05fe17809cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3030b84-5f1f-40ca-9249-cbed4de519cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e33cf8-b1b4-475d-b206-4c7683952e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff59eee8-6f0f-4eec-ab7f-ffe9a76185f3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8693f662-ba99-4c33-89df-201043c53676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbb721b-ce18-4eda-b930-2e88cbf45035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63043991-eb75-49e5-9f8e-0c123c36b7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4421293d-1549-42f8-95df-a498ab03a9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f65288-8b29-4504-a56c-f781d8ff4139",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588d4ccd-6db6-48dc-9429-cddb300860e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06705ed2-c0d5-41f8-a90d-4054272adaa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f10e0b2-ea6f-4a85-85e1-82ed1c8f3b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdd2053-6294-4e43-9896-7cdb62f4047d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af68d69-1ea9-4d62-b861-243e40921a0e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd291736-6afe-49ca-baa9-0b58ba2066af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8dd912-069a-4097-9d88-61c730666336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d955047-e003-4f8b-93e0-d8a2a105ea9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e00811-754b-46e4-8aff-766e5e5ae42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fe82ee-f116-48cf-8f61-53366a966e3d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1493b18-8acf-4bb1-a015-36dbf7852414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db42ad3-1241-480b-bf4a-9edf192bc2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e56a8a-9be9-4844-ab82-504d4fdacaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad8005d-7756-4bbc-8066-05fd461f75d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb46297-078c-4b71-8477-433b7bdfc3e5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090b3b49-e27a-4f84-b637-bbe9b3d56e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552acb57-0f37-4480-a1c4-2322aadc6cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e9abe9-42c3-4f6f-ae3b-8b14416cca5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b754f5c2-6c4e-45ae-aff3-38969c4209f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addbe55a-10fd-4e20-9ef5-f144722139dc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfa09ba-db38-431f-829f-c25dac05b88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb0fcb9-9237-472d-9699-725be419a179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a8771b-1dbf-4aff-b458-0301813329a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8eff8f-b20a-4c53-91d7-4174fe8c4880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4330535-25e6-4321-844c-8c5735bb6059",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a6811c-648a-4dda-8d82-b339fa860237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e293cb12-c265-4ba2-a6b3-be67bb55c6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f628974-03ed-41c9-b4a4-d1b5a67de706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9964690-a138-456d-bdac-33aed4639f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bab24b-e8ab-4170-859a-d0b299b4b137",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e932ff0-dba2-43a6-bd6f-0a5d98c8bb5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5247a317-969a-4408-ba70-ec31773b3dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c708194d-1988-432f-811a-ce02246205ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4b47de-0dd8-44e4-812a-56a334261a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cebf835-56da-443f-b36d-8a81de023ef5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2974d291-e41a-46af-bcf9-953ad5426d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7d850d-00e8-4f28-ba12-ed426dac2029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76c6659-2276-425a-af8c-4ce6cf5b07ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afc002a-0efc-4e29-b161-9db5ffc2e3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaef0ef-e4ef-4810-89ec-800b4b746a99",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9bd20e-14c7-462d-b525-8fa1c81aea36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b8593e-cee5-4b7e-bdc6-873c065f8ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12445fd-a277-4c45-9ec1-a7ff984e123d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5bac67-82a2-45f8-b8d0-a77822ae69fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b2e934-f5a5-4578-b721-66a025a9023d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8a2935-8e61-49e2-a4c5-70249eb97da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90f120a-b1cc-4184-bb1b-d5446f0ef974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb98a0e0-6d10-4ffa-95ca-1df061c93cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371ac6ef-9da3-4095-80ee-0d35a09850a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853ebd6b-a5c3-4e5a-b17b-fc93801c6800",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654c2fa1-2cdd-4e6c-8b1c-40b69c985395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8190da23-e4b8-460f-9222-f9aae40d5ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8db39f-dde8-46f7-a066-87e3ded66d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f45e14d-109d-4b1c-bbf5-f6b6f5e60783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3036ad52-b0ce-4f55-93b9-ab77ea25c5d6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc21357-f10d-4da5-b234-2b845a6d0530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1789b030-a8ee-4374-82db-2d8689b03283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0623c09-7a74-45bd-920e-00391194a36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93686ed7-c565-4ed4-bd71-ab0a51a2eeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1e80f6-54ec-466d-ade7-02b1c2852be7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7060d1b-c7ac-4ccb-bd2a-f299bad7b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0b033d-fd0f-4a87-9fe3-9c93c65af5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302f8e1a-0e35-442b-8f19-c4b8a55f78fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c62d34-7506-4b4c-a7e8-08594638c6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54043b34-11e1-4e36-ad7c-5a3a9f76eb02",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd044e8-2f75-47ba-8ebd-3d436a3f92d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044169bf-9714-404e-85ce-3b3f9590b75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea37d86-3f01-44bc-928e-153952fa3d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c998b69b-7c4c-432b-9a32-01d6de3a9498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba6d7cd-ea5b-4f34-a0e4-0941f9e38f2d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59ac1e0-8813-4e27-8c95-77963b7f6b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378472b9-f601-4243-aa2c-29dca513e0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f1ff6-9cfa-47f7-a8c5-26f2d4e126bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b651b9-c257-4106-b303-44ff8d9d1306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584e2d58-e29c-4d46-8aa4-9320770e1e51",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfd9d80-7fbc-437d-81a8-ee41a839d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b3bb5f-76aa-48c1-8fc2-88d1b980ad1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314ea3ff-c087-4546-a29d-ea67df3950f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bbc11c-e389-4dfc-82c1-989e12070045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dabefca-36fb-4424-9c7f-c2cc129058a5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499dd3e8-a2d2-4ff1-9111-befb70b09d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "125f55fe-fbee-4c32-8d26-5e55f3564158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd34cf0-53a0-42d7-b6b6-c0e709e344b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2add9fcc-2c3b-40eb-9ea4-c115ea3a2c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83db804e-b082-4490-9ad1-244c4b5892e1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192d5400-7280-46d6-aaaa-08b15cd10494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46777efb-8caa-4768-8fab-a3ecf61c900f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0a8273-1b02-468f-8a5e-640a9b56f7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80ef266-5323-41db-a987-6aa551facb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b917daa8-b811-40c6-a0c2-1ddb5ee9f58a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f6187b-8daf-41cf-a5b9-eeca56f8877d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7e50eb-4ebc-4319-8270-7944c7d30167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c492443f-aff6-414d-8ce5-ab250e4ecd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40df7f21-9de9-4e05-9fe2-501ba1c8f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fbefa3-6b95-4005-98dd-fc9fd408fb52",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47ee348-e2f1-4596-9b8b-84e391082b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a676015a-0dee-4818-9afc-d83f74956d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aff5bf8-503f-4623-be80-0d5022671655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1124509-1d68-443b-ba31-71887710eb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47205d3a-02f4-47af-a327-9728c7e846fa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2cf217-be98-4d55-8dfc-937631ef1fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43421149-cf97-4bcf-8218-c01be7dfb570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f92f13b-f93b-4153-a1f7-194fc49770f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb90a5bb-5bdf-4b31-a74e-c11c3ca3c99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adac2db9-f204-4174-91c6-2c4ba7d0a685",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1650032-1187-4fe0-a5a7-b20a4ec9a468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93946775-ae5e-4bef-bfcc-fee35b4a8900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacc7e5d-78d3-479e-aa38-ab4266e4127c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53013a15-b211-4b04-a8e8-8ddaae87f56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b9a094-8eec-4778-b1e1-9b2c566ec14c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394b74e9-d827-4bac-9f47-8ec8310029aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319c2cd8-57c7-46b2-ab0e-b2926a64290c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf238965-b190-4c81-9c13-c1781d144991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a876fa51-6fda-43db-bf02-eb0142065e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6598aba-6467-48b4-b676-dd81a875b217",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026822e6-4aca-489e-9bcb-a2c2a5636f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38740cb-1427-4b07-a056-802bd7ac332c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1a3b13-e555-4fb3-941a-feb1a965848f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4e32e7-85a2-4284-8aea-7c5f0fe2de9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5efa489-f1bc-4b40-9f80-705296309182",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e5572-99c4-4f69-a324-c76fe8dbfbd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08834f7-eb9e-4e9d-b097-5e2c2d900520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7136ce21-4d49-43eb-b27f-980fefccc98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0743724e-e419-4c2d-bc1b-ca5986e3248c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae044b4d-c46b-4732-8271-bf76e1732442",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef33b2d3-42d0-47e9-8268-7156be26ec20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d59e097-4b21-49ad-b302-d412a258844e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072e28c2-9587-436e-87da-08b02cf4bb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adaaabe-c425-41e6-9761-d3d0a98e3d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055b9fba-9a1d-4d30-a0da-49cc903433d6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57df7f21-85a1-430c-8269-e7672db30091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d93f883-d650-4059-9d27-09c75b15b739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d828cbb4-3bf2-467e-876e-2adc1a342f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b89b571-6c6b-4eec-adc3-c7c3ddf12135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3834435b-003f-443a-9b64-c8514d48fe7c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe2f0bd-1078-472d-a62b-6342a23658f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e761346-5eee-4e57-8524-353cb7a238ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bda2c9-36fc-4249-be90-35da2e3de1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfdae2d-ab2c-4fae-80e8-764502f93c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a229b5b-c59f-4fad-8367-1f7bf16b2fbc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2795cf5-3ce6-445f-928a-609bb17e3f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b57593-0c4f-4b14-a12e-af15bcf49237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88c2a1e-b156-4f74-bd24-1a0d8958f655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876bdb1a-dcb0-4b80-b0ef-09615e52fde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b64dab4-fc5f-4a16-b888-87840367cc89",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbc0ffa-db67-4804-b3d7-12529d311503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2924b183-a2ef-45c6-9595-40c1445ec339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3cde7b-3f93-4c80-8f10-7af711430039",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0b327c-2ee3-45c3-bea7-8817967fb912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5a2ade-d6fe-4b78-811c-0dcb04613bb6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e98502c-c5f9-4c1f-aab6-a04cdc251967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7a6cf5-0e78-4bab-a399-f54c060b357f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9477b092-1387-4420-bf81-f9fd7a4a1cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a44f29-a99b-4d7c-869e-b8e0038e2bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb5115c-ff66-46b9-a527-dbac36692269",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46efa712-adeb-4ca1-91c9-e9473fcd6099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ea3d9d-2873-427c-b182-1912c2c28aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e091cfaf-bc43-461f-bd24-fbb82a11de69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a56f64-1920-4174-94d2-0cd679ae4f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af60066-7996-435f-9c8e-873e9276284d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228ba98b-43bf-4689-b253-2934d8cbf9c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15134f3e-6155-46a9-9c21-d44697793e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1e21ef-dc25-4b6e-9093-73e5662a5155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f88f5e-f0f8-43cb-b8d0-9f9eeee62489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1872ff6a-a46b-4d60-a01d-5968f75554be",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0389e68-e759-41e0-9c3e-4136a1dc3cd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c9e111-5b96-41cd-94c8-d9bded6ea06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dda1474-ab64-480b-88a2-bd5961aa045d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfff984-efa7-441b-887f-e2c4777705bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5db672-cff6-4fea-87a3-215a70a7d41e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de435c44-d517-4885-a40d-93877fa20316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe0f7a9a-8121-449b-8a90-3f5c7736948c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9696c4ab-ce92-4af5-8d0f-712fa8431406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b71c17f-18d6-458f-a069-f01b63aea675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111e9c66-4ba1-4a82-b7a2-b88a76a6bfbb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9861bf8a-f20d-44b1-9396-bff804fdf848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13fe9f6f-0616-4bc8-a329-ea47a67c87d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87f15fa-7e10-44de-ab3f-ae36a634f32e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7348478f-e552-419e-b363-d75a1af9d63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13927dcb-cdd0-483b-9bbe-1d37c4b4f1bc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d92c873-54ea-4be7-9f34-e87e26f125aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d522ca-09df-4be0-8778-a73cb61611f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1959ed-0d65-4cbe-ac48-012e5ba25cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d993838f-a62b-4058-945d-e795768c2050"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f3125a4-fdd5-42fa-b789-4794570018b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "024d4130-6e12-4de7-8918-e10e17cd13bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1917c373-ae37-44b5-b947-7f58ddfbc2d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4af10cfc-4731-4289-b159-bc2aa1484db6"
                    }
                  }
                ]
              },
              {
                "id": "264390c5-026a-427a-8fe7-2e9f55052400",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76c9e2fa-2384-4300-8f51-1801ee7a5a46",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9794da-1cd3-4d4d-9822-7dbdb47e2d63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2bd2b1e8-9a62-480f-a204-76d4db6efbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2beb0047-5a94-45a6-bfd1-0a1b991af40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd9be86f-30ef-48b9-9aea-fcd54d73ffb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb1453b3-b82f-4618-bb4a-9a328d10650f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9436b394-941b-47eb-a5b6-dd545c198555"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f33aeea-2a41-4e20-a303-e24acdb0ead0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5443df1-2ea5-47a8-83ff-c2aa35b95e46"
                    }
                  }
                ]
              },
              {
                "id": "c0de77b2-f72d-4abc-a706-3407e2451aaf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b8d973b7-2d3c-4246-a167-26a31d71de44",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0533c7-0048-444f-a705-604ac5bc52d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3d1a9040-bf08-4c52-b0b9-c9ab9589a812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcb26af-2533-4bd8-aa94-b8c25118c1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da0b710-a688-4f2b-896a-570acc4a0a77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "593a42a8-351a-41d9-add5-bd0b03653ff2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96f6ed92-0b89-4dd7-938c-856a27eeabcd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcfdc235-9808-47ff-ae50-32eebe293ad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5751561f-cc9e-4289-881e-3bcbad40f50e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f51f98ab-7402-4061-b5fb-bd1be556d976",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31e6fd82-e3d1-4542-b035-3f97977d0da5"
                    }
                  }
                ]
              },
              {
                "id": "35cebce3-ff8b-418f-8726-bbb2f90107db",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23bdd95f-d1de-4b9c-8efa-7c3ba07f7afa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1f74a60-eefe-494b-acfa-6e31d4696759"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "618246b4-3d68-48eb-9232-1be11323f097",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5144482-f80b-47a5-b6e9-ddeb8f6e3252"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7946c6b6-3104-4c5b-b982-27f189f19145",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "85d2bcdb-95ce-419d-8637-a8ff59851d97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a894665e-0d2a-4328-a6cf-408843aa1def",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60f5860e-cf67-4044-82e6-52e1af17d0a1"
            }
          }
        ]
      },
      {
        "id": "38356269-f602-4672-91f7-9cb62aa0a62c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f3e91498-7880-4208-8571-844bb80f7822",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f4923c0-c6db-421c-8f02-5be8312e0e4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69beea2a-7b99-491a-bafb-930b6e8f44aa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ebee0f-04a2-44d4-9c2c-394f8c56e277",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "755b0a99-52a4-4891-95b5-dbe5afc88b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4ea204-491e-42c8-81ed-2cc9183b9f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "804dc9b5-d397-4512-aa22-2ed02cd40692"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e96aadbb-43b3-43fe-b41e-477e18a0a1d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa12f64d-afa6-4f37-8693-7b04ab1bb206"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "116c2e81-e663-43bf-9c08-35a31aa99de3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67a5b185-7ab8-49f6-a2d3-619fa402b1ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e92d18fe-9cb3-4f91-9a1d-deeabd14546c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d1feafcd-78f1-4c74-ad5a-8afc8005ba17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb3d6295-3891-476f-9bfc-bb29c3e0addb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a4e087a-ba8a-4d9f-b05a-d353534f1480"
            }
          }
        ]
      },
      {
        "id": "70c980ce-6ac3-4fc0-88da-ed53d38629d3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c50d9b58-c4db-4768-be9c-3381ae568fb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7e568fd-6b6f-4a5f-a6b6-c06efbc0d788",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16dff397-1e5b-4be6-927e-bae32bad0994",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec386de4-f84d-46bb-a2c0-792bfed733f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "663d4d73-d9c5-44c8-8836-ddd20d075eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0750f5c7-e3c5-498b-8b92-5383099d795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4762eb5e-e0c1-4f3d-9819-3c18f161f457"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "247dad3a-ba35-4d4e-9c1b-17fb5f4eb83c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5e643c4-cb41-437a-8876-a3d587a371a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76cb3586-55d1-4bb8-b37d-3e37777c8e8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7e264e1-d0fe-4b29-b3b9-c4910bc7c590"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f979ae67-3868-47ff-8060-d3701841b924",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be792342-69fb-495c-bea4-91ceeb313f59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c91adddc-cfa6-4bbd-9bf6-a73d7f8aec4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "111892f0-c30a-4b5d-8d5c-c1d4d5ad58ca"
            }
          }
        ]
      },
      {
        "id": "7156309d-6af5-40fd-994f-a4d3575ef52f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "702eebf4-598c-4136-ad1f-2d26d717be27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ed10f7d-294e-4149-967a-01698e24ca5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbcd9b3b-9cc4-47cd-8982-ebf1ce7580de",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f58d2ac-508a-4280-8440-c9181448d503",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e579f06-b191-4a6c-8d82-841af87988fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb68a6c-eb84-4fba-bcab-dcd865369ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fd9c760-abf3-4495-b5f3-b55daf7d673a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71064c09-1f5b-4e05-a9de-66b8f33d3bc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2e768d6-d48b-42b7-b1f0-924e5e85c420"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99befc23-54e0-4a57-9cc7-da992927e14a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "453677d1-c51b-4dfb-a7ff-687b149b863a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62d48d69-b08a-4f6f-ba07-0f5b0d188752",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd149abe-f0e1-456c-8bdc-3b2c84a44ec9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b41fa14-0294-470e-bc58-51b94f2bdf05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9897c35-6109-474b-b89a-f7436a2aae35"
            }
          }
        ]
      },
      {
        "id": "2185478b-6f27-4ba3-9f88-7644a87a3fd5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "345bbad1-79ad-4654-b129-f2c6790d362e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b2aa63c-3d1a-4d50-a458-043666e4a74a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f2d85cc6-4418-4b6e-840f-4d0b4eba05ee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0324b03-a52b-4444-857c-667d021a6fba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de9e90d5-5f97-40f4-91e5-6647d8163cb6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 84.71031746031746,
      "responseMin": 4,
      "responseMax": 10206,
      "responseSd": 677.2452659199693,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716684013045,
      "completed": 1716684042674
    },
    "executions": [
      {
        "id": "c2245cad-6c7d-41e4-9bbd-f5a2da4a2950",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6105f295-4679-4afc-8f4a-97e8a80372b6",
          "httpRequestId": "2cf3082f-c8ba-45b8-b1fb-6bf98c3ee90a"
        },
        "item": {
          "id": "c2245cad-6c7d-41e4-9bbd-f5a2da4a2950",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d6ca1154-a2e7-4ae2-8d1f-7402f70e5b46",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "0c596e09-1e46-4359-a91b-e8bbee4e945f",
        "cursor": {
          "ref": "5faf7b32-3bef-47c9-96ca-a5ec9b79b4d7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0aa01906-3d7a-4e3d-81b0-57310a1a7e40"
        },
        "item": {
          "id": "0c596e09-1e46-4359-a91b-e8bbee4e945f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ac733cf7-b9a7-41d6-9223-23546417bfed",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5e1a2ef8-d9a2-4f35-b7c2-01f0b63aed09",
        "cursor": {
          "ref": "b071769b-225a-4eb9-8560-fdf6e3331b63",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0c79a3be-ef2f-4f2b-be7d-07ed9a96e517"
        },
        "item": {
          "id": "5e1a2ef8-d9a2-4f35-b7c2-01f0b63aed09",
          "name": "did_json"
        },
        "response": {
          "id": "70cbfe03-853f-4db5-827b-3ff233b15f79",
          "status": "OK",
          "code": 200,
          "responseTime": 236,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f782c3-426f-4b97-bef0-eb3bac8ae8af",
        "cursor": {
          "ref": "4a514ca2-202c-400b-9790-87d23232cd1d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3049fd7-7c1a-46dd-8b94-341361b6714f"
        },
        "item": {
          "id": "d5f782c3-426f-4b97-bef0-eb3bac8ae8af",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ef81653-5eac-4163-a467-c8bf6c39e1e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 406,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f782c3-426f-4b97-bef0-eb3bac8ae8af",
        "cursor": {
          "ref": "4a514ca2-202c-400b-9790-87d23232cd1d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3049fd7-7c1a-46dd-8b94-341361b6714f"
        },
        "item": {
          "id": "d5f782c3-426f-4b97-bef0-eb3bac8ae8af",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ef81653-5eac-4163-a467-c8bf6c39e1e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 406,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e201934-e94f-487e-89f8-71d2f2311489",
        "cursor": {
          "ref": "a7b6d773-c55b-4e04-894f-f53a07c8e641",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7495c93d-7593-4730-966b-dc01a83c0ac6"
        },
        "item": {
          "id": "5e201934-e94f-487e-89f8-71d2f2311489",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0d717cb9-685e-48fa-8d8e-dc141e6da314",
          "status": "Not Found",
          "code": 404,
          "responseTime": 20,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35a00e2-da65-4e1a-aba8-c7ee21a693ad",
        "cursor": {
          "ref": "9d17e95c-feb7-4d4a-b532-82a70dce616b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e8dbc2af-6d61-4e0c-a5a2-eeb6be7ddd6f"
        },
        "item": {
          "id": "c35a00e2-da65-4e1a-aba8-c7ee21a693ad",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e1704601-07f6-48aa-9158-09d62b25ad51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edfe06d-2c1c-4981-98a8-f7843cc6bb02",
        "cursor": {
          "ref": "e7b5fa39-fc3d-4280-bf59-ffc1cebf68cf",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d678a862-95e7-407a-a1e6-6f242e64235e"
        },
        "item": {
          "id": "0edfe06d-2c1c-4981-98a8-f7843cc6bb02",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8c8d7f59-9ad5-46ac-9be6-6f7a03d6a340",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a11bc4d-ca6f-47fc-93d0-ffc4e8871546",
        "cursor": {
          "ref": "9c15bf67-a908-4af9-b9f6-a04481de3901",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6c59b093-b753-40ed-98dd-3a7741d1905c"
        },
        "item": {
          "id": "8a11bc4d-ca6f-47fc-93d0-ffc4e8871546",
          "name": "identifiers"
        },
        "response": {
          "id": "637328e0-7dbb-4cc0-9682-9fe8654ff35b",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b037d22-abe5-4ae7-beef-a21374129a86",
        "cursor": {
          "ref": "14f24ad4-d5f5-49f8-8b22-cdbf204382e1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "203bb60b-207a-446d-9bbc-fd2db026fb80"
        },
        "item": {
          "id": "7b037d22-abe5-4ae7-beef-a21374129a86",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d4a5a0bd-83f4-4873-8f66-5ce3050c26a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59727275-1c06-4725-99ce-b6b42623fcdd",
        "cursor": {
          "ref": "7fdd99e9-4a5a-4b71-88f0-a509f164e251",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9428ac13-750c-4fff-9f0f-779386c69a40"
        },
        "item": {
          "id": "59727275-1c06-4725-99ce-b6b42623fcdd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3f71db07-cddb-434a-b519-d1ad876daa51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713a0bd3-0d86-4d1d-8133-cce1aef17d73",
        "cursor": {
          "ref": "bc2a58aa-d4db-4114-947c-f7742868a94b",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "991265ce-8b02-4ec1-a042-23c2e68be7e8"
        },
        "item": {
          "id": "713a0bd3-0d86-4d1d-8133-cce1aef17d73",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "32f37eaa-4644-4ef2-a156-ddc5264490a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1bba98-1ec1-46f7-a565-6e659273bdc4",
        "cursor": {
          "ref": "ee80b454-cd4d-4d2d-9cf1-74bc5b2c3dc6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "181627d7-e886-4bcf-b546-a68cbbb92ee4"
        },
        "item": {
          "id": "2c1bba98-1ec1-46f7-a565-6e659273bdc4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "280518d2-78ab-47c3-8658-d737b8fddacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34829ebd-21fb-4c05-b373-1c0e6e9b1e91",
        "cursor": {
          "ref": "90fa6abc-298b-4e83-9bd5-556df1f06ce2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c1b9a13a-cfb3-4f85-8249-f0d7c3e7ed62"
        },
        "item": {
          "id": "34829ebd-21fb-4c05-b373-1c0e6e9b1e91",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9b5e3608-6427-433a-8f16-c2398c398100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972f884b-ef4d-4de1-8806-c95061304ad9",
        "cursor": {
          "ref": "c49baa2e-6af3-4460-8fc0-6f3785b5d342",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8da2fee1-271a-4f80-8474-92ca74402ede"
        },
        "item": {
          "id": "972f884b-ef4d-4de1-8806-c95061304ad9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "10a85395-2d07-4439-8f15-ae773cc30c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8982ca2f-1284-4bd8-ad0a-0d26bafca9c2",
        "cursor": {
          "ref": "417952c6-4ecd-494d-8362-c3449fcc8c35",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dd37f2c6-5ffa-4a84-8f80-67f2b719af41"
        },
        "item": {
          "id": "8982ca2f-1284-4bd8-ad0a-0d26bafca9c2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a23e5821-3635-4320-a457-100c312a71fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fe0aa2-e8d5-450c-b02a-a995e01c84e8",
        "cursor": {
          "ref": "4bf5d45d-36d9-431c-a2a2-1903b35e43eb",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fc161074-b706-4276-96cc-c0551fe26e79"
        },
        "item": {
          "id": "a3fe0aa2-e8d5-450c-b02a-a995e01c84e8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e477c379-506f-48b8-b448-7664fd56dc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b77f502-3a6e-4a5b-876f-075a04697346",
        "cursor": {
          "ref": "7b9dc9dc-366b-4c6f-8803-d84099ecb2f5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "06da9679-a175-4ed6-8d55-8b0275fd9917"
        },
        "item": {
          "id": "7b77f502-3a6e-4a5b-876f-075a04697346",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "95b3f403-29c0-4e8a-ad72-5422f6aa3b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfc306f-d991-4ada-98b8-bf9449539a79",
        "cursor": {
          "ref": "53669a9d-0afa-4c26-89b5-38806bfd061b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5425df97-5c78-4cd1-b4be-1b5af7830a99"
        },
        "item": {
          "id": "0cfc306f-d991-4ada-98b8-bf9449539a79",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "263b083d-5af9-4d7d-98f0-8368163a25a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f274fad-63cb-4695-8958-344e37e4fe29",
        "cursor": {
          "ref": "5feb3a68-7ac7-411a-b0a2-9be696aa53ad",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2ce87fea-9848-46f8-a59a-c5b601f4e0bf"
        },
        "item": {
          "id": "1f274fad-63cb-4695-8958-344e37e4fe29",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1baef429-0b28-4050-9c1d-438bf8a32426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f91f3a-3a0a-4f56-bbb6-dbd88568b967",
        "cursor": {
          "ref": "e9c8caa6-1020-4522-80a2-e869128e56ae",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e8988732-957d-4063-896b-4f396e6be969"
        },
        "item": {
          "id": "d4f91f3a-3a0a-4f56-bbb6-dbd88568b967",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7ab1d660-3d70-4190-bd9e-e53f72148cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a4d565-5304-40f9-9257-a63571863767",
        "cursor": {
          "ref": "f9ab918c-9daa-45e4-ba91-4d7fb59bd5cf",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0196284a-25a7-4e2f-a0d0-3e7d36a98dac"
        },
        "item": {
          "id": "a7a4d565-5304-40f9-9257-a63571863767",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7655d818-40ab-4a2d-85a7-f004ec36b0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fbb0e5-2bd8-4057-ad15-18b6d99d19ec",
        "cursor": {
          "ref": "fc1c89e4-d1f2-4f0d-acb7-639d7f724927",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "168d0f94-0d28-4db1-b6aa-04fc52722810"
        },
        "item": {
          "id": "f7fbb0e5-2bd8-4057-ad15-18b6d99d19ec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "67ea37ad-960e-482c-bbc1-74ea9dc1b9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14dbc01-8146-4807-8b87-1160f8807b20",
        "cursor": {
          "ref": "bbd4b65f-6d81-4a22-bd8a-6944666179bb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "957e4ed8-125b-409a-8b8d-b5b7aa7253f4"
        },
        "item": {
          "id": "e14dbc01-8146-4807-8b87-1160f8807b20",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7f8bf16b-6ff6-40d4-b963-f0a65f17ceb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d2b88e-1f1c-478a-87c7-9006a86fc72e",
        "cursor": {
          "ref": "d9c02e99-818e-417a-8659-6784154b6a55",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c02d0628-6eee-431c-892d-2023e7a446d5"
        },
        "item": {
          "id": "59d2b88e-1f1c-478a-87c7-9006a86fc72e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5c922c20-ece1-415d-946f-5d01f9ed4764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10f20ba-62e5-48ac-a400-7d61933b2809",
        "cursor": {
          "ref": "553578bc-4c18-4543-85a0-ceb2a7b8e0ca",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "834ae6cd-bba1-42ae-ba3a-3d974cce08ba"
        },
        "item": {
          "id": "f10f20ba-62e5-48ac-a400-7d61933b2809",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "885fd5bd-91f1-46fa-a1a7-a59910f0c1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76057be-e2f2-4cc1-b92c-d4d8729c4470",
        "cursor": {
          "ref": "1405f1ef-7680-40d3-aa38-3f2bfd7d0c1e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1560e492-053b-4ccf-a89b-26ae49691f73"
        },
        "item": {
          "id": "d76057be-e2f2-4cc1-b92c-d4d8729c4470",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7d8d4d28-2629-46ad-9226-5517e7afe34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfc69e0-d061-4b52-9284-052d98ff2ac6",
        "cursor": {
          "ref": "89ddcf57-a71a-414e-adb8-41861d506df7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "61d4f837-9d51-4845-9588-47cf3563fdd0"
        },
        "item": {
          "id": "7bfc69e0-d061-4b52-9284-052d98ff2ac6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1549dc47-1fb0-478a-abc8-faa1584c279e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2782e247-1cc6-48b6-8ac9-80b594bd0ec1",
        "cursor": {
          "ref": "7cb3ef44-3412-46d8-bb83-804176e2cbe6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "17ccb6e4-442e-44e6-affb-db9fb7319a6c"
        },
        "item": {
          "id": "2782e247-1cc6-48b6-8ac9-80b594bd0ec1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d4080dbd-3240-4cf1-b47b-f3aa8cdbeebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06e754a-c007-4eee-81fb-d4ba098712e1",
        "cursor": {
          "ref": "b6d52235-cb18-48fb-b82e-0f82552dd9e7",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f59e3690-e6d2-498a-b08c-44f984923e09"
        },
        "item": {
          "id": "e06e754a-c007-4eee-81fb-d4ba098712e1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4a102110-3606-4604-9c68-a2707ab9d9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc970a58-ba0c-403f-8166-1b71a913bb7b",
        "cursor": {
          "ref": "a26634e5-3dc4-4cd3-afcf-9f1d30966a0a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9c416d68-d527-4724-bdd7-8cd213f661dd"
        },
        "item": {
          "id": "fc970a58-ba0c-403f-8166-1b71a913bb7b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0dd409d2-50cd-4171-91a8-ce698d700a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93e56bc-6111-48b3-8f95-038a1af85b0e",
        "cursor": {
          "ref": "a42dbf6f-d868-43a8-b00f-ce356c8b4bfa",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fe4ff9b2-1785-4b3a-8c90-bcba7d97b01a"
        },
        "item": {
          "id": "c93e56bc-6111-48b3-8f95-038a1af85b0e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a582cb62-37aa-4aeb-9973-fb316636a61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830c7df5-cc46-4a22-b5f6-9a0ce2b5628e",
        "cursor": {
          "ref": "7f8fbc1f-2db6-4720-8ac6-d8d6c364d408",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2bf4aa7d-2f34-443d-912c-faf3b58be1c2"
        },
        "item": {
          "id": "830c7df5-cc46-4a22-b5f6-9a0ce2b5628e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "14e8fced-11ea-460c-93b2-30fd3f6902c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dde55f-4b57-4998-a869-4b15fe1b2f5e",
        "cursor": {
          "ref": "ed9aa202-74ea-4074-94ae-4ebda15a59b0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fa434464-305d-456f-a41d-016414d86713"
        },
        "item": {
          "id": "d7dde55f-4b57-4998-a869-4b15fe1b2f5e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8452e181-ad54-4c42-904b-750e84dc9e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce0f9de-609a-405f-a26d-b63dd4a2ef16",
        "cursor": {
          "ref": "c262803c-0d7c-41e2-bbbe-e3e5a26c3ed0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "15d5a318-922a-4647-820c-cf0ddfef4360"
        },
        "item": {
          "id": "1ce0f9de-609a-405f-a26d-b63dd4a2ef16",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "513bb618-d927-4b50-9a79-d0b61f89c8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0946c2-b954-41b4-a7ec-30a0042b9701",
        "cursor": {
          "ref": "13b8389a-1b99-4151-8960-48312111ed9e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "45fee10a-062f-4206-af16-e57671bc6f8c"
        },
        "item": {
          "id": "fd0946c2-b954-41b4-a7ec-30a0042b9701",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a96f9bdd-4b6c-41d5-b00f-9f2b65682cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24e9c72-a2fd-4365-bee3-fabb177b7c97",
        "cursor": {
          "ref": "96a03ff6-1371-40a5-8b52-e08c6ec0285a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c064ba25-f21a-4e20-bf5f-9595f59ca6df"
        },
        "item": {
          "id": "c24e9c72-a2fd-4365-bee3-fabb177b7c97",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7de3c964-092c-4ce2-9173-dd4acc4185e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed1e619-c199-4410-b15f-cf5ba450f47c",
        "cursor": {
          "ref": "5574ebd1-8a98-420e-aaab-fbe5730f7352",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a8627467-6162-4f37-9720-435bd22b6da0"
        },
        "item": {
          "id": "2ed1e619-c199-4410-b15f-cf5ba450f47c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "74437fe2-4913-4892-be1a-6179f763c9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a7f7e4-766d-43e7-a0c9-11f93577b826",
        "cursor": {
          "ref": "363345ba-9e81-4b06-b140-24e9a6a5768c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "96b3e32e-995a-423d-972a-2e9164b79d04"
        },
        "item": {
          "id": "39a7f7e4-766d-43e7-a0c9-11f93577b826",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f2012d1c-bd96-4253-b1bd-ee6011a4210e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36333dc4-de08-40c3-9b76-3e3561ff0883",
        "cursor": {
          "ref": "89bf50b5-d9d6-41fc-98b4-26f217c5f429",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "28049329-476d-48f1-ac7d-941796031fab"
        },
        "item": {
          "id": "36333dc4-de08-40c3-9b76-3e3561ff0883",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b7c40066-1495-47d2-ad70-fdfeb8336c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a684c1af-e7dc-447b-95f6-069eea14033b",
        "cursor": {
          "ref": "f8b93b5a-52ff-4a7c-a158-841eb12a4da1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e02d6e23-2f45-49c3-95ff-66473f22c4c6"
        },
        "item": {
          "id": "a684c1af-e7dc-447b-95f6-069eea14033b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2d7a438a-8ecf-4e9f-939e-c857aa723c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373583c7-4c8a-4e7e-812b-175a2a287c38",
        "cursor": {
          "ref": "72e57335-96a7-4bc1-ae94-166874f6e14d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a0c6f698-83e2-4e90-a0d4-8ac022ce0954"
        },
        "item": {
          "id": "373583c7-4c8a-4e7e-812b-175a2a287c38",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "40579213-3747-4f10-a6fe-ff72a60c6f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20508d1-24d8-4536-ac8f-6af28ef08b17",
        "cursor": {
          "ref": "abbcffe2-b8f3-4dfe-b677-599945d6f9cb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3ff72f6e-02a5-4cfd-ad33-864b33f9bacf"
        },
        "item": {
          "id": "a20508d1-24d8-4536-ac8f-6af28ef08b17",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "edb68162-0844-4a5e-b641-99fd0bce67c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa5e99c-0bcf-48e5-b08c-9de61d90a364",
        "cursor": {
          "ref": "1f0b62b2-3672-4281-9e62-0584bade5315",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f2ca5612-e89e-4f4d-904b-e7a4c44c76d7"
        },
        "item": {
          "id": "bfa5e99c-0bcf-48e5-b08c-9de61d90a364",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e8c86436-94bb-4a52-9335-55c1fc16429d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f14702-ee7f-44cc-b37c-d0bd6191331d",
        "cursor": {
          "ref": "07e7a037-ac1a-4047-af35-a177ca01b5b3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1208c3dd-5537-4b90-a4a5-26d8fad9d615"
        },
        "item": {
          "id": "24f14702-ee7f-44cc-b37c-d0bd6191331d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "46211bda-19f5-45f2-b120-069df0ea0c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5affa9a9-66a5-404f-9a9f-f6d41b089868",
        "cursor": {
          "ref": "45da0f7a-1c70-4b86-9874-d29badae5356",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a5c86983-8ae2-420c-adce-78d94f034e9a"
        },
        "item": {
          "id": "5affa9a9-66a5-404f-9a9f-f6d41b089868",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2d5af782-59dc-48c4-8496-e31e38db089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c4f574-3254-4bcd-82e5-5d75b4b15694",
        "cursor": {
          "ref": "cdde0ff7-b570-4aa8-be91-21e5aadb4409",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5f669876-ac1e-4dde-9b63-d086b195dbb4"
        },
        "item": {
          "id": "d0c4f574-3254-4bcd-82e5-5d75b4b15694",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5b99c990-a04f-4166-99ba-66725ed941a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d608204-989b-427d-8804-8f05c95449bb",
        "cursor": {
          "ref": "94b72e3c-cc6d-43d5-a3be-2363af5aba7d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ee10f00f-b991-4315-bcc4-c5b549de25ba"
        },
        "item": {
          "id": "7d608204-989b-427d-8804-8f05c95449bb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4a195b14-310f-41f7-918f-ec17da4d4e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f6a770-4aa9-4500-ae95-e0d3186c5c5f",
        "cursor": {
          "ref": "79ce807f-6efa-4854-ae5f-d60f6bef41e9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bf0357ac-8bee-43c1-9e82-ff89aef88564"
        },
        "item": {
          "id": "b5f6a770-4aa9-4500-ae95-e0d3186c5c5f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9d9d1776-6809-4ba2-ac99-b8d6b4c7e344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa18fd6-b83b-47d9-b6a0-5f9f2a28b4b9",
        "cursor": {
          "ref": "b32f89c7-9ccd-4431-8c94-2183060243b0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cf5af00c-2608-460b-9e1a-18f03fe8912a"
        },
        "item": {
          "id": "6aa18fd6-b83b-47d9-b6a0-5f9f2a28b4b9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9b2d8f0e-96ed-4e76-a6ba-0612bc507a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f1526d-e507-4cef-9776-e897c23691f5",
        "cursor": {
          "ref": "26b644f6-1dab-4731-95fa-0de5ac700fc4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ec0ceefd-2d9f-457d-91b1-72b0c834261a"
        },
        "item": {
          "id": "19f1526d-e507-4cef-9776-e897c23691f5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e890e34a-81a9-47e4-a014-3430b458f43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a7adf3-1ced-4b49-ba96-c322e0723f3a",
        "cursor": {
          "ref": "ff6b75af-a313-430f-b364-51b2fc8da5f5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3a003aa2-622b-4055-81bd-48965a275523"
        },
        "item": {
          "id": "71a7adf3-1ced-4b49-ba96-c322e0723f3a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "20b327b7-a3af-4be2-9d29-13d630a4e7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b482cacb-708a-4afc-9e57-462cdbe45fea",
        "cursor": {
          "ref": "f9566308-4214-460f-bd50-35cf3d344942",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9f05a82a-f3b4-4c2a-b6e9-ed3198c904e6"
        },
        "item": {
          "id": "b482cacb-708a-4afc-9e57-462cdbe45fea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "682fbd94-a0be-4a05-8f59-cea1596127cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc2cc55-1085-462c-ba04-7eb065a5f7a5",
        "cursor": {
          "ref": "14ac3210-51fd-4176-8541-43d44801ffce",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cced157e-d9e1-4267-8c65-4c2b57ab2fce"
        },
        "item": {
          "id": "fcc2cc55-1085-462c-ba04-7eb065a5f7a5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "953be5d2-8533-49dc-9e51-3078a2bc9a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e373aa79-33d5-4da2-8215-ade4fdb2d71d",
        "cursor": {
          "ref": "ee9e1188-2801-4511-8cdc-5eec8523d749",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e538f7a5-2c8f-49e6-a151-60ba5e556618"
        },
        "item": {
          "id": "e373aa79-33d5-4da2-8215-ade4fdb2d71d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5923e6cb-d0da-466d-b22f-763dd55f9719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de47a48-c9c2-4641-b675-cbb9f10d285e",
        "cursor": {
          "ref": "e8a80705-b94f-4584-8c02-d48c0079bc8f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9cc8da73-e91a-40b0-b31e-2b726422bc19"
        },
        "item": {
          "id": "0de47a48-c9c2-4641-b675-cbb9f10d285e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3288c6eb-8be2-403d-851b-01665f2bdb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454ffba3-5138-4c59-99f5-0f0ceaaf36c1",
        "cursor": {
          "ref": "5a2adb5f-af4b-4ffb-80c3-a1832a46701d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f2d3c80b-1c3e-4fd8-b938-18d7c0b74c04"
        },
        "item": {
          "id": "454ffba3-5138-4c59-99f5-0f0ceaaf36c1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8ba1811e-9c6a-45af-8674-f064221f8132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de54fa55-99bc-442f-b027-cdef7b09e5f7",
        "cursor": {
          "ref": "c91c1da0-07af-4262-adf1-6207467a563d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "21204d86-fd1b-40c4-8e11-bb14ab23a563"
        },
        "item": {
          "id": "de54fa55-99bc-442f-b027-cdef7b09e5f7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "35d8cf45-5bb3-4e1c-a001-9d74792a67cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6d004b-cb5f-4130-b471-b26c07762b45",
        "cursor": {
          "ref": "7ed619c4-cfff-4b57-a303-eff4beb61731",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ca887c98-3fc1-4d77-9dfa-57b66b7d9c88"
        },
        "item": {
          "id": "2f6d004b-cb5f-4130-b471-b26c07762b45",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d5ade29a-aa5e-4237-b187-3fae385b8616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f88762-b844-4674-9944-c7211bbbe0c2",
        "cursor": {
          "ref": "65e611b6-cdb3-4186-9615-0f756d42e07b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b010d1f1-647c-4580-9dda-e85a61aeb3e6"
        },
        "item": {
          "id": "e6f88762-b844-4674-9944-c7211bbbe0c2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "daa0b270-6fc7-4123-a6ca-0d79b264fa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b584f9-92dd-495f-bc80-2708df8812e5",
        "cursor": {
          "ref": "2a8c33da-0a02-45e9-86e4-5ba3e4680d9e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "529baa9d-3066-409c-85c7-b3f0c1b4f3fd"
        },
        "item": {
          "id": "e2b584f9-92dd-495f-bc80-2708df8812e5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "947892c7-a7e8-4638-b514-86506079e6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f08490-9cc4-4e4f-934a-98fe5321a488",
        "cursor": {
          "ref": "c978ca83-595f-49b6-b1ab-66a88ba80675",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "261d5833-362b-45f4-9439-89c9467eeb16"
        },
        "item": {
          "id": "c5f08490-9cc4-4e4f-934a-98fe5321a488",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "55ab82cc-9e66-4dd8-9bac-df99ff05efee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fec8cd2-f7d5-48b8-af77-7614b0a4b90b",
        "cursor": {
          "ref": "6e458617-bd9c-45ef-bd7f-ca25d251dd1b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9fab2db5-9290-4c1b-9403-5edf94833ec3"
        },
        "item": {
          "id": "0fec8cd2-f7d5-48b8-af77-7614b0a4b90b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "026bbbc2-9922-4403-aa24-ac11b9fdef37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525090ac-105a-4a9e-be69-011aea1b13d6",
        "cursor": {
          "ref": "c3c1a558-4b71-4fa8-b493-2499bf20bcc1",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b6edfe04-4aaf-4cbb-a044-6704d6d87936"
        },
        "item": {
          "id": "525090ac-105a-4a9e-be69-011aea1b13d6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "677caac7-0fae-4783-bdc1-42b25fafcb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f94c60a-d136-4ad3-9703-207e2beaf9e1",
        "cursor": {
          "ref": "5a758fe1-a810-4a48-9b1f-f0b5acd757ea",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7de201a1-8f71-4515-9e37-5a42bf93289a"
        },
        "item": {
          "id": "6f94c60a-d136-4ad3-9703-207e2beaf9e1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e188e211-96aa-461d-9463-77d04cb1bbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f226b3-c720-4bc0-aaae-db722fe8da0a",
        "cursor": {
          "ref": "1ba72518-3cc7-4d4b-a587-06a4ee8734db",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8070be85-62f9-4bba-bdaf-a119b1759297"
        },
        "item": {
          "id": "d5f226b3-c720-4bc0-aaae-db722fe8da0a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "293f2f86-b1d6-4cf3-a47c-dabca1ce35b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1ae274-0478-4b16-b111-3309e86fa88c",
        "cursor": {
          "ref": "5db6c59d-74f5-432b-8943-fab681f930f3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fc15453b-2564-484b-97b1-26968025a71c"
        },
        "item": {
          "id": "0e1ae274-0478-4b16-b111-3309e86fa88c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c9b3416e-51c6-4fcb-ab93-8a14617ea7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd51e1c1-5191-4f7f-b7db-ddf20f1afc53",
        "cursor": {
          "ref": "d3928727-5ffe-4e0c-bc60-d4b5d4072abd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "39e96406-0bd1-47a3-9c83-da0b16cbe3ff"
        },
        "item": {
          "id": "dd51e1c1-5191-4f7f-b7db-ddf20f1afc53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "51eb0735-88a1-4a92-9d1d-aac60fa02921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4157c91a-80c5-44b8-be5b-adfdb82aaaeb",
        "cursor": {
          "ref": "08f7e585-dbbc-4f9f-b86d-3029a73d844b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dcc6a0bc-4d7e-461b-81d2-76e4b24c766d"
        },
        "item": {
          "id": "4157c91a-80c5-44b8-be5b-adfdb82aaaeb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "50b6c981-7c0b-47fa-9108-24e77bae812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776d531b-b14d-49cd-8c35-99756f5cb076",
        "cursor": {
          "ref": "00ef8d90-5e16-431b-9384-c66c06087b92",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2d8252c2-dd25-48b5-b43f-1c0b7f51a23f"
        },
        "item": {
          "id": "776d531b-b14d-49cd-8c35-99756f5cb076",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "39cb5592-6e67-4b93-a1b8-a655ca840354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277efd86-ad0f-478e-8f7c-b8013f636267",
        "cursor": {
          "ref": "ff950de6-1ee6-4ed8-80f7-db6a3b560773",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "405b2b87-cc96-46ed-ae62-deb965471516"
        },
        "item": {
          "id": "277efd86-ad0f-478e-8f7c-b8013f636267",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b55e62bf-d8c5-4f57-8950-15ce80e2deec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9748bf6-f400-43bc-9c0c-f4ce9796d7a2",
        "cursor": {
          "ref": "41370178-6574-464f-84a6-f77d9ec8c81a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "844c1c8d-e068-4106-969b-2fea04a58625"
        },
        "item": {
          "id": "a9748bf6-f400-43bc-9c0c-f4ce9796d7a2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4c537b12-cc21-412a-9eac-9a83c693b7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc27ac9-031c-4bcd-b0e7-c90cd7b59634",
        "cursor": {
          "ref": "f5cfd21b-e6b3-4f3f-a73b-5c5c0b450179",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "510f87a9-213a-4ca2-8a52-f7d6133a5721"
        },
        "item": {
          "id": "3dc27ac9-031c-4bcd-b0e7-c90cd7b59634",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d0a65bf0-71c2-4dfa-8f17-f1906fcec4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f82ccf-8804-4e85-85b1-6c749d72c518",
        "cursor": {
          "ref": "2a6cfae9-f23b-4b58-9de6-e325ccf738dd",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f773f954-b25f-45b8-bd0f-fa2829da0b2c"
        },
        "item": {
          "id": "a9f82ccf-8804-4e85-85b1-6c749d72c518",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a5ecae01-d639-4409-86c4-f3315afaf97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726f2d0b-20c4-4628-a0ed-e2c83fa4c746",
        "cursor": {
          "ref": "48bb8781-8756-4420-ad02-918b428d810b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "27375922-57e9-4602-8857-348f0db9ed9a"
        },
        "item": {
          "id": "726f2d0b-20c4-4628-a0ed-e2c83fa4c746",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4de01550-e38f-49a6-a04b-4cf9d98194b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90d87b1-e711-4668-9614-c79fc3e958c6",
        "cursor": {
          "ref": "fe1ed416-be4e-4936-ace4-5d3d1d5f450e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d6ce9399-baa8-4b37-ae8b-37a029d4d7b5"
        },
        "item": {
          "id": "f90d87b1-e711-4668-9614-c79fc3e958c6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d6b6c9b1-e1ad-4927-abdd-2e1c32f650da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe35c76-bce4-4223-9f68-6a4f960d9f0d",
        "cursor": {
          "ref": "5bf42be3-a4a3-493d-9c45-67350a7b752c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "674ceef1-39a6-4ace-86db-d8cdba3289ae"
        },
        "item": {
          "id": "cbe35c76-bce4-4223-9f68-6a4f960d9f0d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ade551d1-b192-4c85-8879-df55dff532fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8667438d-7be2-4f81-877c-2d18315c0089",
        "cursor": {
          "ref": "6a573b37-f126-4fcd-92d1-1950affd0987",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fa0eab5d-cc63-4cab-8a44-e2a401c72989"
        },
        "item": {
          "id": "8667438d-7be2-4f81-877c-2d18315c0089",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c3a110d6-49e3-422b-b4b4-793dd6f1bef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee2e3de-5625-44be-b088-c58df25c32d1",
        "cursor": {
          "ref": "c1e2defd-9ce3-4552-b933-03765836f3b7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d6d28272-090e-433e-90b6-b5d6aa86e7fa"
        },
        "item": {
          "id": "cee2e3de-5625-44be-b088-c58df25c32d1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "de57f467-9891-4fd4-920c-9c123920273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d37fd3-18d1-4377-abf3-63d0bf7873f9",
        "cursor": {
          "ref": "e4b1d1a0-1bd1-4c9f-9db7-bd2905556457",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "717270a1-66c8-48a6-b507-f6cda708dd5b"
        },
        "item": {
          "id": "77d37fd3-18d1-4377-abf3-63d0bf7873f9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "867ca8bd-a62b-4008-86a2-da667e353a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5bb533-a343-41c1-9568-b32ca2699433",
        "cursor": {
          "ref": "aaee871a-0d0c-4327-9550-4dc932ed985c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1d0208ce-09b9-411e-873f-42b0fe3cccec"
        },
        "item": {
          "id": "1a5bb533-a343-41c1-9568-b32ca2699433",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6e9f7f7c-85d1-40ec-9f7d-5aa130dae032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddab097-18dc-441f-9f9c-b23892300bd0",
        "cursor": {
          "ref": "19a474f6-45e9-4f18-be13-1f1f0e521365",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f1234887-cbf5-4ae9-8ee6-c036752f145f"
        },
        "item": {
          "id": "1ddab097-18dc-441f-9f9c-b23892300bd0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a15d5f5c-b812-48ef-a300-55586385c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a329b4-ea1b-432e-820e-0a56c8fc2092",
        "cursor": {
          "ref": "b8fcc066-c35a-4f02-aa1e-dcd1fd5ec243",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "34903dd9-62b9-4ae9-9b38-a81f4c70965c"
        },
        "item": {
          "id": "80a329b4-ea1b-432e-820e-0a56c8fc2092",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8fc56cfe-4201-42d6-aa1e-d6491621ba81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106c6bf5-57d8-430f-acd1-4041906cf23a",
        "cursor": {
          "ref": "ad4b8e20-7db2-4f7f-955d-5bdc0942513d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "52648147-5c65-4e21-a16d-1f7c64989129"
        },
        "item": {
          "id": "106c6bf5-57d8-430f-acd1-4041906cf23a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ad67da28-e3de-46ed-9022-c23524be1049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc44a9bc-3683-447d-93ec-442d7a58ce1f",
        "cursor": {
          "ref": "1d94e008-d002-406f-b767-28bbe1922c7c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "329d8b90-d1bd-485b-abc6-79f230091801"
        },
        "item": {
          "id": "dc44a9bc-3683-447d-93ec-442d7a58ce1f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "15bf8445-d0ad-41b7-b22c-7da95bb8ad3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f198ac-5210-4094-bc90-22a6713fe650",
        "cursor": {
          "ref": "1185ea00-d424-46c1-9c04-5464f8b3e7cb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3bfa7cbe-f833-4368-b094-894376af742f"
        },
        "item": {
          "id": "94f198ac-5210-4094-bc90-22a6713fe650",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3df72e6e-11dd-4c3f-afcf-12deed505727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dd91c6-33db-47f8-9ae8-194959e7644b",
        "cursor": {
          "ref": "8182a70e-adb1-467f-a0a1-edcedab4d52f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ae947386-fae0-4ce0-a389-5661ebf113db"
        },
        "item": {
          "id": "d2dd91c6-33db-47f8-9ae8-194959e7644b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "17ed0308-0948-4635-a43b-8452430aeed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca4145d-b5b2-4519-aedd-671c54acb2a8",
        "cursor": {
          "ref": "b212865a-53c1-432c-8df5-09a359300503",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b0999ea9-d1fa-4727-9384-d0767816af27"
        },
        "item": {
          "id": "dca4145d-b5b2-4519-aedd-671c54acb2a8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1b19f634-d2fa-44e5-b730-5663c6074036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d0438b-2bad-4e47-9d1b-5d7a081a8f24",
        "cursor": {
          "ref": "0d25898b-0755-46a1-bc42-390f375b5d24",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7a926eeb-9f33-44f2-9abe-2eef06c71ace"
        },
        "item": {
          "id": "95d0438b-2bad-4e47-9d1b-5d7a081a8f24",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1dac1298-bd83-4f84-8869-63f489c4209b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbabeae-6ffa-4f01-8acd-a27f5bbb70ef",
        "cursor": {
          "ref": "d92728f8-b322-40e4-8e29-38dbd4398b4d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "12dbaea2-5b17-4317-a946-b4f70cacb7de"
        },
        "item": {
          "id": "2fbabeae-6ffa-4f01-8acd-a27f5bbb70ef",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3a26bcec-a64c-41d7-b2f6-f4346ffab19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e3f46d-c118-49c1-9363-975b22b1c4d8",
        "cursor": {
          "ref": "74578faa-6377-4849-b2bd-0ef18fccea78",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2cd2d92b-2125-4c84-9901-a482a3e2fb44"
        },
        "item": {
          "id": "c4e3f46d-c118-49c1-9363-975b22b1c4d8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9c15f374-035c-47cf-be8d-6612105ab6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f23d39c-eb82-4109-8a9a-746566a9b102",
        "cursor": {
          "ref": "04c3d049-a7d5-4319-829b-4327ece7dc12",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1af3aee6-508d-401e-ba88-1799a33e22be"
        },
        "item": {
          "id": "1f23d39c-eb82-4109-8a9a-746566a9b102",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ad2baae0-9e68-4edd-8254-72352dd237f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b64e25d-f977-4cb1-959f-d4ddb6f3960d",
        "cursor": {
          "ref": "215b557a-6adf-4014-bfa9-a581c3f16328",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1c84909f-cd44-4311-84a4-920b9b4af930"
        },
        "item": {
          "id": "9b64e25d-f977-4cb1-959f-d4ddb6f3960d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99c8bbde-6a22-4ec7-b227-fa27b2f6c4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da971354-feb4-4a4c-ae43-dcfa8767fa04",
        "cursor": {
          "ref": "6f447f8a-1967-444d-ae41-4d1fbbe40723",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "614ce46c-0b8b-48f7-8eca-0ee428cb8dab"
        },
        "item": {
          "id": "da971354-feb4-4a4c-ae43-dcfa8767fa04",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "37ba253d-d3dd-4281-a1f7-7278c209ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb59852-6b2b-4848-bc56-50acb29b4990",
        "cursor": {
          "ref": "2548e426-5ab7-4f98-9050-4fbe69d796a0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "21ebfd14-2a83-4c1f-bc1f-ff67dae7c8be"
        },
        "item": {
          "id": "0fb59852-6b2b-4848-bc56-50acb29b4990",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "590f44af-337e-4332-8ae8-6bc53288b2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18148d26-e8f2-4f7d-8409-cca7079fa193",
        "cursor": {
          "ref": "4f847e19-562a-42c8-a1db-caabe41d7693",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "52af7538-f5d7-4587-841f-15557d996556"
        },
        "item": {
          "id": "18148d26-e8f2-4f7d-8409-cca7079fa193",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "13fb678b-7e9d-4576-a496-1eada0da376c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8426c299-99c9-4694-bf06-dc1cba8c6d55",
        "cursor": {
          "ref": "616aefc3-4fab-4f6f-9a1a-594e33f729e9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c7a456b2-d756-4113-a405-6ded103b7035"
        },
        "item": {
          "id": "8426c299-99c9-4694-bf06-dc1cba8c6d55",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "faf1e7bc-449b-41b8-972e-51104139e067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1738a4d3-6b17-4f01-80d3-94737a2e4613",
        "cursor": {
          "ref": "f223ba5b-797d-412c-94e4-a1fd505e9cee",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1ddf66e2-6182-4e57-a4b0-dc1136cf55a0"
        },
        "item": {
          "id": "1738a4d3-6b17-4f01-80d3-94737a2e4613",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7ddee8fc-0e70-442a-bd7a-3b00c447944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06a24fe-531c-419e-a475-82615301f8dc",
        "cursor": {
          "ref": "3b172848-4172-4b46-8331-2df8368d66f3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ea33279b-cb95-40bd-a803-d516bfe1db15"
        },
        "item": {
          "id": "a06a24fe-531c-419e-a475-82615301f8dc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5f91b973-79d0-4ea5-bb7e-19f12375b74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a173ab5-3a3d-4044-b19a-eb540083da9d",
        "cursor": {
          "ref": "769d6363-d34d-4717-932b-8803ad4a76fa",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8f6dead5-f69e-40f7-b6db-779c4644f85a"
        },
        "item": {
          "id": "4a173ab5-3a3d-4044-b19a-eb540083da9d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6a086635-e46e-4432-be60-33cdfc1c4ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d4b558-0e3c-4e53-b72c-18edf5ed3649",
        "cursor": {
          "ref": "4a866a38-be1e-4079-81f8-436427d05407",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "09146580-ed42-4915-b7e1-7948a76cb638"
        },
        "item": {
          "id": "69d4b558-0e3c-4e53-b72c-18edf5ed3649",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a8e3330b-37fe-4367-a24e-eaee62e0a747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8077b760-07bb-49b5-bc1e-7d8f8a05037f",
        "cursor": {
          "ref": "29d26f58-5033-4367-ba92-8c1ac0c7856f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e98ef3be-e2ec-4d22-8294-2f42dc300917"
        },
        "item": {
          "id": "8077b760-07bb-49b5-bc1e-7d8f8a05037f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6e799676-4076-4f91-a6b0-dec9d7fa9e87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3532e3f-1242-4a9e-801b-e6e0871b4d87",
        "cursor": {
          "ref": "dfc69e0b-d978-4831-9744-6e7b7d8c9fc1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ef23d5c5-887c-4570-9878-f7c561d147c9"
        },
        "item": {
          "id": "b3532e3f-1242-4a9e-801b-e6e0871b4d87",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9249a520-4d26-42f2-aa19-70fb6d8ddad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f008f026-3eca-4478-9df5-26370e0db3aa",
        "cursor": {
          "ref": "4a70b58f-b37c-48cc-bb8e-60a1d6549173",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1c77bd5e-8408-45cf-be42-8eb64631b1e4"
        },
        "item": {
          "id": "f008f026-3eca-4478-9df5-26370e0db3aa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ee099b51-d514-4cf8-b208-de760c40d6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b6304afb-b2d9-4c0a-8388-1c15d8411688",
        "cursor": {
          "ref": "a10bac4d-74d2-4d04-a475-be0c2a0aeafa",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4195e8b0-3638-4b75-b995-28c6cc3f8176"
        },
        "item": {
          "id": "b6304afb-b2d9-4c0a-8388-1c15d8411688",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "92fb7315-5498-445f-9e42-94c6e102a8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "40094d71-ef75-485a-aa3c-14a768e3317a",
        "cursor": {
          "ref": "d63cc0f9-a1f8-415f-a782-64d512d5a0da",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8a1410ab-d984-4740-93a0-6238d367330e"
        },
        "item": {
          "id": "40094d71-ef75-485a-aa3c-14a768e3317a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b153abe5-0f64-46b9-af80-fd63dee31317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "cb752b01-428c-46f5-85fa-0c4c6dadca21",
        "cursor": {
          "ref": "611dacba-1bff-4121-8a93-fdec97d88262",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2bb6ed57-26f2-441a-a8b8-ea70bd1aa5f1"
        },
        "item": {
          "id": "cb752b01-428c-46f5-85fa-0c4c6dadca21",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1451b452-434b-4ca1-86e1-031be7072813",
          "status": "Created",
          "code": 201,
          "responseTime": 10206,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0b4648-cfdd-4408-b628-ec551fff5506",
        "cursor": {
          "ref": "4d9b6be4-2cfd-4756-bb64-8f28375ac0d5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "421c92c1-3992-4044-9ddf-2bf354b734e7"
        },
        "item": {
          "id": "ea0b4648-cfdd-4408-b628-ec551fff5506",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7d5c9283-094f-4af4-b7d6-aae0b9c09b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0866e32c-433d-40f2-b9f0-63a58742ddc6",
        "cursor": {
          "ref": "598162e6-dc1e-480d-8b5e-d107e314c75c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9a97089a-9f1f-4c72-a32a-eff71ec6cc0d"
        },
        "item": {
          "id": "0866e32c-433d-40f2-b9f0-63a58742ddc6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9e00d371-fe53-45ac-9780-3928146508d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c4a93fce-17ec-4a85-a060-00ff83cc1465",
        "cursor": {
          "ref": "20c5ffa7-c33d-4370-aa1c-f09f277919d2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f353b408-a85c-42ae-9549-a62359ef2853"
        },
        "item": {
          "id": "c4a93fce-17ec-4a85-a060-00ff83cc1465",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cb90dc41-2b65-4d0c-affd-4b1a498c5a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c9f15f-0a01-4738-8afa-ce0bbfface5d",
        "cursor": {
          "ref": "b86292e0-695b-4ddd-b686-ca5b6f678a29",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "61d8e8b4-5c6f-41d1-bce4-c9aac831d530"
        },
        "item": {
          "id": "57c9f15f-0a01-4738-8afa-ce0bbfface5d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d30fc9d1-0910-4d77-991f-f400e86f13f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d208160-5785-4bf0-88d7-0ad60c50edb6",
        "cursor": {
          "ref": "d5b8267f-e015-4eba-9727-ee36b1b621f5",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "757fb518-7125-46a1-b5bb-15a1d63a5918"
        },
        "item": {
          "id": "5d208160-5785-4bf0-88d7-0ad60c50edb6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3740e07c-1cf8-4c5d-a91f-a3db3b87a98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499fdd3d-81f1-460a-be9a-f29786e59139",
        "cursor": {
          "ref": "2f3355c8-e754-4b99-929a-4f1133d01c20",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a570a267-3463-4877-9c63-c0ac7ec46c06"
        },
        "item": {
          "id": "499fdd3d-81f1-460a-be9a-f29786e59139",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f69dbcb1-fb9f-414e-a977-40707a8505f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ef67de-8288-42b4-87d3-343629b85631",
        "cursor": {
          "ref": "670f364f-9a4d-4a52-9e44-3370d04ba6fa",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2e17cb2f-ef2a-4960-9b54-1d37ab8e49c7"
        },
        "item": {
          "id": "10ef67de-8288-42b4-87d3-343629b85631",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4cae3a5e-3edf-4abd-82ce-600cf6b79e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf212d7-0650-4371-9ac4-57772e9ce98b",
        "cursor": {
          "ref": "9319cbca-5b74-4fb3-ae8e-55c0c6996586",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "910be726-27c9-4f92-b549-a66c3c3e58f3"
        },
        "item": {
          "id": "dcf212d7-0650-4371-9ac4-57772e9ce98b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "33620c12-9580-4190-8e43-628c6509e262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5811628a-46e8-4a2c-80d0-29277188eb8c",
        "cursor": {
          "ref": "5d727659-3e9b-4fd2-93d3-64b75d4fa88d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "73dafae8-1b96-4b00-8fe7-7c36639c8040"
        },
        "item": {
          "id": "5811628a-46e8-4a2c-80d0-29277188eb8c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9d0d77c0-28cd-4025-9264-1d32f1c956ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be01444f-b3ca-4988-bc9e-49c578770b40",
        "cursor": {
          "ref": "407c08ce-372d-492d-a1b3-29a67c028a86",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "26e4e2d2-0416-480a-ac9c-6f91a3427eae"
        },
        "item": {
          "id": "be01444f-b3ca-4988-bc9e-49c578770b40",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "621a4ffd-4181-40ed-81c0-5445f7145a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0534a08-7a0d-41c0-a62a-b8941d521eea",
        "cursor": {
          "ref": "ce7ea659-8c59-49c2-ae3f-c3dfeeef7e84",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b2b978c2-2306-47ad-8031-dbf75bce567a"
        },
        "item": {
          "id": "b0534a08-7a0d-41c0-a62a-b8941d521eea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7d34ed02-f42b-4f97-af83-a0fa4d0fbcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d876d-fdcb-44e4-add9-0caa71fd578d",
        "cursor": {
          "ref": "f424158d-32bf-4adf-b6f6-05804b5b7a8c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c0f4144c-5bd7-4616-8aa9-e6b0afb1f2c7"
        },
        "item": {
          "id": "349d876d-fdcb-44e4-add9-0caa71fd578d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9cec90de-4960-4dd2-b723-dfe5bdb96309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798724da-ec0f-4e40-b606-a207e1fdc3df",
        "cursor": {
          "ref": "02485860-492b-495d-9af6-bb139234fa9e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2df71e8b-0582-44c0-acab-b3417702a7bc"
        },
        "item": {
          "id": "798724da-ec0f-4e40-b606-a207e1fdc3df",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "179c3e3d-4d92-4fc8-acd8-638f2e08ed84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0924f9-b5e5-45f0-ae84-57a56192cfcd",
        "cursor": {
          "ref": "1f3095ae-48f1-4e63-bed7-ce06a98641bb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a8891b3d-2322-4468-ab21-eb38c7134787"
        },
        "item": {
          "id": "be0924f9-b5e5-45f0-ae84-57a56192cfcd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e6b1e06-c388-4ad4-a867-e7432b5ffb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eb4f17-7b41-403c-a82b-a54dff1e013c",
        "cursor": {
          "ref": "82c0915a-0a96-4426-bbfc-fc5be6fa5827",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f522afc3-1574-4384-966d-a4b18a163fb0"
        },
        "item": {
          "id": "e9eb4f17-7b41-403c-a82b-a54dff1e013c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "97605fdb-f884-4af8-91ce-858b73b2d19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64ba66b-8bd5-4b3c-88d8-a7f31f1500df",
        "cursor": {
          "ref": "d69a7a7f-b1bd-4ff3-8294-41250c5c40e2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "662bbbe9-6f36-4f8a-b730-54d853930e4f"
        },
        "item": {
          "id": "b64ba66b-8bd5-4b3c-88d8-a7f31f1500df",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d81756c6-1619-42ec-925d-885c7a57d619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb9a06-e9a8-4f20-a9d7-5f4d0b7e77cc",
        "cursor": {
          "ref": "3624d4e7-9f9d-4628-9eaa-ba4b8257ba22",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "308cd56d-857e-4477-bd27-1b3e0ffb49fa"
        },
        "item": {
          "id": "d1cb9a06-e9a8-4f20-a9d7-5f4d0b7e77cc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6a79b2aa-6586-465e-bd87-cd63806e3d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d47c39-d8c4-48aa-92ab-894ab1936fb1",
        "cursor": {
          "ref": "0e1993c3-7f96-4b87-b57b-8c7fc9b06d67",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ad2fe57b-829f-442c-92d4-5f756e372ef6"
        },
        "item": {
          "id": "64d47c39-d8c4-48aa-92ab-894ab1936fb1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8a47d668-3699-42a6-b49d-bf47074fc206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8887d5-1fb5-4859-8a98-b94838aa7974",
        "cursor": {
          "ref": "5552ffe1-1aed-4e2f-8050-9d9bad304e38",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cafa53cc-3119-4dce-a555-6870e4944f13"
        },
        "item": {
          "id": "1c8887d5-1fb5-4859-8a98-b94838aa7974",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f9a2d6d-4aff-468c-a65e-da1ada49d446",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "956df282-d763-47c9-bd39-c05cf6f7ff03",
        "cursor": {
          "ref": "f3bbbb16-579f-4e5c-b65f-d62819e196a0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3abccdc6-0b47-4d5d-9f75-3801a44572eb"
        },
        "item": {
          "id": "956df282-d763-47c9-bd39-c05cf6f7ff03",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cca334ac-d047-42da-bb3b-35f552cb4756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332dbe6f-2fa8-4c05-9ef3-9c8bb23e00b5",
        "cursor": {
          "ref": "edf59f9d-0374-44fa-882c-8b90d3fbc704",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8b2d6d2a-f91c-4fb3-9b3f-7fd89e7acdf0"
        },
        "item": {
          "id": "332dbe6f-2fa8-4c05-9ef3-9c8bb23e00b5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7731e9cc-bbd0-412e-92e7-96b6a9ec2f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf2d205-e93c-4493-932c-753017b26d74",
        "cursor": {
          "ref": "19085d13-f60f-4113-b5f5-53b661b4f6fe",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5260ac12-64f8-4f77-bcd9-5ffad11d04ff"
        },
        "item": {
          "id": "daf2d205-e93c-4493-932c-753017b26d74",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a86507bb-4f4d-447e-894d-604b7bb5a7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2bb8b8-f55f-49dc-aa44-7c4417efab0a",
        "cursor": {
          "ref": "4e1072b3-2640-4b86-839a-4cf16f7c0342",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "42df1fc8-a804-433a-93dd-7abfa4a1b951"
        },
        "item": {
          "id": "ca2bb8b8-f55f-49dc-aa44-7c4417efab0a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "00280798-f8c0-433b-9238-428e9b0f7243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2766e52d-e0c9-4381-b9ae-dbeaca1d8159",
        "cursor": {
          "ref": "6974187a-da29-4519-8e39-9b820d269658",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "30197501-183e-4256-a816-ca1a2465cefc"
        },
        "item": {
          "id": "2766e52d-e0c9-4381-b9ae-dbeaca1d8159",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c146d5de-96a6-4e75-8d92-7f1e2d47305d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4a71bc-4268-4ce8-93fe-862ea5707061",
        "cursor": {
          "ref": "1e977882-0a73-4b03-88ec-89c296be8f88",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "230433f4-dc7b-4dc9-8f06-4e0332f6135c"
        },
        "item": {
          "id": "0b4a71bc-4268-4ce8-93fe-862ea5707061",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d2776a4e-c17a-4c82-bdeb-e5e74009779a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f58d99d-f4b5-4d85-b9f3-be5685d8f40e",
        "cursor": {
          "ref": "5d98938f-2e2d-4b3a-a489-e717dde40f43",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c72dba38-bfa8-47d9-998a-5e9593af16c4"
        },
        "item": {
          "id": "1f58d99d-f4b5-4d85-b9f3-be5685d8f40e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eaa22216-37df-4064-a7ef-12bef59023e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab44933-d1ad-4349-bd19-702488311ed3",
        "cursor": {
          "ref": "736be7a2-4ef6-4ea6-9cf2-02b48b0b7364",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c9c6ec9a-e2cb-4526-825d-620768d04ac9"
        },
        "item": {
          "id": "fab44933-d1ad-4349-bd19-702488311ed3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6b03ebf8-3a05-45d7-996b-d66c4040a4a8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c53782be-74b0-4b58-adec-57d4c3d9d88c",
        "cursor": {
          "ref": "5e027eb7-9451-4265-9d8a-ff1c2d79997a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0300c102-b721-44cd-8cfc-15dbccbd9f90"
        },
        "item": {
          "id": "c53782be-74b0-4b58-adec-57d4c3d9d88c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "384b045f-8b0d-4dda-bc6b-42b534a33966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9be012-e9eb-4424-ab02-388291094b9a",
        "cursor": {
          "ref": "4d8f58e7-43be-45e7-b82e-29e022cdd208",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "71afadfb-0236-467b-8252-fa9bf74bfd53"
        },
        "item": {
          "id": "8c9be012-e9eb-4424-ab02-388291094b9a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "debf9b72-a7cb-461a-bcca-85e9ed1c5a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85426c21-2c86-445c-848c-c7e5949875cf",
        "cursor": {
          "ref": "4692ca66-4559-46f6-9cc5-3ab74c9203f8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2040da67-3abe-4292-938c-29283dec8f3c"
        },
        "item": {
          "id": "85426c21-2c86-445c-848c-c7e5949875cf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ae317b16-59eb-4c68-bff0-40310905ec55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aea576-be3a-445b-843e-0b2910451b80",
        "cursor": {
          "ref": "7329776a-8d01-4bd9-b327-fe16279773b8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6dfa24ea-fbf2-4ebe-b732-c294e31563ed"
        },
        "item": {
          "id": "e0aea576-be3a-445b-843e-0b2910451b80",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f75de8d3-c5d3-49bf-b6e7-30a49017c97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de01d70f-d2c5-4868-8ea6-a59243e616b7",
        "cursor": {
          "ref": "dae007ad-6b3f-4ee8-b715-ab5c15be1c49",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "61492b56-359a-44b4-a8c6-a9833ebfd1db"
        },
        "item": {
          "id": "de01d70f-d2c5-4868-8ea6-a59243e616b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bcb7d6d7-7ae3-40a3-903d-f145625b47c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71336bb-a253-4d1e-a182-4db497885010",
        "cursor": {
          "ref": "5a385903-b6cd-42ba-bb1b-d6992bdfc473",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c22b3816-4e73-4636-81aa-0c7b44cf5077"
        },
        "item": {
          "id": "c71336bb-a253-4d1e-a182-4db497885010",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "05661565-7845-467c-bdc8-95387585ddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43db7e47-144f-4308-a214-36ad7f88a995",
        "cursor": {
          "ref": "56e3bc55-2c63-4eff-bc01-cd70616b09cf",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3fd268e2-e48e-4c21-aa0a-d584f833c517"
        },
        "item": {
          "id": "43db7e47-144f-4308-a214-36ad7f88a995",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "da97b5b1-a96c-4961-a561-5f32420359cb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "14bc7daf-7612-4869-b225-138d0327e6d6",
        "cursor": {
          "ref": "ae4f9e34-1da8-4052-88b6-a8fe00558d1e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dcd2c207-74eb-4b52-8f09-0ca38e6fb652"
        },
        "item": {
          "id": "14bc7daf-7612-4869-b225-138d0327e6d6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a23c06a7-124e-44ed-b1b8-5f0d67c0f61f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "67b33cb6-d8cb-40c2-9059-3c86d5c47351",
        "cursor": {
          "ref": "2fe1e259-33e2-4420-9ab2-75466a029ca0",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d72e1c41-6d21-47be-bc2e-6e812e2a57e1"
        },
        "item": {
          "id": "67b33cb6-d8cb-40c2-9059-3c86d5c47351",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a8e99e8d-74bf-4a21-9501-aecb0c867499",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "39f9ceb4-94b5-4912-8700-6d98cb6a829f",
        "cursor": {
          "ref": "3dd4258f-ab41-401d-8df1-1f091b98c853",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4473403e-6cf8-46c1-a273-4b24d7a834d3"
        },
        "item": {
          "id": "39f9ceb4-94b5-4912-8700-6d98cb6a829f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c9a49e5d-307a-4131-b8bd-3e54216b5338",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "018829f3-70d3-47ec-81c9-a43ff4dfd853",
        "cursor": {
          "ref": "49115341-b8ff-45bc-869a-adb8978e45ba",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a0f873d3-9e26-4a65-bc4e-a147482ad5de"
        },
        "item": {
          "id": "018829f3-70d3-47ec-81c9-a43ff4dfd853",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ce54e04d-eba0-413a-92b3-75a1e41df710",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2263a121-2a60-48aa-bf89-028b6e932a14",
        "cursor": {
          "ref": "36689f85-59e5-4a0d-9c05-1c73a0ac4f8c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b473fa85-487c-4f22-943c-bfe254f4e0be"
        },
        "item": {
          "id": "2263a121-2a60-48aa-bf89-028b6e932a14",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6d041f9d-5f85-4619-a524-8dd74db7fb59",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e1f22a65-423f-4aab-905a-be922702dfd6",
        "cursor": {
          "ref": "23069375-1069-4bdf-b3d5-84a008ed6bf4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9045d563-ebb1-4d6e-b115-955f69fc917a"
        },
        "item": {
          "id": "e1f22a65-423f-4aab-905a-be922702dfd6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f5a1f6a2-7a8e-442b-abf5-5e7b0bae669f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b37d395-48ec-426d-af7b-a3f9cee57454",
        "cursor": {
          "ref": "d4c1b614-9e57-4647-a55d-264bea3a4bb9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8b8cb20d-dac6-49f0-90ec-51c02440b937"
        },
        "item": {
          "id": "1b37d395-48ec-426d-af7b-a3f9cee57454",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8dd786fb-6570-4fce-a5c4-ab68ff505897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f99b5c-49f2-49d8-996a-ed8434d19795",
        "cursor": {
          "ref": "77adaa26-e255-4fea-97ba-0bdab72752b3",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5b232abe-9d0f-4e4f-8787-f6bf1637ef43"
        },
        "item": {
          "id": "37f99b5c-49f2-49d8-996a-ed8434d19795",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9945f123-bf60-4d3d-b1dc-7b878bb6373a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a4a77a-8b53-432b-b6b3-0c9d4abfddc2",
        "cursor": {
          "ref": "907228fe-40e7-45d8-9ffd-278ebaf36a29",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "419f8618-38d5-4dbb-9901-2c3cc838baa9"
        },
        "item": {
          "id": "15a4a77a-8b53-432b-b6b3-0c9d4abfddc2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "255c4598-0031-4fb4-9eec-c61fd01b1296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c933d38f-e7ba-4680-924a-686f550054ae",
        "cursor": {
          "ref": "343aadb7-5fc4-46f1-ba7c-1efa5e992084",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e80ee55f-104f-41b5-a6a8-33cbec2b9779"
        },
        "item": {
          "id": "c933d38f-e7ba-4680-924a-686f550054ae",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d5ed8297-de23-4447-b4a0-46210db80b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f5f97c-6936-453c-b15b-99e26fc4ab29",
        "cursor": {
          "ref": "a6a7399b-bd64-4964-9418-3843cc841d5d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "db5b949d-8b8b-4916-b78d-064dd31c39bf"
        },
        "item": {
          "id": "69f5f97c-6936-453c-b15b-99e26fc4ab29",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "102788b9-65da-49f8-bdef-a4d45dd86536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a321b37b-7d41-4b11-b4c4-bf408621e292",
        "cursor": {
          "ref": "7cc42914-6786-41e4-b301-7df1b6e9902c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c483d1f4-ffa5-431e-9732-ea52042a5735"
        },
        "item": {
          "id": "a321b37b-7d41-4b11-b4c4-bf408621e292",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6e555aab-3454-470e-98aa-656f1974203f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdb59a3-2a89-40c9-88f9-b3205ffd599f",
        "cursor": {
          "ref": "5f62c492-99b1-42d2-a3f7-83728b8fae6e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "35a2cbde-66bb-4459-afd1-1713c149d657"
        },
        "item": {
          "id": "2cdb59a3-2a89-40c9-88f9-b3205ffd599f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4d702ca6-3aa1-4e74-99af-212fbd1e2b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb79f2b-7bf7-4d56-a2fd-1a8630be45a5",
        "cursor": {
          "ref": "63da1599-fb55-4f1b-ab30-aab48dd71845",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ada5d70d-f744-4647-a8e2-358ad699bc82"
        },
        "item": {
          "id": "cbb79f2b-7bf7-4d56-a2fd-1a8630be45a5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6b9b1da-103a-48f0-8564-252c27ad3688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418a8aa1-600f-454c-adfb-6a1857430b3e",
        "cursor": {
          "ref": "6415f761-fc9e-418b-a85f-aefde6358fe9",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b339990b-945e-44a4-990e-d2745add37e0"
        },
        "item": {
          "id": "418a8aa1-600f-454c-adfb-6a1857430b3e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "597cc04c-cbd5-4ee4-928e-44bbafb8f19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac02867-145f-4d8b-909f-70251c78750a",
        "cursor": {
          "ref": "bd65cacc-8c40-4c30-abfa-3cdfeeb2dcee",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "52951593-729d-4247-aad4-2264ef22a719"
        },
        "item": {
          "id": "4ac02867-145f-4d8b-909f-70251c78750a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2f5d4a67-a580-4a65-89f1-26608d787901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b155348a-80cf-449f-9813-db6c5ce71459",
        "cursor": {
          "ref": "5d2c7c5f-e067-4607-a9f4-81ca6b21e5e8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9f99be59-235b-46aa-9d9b-ef1bf5c26c2a"
        },
        "item": {
          "id": "b155348a-80cf-449f-9813-db6c5ce71459",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bc687891-8848-45c1-b021-2d8388ccf591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b3431a-1a1c-4a07-b9c4-a0962e6a95c3",
        "cursor": {
          "ref": "7082cdcd-5e6f-4bf6-8d72-d145186cc954",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "53c28b87-e231-45b9-b715-972c8bbf0b93"
        },
        "item": {
          "id": "d3b3431a-1a1c-4a07-b9c4-a0962e6a95c3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "63ee55dd-9907-4de0-bf89-039fc44d1f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bcb46a-2870-4025-9742-a57815b33b00",
        "cursor": {
          "ref": "2587b3e2-6eb9-4668-acc2-9e2af8d851d4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0c304d0f-6fa6-45e7-87b8-c84f915e58cb"
        },
        "item": {
          "id": "a5bcb46a-2870-4025-9742-a57815b33b00",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d1c40069-d9dc-4ea4-8c54-89f45fa0f513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4eca39-1d79-4b1b-9d41-38efc863248e",
        "cursor": {
          "ref": "aba21d82-9531-455b-9930-229154de02b4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "51b4c0c5-9cb2-4645-a6e8-bfaf23cbc550"
        },
        "item": {
          "id": "8a4eca39-1d79-4b1b-9d41-38efc863248e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9ce05c70-3b4c-4b21-ab1a-fb168590e5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d201b2d-e2b5-4b8f-83b0-37deee508dda",
        "cursor": {
          "ref": "c92bd73f-f7a3-4413-b0a8-aad85c8a7bb3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "32719d12-91b6-435a-905d-030f411b3d64"
        },
        "item": {
          "id": "8d201b2d-e2b5-4b8f-83b0-37deee508dda",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "abd8ed29-9dc1-4f78-a163-2090a784c1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535f4719-192c-40d1-89de-83a837eaf2ee",
        "cursor": {
          "ref": "d243fc79-465c-4fcb-9732-ed2b319800ba",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9489c509-87d5-421a-92b1-c0c2607f33fa"
        },
        "item": {
          "id": "535f4719-192c-40d1-89de-83a837eaf2ee",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "22ecea95-266e-4c80-a1a7-e026ce56fcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9094e1a5-579d-4bf2-aace-3328b7abf138",
        "cursor": {
          "ref": "b618ebb7-2feb-4132-b736-a018448ee6f3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "55d93699-34ae-48f4-b182-7865f5bcbe91"
        },
        "item": {
          "id": "9094e1a5-579d-4bf2-aace-3328b7abf138",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9559aa21-2d17-4469-8a5b-3f12a3867f2e",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "9df39f10-0117-45aa-a917-c48ab1fdbe02",
        "cursor": {
          "ref": "54e7d29e-efe4-48c6-81b8-436d0e03aa45",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cd086d14-badd-4401-93a5-b7063c759183"
        },
        "item": {
          "id": "9df39f10-0117-45aa-a917-c48ab1fdbe02",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "abe7a94e-2a46-430d-8b24-8d13a3b75672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f68bfb-cc62-4300-8a40-de886896abcd",
        "cursor": {
          "ref": "ea9823cc-33de-4164-ab0b-d872c05f937e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8ba0f1f4-1cae-436f-bbaa-7c8d15c3aea4"
        },
        "item": {
          "id": "77f68bfb-cc62-4300-8a40-de886896abcd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bfd02e7f-096c-44fb-a1d8-fde0807279ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6e6121-96d1-49a1-a698-d96503edfd05",
        "cursor": {
          "ref": "ffa1ba50-90e9-413b-8544-e4dbc6d8b71b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9061de52-0ea1-4541-b5b1-b6fef490dbee"
        },
        "item": {
          "id": "cf6e6121-96d1-49a1-a698-d96503edfd05",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eabab79e-af8f-44cd-aa08-c3826d494450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16db99f-1b15-4359-a68e-835741cc920a",
        "cursor": {
          "ref": "f6b2e1fb-7b5b-4a9e-a5fb-c9f250dfefb9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b35fa36e-68e8-4fa5-8cb4-b54556518b19"
        },
        "item": {
          "id": "c16db99f-1b15-4359-a68e-835741cc920a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "14cac395-a411-48d5-ac2f-72910e52a75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c004b5-93f5-4e24-a5c4-3850307fc7a4",
        "cursor": {
          "ref": "1bcc9a17-b15e-4976-8b28-9521f73b9a9a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "603ee9af-5243-4728-941f-b8f2afb41c22"
        },
        "item": {
          "id": "f0c004b5-93f5-4e24-a5c4-3850307fc7a4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6f27e2b2-6d50-41a8-9cb9-8d259fdb8f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc48767e-2f18-4441-85fe-7ef69362bd57",
        "cursor": {
          "ref": "6168222f-58d4-4d29-a05c-fd8a18d96917",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "489fff02-e52d-4dee-846a-d53b64c3cdfd"
        },
        "item": {
          "id": "bc48767e-2f18-4441-85fe-7ef69362bd57",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ad3adf58-d8a8-4e72-a477-dc103beb1bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9712f5-d79b-4bda-96cb-65e292045d16",
        "cursor": {
          "ref": "8d21c8f3-2384-47a5-9089-cce4690c67fa",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "adefa0df-1bcc-4636-ae32-b63cc3bf563b"
        },
        "item": {
          "id": "9f9712f5-d79b-4bda-96cb-65e292045d16",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1dd4b83e-4041-48c7-bc83-5aa16b74771d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1cd304-ab31-4943-ab10-f8401bb45f20",
        "cursor": {
          "ref": "560fb4d3-883b-42bd-99a0-ffd069c20bcf",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a38e5761-4b07-4ce7-b3b4-0e15eeecc5b5"
        },
        "item": {
          "id": "0b1cd304-ab31-4943-ab10-f8401bb45f20",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "92771b36-86c8-4d1f-8c70-9bd417818ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4003fcc-d8b6-4bcd-a5c9-cc2ff87948f9",
        "cursor": {
          "ref": "88de99b7-d51a-4217-8133-334469befe5a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "25b0a32b-4ab1-4b17-9287-1a987fefa462"
        },
        "item": {
          "id": "d4003fcc-d8b6-4bcd-a5c9-cc2ff87948f9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "85cebe21-1241-418f-bf41-8506cdba7e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842edb34-e140-4ea6-9603-a660f9accf70",
        "cursor": {
          "ref": "3075e646-a4f9-4776-a69a-2bcbf968f0a8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cf85f420-6d64-46e8-9f87-dcec96335fd1"
        },
        "item": {
          "id": "842edb34-e140-4ea6-9603-a660f9accf70",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "db55a29d-456f-4833-9745-8d53c2b21438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21f8499-f2b5-4801-9c22-3047a98eba6a",
        "cursor": {
          "ref": "5a681ee7-d658-4991-8539-4dfa0dfaf4a5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "41c87827-5e1f-4394-aa93-f7ac72d61367"
        },
        "item": {
          "id": "e21f8499-f2b5-4801-9c22-3047a98eba6a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c08a25d4-a6fa-4439-81bb-b19fae34ccec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6d66fd-0438-4dc3-a119-d99d7e975416",
        "cursor": {
          "ref": "4bdfc404-6033-476a-9f1d-cd6672a5ac5d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8d94240b-0989-454e-95bc-0c76430e695d"
        },
        "item": {
          "id": "fe6d66fd-0438-4dc3-a119-d99d7e975416",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b31b30ed-069d-44c3-9c82-84507e39063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1381f3-0a1f-4245-8fca-9efd07664a81",
        "cursor": {
          "ref": "8ba385f5-c1ee-4958-b324-51cbfd714f7d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2e3852ae-5384-4e30-a266-2a6028411431"
        },
        "item": {
          "id": "bd1381f3-0a1f-4245-8fca-9efd07664a81",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5f6d2100-730b-4445-a922-848b205f4ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a38647-810d-45f7-8403-8b2dd2a163d4",
        "cursor": {
          "ref": "fe798fd3-8a20-496e-aee7-c5de2a2c0b6d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c6ecc3a3-1f73-48b9-af06-474a2d76143d"
        },
        "item": {
          "id": "90a38647-810d-45f7-8403-8b2dd2a163d4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9ffabaf6-ddb0-4c34-89fa-2be75c3e964c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154fcca7-9e93-4426-9bd6-9c74a13bb9cf",
        "cursor": {
          "ref": "ab25392c-5a5c-46ad-ba07-04f4eab4a2d3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "832290b9-879b-41c0-b796-5be4d8a5ad64"
        },
        "item": {
          "id": "154fcca7-9e93-4426-9bd6-9c74a13bb9cf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "480d156a-c615-4a40-8bf3-b67fd98c70e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba31cc4-dc33-4d30-99a7-6053320c4539",
        "cursor": {
          "ref": "707a26d7-b3df-462e-9ad3-ba9c10d7bbd8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e2ebe4b9-dcd3-4556-ad82-7129f575f2e7"
        },
        "item": {
          "id": "3ba31cc4-dc33-4d30-99a7-6053320c4539",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fa2fb5fa-4c5a-4ac4-b802-4ad4558e1fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69279be-82f6-4dc9-92dc-9b767c1c6016",
        "cursor": {
          "ref": "b1b66290-df1c-48a6-81c5-39ae5a6b46fa",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b6ae6aa1-2c90-4fd8-a21c-0fb6369523a3"
        },
        "item": {
          "id": "a69279be-82f6-4dc9-92dc-9b767c1c6016",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1fc53a20-34f1-4c16-8f1e-d3612ab41a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101d9e80-a8f5-4c5c-b44e-f7a079364d94",
        "cursor": {
          "ref": "4f1c9057-12b1-446f-bb83-a6ef57e7e312",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9ccf46c9-c908-4b67-a6e7-b1826891b1b9"
        },
        "item": {
          "id": "101d9e80-a8f5-4c5c-b44e-f7a079364d94",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5631194b-713c-4e3f-a05b-b62e0b7900da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a0ed95-9178-46b1-b679-04b9395a7178",
        "cursor": {
          "ref": "ba59a896-cae9-4303-9283-99fa78c36b80",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "91bcfbfb-3e23-45a2-846b-dd5e702aefcd"
        },
        "item": {
          "id": "86a0ed95-9178-46b1-b679-04b9395a7178",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "65386c62-4a97-4844-b483-041537ddd673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814c2e70-44b6-4a9a-8e99-d3cc204c3357",
        "cursor": {
          "ref": "f8ac259c-64b6-4e9d-a8fa-50f558ded475",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1f327b08-b522-461a-b757-753d2f1cb8c8"
        },
        "item": {
          "id": "814c2e70-44b6-4a9a-8e99-d3cc204c3357",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8e41b2f9-3b6f-41f2-947a-11821f00f05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e231c52-31be-4518-8df9-f76a935cda4a",
        "cursor": {
          "ref": "ea975a83-c294-41e8-aa9f-6ef0790300fa",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c8475406-3094-4b01-89f0-d4eff1f8969b"
        },
        "item": {
          "id": "8e231c52-31be-4518-8df9-f76a935cda4a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e44b34de-b3a7-4493-ad7f-063b02e8ecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b246813-5f0a-4b88-b8c8-2453916f997d",
        "cursor": {
          "ref": "7685dac2-91a9-4c82-aa27-d1b5f64e3abb",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4f4cd50e-3d59-425d-a3f4-a26c098e8356"
        },
        "item": {
          "id": "9b246813-5f0a-4b88-b8c8-2453916f997d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "04b06f57-c500-48e6-a41a-936e805b4b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5010e591-5d3e-458d-999c-9abd31e75cba",
        "cursor": {
          "ref": "c5966dd3-859c-4b81-919f-952eab299f73",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bf25bc88-d6ad-40a8-abee-31dec6c5252c"
        },
        "item": {
          "id": "5010e591-5d3e-458d-999c-9abd31e75cba",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2e0f46ab-78a9-4fce-9fc8-e86d5bbd265e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7446a6e0-0a9e-4990-b725-542367a85a70",
        "cursor": {
          "ref": "d15b35e6-5cd6-4a46-a607-ccf965e39d8a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7b825165-266b-4c1f-b162-eb08d1905251"
        },
        "item": {
          "id": "7446a6e0-0a9e-4990-b725-542367a85a70",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "46438c73-684e-4c14-9c4f-282f6c1dee01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6ef207-2246-40d0-a04f-d3c614d470a0",
        "cursor": {
          "ref": "fc20dca6-bd25-417e-ba5c-f10ec285e6a7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "66d9e20f-b4b2-4489-9316-86186676da0f"
        },
        "item": {
          "id": "3d6ef207-2246-40d0-a04f-d3c614d470a0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3bf65908-ae5c-44d5-a725-921766cd4244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc10b8bb-ae10-46b2-8750-8ca731f3ad23",
        "cursor": {
          "ref": "38bdf10b-f97f-406e-9289-2c64f2858b11",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "28a82b81-eacb-480f-8d62-4542ac13d60d"
        },
        "item": {
          "id": "bc10b8bb-ae10-46b2-8750-8ca731f3ad23",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "88380d15-be27-470d-888e-ccde6fbe614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e7e02c-89a5-40ec-893a-b50a56baebc2",
        "cursor": {
          "ref": "dc47b560-073f-489e-8406-7a535d1131a1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3beef0cb-9b6b-48a7-9bb1-037a92617db0"
        },
        "item": {
          "id": "21e7e02c-89a5-40ec-893a-b50a56baebc2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "58382b6f-0174-4d9f-b929-f4671f366bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e88c21-037a-4141-b43e-fb8ec8d73c18",
        "cursor": {
          "ref": "844980f0-6a15-44ca-9a66-c84047a16a39",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "174d7718-4e9a-4aea-9352-47d7ae4cedc7"
        },
        "item": {
          "id": "54e88c21-037a-4141-b43e-fb8ec8d73c18",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cea52293-2a1f-4b08-bb8f-73dd3b7cd911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d0560c-9c6a-4f5e-a0a7-fbac49a720db",
        "cursor": {
          "ref": "d9989e25-59fc-498f-b5c0-c6b2bdef2d38",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c5dfcadc-7413-4c17-b5b1-1f4a8b313060"
        },
        "item": {
          "id": "63d0560c-9c6a-4f5e-a0a7-fbac49a720db",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ac86ea2c-6ab3-43a5-b51c-fb0093f4a24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fcea48-b8d8-4244-831d-ca0e5426b7c8",
        "cursor": {
          "ref": "559ed1a0-2525-4e79-ab6c-5f8ca07765f5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2f339c1a-3352-4c36-bd0b-61304478b7a3"
        },
        "item": {
          "id": "69fcea48-b8d8-4244-831d-ca0e5426b7c8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3eaba5fe-e4ff-427e-8f96-7caecadc161c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5888c3-8268-44b9-9c01-2f1e75d1f05d",
        "cursor": {
          "ref": "8c1821ff-a462-410a-814a-bcb5d8cd1858",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "81d50768-e70f-456f-b9ed-542b53ae1524"
        },
        "item": {
          "id": "3c5888c3-8268-44b9-9c01-2f1e75d1f05d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "462410f7-c199-4aee-be97-c549cbb47967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61580416-6a72-4bea-ab5e-07098032b54d",
        "cursor": {
          "ref": "2cda9163-9f35-4344-9569-ab01e44ad7ae",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "74ca8671-3a6c-463f-80c2-57ca66b6b30b"
        },
        "item": {
          "id": "61580416-6a72-4bea-ab5e-07098032b54d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5bd6a9ee-df4b-4bac-9832-806eac4b2a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0df4ba-9868-44a7-8f14-982ff2edcaaa",
        "cursor": {
          "ref": "a82f7037-090f-44db-a59b-9949f188ce81",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0c6dacc3-0c31-4214-aa1f-dedb6a4ac881"
        },
        "item": {
          "id": "7b0df4ba-9868-44a7-8f14-982ff2edcaaa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4d2aaece-635e-4803-83fa-457155705dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4834b1a2-8f0b-45ef-a3e4-803f7adf2980",
        "cursor": {
          "ref": "134e7b0d-5228-44a3-97c5-477aba6757bb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1585efc6-48ff-46de-8ead-e0d51e21688a"
        },
        "item": {
          "id": "4834b1a2-8f0b-45ef-a3e4-803f7adf2980",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8b1b91f5-d7e5-40c6-aea3-d29a6c7cd83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03099f0-9b59-4d5b-a32c-7e6107286ca0",
        "cursor": {
          "ref": "eae2bbb9-da5a-49b7-9da0-57b2318df6d5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c4fcd21b-e0dd-480a-aec5-35ebd85ed093"
        },
        "item": {
          "id": "d03099f0-9b59-4d5b-a32c-7e6107286ca0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "afc80a03-461f-4cb4-9dc8-fcd0e4cf927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5264afe-c055-4dc9-97ec-0667103c001a",
        "cursor": {
          "ref": "5ce66b62-1239-457e-83d8-bbf9ff52093c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a48b231e-7b64-4032-aad7-88e2a94c2bb2"
        },
        "item": {
          "id": "a5264afe-c055-4dc9-97ec-0667103c001a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d21c8378-81be-4c70-ae12-3a5242260f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53c6f1e-f04f-4569-8e95-b63ddb1c87f4",
        "cursor": {
          "ref": "fa3b8bc7-be00-4690-bfd7-07eb3862d24f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "05556d76-ee76-4b13-8d89-388aee76b9cc"
        },
        "item": {
          "id": "b53c6f1e-f04f-4569-8e95-b63ddb1c87f4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ea414b49-5807-4caa-98e5-f564f226fd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1820a805-3c8a-4dbc-b7d2-b6bea4f932ec",
        "cursor": {
          "ref": "2cc34443-d1d4-4e28-a60c-3e591a5e2009",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "db871d87-edff-4632-b5f5-f0100918afa4"
        },
        "item": {
          "id": "1820a805-3c8a-4dbc-b7d2-b6bea4f932ec",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ec88e813-ae76-4d94-9f44-7d95d63ca16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fa8954-f933-4385-b29a-ee0b84c67971",
        "cursor": {
          "ref": "e85329b7-cfe6-4a05-b49f-6aab196be203",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "685dc614-5636-4aae-843f-77fd2f983795"
        },
        "item": {
          "id": "b7fa8954-f933-4385-b29a-ee0b84c67971",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3fd4ad4f-407b-49f4-b289-1d64f49cee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913228e-b66b-4e93-bed3-5e90193fe31d",
        "cursor": {
          "ref": "d3333bc7-4017-43d8-beda-549fad3ef57d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3256368d-02c9-4cb9-95e0-b1b11e7b7c73"
        },
        "item": {
          "id": "5913228e-b66b-4e93-bed3-5e90193fe31d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "302b987f-e53f-48d3-9e0d-2e160f779791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07109c3-0704-4686-ad2b-a5bf128571d0",
        "cursor": {
          "ref": "cfb41f5b-a7b2-4719-a80e-8c46dc34285e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bf504de3-9d67-44be-b22d-750b23b6dd23"
        },
        "item": {
          "id": "a07109c3-0704-4686-ad2b-a5bf128571d0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f9c32e26-fd3e-4232-a567-1a103bbe2c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fd4f29-e67a-4512-8c04-df44edd97b66",
        "cursor": {
          "ref": "58af0796-bba1-4941-95d9-3506ce670ee6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "275f65ef-7a5c-40de-a53f-045914ac2448"
        },
        "item": {
          "id": "14fd4f29-e67a-4512-8c04-df44edd97b66",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0b32af7b-4541-49de-9ff8-18333bedf794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff59eee8-6f0f-4eec-ab7f-ffe9a76185f3",
        "cursor": {
          "ref": "4c52d433-98f5-466c-9d7b-09919f926815",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3675c270-b96d-4239-90e9-a7bc0b729330"
        },
        "item": {
          "id": "ff59eee8-6f0f-4eec-ab7f-ffe9a76185f3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c144fc50-6e43-4be5-849f-90a08e9219e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f65288-8b29-4504-a56c-f781d8ff4139",
        "cursor": {
          "ref": "9e722402-4283-452a-937b-fb75b351d878",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "33efd25f-3cfa-47fd-a2fd-5061c8c4f327"
        },
        "item": {
          "id": "06f65288-8b29-4504-a56c-f781d8ff4139",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8403b9a7-4e0b-4c80-957f-3c76e1a16b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af68d69-1ea9-4d62-b861-243e40921a0e",
        "cursor": {
          "ref": "3117d746-2bd1-4a8b-9d18-f2504200117c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "59c842be-b32d-428e-b05b-7a1c200f8382"
        },
        "item": {
          "id": "0af68d69-1ea9-4d62-b861-243e40921a0e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5479d867-b24b-42cc-8d8c-ae8f7a0a739a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fe82ee-f116-48cf-8f61-53366a966e3d",
        "cursor": {
          "ref": "32133766-30e7-495c-97da-ac9193c50602",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5b886152-175a-4cc1-8f08-961b9084cb11"
        },
        "item": {
          "id": "c3fe82ee-f116-48cf-8f61-53366a966e3d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "756c02e2-d6f6-46c7-ae8e-697bd3b7f491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb46297-078c-4b71-8477-433b7bdfc3e5",
        "cursor": {
          "ref": "de5b3a3c-94ea-48fc-b03d-7f8d6cf2a7fe",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "062135b0-77a2-4f1e-91cd-cdc46a88fae8"
        },
        "item": {
          "id": "6cb46297-078c-4b71-8477-433b7bdfc3e5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4bcb60f7-fff5-49fd-8aa1-a2a751cc8459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addbe55a-10fd-4e20-9ef5-f144722139dc",
        "cursor": {
          "ref": "b5625473-fd9d-4abe-9ec9-9bd58c1a58ab",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a8e37e18-666e-47b2-ada4-e767ce786415"
        },
        "item": {
          "id": "addbe55a-10fd-4e20-9ef5-f144722139dc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "025625b6-c52a-4516-aedc-0b58396cafb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4330535-25e6-4321-844c-8c5735bb6059",
        "cursor": {
          "ref": "f51c030d-3bda-4f7a-92af-78cb7c71345a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "086a0c1e-286b-427a-bcf7-3bdc45ade7c4"
        },
        "item": {
          "id": "f4330535-25e6-4321-844c-8c5735bb6059",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "393b6b29-9316-47c0-8676-09b6ea97e5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bab24b-e8ab-4170-859a-d0b299b4b137",
        "cursor": {
          "ref": "f4dc80d9-7430-40ff-8aff-f146ead3d849",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7679ceb8-b99a-4238-885c-8e85f63e7f2a"
        },
        "item": {
          "id": "76bab24b-e8ab-4170-859a-d0b299b4b137",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2540b4f5-e095-4e3e-adfa-609d542f27fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cebf835-56da-443f-b36d-8a81de023ef5",
        "cursor": {
          "ref": "cd3ea314-64ca-439f-aa04-24aaf92156af",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4429ce46-334f-450d-9ec8-9915022c6bf0"
        },
        "item": {
          "id": "4cebf835-56da-443f-b36d-8a81de023ef5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b7164621-8692-46e3-8f50-324dd2033a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaef0ef-e4ef-4810-89ec-800b4b746a99",
        "cursor": {
          "ref": "75254013-1f15-4afe-a4df-f5337cc14f46",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d6ee475e-0207-4ef7-85d1-98042173774b"
        },
        "item": {
          "id": "ddaef0ef-e4ef-4810-89ec-800b4b746a99",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "92887919-fd31-41d9-aadb-8d0825d10f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b2e934-f5a5-4578-b721-66a025a9023d",
        "cursor": {
          "ref": "8b180747-a829-4333-acb5-960f9de24c35",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3b271a3d-49ab-4d4d-a5f7-6c98f8736a44"
        },
        "item": {
          "id": "05b2e934-f5a5-4578-b721-66a025a9023d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "66ad154d-b17f-4ec1-90f8-78bd80d8c99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853ebd6b-a5c3-4e5a-b17b-fc93801c6800",
        "cursor": {
          "ref": "c2a061f3-8260-41f1-b684-cc6465ebc9e9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "65e2be83-599b-46d7-90c5-c26af2853a40"
        },
        "item": {
          "id": "853ebd6b-a5c3-4e5a-b17b-fc93801c6800",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f56da0a0-549a-4a93-b991-c3644d026c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3036ad52-b0ce-4f55-93b9-ab77ea25c5d6",
        "cursor": {
          "ref": "c1b3489e-4799-4e31-bd08-85814c822cde",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1ab93b51-64dd-44dd-b206-936a80c62b9a"
        },
        "item": {
          "id": "3036ad52-b0ce-4f55-93b9-ab77ea25c5d6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "446884e8-d8be-4f46-972f-8c701e6c946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1e80f6-54ec-466d-ade7-02b1c2852be7",
        "cursor": {
          "ref": "43fa2425-d13b-427c-8cb6-c135337e067e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "87efadfa-5ba8-4fb1-929d-6be28713c7e2"
        },
        "item": {
          "id": "2c1e80f6-54ec-466d-ade7-02b1c2852be7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19eec20d-f57c-478c-8eec-e161511f03e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54043b34-11e1-4e36-ad7c-5a3a9f76eb02",
        "cursor": {
          "ref": "99134e69-0090-442b-a483-906486df1b9b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "89270143-1da7-47ec-832a-fb1f771fb4e9"
        },
        "item": {
          "id": "54043b34-11e1-4e36-ad7c-5a3a9f76eb02",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cd3c6d74-61e4-4799-b16a-308b1f8e4b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba6d7cd-ea5b-4f34-a0e4-0941f9e38f2d",
        "cursor": {
          "ref": "fb08be45-170f-4ba9-89a6-550292da6893",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "abd71078-117c-436e-8c76-53b70448c4e9"
        },
        "item": {
          "id": "6ba6d7cd-ea5b-4f34-a0e4-0941f9e38f2d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "16edc4d2-8538-485d-b86d-15fdcf2e1092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584e2d58-e29c-4d46-8aa4-9320770e1e51",
        "cursor": {
          "ref": "c4edaccc-2505-45af-a0e4-32b1f287f7d4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ceb18fa0-69c9-43d7-a509-db5564b71ba8"
        },
        "item": {
          "id": "584e2d58-e29c-4d46-8aa4-9320770e1e51",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c96ca835-6a06-46a8-958b-ab07f1ca1cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dabefca-36fb-4424-9c7f-c2cc129058a5",
        "cursor": {
          "ref": "6a01febc-93bc-4345-b39a-64de4283b333",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d3d3e697-3901-4baa-aa7f-c36d82f44569"
        },
        "item": {
          "id": "6dabefca-36fb-4424-9c7f-c2cc129058a5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "87560dec-c390-4b84-9f4d-0390ce9011e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83db804e-b082-4490-9ad1-244c4b5892e1",
        "cursor": {
          "ref": "81c3fdb4-ec6c-43d7-bfb9-ca3390e1d6c6",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3300c5c7-d484-4f84-a5e5-f9991deaaf4d"
        },
        "item": {
          "id": "83db804e-b082-4490-9ad1-244c4b5892e1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d02fb970-02a8-4645-b01f-3d0cfb9ed278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b917daa8-b811-40c6-a0c2-1ddb5ee9f58a",
        "cursor": {
          "ref": "20ed52ae-c9e6-468d-953a-2092fbbdb0c0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1bf88432-d155-4028-a09c-c1dd59dffc01"
        },
        "item": {
          "id": "b917daa8-b811-40c6-a0c2-1ddb5ee9f58a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9dc84e6a-0ca1-4b02-a3ac-d6a6d6669cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fbefa3-6b95-4005-98dd-fc9fd408fb52",
        "cursor": {
          "ref": "37945bbb-72de-4ad9-b518-8fbc9c7bc74a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3cacaa1a-82a6-46d6-9413-d352256690d6"
        },
        "item": {
          "id": "69fbefa3-6b95-4005-98dd-fc9fd408fb52",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5cb821b0-dfef-4448-a51c-c0884a837862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47205d3a-02f4-47af-a327-9728c7e846fa",
        "cursor": {
          "ref": "e7b82593-7b01-4dcf-83c9-59e4a9a10527",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f865b5c9-fa2f-47b7-8de5-c9cc33feb4b2"
        },
        "item": {
          "id": "47205d3a-02f4-47af-a327-9728c7e846fa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e4272c74-fa3e-4b66-87cd-cd803858735d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adac2db9-f204-4174-91c6-2c4ba7d0a685",
        "cursor": {
          "ref": "54a42b16-426a-4037-b3a1-df7555afb24e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "78ccfade-888e-4bb4-bcb9-bd9c64b7b8cc"
        },
        "item": {
          "id": "adac2db9-f204-4174-91c6-2c4ba7d0a685",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "497ee2a8-ce18-4424-88bc-d8f9d38f8270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b9a094-8eec-4778-b1e1-9b2c566ec14c",
        "cursor": {
          "ref": "6e6e17f7-8894-4b4d-8649-3f67541c04c5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1732020e-936d-4a28-8342-45a86fbc9e41"
        },
        "item": {
          "id": "99b9a094-8eec-4778-b1e1-9b2c566ec14c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b3a6f6d2-b419-4055-9771-f39cff71c0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6598aba-6467-48b4-b676-dd81a875b217",
        "cursor": {
          "ref": "4357dcaf-f62b-4e9b-bc70-2a0d72e7f800",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0d41fa9a-aeba-450e-9610-9bc494d4f08e"
        },
        "item": {
          "id": "d6598aba-6467-48b4-b676-dd81a875b217",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d2d925df-2e94-48e1-96be-a02bd17c6ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5efa489-f1bc-4b40-9f80-705296309182",
        "cursor": {
          "ref": "809b7e18-2cdb-4e98-8339-890a1ccc11f6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1a8899ac-e2bb-4742-810b-9675a992c891"
        },
        "item": {
          "id": "b5efa489-f1bc-4b40-9f80-705296309182",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e7de0322-f6ba-4594-94ff-cbc8d422ce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae044b4d-c46b-4732-8271-bf76e1732442",
        "cursor": {
          "ref": "2cc357b3-4634-4f0a-8a57-e9665abcc424",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c8088cd9-e22f-4d64-af31-142ca51c0de2"
        },
        "item": {
          "id": "ae044b4d-c46b-4732-8271-bf76e1732442",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "171b14bd-f3a3-487b-982a-d12e327f22e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055b9fba-9a1d-4d30-a0da-49cc903433d6",
        "cursor": {
          "ref": "0c48bd4b-1d86-43be-9979-9297968d55a5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3de28d31-6ed1-4a87-b92d-67172ba645cb"
        },
        "item": {
          "id": "055b9fba-9a1d-4d30-a0da-49cc903433d6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1735babe-2c06-4cc1-81a1-f96ebd88c568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3834435b-003f-443a-9b64-c8514d48fe7c",
        "cursor": {
          "ref": "90a2264e-9ea7-474e-9cb3-3c2cdcad26da",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "049376ef-3f57-4c8a-b9d8-d289ec52af8a"
        },
        "item": {
          "id": "3834435b-003f-443a-9b64-c8514d48fe7c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6c66c6af-e007-44a2-8dd8-e5f410dd86be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a229b5b-c59f-4fad-8367-1f7bf16b2fbc",
        "cursor": {
          "ref": "a6487664-1606-418b-a15a-0f44400d171b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3edb1175-07b0-4033-8507-1fa23003f7a9"
        },
        "item": {
          "id": "2a229b5b-c59f-4fad-8367-1f7bf16b2fbc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9e2d48b2-aa37-412c-b745-3e6c576eb0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b64dab4-fc5f-4a16-b888-87840367cc89",
        "cursor": {
          "ref": "c80d64c5-c56e-4c6a-a490-eb24acb8e600",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8add7ca5-a905-47e8-a05e-5f0d5b730c3c"
        },
        "item": {
          "id": "0b64dab4-fc5f-4a16-b888-87840367cc89",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "462289fb-9cd2-46f8-9ab2-c19138277375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5a2ade-d6fe-4b78-811c-0dcb04613bb6",
        "cursor": {
          "ref": "66dfd50b-5119-4cb2-950e-a4af552a9248",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2adb6ea9-ff8f-4498-a2b5-f7b3ba40f633"
        },
        "item": {
          "id": "0a5a2ade-d6fe-4b78-811c-0dcb04613bb6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5dc00a5c-54b5-4c47-aa73-64c75434de78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb5115c-ff66-46b9-a527-dbac36692269",
        "cursor": {
          "ref": "29aadd23-3231-46ae-b6a5-28d97d3a7f88",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5aa8c059-9be5-4925-bf64-790356970c3f"
        },
        "item": {
          "id": "8cb5115c-ff66-46b9-a527-dbac36692269",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "222c0934-ed35-4911-856a-915262e32679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af60066-7996-435f-9c8e-873e9276284d",
        "cursor": {
          "ref": "6f9a7047-ecf9-435e-a03a-20df317c8f9e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0459a31c-d1d0-4968-aaa0-c50e3a9aad90"
        },
        "item": {
          "id": "5af60066-7996-435f-9c8e-873e9276284d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "decb56e8-5828-4c03-9bf8-999ca9b6e658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1872ff6a-a46b-4d60-a01d-5968f75554be",
        "cursor": {
          "ref": "6c2f3be2-3e31-4466-8d23-3d7077543391",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8efbc08c-8152-4b5d-b25d-876e41d3812e"
        },
        "item": {
          "id": "1872ff6a-a46b-4d60-a01d-5968f75554be",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f243e3ec-9da8-49df-83f4-d52cd5aa509b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5db672-cff6-4fea-87a3-215a70a7d41e",
        "cursor": {
          "ref": "56b84d8e-1a99-472f-b3aa-bce55538bf45",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ad45125a-bf7e-4b98-94d7-3510d40bf9e1"
        },
        "item": {
          "id": "ac5db672-cff6-4fea-87a3-215a70a7d41e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e936edc6-1ae2-4819-baad-3372e1e74bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111e9c66-4ba1-4a82-b7a2-b88a76a6bfbb",
        "cursor": {
          "ref": "3080073d-0408-4710-81bc-108714483a82",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b99011b0-50de-46fa-bec6-51065cab45fe"
        },
        "item": {
          "id": "111e9c66-4ba1-4a82-b7a2-b88a76a6bfbb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4e49759c-e56f-4047-a8a3-5084fcb07614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13927dcb-cdd0-483b-9bbe-1d37c4b4f1bc",
        "cursor": {
          "ref": "13cc80b6-38db-40ac-a119-ca2cc8a93f48",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bf838a3f-8abc-4329-b826-cf8cecd01860"
        },
        "item": {
          "id": "13927dcb-cdd0-483b-9bbe-1d37c4b4f1bc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6895ee2f-220b-465a-8ddd-e8c26ff3f523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c9e2fa-2384-4300-8f51-1801ee7a5a46",
        "cursor": {
          "ref": "938befa0-766f-4103-be89-a8ef5b83e6b9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "790917ae-ffeb-4345-bded-9861fedbcfec"
        },
        "item": {
          "id": "76c9e2fa-2384-4300-8f51-1801ee7a5a46",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f904239a-bd97-4bd3-bcd6-faf8bd355e2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d973b7-2d3c-4246-a167-26a31d71de44",
        "cursor": {
          "ref": "b6635198-d518-4365-bc15-d50d426fe193",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "caf0c2ff-5e2c-4d0e-af9c-c8675caf3397"
        },
        "item": {
          "id": "b8d973b7-2d3c-4246-a167-26a31d71de44",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a1f04f6e-55e2-4749-a4c2-7ceeba5ba393",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f6ed92-0b89-4dd7-938c-856a27eeabcd",
        "cursor": {
          "ref": "28a58da9-4ac1-4883-9c6d-bb371af26469",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0adc0322-36a6-46d3-9725-937002b891e6"
        },
        "item": {
          "id": "96f6ed92-0b89-4dd7-938c-856a27eeabcd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "077a702f-4290-44af-b5fd-b128c6276993",
          "status": "OK",
          "code": 200,
          "responseTime": 2345,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cebce3-ff8b-418f-8726-bbb2f90107db",
        "cursor": {
          "ref": "8cd51e8e-44b3-4c76-a7ce-0459440694ff",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0381b8a1-3358-4aa2-ace7-79b8b5de4df5"
        },
        "item": {
          "id": "35cebce3-ff8b-418f-8726-bbb2f90107db",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b4288456-7867-49a1-a3d9-171b9549878e",
          "status": "OK",
          "code": 200,
          "responseTime": 2343,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "69beea2a-7b99-491a-bafb-930b6e8f44aa",
        "cursor": {
          "ref": "f912e862-2ef3-4825-a71d-fd6aca046bc0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c97649d1-47d9-4c90-8929-21cb3abcc5c1"
        },
        "item": {
          "id": "69beea2a-7b99-491a-bafb-930b6e8f44aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "338c56e2-4105-4d7f-8aca-1acad7bd678a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69beea2a-7b99-491a-bafb-930b6e8f44aa",
        "cursor": {
          "ref": "f912e862-2ef3-4825-a71d-fd6aca046bc0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c97649d1-47d9-4c90-8929-21cb3abcc5c1"
        },
        "item": {
          "id": "69beea2a-7b99-491a-bafb-930b6e8f44aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "338c56e2-4105-4d7f-8aca-1acad7bd678a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dff397-1e5b-4be6-927e-bae32bad0994",
        "cursor": {
          "ref": "5f5452fd-7e4d-4ef9-89db-0707e8a738a7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d5246334-b4ff-48c8-ba06-6ed05a4126ac"
        },
        "item": {
          "id": "16dff397-1e5b-4be6-927e-bae32bad0994",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6e28da64-7e13-4cd4-b045-9bab23cfb85b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcd9b3b-9cc4-47cd-8982-ebf1ce7580de",
        "cursor": {
          "ref": "211a8e77-6d48-45ba-8d5f-355f964c8b09",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2db4744c-e4d5-4a23-89f9-e2a3ae2660be"
        },
        "item": {
          "id": "dbcd9b3b-9cc4-47cd-8982-ebf1ce7580de",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c5881da9-dded-4f91-ad1e-3473cd9c6f14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}