{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "13085b7b-9dea-43eb-ae92-f41835a36307",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eceb3463-f841-45e1-9f4a-cae7ab0f1205",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0218207-29ff-42a4-ae8f-da1d33632685",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8df9bd42-01ea-48ad-a96e-1b1ba714769e"
                }
              }
            ]
          },
          {
            "id": "792c7b21-6fb1-43d4-ba0e-0f90e3741216",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c98b05ad-22b2-4aef-8a03-8eaf7989866e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2daa6bd0-1db8-4cfa-89d4-1bcc9c176ce5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9f77af41-4517-43d0-8e78-a72ad11200d0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "803c535c-b425-417c-923c-e0291eac7b4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6fbaf55-413b-4df1-a498-ac9b2f31dfa7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "417d58d1-31c9-4d9b-be9c-2f45bdf28137",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "876579ad-d8a2-408b-b357-f6bfe51e3c1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a72fac6-878a-4e77-a1b6-2e236d1cf65c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7837e58-2a6c-4632-ac21-20fa4188972b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31bb73ee-93ee-4af9-9005-665350573fc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e61792d-1a8a-4bf9-b93e-933821634288"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4fd8987-1f5c-4a13-9b94-75b37e17accd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4538fe06-47be-4413-a0b8-5dc8de317be3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edfb497d-6beb-481b-a70e-0380baadeaa3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "818f9d10-6c83-4870-8728-3c53b8ba7f45"
            }
          }
        ]
      },
      {
        "id": "623dbe29-f4b5-43bd-8b25-35d741272c25",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9c255899-18a2-4aa5-8b0e-4d0c188363b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "973f724f-6629-49f2-89eb-b0686404e216",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "acc48b29-f861-4618-acdb-2b18e335fbd1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cb73dc-a06d-43f4-9a6b-db53ae716c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97beb63f-6167-4c18-ab98-82a682e1442a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd8832-8d69-45b8-89f7-983056f3d07d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262e0784-575d-494b-b2a8-1bf1fc6f0e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "989c36ae-8e65-4f2a-a22d-f674e6aa7e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f555d5b-0c6c-4ac1-b1a3-188c93d9da39",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220bde92-751b-4ba5-90d3-9dc45c81fcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a35cb7b-9753-4d45-a40a-4e99838e6473"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d34107b-0a64-4f1a-9c79-4fbd3d3d214c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87bda4da-0bc3-4453-8903-dff153ce7144",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315c928d-9a48-4f4b-9a4a-9a0dfb98470d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c3d5775-772f-4887-8bdd-ba6807f78382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4288139-8845-4c9f-bcee-e64ba1129f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e342ad1e-5e90-4d07-9fbc-b45aebe030e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01504bd9-a9be-42d4-9c92-8ad09ebf6ff4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81423a9a-6c13-496d-bf5a-6d82996432f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cdd24fe-ad4e-4a63-961a-0d27c3f9811d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ba5c18-c8c9-474a-8902-d57261250581",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "2d9878d6-6620-4ae7-b720-8bf124c60415"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "946bb4a7-7ba3-43dc-848e-20f768ed45b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cea03a4-6c9c-408e-b9ea-e9ab4aa79ace",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "949575e9-beec-4587-82d5-b18a13c7d39d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6b542deb-b92d-4148-a5a5-4d9b6ec1883b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86e4091b-b645-4eee-9bc1-37245fa881a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "4690eb3b-0ed3-44f4-bb5e-33f24e1f39dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab48c56d-983c-4f52-b87f-077bf953b97e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce8ca061-6e5c-4bc8-aab3-1353a504d41d"
            }
          }
        ]
      },
      {
        "id": "6ce79045-a326-42d2-9824-aef104b70056",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "083dab4f-5db1-4831-9c1c-746740118257",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ebe7dd8-a993-4744-a424-00a223e50df8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f76dbe61-6be3-4a9c-b7eb-abefb77571dd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3521da-d072-4c65-9c8f-bd286cd17638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0497dbc-8c75-4749-aef7-7bfa25bbc896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b30de5-9cde-401b-8160-c880cb38b490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db3aab85-5925-407e-813d-ec67d936b7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab14cbf6-f9de-4a45-89ed-1082a7d64041",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d651c81-45dd-4657-945f-b40d825f0801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276c80f7-f797-4c24-93d5-9a759dd5c43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a743d929-7f77-46e0-8833-b7a1918af404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15293437-d5f3-4ecc-9ed6-7aa0d07455af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14350e36-9c87-460f-ad46-3f2d90a239ad",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f508478-e025-4cdc-89b4-451633d06b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69e9f40-290e-47a6-b9fc-468eedb91fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b21ff48-8a9e-436a-90a4-cdd29e201471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fe6b722-ef7e-4b2f-acc3-735abf734b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a860ca36-782b-4b99-b149-66c48ceeac2a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8936490d-1118-4872-a79b-9e5cd4a7fc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03039f7-59a3-491b-9741-105eab5b736d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9a67ee-0743-4508-b62d-11ee080cec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cbfe5ce-dcef-4397-be8a-8c6ece974649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5c5adc-3240-4049-aa09-cc381236b95a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d656483-c733-4444-911e-69887dc184eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d64c415-83ed-4a9f-bb86-cde3d20bc9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aaf8ce-05d1-42f4-8a7d-72612beafe59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75a8f9ac-5a33-4e82-8203-053dc7edf171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493ca5c0-8665-444b-a91b-1644c9a2a5b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5972e886-0f00-4afc-92ac-2d1619d3aa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82527dd8-10d0-4f6b-845c-78e5be216b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ccfd21-30d9-44c7-9940-b75c93aec013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3ac8158-7f44-4c75-bc25-1393152de31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5d3d6e-8b68-40c1-9f63-404bd5b6c0ac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c247b2db-8594-496e-b4d2-fbe24bd8d742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f125a1d1-13a2-4d11-9281-8ff734a5b251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae86bb89-de0f-498a-8835-9fee1ec23eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "250caf04-1572-4488-89e6-4e2313c5ecee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd225e1-cf65-40fc-b214-d35691f7c80b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9874572-e8de-4c3a-a467-f6222d2fa4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6532821a-b031-40d4-933f-a4f4e2b5da80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92331f6-d64a-429e-bc73-a454719f56b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dab03c32-5d89-455b-b65a-0729063e4285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e67f9d7-5527-4884-82ad-657a23dbef53",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be0b717-6673-4e4b-b692-52251b2f476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b66a0b-9faa-4c12-9f90-e413eb9f05fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19befe3-c31a-479f-b8cb-28d50c99e58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65efa923-43d4-476a-9122-4d65bc697d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584eb22f-a20f-4388-acdb-5be64f878d7a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8bd089-a68d-4f5e-884a-6a6a73002524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c6beb3-8447-45f2-a78c-6fa175e07e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05362566-8816-4ce4-ae93-766697467864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7188b14-a594-4802-b14f-35363bf662cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab4833b-5613-4afc-b6ea-28cb39411b1e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2671ca0f-0371-4b87-aaf6-6b6f03e9efd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678309b7-0cc4-4429-8dbd-f467c0756789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f0c04f-dc2c-4965-b280-4814fa0ccc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b7dce6c-6062-4b55-b763-de84f8eca831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70f2a4e-513b-4c99-8ff4-2d47206c1e31",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ae5648-969b-4bc4-90a3-fdbd5d1d2629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd33217-249a-424d-9388-8add662db147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcf5f41-4a52-44c3-a7ed-4c9a3c74ebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4560ade-9a85-4552-a2d8-8c78c9eddcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0571a2a7-d572-4bb1-a76f-f2f73371aef5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6e997c-1654-4829-a773-8d228b2eacbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f8147b-316a-4e07-afeb-a1bfa4b5d822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e59cce2-b377-41c6-91c1-11bbf8052ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c24e71d-d316-4ef5-aba9-d9a8359cea82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b048ef-0284-44fc-9ad7-e5f0ea701356",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab408ca-adce-4948-b336-31e9ae15bc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1f76ec-e617-474a-851e-d091d4190bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95afc4d4-cd8a-4eb5-ad71-e5d559a90f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed075bc2-a86d-49fc-a766-857e05d57cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefb658a-9662-4a64-b511-1b8cf4d7d98b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12646d17-02d0-40f1-b8bb-52c6883752dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d6a68c-931d-4c40-ab47-0dd404e17d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6b4ea1-9236-4968-af5c-c50431244dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a121f60-1e9e-44c6-a310-27f64573d604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929243cb-90fd-4e89-b137-a8ea4c59882b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff285d9-20a4-4011-8c75-cbf0cfa5eb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa79e66-a0f5-46bf-90d5-dbfacdc4bfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f8c71b-ffd5-44a0-afbc-a7c443684b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f29dd650-ecf7-435b-b0ba-05d85fe732bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15916c0c-dcab-4db3-a46c-e1b50aa9f851",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0ecbf4-9f13-4977-ba5f-0e4bcdfe5f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9151aaf9-fc02-4ec3-a352-eb743d00b16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8af6a9-eb09-4ac2-a07d-dc5890ffaabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f891749a-8f97-44d0-adae-13c5f0c95b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c109cc1-8668-49c4-b71b-39c566f0a4e2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b78fc87-5572-4af3-8476-cfb09bef54ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6ef1df-a99a-448c-8508-d65e02978842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c5f3f7-8290-443a-bbf2-8dea590f466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af4e2e9c-0473-4c7f-ae58-d02d771b9ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfbe64e-a3c7-456c-9875-98b229029dd1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6020f4a-6f9f-49a7-9e2e-56950f60bdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f49c52-587d-4e1e-bc33-70bfebc622ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3bd678-8abc-4ed4-bc56-558ba499fe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e08d854a-339b-42bd-acb1-ba3e80212883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebacd3b-5ffe-41f2-9639-7574d75854b8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55232c60-f9f2-4fc0-a089-0304a1ad72cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98eea50d-b13b-463a-8a45-40b63ed6824c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17e8c2f-5f1a-4a59-8039-4cf64f8aaa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "583c2e05-c557-4866-8b1b-22bda4cdd18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85a2ad1-26e1-46ee-a454-10dbb825f7d0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016d2c35-01ad-46d4-a116-5852a9e8dbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a552281d-7e0f-4a90-a7bf-70625fb6049d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e4096b-c5f4-47cd-873f-6c90c8483e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab65d5b2-e340-44ac-b9e0-94df8e53413e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62644e31-63f6-4ce7-8115-2d7d4fc4608a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ce433c-367f-46fa-89b2-7be611ff72c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994b4156-aafd-47cc-b9a2-b5874572a77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57329f5b-8dcc-4759-968a-72fb15b83a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4767f0e9-7326-4bb4-808b-d48a8a8ec328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbf1cc3-a82c-4854-a1b8-cfe8448db595",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e08a70-99ee-496b-9b41-e9574ea0bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5a8af4-c6fb-47b8-9a4d-51524da54bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d36090a-be4d-4c37-bc7b-a46bbe2d0734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9918a176-b4a6-4503-aa40-31cb17eeb14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770af615-5640-4759-9de2-5e2d5b679fef",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7d6202-e0a3-4287-8861-57cf64a1a379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516becb3-92d2-4578-8c79-b6740cb488c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c490d66-8b92-4eed-beb9-6ba0aeec69fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adf63d02-e8aa-4d56-a2fc-c4d621fdd832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abeaca8-5b1e-4f10-b751-61facd604174",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e536a68-f430-42c6-98e8-b6bf88f972be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26c43a1-a385-4c7d-b4ef-77e078dd8870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b018124-9361-4fa4-885b-5fe9a81dd345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0f3ea7-584b-4fa2-9b46-730cf31660f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a290de-6052-4c88-a4b4-0d61ef476962",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f771a-5a9e-46dd-a1ac-b09af72bf818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98215f59-bdc5-4287-9c26-ff9f2d2278ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c3218d-5cf7-43fd-92cd-1318d46afba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ce7486-c2bb-4d08-90a8-b5e912ed3c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72434e3c-fe48-4215-8a28-f82ba8a0383a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af85640-832c-4e60-8e87-9ffe11a78183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f403f130-0542-45c0-a769-f6694528df04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a994140-1705-4db8-8289-cfd993f30c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d778faa5-4a98-4ea3-98ef-abce2258bad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f569f04d-09ef-4c2f-b267-682a1751e3f8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88a4f53-0405-4f4e-8dfd-9bd57aa50bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec4e428-a071-4535-aedd-0d0f4301ff52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfff423-9278-4f01-bf43-5bec17c623a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace9008d-db2f-46e5-b2af-89a0cb2dcca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809a7a54-1d99-4661-8c74-c8ca85aba315",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1ea1c8-0035-4f79-a146-74fb8af58742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e9615e-74c7-4a3b-b383-8d3007706e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03813487-4996-4e25-b292-dbff1db8834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "caff6fed-6284-445d-9b33-992022c61728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fedd35-c8c5-4c15-8a8c-b6bac4676763",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2d0a7d-67da-4bde-9f54-ba4cf16df18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af335538-8443-4b79-a722-60bd36da986a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9479793-f070-4d97-a2ce-608d9bceead1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7161ad3e-5bfc-4a7e-8249-dd7ff0aeb693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05766e7-acc7-488f-9717-c3a2737c00de",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f95253-4998-47df-ad12-0961eda180cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626f8741-a1a6-460e-98ed-ac32eb12d008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158ecc17-bfd9-4a5e-9e89-20339dfa42aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "073488c7-c70b-4307-ab89-5487a763d94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c7b82f-2646-42e3-acca-f1f5652d110e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600c0e2b-a689-4f5c-b51a-d6be5e2acbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fe8890-4e68-480b-914a-d4c489f200ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428df7ae-489c-4911-8c73-1be896032dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1ed190-1361-43d2-98ce-872676950006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118affb6-5899-4f39-85a4-21650ecd2790",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be4dad6-9c2d-44f1-b502-970a73198667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49388388-e629-4b58-8a1b-6e38a8b5ef3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac65868b-2b68-48bf-ba5b-29084136d45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "450f8f8a-c060-4f3f-87ba-8249f3185e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea46765e-a154-4781-afe5-1e3ebea6c40a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197c6fc4-d2d7-460b-9421-2c255deee9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb5c5ef-449a-447c-a7bc-34705e69bcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab24711-24a1-4f1b-96bb-0cf6dd294f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a0e988-b7eb-4054-a8f2-3675af1e4546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fc884b-2e28-4774-8cf5-d2bc0cb89f55",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdec55f2-83b2-4e6c-9838-506a63acce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cccb34b-1f05-460e-a46c-0821b7a4d748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d64c544-389d-4d25-97ac-bc4cbfa6129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4648d8-3d7f-40bb-abed-0e01b73a86ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e0d70e-ddad-4fc6-abb4-07a7035354f8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea88801-5a3d-4db3-9765-97b9a1eeaf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17eb6779-2f56-4cb2-a53f-0a91b94fefcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad88350-e757-4846-ae8c-6d8f8a768979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c6aa2a-bfc4-4a40-8f28-eb87f7a06af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7134a4c-60c1-4ad8-baa6-59dd3a8cf08d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54707e5-092e-4943-8d48-dfa6921f7964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942f3985-2c07-4d2d-8c43-893901873c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0822821e-072a-4d4b-99b9-19cf66febc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e49b15e8-34f0-44e8-8da3-5abf03e57f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e342ba7a-66e8-41a5-930a-bafc8483102c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b5749a-e518-4c00-b9a7-9b8d9ef38fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bae1288d-02fe-4bfb-b367-9e939669fbda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fb9845-0f37-4331-8ce5-61337d183d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "039a9f7c-cfc5-4ce1-923d-814d97756c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848deb83-5d52-478b-800f-403c847ce8c0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e52714-1e38-4d0b-9f2e-334a3335d1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da50c003-9c35-4360-b49c-86a431c58562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cb53f9-dc6a-4db8-af77-8b62d3e2515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77925468-0b8f-47b1-a14d-8d7c655888bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae00aba3-7a97-439c-99d0-c100bd64e987",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a3ed2d-d8f7-45ca-95fd-8acfbbffed64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0e9bdc-35f2-4def-916d-835a65a818f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55499f80-7b3f-4417-aa74-26589e07954c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82699764-475f-43b6-b605-66219e48453f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd3ae29-a47c-455b-aa1a-c505d73372c7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e38aa1-94ad-46fa-b074-2375dcc9ac45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7d6c63-e4f7-480a-a0c4-d42d76454733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c20c590-fee9-4ead-aea8-c2f177e344e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "afadfefa-1793-4ddf-873a-58afc9bcd9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1c143e-51f0-4db2-8261-66188511c047",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7183c905-c6cb-463f-9c06-1f888532c6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5224e5da-aa65-4a83-8af1-56cefecfe5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bb8e30-8024-448f-b571-7bf5e0b82f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73dea71a-d813-4016-9476-78af8ed5adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0c454c-f821-4c63-aeb0-720ff23bd4c4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3165563-c464-4f9a-a6dc-427d54464491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79cdb51-d542-40f9-812f-a71e4bba4cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6982a940-4dae-4145-8b7d-2eeedfe70b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4ca17c-20c1-4bbe-b3af-35cd2e148b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e4a10d-9951-4945-b743-fdc51b52dfd6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17e2baf-ec87-4c8c-8ec8-a7d314f40ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39647549-1eda-495d-95c5-4ff5e41fc50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84689d6-0414-469f-8498-0452edc3a91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1a497b83-d5b3-4d96-8997-ec7a15384fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073cb959-047b-44b5-92c8-6e03534b9193",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f589c60d-61cd-4ae6-b37c-618701a6ccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b517023f-d55e-4c64-a91f-8af871193830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3805abf-c7ff-4d78-923a-59474d1e6624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "834a1ff3-ae44-4d91-b41f-a6dbbf8acbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f586d5-6c56-48bd-b242-9b83d68ecb0d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f70ffb2-040d-401d-91bc-bd5d4db9dec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3aa307-0380-4a26-b5d8-fbd36bfcaf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a796042-c562-4904-8e93-f429c8917451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "78674dce-a21a-4c84-9678-a6b9f2c62d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f0868c-8317-45ea-9e06-cbbe8005a5e2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e388a4d3-8deb-4b10-8dd6-6301c504fd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6573821-3e4e-4d27-9a01-403b6447c910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ee0d32-b603-4408-ac44-a32010569189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d08337dd-cd57-4c42-b842-d7f9547c61de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f1e42a-025e-4616-af60-2008bdc695f9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da77620-2d40-4ab7-acf7-4ef3117b0fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcb5f4e-9959-49d9-933e-0f434ac65300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8b50e3-5810-406c-8771-5ea0c7b3d6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a796bef2-23f7-4af6-b4b9-ca34998bce8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d221b748-468a-4460-b927-0297b6ed7fc6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f6aac-5f13-478d-bd5f-83c97b61ef11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850b0623-6c00-446a-a25d-a0b9667609d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8122a4-6c8e-4b1d-b1d5-5c689655c5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "345ba32b-b3df-4cba-9574-44a0180898a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953b5427-0d58-41bc-ae01-26d4d219a240",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc44b75c-25dc-4669-abd2-2fe3463de4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e43a615-6408-40da-bf6a-dce29e4b1612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4925b79f-8cc7-42fb-9a91-ffd34692dad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9124ed9-e421-444f-9d8b-f1de91831f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adbe189-401b-4152-b5a6-1b2445b89983",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf0509c-fdc0-4e40-9011-bb6d21932198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595c46d4-cb2d-4f9b-92e3-8760f7f9f47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f71f0f-46de-438a-832a-469a9f401427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "650e38c9-3213-4078-b4ff-ba6b39fe4e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971dd865-1d6a-4817-a22a-bbd0a2936bbe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ad15a7-2970-4ee1-99ba-81ee672b9bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d712ad-7217-4395-8e33-f65752c8a707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c12c3b-dafa-45e8-8e32-983c1b5e8494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30542c7c-8cae-4021-b094-5961a59f20b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb9471e-1446-4cbe-926a-ae71ba7a9b27",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb415107-f2d8-4904-91b0-7c38a8256526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a631c5d-c18d-4026-932d-101520790627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a213d7b6-53f5-44de-bfb7-e5ad993ea041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e0a863-08a2-4480-9d8b-ec59ab4d40c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef6d618-ac10-4316-9e99-02f742016b5d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b1e171-e08c-4655-b057-69b085189eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccba255e-f2c0-4da7-9531-67f7c15c7e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da03f57-4b39-4ec1-b783-bd5e913d27e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de348701-fc8a-4e03-b2fc-7749e9198219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8a3089-76ad-4ced-8c19-928bc991e4de",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bd819e-96f4-4d05-8253-9737efb628f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa16dae-af0e-49d9-b9ae-a744048d8795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d2bdc5-f055-4aea-b804-d98dd666e773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb208b4-34da-412b-a997-7a64f15dfd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743132df-cfb2-4dda-8f7b-916fa6ce6909",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a9167f-73ef-4e13-93e7-de99e32e0267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bc6d33-12c9-4f1d-90cb-4581e79de00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db66d992-4f1e-4ef2-8835-d2827a37ef37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f69ca68-3190-43a5-8abd-61fba40e6e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae96ee1-cf3a-486c-ae54-a50ee002a856",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d603c8d6-2497-4f9a-bd2c-0361b4f8ee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9ce0cb-71c6-4301-9c2a-d4c09b4331d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f74ebd0-282e-43f8-8ae9-678b765c1459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6349d11-81f5-448e-84c9-0384abaee7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88566cb8-95ac-4349-9891-c12487bb1bc2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8207b2c9-c3c8-4ccc-8847-1ec49f0864cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d08152f-3741-442b-83ab-79d365321956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c42d26-0ef7-47c8-a121-cd2d28a8f075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fade1f80-51b9-413e-8997-30d360687afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a6c774-852b-49aa-b8de-5c001dbcee41",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1c9f61-95a6-4faf-83f7-797fed217f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b5d889-b6d8-43ba-85c2-16c0ed20e0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de45b77c-ff0a-43bc-90ee-cc390cb8cd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "daec3448-0c05-4620-bec3-18035991a042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c88a74-3a7c-450e-a994-24ae35b09467",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b8873d-2bfc-4cdb-a644-ad892a25d34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19b5b9b-6f37-4ad9-ac64-960ce921a660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a67a4af-3e97-42a2-a76f-3ca3829f4faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b68956-3a8e-4435-9b6d-2cbe30598a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7c2337-0fbb-47b5-a140-e90ba01537c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf08ddb-0731-4089-ab4a-6d4ccd880fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68f6266-6a4f-4636-9237-b0008ed59fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371abec2-8e0f-4984-b3dd-d19dfa921862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d6bb92-952f-447c-bae6-0aabfaf1d86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43455980-9904-4cbc-87a2-3f94d1e850b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf6eabc-1a12-44a0-95fe-44ee7d16381f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211cfc35-f85f-4ac6-93eb-53b8f296a09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c0319e-a991-4c08-a767-74d8a22ee70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c258b553-753f-44ed-8bed-c025adc4c53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8565c9a-5a86-4258-86bb-006160539b8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5806b84c-37f4-437d-88d8-f47d49f5160e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeeafcc5-3c60-4a65-8699-ee7a448f6049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fdb47c-d07a-491c-adba-df4fa3809395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "17dc9bd8-c9e5-4f57-a8aa-3497fcd47db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b59c0e4-8970-4df1-9f1a-b43e89a9c59a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7011f26-e37c-4cd5-ada6-156d4ea79417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2380225d-0de5-42cc-92ee-fa594c20c718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4969d9-31bf-498c-8dca-be5d067effba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad6d848-2ca6-4749-b1b7-37d186b58d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec7b25b-ad29-4d12-a494-2f3df07a1f89",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d342ec97-1cb2-416a-808b-dcb606641e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5650064-e52d-4598-8d8b-de78c1fea7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4415fdbc-355d-4159-839c-21bc3cd07faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aefdfab-7f55-40d6-a87d-e336a03f454c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37393e1-db07-4819-ba74-faa107cf1b1f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bcfb4e-8de6-48ea-b422-037966f6dd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90047ada-7736-4b93-86b0-2f163e95e207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68708d66-49e6-4f56-a7c3-25ba41ef55c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0afb09-cf34-413c-8d01-a4342a985c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166ef22d-04ff-4429-afb4-442aa0f3a4e1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba915280-c3a0-489c-8601-d84ee74217e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08feda68-a914-4999-a559-f481dc7c9db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3201344-2318-4d53-b820-22c04454a052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9772654-a9e3-4031-a520-e4d9cbffd76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a036337-9e4d-495c-b97b-9a8e29fbc483",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81f4e00-4dbe-4e89-8142-34e0ec132743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07488e57-2294-4d8b-8806-fe4f32a0cd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf28c0-d0bb-4df9-be14-fa01347bd5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b713163b-6ef2-48c3-972b-ae4e26349ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f69f8ec-c328-423b-8d6e-e62b459cbdbb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea066cbe-b858-47ea-af1a-28f25dd7ebae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e817783-1afc-422d-9b54-69c9c69a3a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e68863b-9c7b-4bdf-a98d-0cb6ea8b2adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "558312db-dd8a-4922-a01e-644758fe5d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bc9e07-a652-43d8-ae64-fc2a1e783de7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f11221-275b-44ee-81ef-c9f9c4407e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f28da2-3c36-416e-addb-d281cc50ce18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432d2788-dee0-483f-a4fc-ef0ff0a1d2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "257c4177-bcf7-45ad-b67d-352920b65bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31df6bdb-3d9c-42c2-88be-b36589c49b3f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf9c5a1-8ec5-43e9-85a0-8cbcd44b86b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8048c727-0986-492e-9a52-5a05bb3f6ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fc992a-6256-4df9-8cc5-c953d990a18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ac7258-f51a-42d5-942b-d3b03c3e2678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d86755-be0b-4231-9761-7f98c4fa8c89",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a75903-38cd-4290-8edb-f0b50f647b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a9e373-49d6-4d04-9886-733e698fa908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243aa8bf-1412-442f-ba1f-c473f57d52cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a375e96d-c139-4e07-be35-7601eb7a9f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73022a7f-7528-4591-89b6-720e20cfc039",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f20ee1-e12c-4c60-9090-eaad965919ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcec1eb3-2a93-4226-afdb-1df754311bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc0cec0-e5e7-475f-8124-affb7234b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "761ad9a9-5199-472c-955c-98559ec7fcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07098505-d757-4d38-81be-d662a5f4c9a0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c66e83-bf43-4208-b2ab-25b577525a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbaf112-6af6-41c5-8a35-b01e47b8ad3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85febd28-76e6-4dd8-abd1-cd16ae9b009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a2eb8d-66c9-4854-b68a-d28a4538a430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c40e8dd-df2f-4b0c-a50a-47271a98b2f4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7c175d-859f-45d8-9cf6-f79acd5ca361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e963dc65-4968-4439-88db-341fef86e5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b403a3a3-8b15-4fa4-b848-867dc1aeb765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6516da9d-66b0-40a3-b84c-25bd8d90a64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a3dcfc-8ba8-45c0-a5e1-cc296f307c0a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b76ffc8-fd06-4768-9f03-133d05f409f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd243d0-0d5e-4f3b-ba34-7228ec969efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45eeb031-7212-4e3b-82cb-857d7fe11c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7ceece-85b6-495c-b5d1-568a0a1461e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7a7bd3-d39a-4ff0-bbd4-a723dd81bcb4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d16546-fbc7-453f-96de-6889e5d75b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dccab4a-178b-43b2-b9fa-d4b0b9868082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29d06a3-72ee-44ef-830a-edf67294d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df34eef2-5816-42bc-953e-f3334a4457b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a68b80-6fec-461e-9b68-42e6e3aef036",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fac2cde-7a14-4e54-9585-d7b8573c0b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b067e3bf-2e21-4556-9c8f-22a9aad571c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5dcd75-8329-4283-a7a5-f694de49968e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "397ebd14-0c12-43cd-9f2f-633b3e44cb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f2d584-1619-4a1c-abdc-8c61f57928f7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91c5c06-5be4-447a-861b-b712a53caefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc6ccae-e996-410b-bed4-9ca7401ffa8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bce4b6-04be-414a-b374-27a0010e6181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28904453-e329-4505-8c2f-d1914509ec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ed444f-46e1-4589-aff4-a8d6768b5ffb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e4ca7-b237-4608-a068-cb76601a0b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f026d7-4ce6-4de6-ba6a-dbe274bb9a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3aabad-9bce-4d69-a9e5-5b11af5c0dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "335a27cf-7ced-4b49-a8bb-7868a9a46f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad18f831-36c2-46d8-a947-e891bd2a6395",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd66d0-f4a3-4406-ba3e-b885f2b8ce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c657607e-6529-4a8b-a035-e3a4da30640f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44b5aef-1b2c-438f-a5f5-80b88fecd189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e352e4d-0360-46cd-b8ea-db552b428a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26819654-cdb5-46ca-baed-1f93e63434f1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970759f7-2f72-4d3d-8359-50673fabe5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f90029-3b43-4692-82f5-63ac5c5f45cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b7adb1-af94-4137-ab5c-1e2c185ead81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c98fc751-b20d-4f35-bbef-b185ad7e59a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd282ab-75e8-41db-9b62-b5a360154e71",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f85f94-b4e2-4a02-9e87-9c96e4405635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3ea5b9-de08-47e2-bf32-6c1afebd9455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184a0aaa-7cfd-4e42-82a8-2c47ae79af5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39beaa4-5d9a-486c-b886-eb4aaffbc93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8da3c6a-cfdf-4ec8-a5f0-4aa72f97d3c7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796d1765-bd7f-4f97-9c8b-bb589f7c0590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd2b3be-0b39-4790-82b4-8a99fabe758c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861eab5c-4060-4d97-859d-8b4defda90be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc823ccb-09df-4400-8945-9ebd3d241bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40d933d-7fea-4813-b103-1925ea58163a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d35726-6613-4288-bf49-01ae384bdd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e605843-19aa-4dc1-a577-f37edb5328d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06a695e-e308-4dcb-a176-16780d3f2dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8e7aea-a03d-4cc3-87a1-37464e80c55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1936fc-6b9b-4680-b1f2-082327ae65ee",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025b7657-04e6-44d9-a80b-d1a3b6ed4641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68df4972-9077-4798-a220-d973056df396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5711c60e-7d07-4fda-a469-d0006f67c146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44be597e-22b8-43a5-b052-f77ea4d88dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84da7ff-c5c2-4561-9a13-047d4df4e19e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb5c2c3-228a-4b97-9a6d-470a3fbf2be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3189cc-b898-494b-9a0b-d047c8c4f2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689ffb28-2347-4bd0-a914-5d03a9fe6d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5402e31-191a-4b05-ad6e-43807af451d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84988bdb-9e11-4efb-b1d1-3be9fb9c395e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb95654d-1bb6-4cb8-b57c-5ca3784f1631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc41256-0604-4f66-b5c9-1cfed02972ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f29635-cedf-42fe-b49f-8211a04eee26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d45fd920-49f8-4288-89c5-058b35928a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b035020-278e-4540-9fc8-24f838c96d2c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c1b1aa-ff7c-4119-9f94-98998eb4a09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c853a548-dd8f-4a71-b937-6e0340945ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1db9f5-4746-4107-b7a9-551dcf9a315b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa01a99-3752-4a88-b45f-127065d1e78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de17842-a2e1-4258-8554-d45f64e969b3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d569f70-b009-4527-ad5c-1686ee77bcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831dba92-6689-4ec3-9ee1-0defa1b76a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d4e187-6952-4044-96c8-76eb942fed48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bbe267-4c05-4890-a5e4-c0273492fbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219aa70f-9306-4a48-bb69-7bb2bbdcb705",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347e6737-6f8d-4d24-8d3f-169c5dd58e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9b58ce-2c9f-4c47-9a32-30a8d6bc6495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686da968-06f8-4af9-b23a-28232f5f54cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20aa5d82-eb74-4e55-b52a-b358fc7f1121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0f466a-711a-48a4-945d-82dde24a4904",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f83c95-2c6e-428d-aeea-ad5f3d5f2a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793d6d31-a3f0-4118-bd5c-53b3ccad052f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e32bc2-85dc-4e77-949b-147528128dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdf1b54-7a6d-49d3-82c0-b379a4e34511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733d63e6-4ba0-4566-8067-61f788a30752",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32d1c9b-a058-4ae8-8742-c4383da256c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c36570-ab33-4c16-b921-6316ced914e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950688ce-b656-4ebb-a96f-0271b9e8d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b641dfe-8aca-4a71-b47c-c8db528350d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca220040-2e31-45c8-8ccd-b5a46acabe32",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62fa29e-38e0-45b3-ad2c-d997c79dfb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c18e8502-2315-41e6-bbb1-70f09ddfc079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9048eeb0-2b34-4cca-830c-5a58b0f3bb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff4966b-e845-42ad-a1e8-a8c97b464534"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7e09c5c-8db8-4192-879c-3b51d6ec7da6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8df08f56-97d3-4c87-8be2-97c8a6571162",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61b3175-b567-445c-a661-aebe82d87222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eabd5d6e-f203-4a9c-9b9a-ea33b07d4e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f30c975-7434-4497-9477-416ea1806c07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fb274282-d56a-48e7-b1c5-c66ad3f0cade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f79fd7-7a78-401e-a846-3fc3fae8ea09",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbf671c-0cfb-417a-9f0e-ed923f3cc733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57028d13-f7c2-4f08-8627-db362c899ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9182b2-2c0d-4878-b20c-a46d062ff706",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fe5b99fc-20dd-4a5e-bc38-1ddbcde2cabe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d1ba8ea-0a9d-45cc-b411-e29e5529a0c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "338faa90-dee2-4dac-a83b-be8aff59da6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fa6e930-ef55-4ea4-9b3d-c8b42eb5dd87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4373a825-1606-4b4c-9bab-eac862b27d42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9680d313-22b5-4807-801b-f704e5c7d33f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db160691-85dd-4747-afa7-41454d8ee8a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "244b3b58-4267-4e65-a8f9-c43e87920959",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "675bf02f-49b4-47e7-af73-7cc74ac6b983"
                }
              }
            ]
          },
          {
            "id": "d56ea449-567b-430c-8dfd-c446974a2e4a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d65d4c4-8bc9-4df8-90f4-5ae0efcc36e4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "459a7921-0c71-4a96-8779-12d53d084cfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c52750b4-0f67-4aa0-8c71-2bd18edd3863"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36953dae-7a20-40b8-884b-24612e64a7cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f0186d9-220a-48f0-a280-bf4606f24426"
                    }
                  }
                ]
              },
              {
                "id": "375b31d1-7f4c-4ac7-8e71-7dc2677f7842",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10b5bd5b-59d8-4921-8145-8d54658bf5e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1f1a0c7-55e5-4c66-afd4-cb942e136bb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2eef2e85-1024-44e5-91f9-1458ad7910b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a182886-2c54-4993-aac0-45d0243e26cf"
                    }
                  }
                ]
              },
              {
                "id": "d74335dd-5fe8-4db4-ab21-9b76a0eda756",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6beb6118-7ac0-4ba9-a311-cfe64b2058c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b871a9aa-f122-4839-bf1a-d6d478e568cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe39a918-6aa4-42c1-8f95-864c47d84ea3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "949d31ff-859b-46b3-83ed-1f1fb2b1acfc"
                    }
                  }
                ]
              },
              {
                "id": "2a4e41cd-3511-418a-b058-ae74c0ee204b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4e55fe0-f405-4fa7-8b3e-817eeeb8bba8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb6ffee8-aba3-46a1-bb32-2d97a2b4e0ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06659da7-ccaf-40ec-91d9-0e25b41cd02b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "51303b47-c1b1-41a0-a52e-9844a5d4ce9d"
                    }
                  }
                ]
              },
              {
                "id": "c6816b12-eb56-4550-ab32-0a05f34fb5cd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae63ba3c-03d3-4c2c-8053-fefe481171b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7059ccfd-3e16-4afe-9b13-50b800372c38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2738d7d-e5de-4468-9b56-908be6377567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d9512f1-9f68-4b29-beaf-c1ee9b8f6ff6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19963806-6229-4f2c-af5e-66350105f3d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bfd85d63-80cc-4517-b5c1-7d310ecef1f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8778f9dd-621a-422a-aee4-2ff0f1b894ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61fab3a0-97b0-44f1-87b9-b0377436f1f4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c658788-6adb-466b-887f-a3234d3ddd93",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5eaf1aac-838c-40ac-aa1f-b719ff54ff9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2506759-b93f-4790-a2c4-78bf3fd2b51b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ce00022-b434-4840-a5ba-f2e96f095627"
            }
          }
        ]
      },
      {
        "id": "c9ccfac1-9773-4dee-bc0b-18eda5870b00",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cc5209a1-e46a-4f6b-b3aa-09168b5efd7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcc5e8ec-b416-4b42-bc09-70c9425d293c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41e09f71-53e8-48a8-80cc-fcd86a584802",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad58bbd-76dc-4b97-a15d-2e5a53610c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72fb288-7dc4-46ff-b76f-4163f871d868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41842f6-3c4f-4e9e-9909-086cc4d7e906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4de3d10-7815-413b-9c8a-715c37fc0e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ea245d-5285-413c-bd5a-e542d064d20a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8186fb-4a48-462b-bd99-45916bf904a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff02c3de-3c03-43a9-a851-ffa8a6414a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848fe4ca-3e67-466a-87df-c033b62ca7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22670c84-4f16-4223-8832-e0df8ea05f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b529f807-8ce9-40a5-b2e7-660c9e330b41",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cfee2c-a15a-47a8-97b9-1a63298167b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4562431-61cf-4579-963d-c92b92e12b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c150ea-d6cc-4068-9969-739e099f8608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "891cd621-2069-4b06-98a1-84c2f4e859c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1718ad-53bc-4acb-bc65-aa92a1ebf500",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575fb7e6-8b96-4c27-a7b7-af866898c92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31246701-0ca5-4998-ab1a-0665148cec1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba5e683-9ff2-4e0c-8234-65dd52f45e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e91489-d6ba-4980-8c5f-4e2d6fd007d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0c3aad-5e4d-4987-9749-1c0315f6d86a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a6080c-d59a-47d1-8125-e66703f61216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed12bd3-2ef3-4406-a307-ba722d893c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7082f1-524b-478d-bcd5-d27a3295e8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0014ea2e-a445-4a2a-bece-1b11bc1d1f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711b6a2f-7b36-4b25-80fd-303599cf1692",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b9ce78-38fa-462a-96cd-b0d725f15ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33144b0-331c-42f1-9256-3d79a6f6ba7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1a0a1d-b1eb-490d-83bd-f3d8cdf68fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5fa4df-8564-4d4c-a9d0-38698b8c1302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01dc6819-f939-4248-8290-b895e161d65a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aad2789-8b90-4234-8612-e54997136dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dbc584-425a-459c-b40b-8c683a68ce4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0177f29f-4354-47a2-bab0-caf22e3732c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "095a3bf7-d94b-4251-99ff-874ef8120735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a1dc59-6309-40eb-b0f9-659db0198215",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff598769-514a-42f9-b4db-18a18beec0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d00299-aae9-4d35-9961-42f77dd9ddb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9e9770-27e8-49fe-8dcc-b37c677e76c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfbee2c-b2f9-4061-9511-91f1997d665d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6303fe-02b2-4e23-a6ee-fd64745ad44b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b4104a-b13d-45c9-8bed-c7afafd8811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece664b3-16cc-4adf-8783-10568b1f4758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501247e4-319b-4a63-b995-9ddbba04cb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa213c7-cd37-497c-b6d1-a5a5d158f501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7013e49b-310f-4b77-9c3a-5c396aebfa57",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe08a03b-3947-4b60-ad70-37ea84f135be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2b3686-dfb0-4042-b347-5c3edd105dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9fd383-9b2d-4822-ade0-82db00e233ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da2f5c5-203c-40bc-a645-be32fe307086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e54a19-88c2-4e55-9568-204357e58f02",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effc4f10-8611-4099-b3cc-4cc514b1076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab99ca6-ca9e-4151-b7d4-0af09e5d8131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366b25d9-b40c-4759-8669-c722a9ac0671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dae8c551-2e26-4837-a0b2-3b91ec295c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c8cbf1-af3e-48a0-9096-72781a80e8b6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee8473b-c593-44ca-8243-92412d3c14ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206dce19-7e94-45de-b866-3d8c4ac54a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d466b8b1-06b2-4692-8a7f-b387f7e512d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63ad5e10-5887-4a60-bbf5-dbb71b4c4659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84b70b0-cae1-44d9-b7a6-ab793d44f51d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e8930a-b23b-47c9-9d67-54ea928beb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4d86f1-578f-42bb-9e82-0ecc96ec3aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1263faea-f2f9-4bc8-b391-c110f9c3a2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c9f51a-a5f3-4dbc-8721-1444af88169f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce076ab9-7a44-4326-857d-305309596f61",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6da43c2-7343-4b52-9a83-b6a2f1ef0f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fb686d-8e51-4d89-b213-446e8443e78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45ab20b-69d4-412e-927c-ee9fb1874fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8c6c3b-8152-4cf0-8853-b35cacd8355b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e28c2ef-4330-44e0-804a-406edaa2e773",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27a45b3-34df-404d-93dc-46dadfa14be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81283908-95ae-495c-af7a-7dfbcdb411ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e60c933-0b42-464d-ae0c-cee4a2af1bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1f4025-0886-4b71-88ad-5cb56844f8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d12abc-d31a-4f36-b7f5-63fcabb2f5c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e392f6ea-fced-468b-8996-cfd38b0cdc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a760114-94fb-4a5c-9217-493a6d201d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82724036-6d98-416e-9751-80c6492f5986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bec4d973-c7c5-43ad-bfca-9d8447070e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5040b718-2311-421d-ad4a-b44302c931f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6932323-2f69-45f6-895b-78d64de77500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca1ff7d-b1bd-480b-9dfb-2335038e56d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ace4bce-5180-41d0-a310-7f83ebdb847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa1b2d9-1258-4906-ab98-bb43bbda8b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87af568-c15e-429a-9f49-51a40a694e24",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1f4db8-7bc6-4afc-962a-807ce93348e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5945af6-52e2-46dd-9732-a603b4cb2cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cdce13-f01c-4d75-a67c-b17109631ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba26a22-cbb6-4c7a-9a5c-cbd32a7cb6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ee3e8d-df78-4ed1-8b43-7fc2adb9a01c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663c992f-c7f2-4e0a-ab45-757c3e7a3acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833878a5-dd72-40eb-b71a-ebd17bf2495a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cd0a7e-278e-45a6-afcd-47789a9a959f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "329f8802-712b-415b-ac5a-2b7cfd7b718a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6836e03-429d-43ee-b534-e66ded911972",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b86088-a1a7-445c-bd53-d3efb3ac99db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437e5f34-2f9c-46ab-8fa8-b4916e79db45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07589fe5-8496-4722-b27e-c261e80a1919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0eb20d-e523-4954-a579-4ef5f7b708b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3630a29-4332-4ca2-9738-bc8289f8ce84",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f6c895-645d-4883-89bb-c1b84d771eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb1d890-647b-4173-96f9-6d3618c225b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f04dff-43b6-4a50-a660-98c3af1dcb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff84c50-7ba0-44be-a68c-c3c80d337b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe88d96e-9dbb-498f-8421-f63714fcc0b6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd46c17-ea67-4e0c-a6e1-1db8fdf25c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32f76b9-6652-49eb-bcf5-17f302bc46db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58b61b0-649c-48e2-adb2-16aa492ce97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74f563e-68ad-4e5f-876a-164dd296c5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10003bbe-753f-4ed6-b9a2-b415ab7278ca",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc03c39-9f4a-4ae4-9dc6-266b494813ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4613e1-e54a-47c2-9e1b-f5002fac6ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fedad2d-42b2-4e3f-b727-13cd66597323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "500388e2-07fa-496e-938d-a9f18b20565e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8713e08-5afe-4edf-9e3f-e30736513ef3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158969ed-a935-4d23-95a4-32591e1717cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef34598-f0b8-4103-879c-d7017ae6e7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5901e1-3112-44ad-9d57-ba754831741d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd18105-1dbd-431f-9650-a6f7961ac4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4250efd5-09fe-4376-ad34-68027d212fce",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b208e668-b735-4534-9000-34d01fe72df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3c1918-d21c-4b4e-ab85-df34aeea201a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579cd2e8-fc12-4b55-80b5-c9f353ad4129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ef7376-09a6-477d-81f1-c764546e0192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979b61e3-bb05-4ff1-bdf5-4f12b7343542",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bc1044-7651-4404-8409-e18a4e717a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515d97c1-aebb-44c7-b76e-01f07852f18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd854dd-81a2-4dd9-8664-5850d6314280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc8608e-4590-4497-9c7f-003695904c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5eb23f-6086-4378-b9ea-1e233e2fc7fe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8828f3f0-de46-42b1-a392-565390ec5734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fd0e88-1cba-4b30-9e6b-b856bdd29c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ded3043-c2f5-44d8-81e5-40a4965d9ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17bf58b-b1fe-4c2c-93a8-4ba7680bf099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78adc969-43e3-43a6-ab50-7478776a2c42",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59d8b8d-dcff-4b43-b492-d9d194559292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae321fe-82f3-407c-91f6-69f48157a6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9b5326-a5b4-4cff-8729-78bf7171093f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "373328ce-6ddc-446b-b263-bffb2ddf8c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb287e92-43e3-4fc4-8254-9ce7d81f3860",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695a974b-fbe3-45db-b499-e555be62d9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc04e5e3-4811-4013-a7cb-14ff43440ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e15797c-7cea-4ca0-ae37-40e3a8d0fa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59da0a7c-6942-4980-81af-382ed4986887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba3edbf-743c-4edd-a76a-5c4f650ca042",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a129bec5-4238-431a-aa94-89164fada215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b699a49d-fa6b-40ee-9e7c-a9c3880412ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7b1039-adfc-4367-8a6f-fe9f6e86d8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b93c93-c382-415e-9b1e-649fb0822f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab2e18d-96ff-4422-822a-f892764dbd7a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04ef993-1fc7-40a1-ac27-c7f8a4287ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c0376d-3238-4f1b-98e2-9a7c9cd6b23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e306d5d-a5c2-4460-ad55-8cae871307c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849277f4-34c7-4c2b-b615-ad9f60321203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b696e1e1-3353-48a3-8ab2-6f0985db8aaf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fb335a-c942-479a-b9b5-cec0fb511c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66186322-4aa5-40ba-bbfe-0f06cd342a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e28d6af-54ff-4969-a4f9-b24705ae12b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1daa31-59e0-444d-97f7-65e459220a08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8094c89d-b339-4049-8b7e-0cac3aaa6292",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9b40959-15d2-4b98-abe1-2ca0cb811ff1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2ec0f3-7a2a-4f6c-9f5a-aa6ecf3ad380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2634ca10-fa80-4911-a036-12bcb0ff93c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c47e005-3bf4-4eb0-988b-96911efdf2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbe99549-c893-451b-a929-9ac1b28c9ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe59192-1142-4609-8ab9-e57f413dbfce",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3437507-aded-49a1-bae6-4c9671666589",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "5b69ac37-6d94-408d-b5e1-9d11412b23b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315d7626-b6ea-4eab-a75c-b176fa4a3d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed5f14db-f534-414e-a382-da48d8af7a0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa9e1302-aec9-4998-a6c8-9394d4522af6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0931ded3-1318-4604-94c3-f96d2aea3253"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "908c635a-d440-4924-8c7e-f3822196e429",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "350490e1-89e3-4c6c-a483-4c1aaaa6ad57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0eaf6dbc-bf5e-4b3f-b601-fddf7f8a8618",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9adf69ec-13a7-4346-bdde-e79cdac06e3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4994032a-a672-4598-9851-7db6c3732958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3aa53525-4fdc-4e53-82fd-9bb216e90785"
            }
          }
        ]
      },
      {
        "id": "19fc88fa-70c6-4296-bf18-646444e815b5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "df4c5adf-50a1-40d4-b1e8-ddc5f8d25686",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8191f591-06f5-4cf5-85a7-0a3652e1f2fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3fcd142-fdd9-474c-8f47-7f5b348f3a88",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd6bc85-c532-4d5e-af7b-c95c909cff30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed1fff4-bc77-4135-90b1-11a370a42ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da064f25-05e9-479b-91b6-2132eca58818",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcf7f19-0f1d-43d2-9299-1485a36e9d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19033865-00e9-4026-ba56-df9e8849e11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae19dd1c-0efa-45b7-8dad-e93333cc2665",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c070863-b559-472a-b5d1-bbc40c88f1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b546e5c5-7cb2-4d40-b14c-c6bbc18d6a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eb5744-e721-4798-a762-4ead625f265b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223f7bf3-fff0-4543-9474-dbec6d168a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1f257c-60d9-410c-ab0b-21e6cf064573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d908c37-2e01-4f26-a47c-da3d5f7711cf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa78ad3-0412-44f4-86b6-192d1d0deabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbd653e-a642-49d4-b517-4a2f13cde8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706a7805-91d2-40a7-92f9-25245605a6bd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dffd8df-b3c9-4c7e-94bd-e13ad22f21d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a303a4db-e7a5-4351-937f-e718f0a8660b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766c20c7-6739-4338-b9b4-c0087b96b440",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52242cb5-d9f8-4d4c-8874-73c207997eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e696d00c-d6f5-4653-a2d5-475811d7776c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97941f8b-8f04-469e-a5b2-12a4f98f22b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038d22ab-a106-474c-8c8a-a653fcad8c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04543ffd-f17a-4b19-891c-2b9d6b209420",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8329b2a-02d5-47af-8ad9-d045758b67ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3045f38e-1ab3-4b48-aabe-1c0a8cfa4f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c7f919-0ad1-494b-a105-8fc80b281f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a6d571-240c-4b68-963c-949d6dd2e4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7052781e-801f-47fb-b846-20b798ac9e15",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d03c4f-452e-4913-a115-466a160b4949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc2a8db6-f27c-4865-ac34-9a72bf4670ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd17b5a-5d49-46f7-a6f1-f99dd9bf56ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebc4c3c-daaf-491b-96d6-27ed50943e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3df4783-1445-4c78-bd3a-f7a0b654ba78",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c359ce73-8c32-44ea-b095-04302d5e9fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc27c3e4-a945-4c55-81b1-527a433a23bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e798d62d-34a1-486e-bd2d-edb88917770e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c6b66b-6071-4f4f-9e57-a6521ee705aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86db55fa-3991-4916-97a7-055058b6d9c4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65dc053-8ee8-4110-a85a-c9da77d96421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9204061-d71c-43b7-879c-4cf2f271f670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361f3f9c-12cf-4e30-9358-190ae1bfbaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de83ba56-8860-49a7-b79a-254e9e2a2797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2af323-6f86-4716-9f01-c04b5920b409",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719ecd70-1db4-47a2-b3ee-14d84a0b0234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0b10b9-51d6-40c9-9d5d-2d74b354785c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b68ecd1-3a4d-4162-8da5-681f6bc2db51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e600bb-2d40-4729-ac09-04850ea6347b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2fecad-92a7-4e2e-bde3-c522eb865e77",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead84d1c-a8d6-4712-8652-b1d32cc67377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7aecaf-4835-46ff-8db1-cc1c4795956a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e99ba85-dfae-4767-8384-5551fa8e75c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec27f3a8-c80a-4fb0-ace8-8c8e473e4b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2a0a99-fe22-44e3-9a7b-e198903da5bf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aa7c35-d5b6-4f7d-ad10-8c3e97c690f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843dfe01-5366-4485-88a2-273a2dadab35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a94955-3bc2-4e47-89c7-7e88816b200f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4345e8-38e2-4bf2-815d-c0847202dd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c2b818-37bf-48d1-b71f-2b41145ec4c7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2ae57c-e2b1-4626-92f4-be2d2d824a71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c8227e7-785e-4838-911a-3423c90dd2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ba1653-6a86-476e-a783-b2e13a4e2fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bad904-e816-42a3-899a-a660fadfc57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e714d8d0-5ec0-4f99-a2cb-52eabde492b9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aafcd77-a3bb-474e-99ba-a8e8105848be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "348d224c-7a2c-483c-9891-ef8ff6fecdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d82a4ab-9ebc-4421-8979-ea9414674113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4938eee-3e50-4ad2-bd86-a38a2ec6db2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c176984-3d77-4903-9889-18284b456105",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d06a3c6-86db-4e5f-9705-e180044c3b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012faabd-c6c1-4bfe-b3cb-bf468cd90ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c573da-a44b-4dd8-a862-badb426f801a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb646e2f-2459-489a-a276-43c25c7a67e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e22397b-1e34-46bb-8e6c-1643c12253ad",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5f5257-ebb5-4802-8257-6cc02dbbe32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d9ee99-570c-4ded-833b-ae1b42aaf8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e221466-5ca6-42d5-8e23-55b0951238ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ced65d-b7a9-4ac8-9256-764897bb7166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e252fb92-9f03-4d61-be0d-2caaf3f87002",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e23ffe-71ad-4b88-b65a-7544d2ee0b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dc6dde-7a19-4eab-ac41-d6796fcb7b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03ab302-26e5-4550-b5d8-fc7978b92427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df0fbb2-a3e8-48e7-b491-45e6b8aa087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055f8036-ac9d-4e4f-982f-82b846fd3657",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41cc33c-2386-491b-8895-8ec747f0ef46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41316944-7c97-4f6e-9337-274327310ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf062c0-045e-4c59-b8e2-67cbc0034fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39526fbe-59a2-4392-9485-aa1cd22673e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe39617a-06af-44c7-ab6a-7a2ad1bb0b21",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d47e99b-5d4c-416d-b8f6-a12cfe6900c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1031db-e14d-420b-bcf1-88665c232173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d75bc8-d725-4eb6-a8e2-ee84a81f2d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006efbe5-7d0c-49b1-85fb-5721f66ba138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059f514d-b020-400c-9221-57a8bc0a238f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11afdf9b-4c6d-413d-8f11-dced9a91f224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549ec859-98c4-4c79-9613-10bc901b3066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c78b32-61af-4453-aab5-71cffef60407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef3d68f-5311-4eda-9124-6bef822e231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5af8f3b-d175-4e57-9fdc-aee3bc1e1eef",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a06ca4-1aac-447d-ac45-08123707af1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2736e517-dda4-4b42-9c8f-f90bd55b6584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049d5606-e34e-4d2f-8171-d41eb1fa81a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1440e331-cd49-46d9-8f80-25b599fb1bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2757d963-19ac-4f0e-b206-ca9e31f30d42",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0092b03-0896-469f-9724-368e22b667c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d33651f-7b13-453e-a98b-c30617807773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e7945c-6b5c-44b8-8e33-f707151474fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54c0b15-72f6-4957-ba0e-745eb92467da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43cfcab-0583-48f5-9926-53701a23d945",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7022b7-0cfa-4505-a252-799bfbff6411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d69bbbe-e5e3-4c91-bee2-4d49c0647d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8203274e-f470-42e9-8421-77a6762540a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c018b7-ece4-4899-b49d-71f791223632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acb9a2f-6d8c-49ee-b07f-ac71118bbe97",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d23ae85-751d-4b60-a4a2-dcaf05f171b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e4710a-fdfc-4622-94d6-9fc37160b98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe241a5-d1f2-433a-bd04-8afe4154e908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ed573b-d097-415c-8f62-87424b28184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868fa820-5940-4d99-ab7e-3f3661e65f3b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93151367-df30-4f11-8437-2acc7448f27f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5bffbe5-fbda-469e-83ef-666b4cf0af7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455b57c2-61a7-41cf-b897-a669f3a589b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a5445a-4655-48ce-ab23-d7f086be55b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4e31a5-32a5-4aa6-b055-f6c9ce882e4e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2a3da4-0be7-4a8a-8c0b-3cbfa532a4ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b0cf9a5-ed78-428d-8e51-160b5a5a7d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd24cbe-fd58-4e59-aee2-445a39ca2f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4598a0ef-00d0-4c69-82eb-333d2816a5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54687ad-2f5a-474d-8b2d-bda43652f262",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdd214f-98d7-4a75-9abb-d3c0f6f732e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f8e1aa-6217-4dfe-9f6c-2b2b127f6fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb22eb8-d26d-4a75-b3dd-aaf4f1b45e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd78534d-0a3e-49f3-b0d5-4af0941a427c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc69171-a841-42c1-ae55-dd7d256d14f2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e96119-5893-4931-9d21-7f99960f32dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203e3fbe-d4c4-4f83-8570-286a4aba7494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4037fcb-2458-44d4-9e59-6f61633b2e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9ca6a8-e105-4eb9-b1b6-f82377564df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3872d58c-199a-4bf1-b885-97ec99f208ab",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfe2d02-3efd-4046-979d-5c486d36ed85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd259ae1-2d62-4f60-883d-8a0d6e59dd2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4fe432-a406-439d-9dd2-b5a38df734f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c07622-c75f-4019-9744-3cbcfc4a0633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2f3ad4-345c-4587-96f3-e230f871c733",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742dad93-5cb5-4de6-bd7e-fddaf044b8cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80870d2-ff5f-4459-97fb-737a984300a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9502d4-4c9b-44d4-8f50-849eb04fdb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a55179-8cab-4583-a75a-d46db5c93f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201d8147-e5e5-4e53-8e5d-146fd9f958ae",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bce54b4-029d-4833-be49-691f381b5b67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e52855e-add3-4745-b312-c9826d502cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0ea0d4-fae3-4eff-8237-edaac1228f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4464f429-d69d-49fd-ae18-0271d9a6c53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5358b66-7786-436e-80cd-32fcf2b5a8dd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f12fe6b-37e2-480b-a1b7-bb4c9ab589c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa387626-b55c-4e3d-80c5-78f4703d1674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5427d67-a372-478f-a867-89fa1fbc3865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0839de-763c-4212-80c5-4f888d80e49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6975bfb7-8280-4c92-b8d3-54240a29f6b3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704df2d3-34f4-47ec-85db-ded8d6134e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7721b751-783d-48bd-831d-ca429669f4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500df4d4-de29-4a6f-aac9-259c6b4e9781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7272cb7e-bb34-40c9-8b18-a06c46ad08eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d067056-e2d7-4b16-b47b-93196fe83386",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360072b7-db83-4d21-8767-add4d1c75b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3587682-eb4f-4b8a-b392-789b7e8d8401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7b1e2a-336c-43bb-b4b5-da6c243b392f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b38e786-a40a-4415-9f3e-47414bc03f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0799b026-b622-4310-a4d3-a5eb4476be3a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d4e7e2-5c85-4206-b93e-f779d3cd826a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33782aa-3e9f-47a0-8ca4-63fe9d5bb2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eef1ba-4ca9-4fda-9f46-16778ab996a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40388c7c-b534-489f-80c9-34dcbacff850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bd2c69-6f4d-45a0-8b55-7896900960f5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e221ac-e551-4c34-a620-30f38ba7b8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71a7c6b-4c61-4a31-8d71-2383c6d82108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f94523-2580-4817-9c5a-062440bb68c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c154b33a-3c5c-4f0d-a4ec-ecb390cbfe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bd3a51-3e0c-427f-8edf-7f6e15208137",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268a07f1-6b6b-4761-a456-de66b5fd6c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5023025-8588-4566-8438-6752297223f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fc1cad-7871-4c95-a778-fa9092697be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63e2a1a-8e33-4e2c-9ff6-cf0b46baca3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27fb1ff-d9c1-43f6-967f-061d3dbcce02",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00d16cf-61ec-4814-a983-bb79d5a349bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7957731a-7690-41ef-b6c1-bf3dcfa8a3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caac384-bcbe-438c-9849-4a34bdc7d007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc769c2-98f5-4099-9fe6-7665e2490c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a278ea-a072-4321-b4f3-ac4811b31145",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3fd3a8-cb40-4326-8808-020f8caffe28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d08e8eb-ab82-4acd-8d81-05dad28cf884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291addf4-7a5d-4172-b9f6-3cfddade04fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38d2c06-2865-4a05-a06b-228284dfe945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a2a6e7-2024-498f-8060-93e702afe36c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca03ea04-5a4b-4761-8844-ddaea8e84758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5af06cb-37f0-4a19-9462-146d95e54886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675734c4-d3ca-407f-b4a4-839dcc468630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea9686a-148a-4b77-a4ce-defb17391b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0e275e-cfd3-4faa-8ceb-76bb62252d8c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057ae254-ff9d-4931-904a-3e7943043e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20646403-1a3b-40a0-8b98-bb89330161a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a85a57-30f0-402c-be6f-c557ffd0d05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350991b2-e72c-4988-abdc-32bafe717076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defe4687-9e1b-484e-a31e-eb5b9405fd85",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3da5a7b-dffa-4037-9428-75e63251360d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42244e3-60b2-4ea3-8979-f02dc7cd48e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff52166-ffea-4cdd-a6eb-2f9a5f3382f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0096a659-f6c4-401b-95c0-c6e20e5c2e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9ee176-a3f0-4db9-aa7d-8ceb4c630dcc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9643549b-d1e5-4737-b6fc-a10c5305a02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465afc04-0c11-48c2-b2a0-df30dace41ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9afda87-09ad-4722-9d0f-86f4eff6a4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ff96ba-032b-4bcf-a946-26fedc17cce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7ae333-955a-4377-b39b-e5f04e328926",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c55d4eb-a022-4e61-b520-e317fd814d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e017aff6-ee5c-460f-9a96-fa7b9a029535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e556bc8-84fe-4a34-a63c-cf08b1ddcf07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123cb228-1598-46d6-957e-9c6d3dd8bb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02cc6ad-215b-4164-a98e-528d6d0ec263",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c12332-82ef-431b-a244-3d5591561bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03289e45-e14a-4ca1-8832-d4c2134eeb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae46aefd-e17f-4c19-bf90-37b1581ce44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ce35f5-dd16-45c4-a469-00c86c68ee46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176bd324-20a6-4885-bc5e-f86160266e7f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b505be-41d0-4dff-acce-1d209a4afd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47eaf6af-30c8-4088-924b-ee57dfd39d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fae3e0a-3b2b-4e84-b1ec-9d9b2aa23774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba22bbd7-4680-4cf4-88af-00a8d7cc74b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bf8d9f-fd3c-4a89-bc35-e7ae0549fb23",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b40974-8a4c-41d6-a579-10862e8f6f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e13aa9-ff19-4e14-a393-488371fac286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb255a62-7837-4db3-85c6-34c565e789f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382d96dd-a850-486f-8c02-365831eae993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861b599b-4778-4148-9368-17d5b6681b3d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f616b9f3-315a-4871-a247-9fa766c77b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0df7c1-46f1-48a8-8edc-284601f2f255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e345d4-e36a-470b-970f-593be9ef9625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b45701-c6da-4a3f-a944-ecab773de77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33527686-15bc-40cb-9e9a-c8681e3640e1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d373819-c9bc-429d-9389-0515e18069fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0411514c-d1ee-4991-bfc4-e40b821b360c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b62ead-2f11-4852-9506-144cadf93a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c33e27-2707-4240-9595-7f589b110cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faf9d65-1f7e-42a0-8fd7-505a333ac210",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea433c3-76d9-48a4-9b0e-376a1fddf70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a30890-ea85-4ba9-ae52-ab72518b6fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e921f2b-2c1d-4f70-bb03-ccfea9ca4b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90348b3-ea62-43f9-9f9c-93c2794b9d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1187335a-c314-45d1-8b07-feaf7039f121",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ba8775-efb4-4c6e-97b6-1d99296fc4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c0208b-b381-4e95-a982-afb70edcd464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353cb469-fbaf-41b4-abe9-8be8f9fb2388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c02303-454b-421d-be52-d07637707b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37891afb-1738-4b0d-a2c1-63d7695cd88e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82fc9b6-b47d-4a32-85f4-ac2e93cd2bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9f8aa8-6641-450d-8927-a6ee55171981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce51c59f-3e72-4dfd-92e4-9b1b5c4a0fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdabc0a-bd3a-4042-a228-e56a9a71c39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fec1de9-2f32-4786-80e4-c41d04f6ffe9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631a4cae-3ad6-4986-ac9d-6d26519ad648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea96ceb-12bb-4662-9f1c-2030c640fb43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0203e2e1-fb20-43b0-a3f1-9874c059e39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2d4548-df1e-4673-a2f1-777073066cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40c7239-e946-4139-ba73-6675a83bfb3d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788d5466-72b9-4ae2-a386-ee5cc6adcb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a149fc8-bb46-4389-92b4-a9b61476cd99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b6d799-74b8-4bb6-832d-55c6a4cac050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0150a5-1663-48dc-b551-095b6b215e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca43a3d-89b4-46b8-b69f-4bd074a704a4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234c25b8-587f-414b-99c5-6e9d3897b62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c52c158-5975-487a-a845-5ce6b929c59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95039ed-306d-418c-a49e-63ce1863780a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c4eb44-133f-421d-acc8-ab1ae92454d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f01271-12de-4b4e-a9d4-72335e9bef6f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a32f47-1ddb-43ee-aee7-d4282039ad44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05785395-6b19-42e1-938a-d964c97feadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665f7dad-99da-4feb-9626-564284cf137b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e2f9fd-122b-463a-80ef-e6a9f67d0518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e3fd74-17ee-45c0-9551-e79c53c94678",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b74ac5-6ce5-4501-b7dd-002a82101af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c124f395-2e3d-4bf8-94aa-a40c057abb1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c46719-ee39-4942-ae17-2aae9899fed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452309f9-b4b8-4331-860c-28a58a49ce25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b9c64a-85a9-4262-8576-1e847faf9541",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af774ac5-7716-4cd1-99d8-2b651690f558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454bdc95-6566-40ef-b644-d0bafc30dc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3538396-eae1-46f6-b8c8-a39476b3d865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5eb12b-43e7-44b6-aa1d-da2797090d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbd4fb8-f860-40f7-8cc7-7c30496c326b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1beca0-877c-44a2-a495-364325c3caea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0b3952-0d4d-49a7-88cc-608c526767b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9642699f-9fa0-43ec-a741-211e9463bb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74e1d55-71fc-4af5-8b3a-e315043b55fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef182f71-44f8-47f6-b089-b52eb36eb515",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf637da2-18f4-40ef-b83c-d39982b9d5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c21c27a-9f08-45e3-a04a-ec5519b558dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153b7d33-743d-462d-b8e8-fea7c583b82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a5591c-3bee-4fa3-ab78-02e799abdbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e54cfc-aeb9-4537-9943-4f353aa70394",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc53177-aa6e-4abd-90d3-d3782245732c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7233e240-9f0b-4941-8908-0e66935c33cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8403fd0c-932c-4e30-8e9c-9a9685c8429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fa58be-e47f-45a0-9fbc-0fd6969cc766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a7e7ef-7ac3-4b3f-b5b9-d4a69d56563f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e2f439-2651-4b1c-92c1-c8608d2c341a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab97af2d-88c8-4a02-98be-4779e55bea1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bec1d60-07d6-40f3-be1d-73220dc3eeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae64585-369f-455f-8ae5-d2025bb107b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b00ed03-ebae-4dd5-ad3c-af4c0ad52a52",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd21fd7-28ff-4d83-82b0-e54eb5019ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e777f391-3f91-4486-9605-5171dc2cacb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aba31ef-b68a-4a8b-b883-227dd1c016d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10547f2d-2b5d-407d-85e2-b67bc6e3267d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88abe85-0719-4731-9445-e853bc1abc1c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0213fd2-706f-4aee-8b33-a48111c53ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8017c558-515e-4ea7-9aa2-b9fd0169c05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482c3854-e775-4086-ab38-6c26e682b7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bd3efb-6822-4ea7-9517-d78120c0d5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4792c9-101f-4767-b7b9-9ec991bd53a7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842c3bfb-bba7-4bc3-b0da-fa3b637ec7b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d04a58-1bea-4a33-8f51-a94398686191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da1fc8f-e747-41e7-b495-8c8773a75593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db21b88a-3db9-474d-8a1a-caaaa21ca9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf073f4e-90a9-4af9-bb8c-eeb9a960fac3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c378e9e-a368-4793-990c-cffe700f45d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f156e089-ac31-4f36-bcf4-dfea6d9b45c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bd9164-6868-4608-b94d-421c6a27bfb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7f8613-d17c-467d-a4f2-c228d7eda72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0cc246-8216-43cc-b9c8-ef71a5a364a4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17a28f5-7540-4cfe-b070-c783c40797e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4c69c3-08a0-433d-b6ae-bc6f75697a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d456bd2-d77e-4029-96d2-34d12f722a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249540e2-ac4d-428b-8f38-ef3de746da6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bebdbe8-24c2-4c56-936d-6a2d033d6ba1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687eac3a-05f8-4e88-9bfc-68d702cc3583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ea5fcc-f071-48fb-b09f-0c96f8fc75e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37195099-58bc-4b87-bc80-e0ad0b3e704d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81be1e1d-d7d9-49fa-9111-51aaa58b2283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2280d4bf-1f19-471f-8207-42471a4dffda",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2488e387-5195-4c97-b27a-feddad2988c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201faf0c-664e-46e3-a47e-5a658d15b492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123b4f0a-464f-4f6c-af13-f8ee360f3a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61536cb6-309e-48d9-9ea1-d8ddb0fdb85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c33bd8-de32-4f64-9aba-b89bc6420160",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a51803c-40c6-4941-9bcf-7eb0abf3f29f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037cb8d8-682c-473c-af64-e7e622a7765d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a25956-ef5a-4779-8a9e-9bfe4e73c896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae128f39-8f36-47aa-a5fd-2dee1993a833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc9ce7a-b595-4475-96d8-7b41f444ac39",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1366450-a300-46d9-b7d9-ee8e14dc3fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b22d17-5fe1-4d6d-bdbf-3d157cb7df4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fb2d2d-f0c1-4545-bcf8-6d51bdd04ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499d706b-bde1-4749-a456-946189aab59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a47c4da-0b07-404f-b5bd-5581dfbb7977",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7284c91f-cf9e-43db-8303-94254158f6dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043cb781-9a0e-465c-830c-65ff734d257c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa74c58-c1be-4807-b926-b4ae99765d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bcf4be-7054-4b8d-b824-96d22b400c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a6e703-2ad3-4f69-87fe-b73f5852c90d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680cd1fd-80ca-4b67-a09f-0be7f1d674f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6720d59e-d933-4ef9-a692-7d776bebc187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca500227-7f38-4167-b707-b2ec7b47532c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb3ad14-1514-442a-a6e3-2a651d4ca852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062795ef-e926-41fd-9aad-4de8d3c11b71",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b1b884-1056-49ef-8e33-fcd7ebe1fde0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d4860b-3b4a-4788-bbed-0f6668b6b6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90ff193-bf81-4f5b-ad75-847c5b200302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbde92d-17fd-49d2-b482-99ba800407b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadf09be-7047-476e-8e5d-258674c4820d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3b4e13-3072-42c1-98a0-89a5ec046e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a310ff04-588d-4a84-beea-67424dc353fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407ed0f2-ab25-43e1-ab0e-d19b6f7a604a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce730f6-039f-49df-8330-be1d6b9d88ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f891d71c-a43d-41f0-a988-7bd911e44e20",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e06561f-a0d1-4fb9-ac84-ca363b071e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e362c9f-917f-4d60-aaa3-7a64b38c2dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e705c3f9-4185-47c1-a26f-bedc9953c960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9987254c-dc98-48bf-b650-31885471d55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1195710-7ebb-4f81-9e26-3fb5f3c989b6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222b9e80-b97d-4cb9-b7f7-340521a3a483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b89a90-8f3e-4a67-b183-804072dd4eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17254d68-f48a-4217-b543-e7b725c424b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750c8eaa-354c-42c4-80e5-0840e2304e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db79536d-ca83-4686-a433-c7956ec379a4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54f9a75-fde6-4a75-b696-c4b4cd5ad612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b84514-dd12-47f3-96e1-bb5e1e440cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c66757a-0f91-4a20-9e7a-d6636251f6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee63f3d7-a3d0-4aba-8d5e-88d7605c6d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2939968-5179-48ca-89a8-f85ec77402db",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5702d6f4-da90-4a0e-a493-a52c6001c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ec0b51-7272-4e75-8ca4-0e74d3a6d452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7ca91a-a9ce-4bb3-badf-f65355ed64b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f721219-9f18-4b29-a992-dff2d89d9b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58578620-19ca-4d26-8b96-dbbbf29b4800",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf09cd1-1101-4ea1-81d0-77e6b3b9a293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42a21b1c-91af-4d1f-9228-39c5595443b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e570a663-691e-4432-a018-d5f15b620b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11bc91e1-d699-403e-a915-e68e85b7433c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39637752-be91-4e87-a2ff-978daee1a937",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dbbf19-e60f-4a81-b34a-6ae39d574459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27e0596-00aa-4a36-a6fa-b3e37414f268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2dbd6c-b3db-481d-b38a-d9df45df8374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00063a3-5d59-483c-9320-a1c0c647d10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb611085-13ed-4aa4-9a60-14f96b1b48f4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc8b7e5-63d6-4e03-9b19-d4734fa60952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eb38952-8291-42c3-a835-393c95c9e109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76a632d-4adc-4277-83c2-56e72588dd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3048f3c-8737-4569-b611-8395aa00178e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f05014-2b95-4176-8d88-7e8836246cd6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628ec959-10cd-4e0d-a037-47919a1fd53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70fb5403-c5b2-4ba2-a54a-183e38d7189b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e18d95-ae0c-4357-b09b-5cd400e361d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99f03a2-05a1-4c29-bfd5-ca49e0987c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2027ae4c-d6ca-4cb2-93c8-cfb0d99f9ddd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35ae48c-e33f-4a71-a135-ff18a460dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d83b57-ff72-4a4d-94cd-5d111ef97acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dd33a7-f0f7-43ea-96e4-1864c5dd4097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa093d21-7cb4-4246-bd3c-209bf7deafe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b344dd98-6394-43d6-b270-bf79a6bfaff2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6d86ed-8d9e-4396-8dc1-b5c6ba5d6255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8487c09e-e515-4d08-9d37-7c30b99ed393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bfdaa3-6c00-48cf-a848-679f63d488a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abed767d-a6a1-4834-8936-c5e9a7ca3859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d289a44e-5164-426b-bdee-c17959b3fa0a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bac7d05-5ae5-4ca1-9bc9-3a6058bc877d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c463a1ae-7179-4cbb-a689-0969e9b59071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e72043f-38d5-4392-81e9-3c6910d473da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8ff648-a1d6-43f7-9ca0-61a6ce3fa0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1448e02c-3e36-4297-973d-a3bb145ea8af",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a3e1fe-ccd2-4a08-ba11-7c66390d4c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e2e21f0-ccc1-4f69-90c5-258380df9c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a3e56d-f1c7-4548-a9f5-8883188fa1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4276d51f-b492-45ee-9a32-57af1df2b570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc3dc92-5ea7-48e7-9780-a106f9bfb018",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e077134f-e10b-434e-b852-53092a40abc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce8f767-1f93-4866-9dd6-ebc84fe2eb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336c2317-fb55-485b-9ac6-79c56e73b15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529ceec0-6722-480a-aee1-a7ed1e08d7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649b3e14-aab5-4948-97be-ee2dd27a5d22",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8430dedd-6664-43a4-b0a5-2249ee85ba16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8bd287b-0701-438a-bfc6-da8aea069507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae42678b-6eb6-4f51-be3c-b63946b89834",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e3c000-69f2-487f-97fb-d0a8a302969d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abdd37a-56d3-48b1-b96c-37bd366942c3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5857b6-b4fb-4749-a28a-d4b5af4b0fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c171706-ea8d-4397-a496-5c54935786a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99de0086-bb6f-4875-af0f-fc528fea5ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e10513e-7779-44b0-8b90-5b8944c2df38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbfef50-c6aa-44d3-980a-4c614a7485c1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb665df-f3e9-45af-b0ff-6b0e9be7637b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67187eb7-a012-4651-bddd-f242a8235496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d6ccf5-2094-4dbf-bf99-76752c5e43c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50f6eba-fc4c-4af5-a7e7-72f2ea78d7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85facdba-01f1-4288-877d-a2648a7b9d97",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30aa4228-cb56-4750-91ff-68be330b61fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237fc049-eccc-4b7e-b187-de10f6af86a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8687a9ab-0e45-4d0d-8e31-fa230ec46e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd625cb-f801-4f2d-886b-52e7c00388c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebe8c43-96cc-4afc-9198-de196b0995da",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3345d0a9-6592-4b8a-a580-88c2a3e7e8b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "269345ce-223b-4658-b4cb-1ac72c032f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3488da52-40c0-418a-8882-7ff104cb07c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ee07ed-14a9-4d8e-aab9-d5ecced345e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef92958-473f-4167-b803-6e61e33b5819",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3f51f6-cf2c-453c-b4b3-5cf0feb5c82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7b47c1-dae4-4920-8ac8-d052cd56c7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e05b922-b275-425f-9c00-8cdc15340178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b28572-22b4-460b-853d-197e4c0c26da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9eef09f-6a8c-4a25-8cc7-2220dbaa7176",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975edf7b-6126-4f36-b088-e1138240f5ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7103096-7fce-4931-bae6-bde9e510f351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74de9e30-749d-4675-846a-cbfd4cd3c2c3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1e581b-d73a-492e-b57a-ab1231d5ae47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff18969-53ba-4a68-a4aa-0c13f56e7985",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df3801b-ab7f-41e3-b901-c97510c49f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54250518-d102-4954-a6db-edd1f2e29a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e27570-71fb-4c00-89fb-b060920d8ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e68447c-beab-44de-8150-602f83b66dbb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4aa492d2-6ddd-418f-8731-99ef9fa0a6cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e65cff3-73c3-4ae0-b56a-4fe4e3a71714"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a52df8c3-63f9-466a-b04c-44cc68decf18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd7a5205-ebfc-45d6-a00b-25fef36bdee2"
                    }
                  }
                ]
              },
              {
                "id": "ed8925f8-2a49-47e9-be4b-7102541bffcc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f55df789-f6cd-4f20-9c26-8d9216ef6a4b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25653b79-fb3f-4dcf-8b05-6b7238ea24aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b94c651d-4acd-4fad-bba7-bfb4853ad6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7716ed1-e205-4f08-ae24-7587e5fd756a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ae7b9c8-296a-4890-ab8d-a8edab9e679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b179823-8008-4e7b-9f4a-eff3c0a02f38",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3b3d96-b719-4012-ba4b-d841a700a6bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "99d6bdbe-ff2a-4394-8968-b5e96db736f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5228f4d1-9b85-4156-828c-bb9737b34df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d6d7be9-9eb8-4af2-bf74-ebb9dca6e249"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12ad3a5e-9878-4d09-8993-ff79ec7b5bc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06c474fc-ecb0-4048-bc81-c726335bee05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7081d110-8c96-486d-9021-a0f829302aeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81ba0b0a-e36a-41b5-8618-fbb0698996ef"
                    }
                  }
                ]
              },
              {
                "id": "30745173-fb32-40ed-9829-9bc646832728",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f56dd28a-246d-455c-89c0-9043696a2bcb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1869323f-6ccd-4bb0-a82f-585831318998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1d792406-7fe6-4108-8cfa-c72b4bfa110a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b56157-2b85-47c8-8293-07c4331a1300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0218902c-8c4b-4aaf-a98b-411eb4086eb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "16006990-af3c-46a5-9025-32c73ca4b7f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c8b4c57-c516-4e3f-bee0-094bb4c12512",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97e4cb44-d1fe-4896-82ca-acf70ad9962c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b522160-da2f-470d-a306-c77f86e097e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47fff4e7-1050-4349-a7a0-bb298051e4d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b854032e-cbd4-45bf-b310-b008969b2678"
                    }
                  }
                ]
              },
              {
                "id": "c14b7d05-3b3c-4d5e-a4f1-c9d2bb05a165",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cd43ffc-b6a6-40b5-b9ca-ddc2c37a021f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "455df24e-8f56-4598-bda0-65ea9f581d8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04b6b481-ded6-47e3-957c-52dd822ddeb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ca4b41b-b91a-4b89-9662-e369cf70510e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfb447fb-befc-4aa6-92b9-e90070d4a910",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "488f645a-863b-4c6c-9315-7996d925a549"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19be7bcd-18f3-43a2-9947-ac6dd8fe50e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d7cef90-9290-4380-8180-cba6852ce7be"
            }
          }
        ]
      },
      {
        "id": "9d19a80f-2ab8-46f0-9d22-1936b2bee65c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "624948ac-36d9-4de8-933f-8840da4df404",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9357921-8ebe-4c3b-a18d-89b1abe565af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62751f10-4cb5-456c-b6ee-e60f2322c75f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84a1e2b-d9ae-4ed8-9358-545ded0d8863",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "89e46c51-758e-48e2-aa5f-a94235ed6aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350064f6-e52d-401f-ac06-87f43d9048e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24cd0beb-cd15-43f7-855f-2a64e85a83d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88345cc-7ec4-498a-bf5f-10bb7453ef13",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9a6571-d2e7-4039-850b-ffe4bab37c68",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f92b3448-8dd5-460a-8e57-a25f9441223f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e15eac-3172-4ef0-9008-930dd8fdc109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ab0dd63-5c59-4377-bdd4-36a27b25bec6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8769dff9-a6e2-4fc2-9a85-4f0d2646081b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "babfb95a-7327-425a-8a87-9125ee0d4547"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb2ab021-12f7-4bd4-a0e6-cf656ccb3ec0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b38295cd-1227-4e8a-90ef-92e8a56f8be1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6580b9ad-b92d-488e-8c7f-12f25994e710",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3ce16c06-a34e-4a8c-8bb8-718e3756f171"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b59758c-c77d-4992-8056-9418af017e63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3708763f-0ad9-4ca6-b6ea-616e10cc2637"
            }
          }
        ]
      },
      {
        "id": "3ac43a75-27d5-431e-a3e3-5c8e3ba3b869",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "18f13127-4432-43cb-ab76-f95a59bbf353",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66c6fc76-6a93-4b85-b520-42d31e82a87b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "361d169b-d6b0-4e5e-b3d2-c589cae22041",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839f16c1-1eb2-4160-b45f-6fe235206c87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9c85f371-ee0d-41d8-853f-86983bbef0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e6766f-6b8e-4ee4-bfa1-5bf6ecf193a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f8858f1-838e-410a-8a7d-4f6f541d2766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fd8e20-a41b-4897-976a-13f80f178829",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c1d711-9d69-456e-8743-75bfd0a5c835",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2cff82d9-a768-4d81-a2ce-1c361e8aa090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f7862e-5d46-402a-8f02-2fd4bf059074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba689c2e-7a5b-461e-a6a6-56cddce2a1c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "542bac79-ceb5-4757-a232-460a161f49b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba0525e0-4975-46e5-8dfb-16ff74ac904c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68938553-0dd0-4eea-adf0-23e9fdf2cb39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "409148ee-a7e3-47fc-aa73-6b37e9bf931e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8ddbe59-871b-42b1-b298-e132f8e285b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "aa8d9439-eff2-4c13-a49d-1d437f1f68d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e41396d3-dfbd-4475-823b-2d9b0bbb39ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d54446fb-f152-4d02-896f-d4febda1a8bc"
            }
          }
        ]
      },
      {
        "id": "1dd60188-b7e1-48da-a545-5976ede15bf2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8834f8a8-49e4-438d-9c61-7a0f6d4fdc50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc7adedd-0795-411c-99e5-2862a05c6d76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee9eb1b8-89d5-4fde-a5c7-98fe5852b681",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2449a1b0-fe40-42ed-b3b1-ee0619c5c476",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32537ee0-ee0d-4f89-b300-de11ee12da12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9842bd42-575a-413c-8c6d-36a846cedfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc131d0c-7620-4a11-aa53-b434aa09bbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfa95fd-57de-4e4c-b4e2-3dc77643db1a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780aaa84-cb36-4984-81c5-0981cf3483c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3b17ac31-1bc3-4032-a64c-eee02ef2befa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cb2d26-5bd9-42e9-9bca-24decd8cdaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4245b43-193b-4b0e-99d3-32e235bf0382"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f83d7927-0728-438e-95d0-03734c068e12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc183d2c-3d0f-4c8d-9524-c735f2cdafee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aeebe7e-2111-4774-8cd1-c993ca969c5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad76bf78-39f6-488a-9e62-dd5e9f30f7f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b40242cb-cc87-4892-960a-a41997db7fbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "94aa39f5-ea37-4f8e-ad90-dfa56a56b8eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54d33354-ed79-4ac0-a33f-fcc0d390b305",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c518438-2354-4fd6-ac1c-f202f4d8eeaf"
            }
          }
        ]
      },
      {
        "id": "e9f71023-7be4-45e3-be02-22af610c3ace",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eed7090e-7e03-4bba-a42b-3c27b8cbd96f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5410a714-c6ca-436e-8f8d-a8b903f0fd8e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "67792ed5-d353-4ddb-bf44-eda3effc3c60",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf567489-2767-4d36-bdde-99c197a36c25",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a157a4d7-01b2-4366-be48-82e7c81f00e7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 653.9732824427481,
      "responseMin": 8,
      "responseMax": 6444,
      "responseSd": 709.7274092701923,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674348108305,
      "completed": 1674348293756
    },
    "executions": [
      {
        "id": "eceb3463-f841-45e1-9f4a-cae7ab0f1205",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "de30f0f1-41d2-455e-86c6-4177e1a89c1a",
          "httpRequestId": "3119dcaf-9a01-4009-8f9c-375540332425"
        },
        "item": {
          "id": "eceb3463-f841-45e1-9f4a-cae7ab0f1205",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d6b4e388-ee16-45db-8bdf-4e2a3f25a4f6",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "792c7b21-6fb1-43d4-ba0e-0f90e3741216",
        "cursor": {
          "ref": "c928cb39-3047-4c89-b611-824b5d9a2b51",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "22616eed-b6e5-4db4-ae03-98a7ac3703db"
        },
        "item": {
          "id": "792c7b21-6fb1-43d4-ba0e-0f90e3741216",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c70d2e11-8787-434c-b225-99e5191e7ad5",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "e6fbaf55-413b-4df1-a498-ac9b2f31dfa7",
        "cursor": {
          "ref": "b98cafd1-f1f2-40aa-9567-1597fe978397",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "833f5eca-2b1b-497c-a3b3-2470e8b7bd66"
        },
        "item": {
          "id": "e6fbaf55-413b-4df1-a498-ac9b2f31dfa7",
          "name": "did_json"
        },
        "response": {
          "id": "cc2f9175-f1bf-46cc-9001-4b42c37ec59f",
          "status": "OK",
          "code": 200,
          "responseTime": 1516,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc48b29-f861-4618-acdb-2b18e335fbd1",
        "cursor": {
          "ref": "97c84b9b-40b6-49fe-8d37-2e7cbdfc3952",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "21a1eb31-7f59-4162-b513-8397521c4fdb"
        },
        "item": {
          "id": "acc48b29-f861-4618-acdb-2b18e335fbd1",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6dcf12c-8eb3-461b-bf0c-83487631d8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc48b29-f861-4618-acdb-2b18e335fbd1",
        "cursor": {
          "ref": "97c84b9b-40b6-49fe-8d37-2e7cbdfc3952",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "21a1eb31-7f59-4162-b513-8397521c4fdb"
        },
        "item": {
          "id": "acc48b29-f861-4618-acdb-2b18e335fbd1",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6dcf12c-8eb3-461b-bf0c-83487631d8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd8832-8d69-45b8-89f7-983056f3d07d",
        "cursor": {
          "ref": "9e9d43cc-dec6-46fe-9b0f-1ce16f7deb70",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a92dd11d-4d3a-4a08-a3c4-1aa338468717"
        },
        "item": {
          "id": "7bbd8832-8d69-45b8-89f7-983056f3d07d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c35511a0-3fb1-48c0-ad18-5a9ae360b576",
          "status": "Not Found",
          "code": 404,
          "responseTime": 604,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f555d5b-0c6c-4ac1-b1a3-188c93d9da39",
        "cursor": {
          "ref": "2a278751-defb-4944-a3b4-3695253ba4bd",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "92f6175f-5eae-4239-908f-ba391bcb47ed"
        },
        "item": {
          "id": "7f555d5b-0c6c-4ac1-b1a3-188c93d9da39",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2e12bd6e-45b9-45bb-8edb-d41d6a5e2fd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 574,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bda4da-0bc3-4453-8903-dff153ce7144",
        "cursor": {
          "ref": "b878bb89-9b6e-4fca-9d9c-41dc2ae063b8",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "26ea6545-8429-41dc-a452-22e30f572d93"
        },
        "item": {
          "id": "87bda4da-0bc3-4453-8903-dff153ce7144",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2295ccd4-8d43-4ad3-8e32-1790cd995b77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01504bd9-a9be-42d4-9c92-8ad09ebf6ff4",
        "cursor": {
          "ref": "a7dfb2ec-9009-4486-b2a6-9913a2be7548",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "687d001b-e4d4-4d33-9ecc-83279faeee6c"
        },
        "item": {
          "id": "01504bd9-a9be-42d4-9c92-8ad09ebf6ff4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "60b5d3a7-681c-4b02-b757-15e0d4d73243",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 589,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01504bd9-a9be-42d4-9c92-8ad09ebf6ff4",
        "cursor": {
          "ref": "a7dfb2ec-9009-4486-b2a6-9913a2be7548",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "687d001b-e4d4-4d33-9ecc-83279faeee6c"
        },
        "item": {
          "id": "01504bd9-a9be-42d4-9c92-8ad09ebf6ff4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "60b5d3a7-681c-4b02-b757-15e0d4d73243",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 589,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cea03a4-6c9c-408e-b9ea-e9ab4aa79ace",
        "cursor": {
          "ref": "41478dea-76c3-41a0-83a0-883fc613a480",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0734ef91-eee3-4e0c-89ac-6f96ff636eaa"
        },
        "item": {
          "id": "2cea03a4-6c9c-408e-b9ea-e9ab4aa79ace",
          "name": "identifiers"
        },
        "response": {
          "id": "cc297284-cb5d-4a3d-a9ae-aa9c4e966040",
          "status": "OK",
          "code": 200,
          "responseTime": 923,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76dbe61-6be3-4a9c-b7eb-abefb77571dd",
        "cursor": {
          "ref": "b56f1995-a371-40fe-a6b6-36463b45ed03",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7da50bd0-428b-49da-b2fe-9b91c455e4dc"
        },
        "item": {
          "id": "f76dbe61-6be3-4a9c-b7eb-abefb77571dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "56115b6e-0900-4a6d-8c06-d48c9f956590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76dbe61-6be3-4a9c-b7eb-abefb77571dd",
        "cursor": {
          "ref": "b56f1995-a371-40fe-a6b6-36463b45ed03",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7da50bd0-428b-49da-b2fe-9b91c455e4dc"
        },
        "item": {
          "id": "f76dbe61-6be3-4a9c-b7eb-abefb77571dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "56115b6e-0900-4a6d-8c06-d48c9f956590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab14cbf6-f9de-4a45-89ed-1082a7d64041",
        "cursor": {
          "ref": "1cd1f819-ac14-420b-ba42-a132fd46edc8",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ef2cfad5-a9db-460f-927d-783b2b772dec"
        },
        "item": {
          "id": "ab14cbf6-f9de-4a45-89ed-1082a7d64041",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c3f44def-c6b9-4061-87a9-414d484ba632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14350e36-9c87-460f-ad46-3f2d90a239ad",
        "cursor": {
          "ref": "b0fd96b6-c09d-4be1-b681-11239e8e24dd",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "44be0f7a-d151-4ba8-8c77-60c6a088064b"
        },
        "item": {
          "id": "14350e36-9c87-460f-ad46-3f2d90a239ad",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "52c23542-7853-49b8-aee2-4c3fc87eeac7",
          "status": "Created",
          "code": 201,
          "responseTime": 2410,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "a860ca36-782b-4b99-b149-66c48ceeac2a",
        "cursor": {
          "ref": "d9ff672b-a964-4fe5-86c7-9ed96dcba677",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "016474e2-7622-4f67-bb62-fad5c214fa02"
        },
        "item": {
          "id": "a860ca36-782b-4b99-b149-66c48ceeac2a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b021f94b-ebc4-42b4-aba2-b3ee3d3b4b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5c5adc-3240-4049-aa09-cc381236b95a",
        "cursor": {
          "ref": "18527814-b0ef-4a77-af9d-191ddb7f5dc4",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ea6cd9ad-0ee3-4cad-a530-9b136814530a"
        },
        "item": {
          "id": "cd5c5adc-3240-4049-aa09-cc381236b95a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6cc2ee93-1dd7-4133-9e8a-eed16303d96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493ca5c0-8665-444b-a91b-1644c9a2a5b8",
        "cursor": {
          "ref": "2504b966-2f0e-4550-9369-c9b9c81c2376",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6573846c-99c9-49a2-83a2-8199e5f1afe9"
        },
        "item": {
          "id": "493ca5c0-8665-444b-a91b-1644c9a2a5b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "256b1f76-48a4-447a-a82e-c072b8592a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5d3d6e-8b68-40c1-9f63-404bd5b6c0ac",
        "cursor": {
          "ref": "51eb83ad-b522-4173-a0ee-b4fe3fa0a3e3",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "57c5e2b8-ac36-4569-9884-6e13bacaf6ec"
        },
        "item": {
          "id": "6d5d3d6e-8b68-40c1-9f63-404bd5b6c0ac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8a157d0c-b5cd-4041-b182-2b44a59368a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd225e1-cf65-40fc-b214-d35691f7c80b",
        "cursor": {
          "ref": "959f8eb1-c0b5-4327-b541-20286e014e4e",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1cac8d60-25e1-4b68-bd49-6453dd0cf042"
        },
        "item": {
          "id": "3cd225e1-cf65-40fc-b214-d35691f7c80b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "56803254-a23f-40cb-a83c-fc7d75172e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e67f9d7-5527-4884-82ad-657a23dbef53",
        "cursor": {
          "ref": "51f6c34d-a717-40a0-8a94-ce642a27c995",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "36252488-da7c-408e-ab5a-0ce52005843e"
        },
        "item": {
          "id": "8e67f9d7-5527-4884-82ad-657a23dbef53",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "026dc182-7ce0-4521-8aa5-c8408993125b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584eb22f-a20f-4388-acdb-5be64f878d7a",
        "cursor": {
          "ref": "09b60c11-6700-45f3-a592-dae54a49b38e",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5c464bd3-e4ab-4324-9117-80030b1de911"
        },
        "item": {
          "id": "584eb22f-a20f-4388-acdb-5be64f878d7a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fecaf406-6439-40e1-b235-a3afbcdbc9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab4833b-5613-4afc-b6ea-28cb39411b1e",
        "cursor": {
          "ref": "8829b3cd-0032-47ab-8ea5-abfa7749b190",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9dbd7312-6b74-45fe-8e1f-c5c6778607c2"
        },
        "item": {
          "id": "0ab4833b-5613-4afc-b6ea-28cb39411b1e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e4adf51b-0403-4978-ad50-a9c064c82d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70f2a4e-513b-4c99-8ff4-2d47206c1e31",
        "cursor": {
          "ref": "7d0aa0ed-2a09-47f0-b4e4-53e07b3a4114",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8bc43a9-6b68-44f3-a460-ea826f3e9af7"
        },
        "item": {
          "id": "d70f2a4e-513b-4c99-8ff4-2d47206c1e31",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "07fffe6d-d8dc-49a1-b1fc-49756aac8bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0571a2a7-d572-4bb1-a76f-f2f73371aef5",
        "cursor": {
          "ref": "639fe153-3af7-4e12-8f22-53818f7cdc72",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9e1da1f8-0a44-4a98-bdff-af35931b64d8"
        },
        "item": {
          "id": "0571a2a7-d572-4bb1-a76f-f2f73371aef5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "24e08633-fee7-4f2d-afc1-87db3b7f368d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b048ef-0284-44fc-9ad7-e5f0ea701356",
        "cursor": {
          "ref": "9628440f-e267-423c-b57a-b752fbc628e7",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8c7744f5-4f6c-4fdb-acae-3fe330017377"
        },
        "item": {
          "id": "16b048ef-0284-44fc-9ad7-e5f0ea701356",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "397abe85-9c72-4983-9a9d-07d46975a1ea",
          "status": "Created",
          "code": 201,
          "responseTime": 6444,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "aefb658a-9662-4a64-b511-1b8cf4d7d98b",
        "cursor": {
          "ref": "b1d58c7e-c711-42bb-a105-f33398b69450",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "afe21390-5f16-40fc-8b1b-bef618e2cb83"
        },
        "item": {
          "id": "aefb658a-9662-4a64-b511-1b8cf4d7d98b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f971c950-7282-4cab-980a-8203e860cbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929243cb-90fd-4e89-b137-a8ea4c59882b",
        "cursor": {
          "ref": "e2a6fee3-a26f-401a-887c-a131053f5db4",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "44f2bc72-c306-4554-9410-d531173478ca"
        },
        "item": {
          "id": "929243cb-90fd-4e89-b137-a8ea4c59882b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c003e668-506b-4f16-9972-d520607b21d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15916c0c-dcab-4db3-a46c-e1b50aa9f851",
        "cursor": {
          "ref": "ac7b56c4-33da-4891-85bb-6267591a6d99",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f312c689-fe0f-4913-ba8b-647acd9910e3"
        },
        "item": {
          "id": "15916c0c-dcab-4db3-a46c-e1b50aa9f851",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "25f5356c-9946-4bea-9cc2-3ed7d01f3d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c109cc1-8668-49c4-b71b-39c566f0a4e2",
        "cursor": {
          "ref": "283ff006-39cb-4d2a-bd88-5467c35d1693",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "af4546bd-c12c-47e8-b851-3be9248d6988"
        },
        "item": {
          "id": "7c109cc1-8668-49c4-b71b-39c566f0a4e2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "178f72af-58f7-48d3-ac84-c831950dd7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfbe64e-a3c7-456c-9875-98b229029dd1",
        "cursor": {
          "ref": "9b7673d6-d00d-4627-8ce8-9cc5a18492d0",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9bf61e95-c93d-484a-a75f-4198ff760c7d"
        },
        "item": {
          "id": "cbfbe64e-a3c7-456c-9875-98b229029dd1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "58a18c42-598e-4117-9c49-417b1a3a6ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebacd3b-5ffe-41f2-9639-7574d75854b8",
        "cursor": {
          "ref": "49e8c07b-5987-43db-a1b9-02b667753e36",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "58314ff2-75a9-4d4a-bb33-54c185390ee2"
        },
        "item": {
          "id": "7ebacd3b-5ffe-41f2-9639-7574d75854b8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "45937bf6-11af-4809-a5ec-8b862b78d144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85a2ad1-26e1-46ee-a454-10dbb825f7d0",
        "cursor": {
          "ref": "0cbe83b3-729d-4c55-afb0-de3310e7f50f",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dc423f78-4300-4717-8a8d-96e4caff3c63"
        },
        "item": {
          "id": "d85a2ad1-26e1-46ee-a454-10dbb825f7d0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9e26fb68-897a-4bcf-a71f-65d9c3716a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62644e31-63f6-4ce7-8115-2d7d4fc4608a",
        "cursor": {
          "ref": "7be061a3-cd8a-464d-a75c-dc2ac0592d17",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2ffd530c-d842-4f07-a17c-05b44efb279e"
        },
        "item": {
          "id": "62644e31-63f6-4ce7-8115-2d7d4fc4608a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c640cfb4-4758-41f2-919a-a246f25d81d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbf1cc3-a82c-4854-a1b8-cfe8448db595",
        "cursor": {
          "ref": "887d16f4-5a2e-4de4-b166-4e95f921b491",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8d127d79-7bc5-4d01-af76-a56108b475d1"
        },
        "item": {
          "id": "2bbf1cc3-a82c-4854-a1b8-cfe8448db595",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bfab6e48-fe04-425d-ab31-4199ed0b1cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770af615-5640-4759-9de2-5e2d5b679fef",
        "cursor": {
          "ref": "4855cfa8-5b13-40e6-bb2f-fb1f3f4aeaba",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "78c3976b-a371-4d77-8117-37deb1105515"
        },
        "item": {
          "id": "770af615-5640-4759-9de2-5e2d5b679fef",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1ab92452-35f0-4591-a255-fae074de4c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abeaca8-5b1e-4f10-b751-61facd604174",
        "cursor": {
          "ref": "acaa2fa4-6f2f-4b3a-8a1c-a95d3d41024b",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2257dd6d-8b5f-4e80-91b8-0a72f830e1cf"
        },
        "item": {
          "id": "4abeaca8-5b1e-4f10-b751-61facd604174",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06199376-1c95-47b6-94ae-0e39ffa8ed5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a290de-6052-4c88-a4b4-0d61ef476962",
        "cursor": {
          "ref": "2eaaf37d-73bd-4f1a-9837-fc3d6fc161d3",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9ed6b71d-dddd-435e-8acf-1ab7fc580995"
        },
        "item": {
          "id": "73a290de-6052-4c88-a4b4-0d61ef476962",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e4f2db1-406b-4aca-80ea-8cd494b4179a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1799,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "72434e3c-fe48-4215-8a28-f82ba8a0383a",
        "cursor": {
          "ref": "0b0db6a6-e073-4481-ad66-4df42d62a8b8",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "61855520-91b2-484a-afd2-be820152b365"
        },
        "item": {
          "id": "72434e3c-fe48-4215-8a28-f82ba8a0383a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1e49e083-7f9d-47ac-977d-f254deeaacb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f569f04d-09ef-4c2f-b267-682a1751e3f8",
        "cursor": {
          "ref": "2efda049-969a-4224-9da7-7f766bb892da",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bbccbc23-836a-475f-b821-d9e5364eda99"
        },
        "item": {
          "id": "f569f04d-09ef-4c2f-b267-682a1751e3f8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ee71ff83-cfd7-47de-95d9-1bbcd5642b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809a7a54-1d99-4661-8c74-c8ca85aba315",
        "cursor": {
          "ref": "a7983de4-b074-4687-9450-dc208ada353d",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9f7ab08f-c68e-426c-a0d7-0a2eac04b0ba"
        },
        "item": {
          "id": "809a7a54-1d99-4661-8c74-c8ca85aba315",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "aa1db605-47d9-47d2-a7aa-822212874b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fedd35-c8c5-4c15-8a8c-b6bac4676763",
        "cursor": {
          "ref": "5026b0e1-bf9b-493c-9111-f5d35ec9c01c",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6835e8a2-2aba-490f-a533-468b365b35ba"
        },
        "item": {
          "id": "33fedd35-c8c5-4c15-8a8c-b6bac4676763",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f9531ce6-aa13-4f78-aae5-46017f77c81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05766e7-acc7-488f-9717-c3a2737c00de",
        "cursor": {
          "ref": "734898cc-3893-431a-9ae6-ff962e76eed1",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8d48ebb8-f365-4a74-90cf-c5301d8e0abb"
        },
        "item": {
          "id": "e05766e7-acc7-488f-9717-c3a2737c00de",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "75a74f0e-7724-45fc-aa95-30558339e3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c7b82f-2646-42e3-acca-f1f5652d110e",
        "cursor": {
          "ref": "5d87d318-9ea7-4e5a-9201-ce999cdb727c",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "30a95865-c03b-450d-b224-6c794ca7722a"
        },
        "item": {
          "id": "42c7b82f-2646-42e3-acca-f1f5652d110e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1aad03ef-9b55-4031-a412-03be743a9132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118affb6-5899-4f39-85a4-21650ecd2790",
        "cursor": {
          "ref": "b497989f-52dc-491b-8c25-9c956992f4a7",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7c63ceb7-4f33-4286-b02e-4694fe7cb0b1"
        },
        "item": {
          "id": "118affb6-5899-4f39-85a4-21650ecd2790",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fb82d49e-a4d1-4d5f-b6a3-90d6b3a4450b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea46765e-a154-4781-afe5-1e3ebea6c40a",
        "cursor": {
          "ref": "3103a3b9-cb6c-4391-aa5d-5e184cd9ea39",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "24123491-4005-4f9f-b4e0-617a922cb15b"
        },
        "item": {
          "id": "ea46765e-a154-4781-afe5-1e3ebea6c40a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1221a0bc-a0e9-460a-a7ad-40c72e22f9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fc884b-2e28-4774-8cf5-d2bc0cb89f55",
        "cursor": {
          "ref": "e011d77b-0a4f-4f34-892d-390717b7feb7",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "346165d1-85ea-44a6-9be0-18f6778d6d82"
        },
        "item": {
          "id": "30fc884b-2e28-4774-8cf5-d2bc0cb89f55",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "27a331c6-eca9-4916-ba20-3c9fce834365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e0d70e-ddad-4fc6-abb4-07a7035354f8",
        "cursor": {
          "ref": "2664f6a2-7656-457d-a945-f1b32a0b4a0f",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b410f4c2-ad94-4346-b0b4-fdc07561c3b9"
        },
        "item": {
          "id": "03e0d70e-ddad-4fc6-abb4-07a7035354f8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4e2875d0-f6ce-49de-87ab-303bd2570354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7134a4c-60c1-4ad8-baa6-59dd3a8cf08d",
        "cursor": {
          "ref": "de09dae6-e0eb-49e7-9422-dae552e37062",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a88ce9e4-26bd-4200-9209-88409b6c66bb"
        },
        "item": {
          "id": "c7134a4c-60c1-4ad8-baa6-59dd3a8cf08d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ddbe42ae-b6f3-4e27-966c-0b09921f74d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e342ba7a-66e8-41a5-930a-bafc8483102c",
        "cursor": {
          "ref": "6422fab6-c6bb-4ef2-a59d-a84ebd626860",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1f1dd890-c87f-4ff1-b50a-52f65e792990"
        },
        "item": {
          "id": "e342ba7a-66e8-41a5-930a-bafc8483102c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c610e260-d4a7-4264-9161-c1a3f0c8cfce",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 636,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848deb83-5d52-478b-800f-403c847ce8c0",
        "cursor": {
          "ref": "6fc72eba-893e-41d9-856a-462c927aec6e",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8328395e-8fd8-42c2-8c3d-de759c8a7d71"
        },
        "item": {
          "id": "848deb83-5d52-478b-800f-403c847ce8c0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bc10a33a-2ef1-43a1-9b38-c6e025dd44fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 617,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "ae00aba3-7a97-439c-99d0-c100bd64e987",
        "cursor": {
          "ref": "13238341-66d3-4f4e-bb1b-ad236467b2cc",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dddfc0af-deec-455a-af6c-e95114771d76"
        },
        "item": {
          "id": "ae00aba3-7a97-439c-99d0-c100bd64e987",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5f3c6704-4631-459c-af22-a4897acd8c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd3ae29-a47c-455b-aa1a-c505d73372c7",
        "cursor": {
          "ref": "fbdd8e9d-d4fa-438c-bc5b-bb8083a51a4a",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f811e741-3cf0-4202-9f96-7787acd191d1"
        },
        "item": {
          "id": "7dd3ae29-a47c-455b-aa1a-c505d73372c7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4f5efffc-47de-4909-b834-b81476240a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1c143e-51f0-4db2-8261-66188511c047",
        "cursor": {
          "ref": "e53c4b71-6b9c-4d1d-9846-d6af0e1926a8",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8de3c47f-d007-4550-a841-7e587f7dd0dc"
        },
        "item": {
          "id": "3d1c143e-51f0-4db2-8261-66188511c047",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a3ae8ca5-f24d-4e0a-b946-41597e03b36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0c454c-f821-4c63-aeb0-720ff23bd4c4",
        "cursor": {
          "ref": "8da2e82d-918c-4432-af44-02077f577259",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "01a33376-6ba2-4a3e-937e-86667f59b0aa"
        },
        "item": {
          "id": "aa0c454c-f821-4c63-aeb0-720ff23bd4c4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dcbeb3b0-36a4-4360-b70b-b20bdc3a1c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e4a10d-9951-4945-b743-fdc51b52dfd6",
        "cursor": {
          "ref": "3380f1ad-a444-415b-bc77-ec6fa483bbf4",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e1804e9e-5840-47f4-a501-b0fb56e69a3a"
        },
        "item": {
          "id": "29e4a10d-9951-4945-b743-fdc51b52dfd6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0856c5b8-1a78-40eb-a873-739d51934e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073cb959-047b-44b5-92c8-6e03534b9193",
        "cursor": {
          "ref": "153a91ce-7d6d-47c0-bc75-4608300f5adf",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "137b9618-d0ae-4c4a-ad18-64895af92673"
        },
        "item": {
          "id": "073cb959-047b-44b5-92c8-6e03534b9193",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5090b392-4330-4da5-bba8-8a1414036927",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 616,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f586d5-6c56-48bd-b242-9b83d68ecb0d",
        "cursor": {
          "ref": "cb742f99-485d-4599-9d52-fc17cddaf950",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "206e8117-1209-4c40-a234-ff7b4227d091"
        },
        "item": {
          "id": "f8f586d5-6c56-48bd-b242-9b83d68ecb0d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "74f2774b-79ab-4c5c-bc0a-200ce94ef76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f0868c-8317-45ea-9e06-cbbe8005a5e2",
        "cursor": {
          "ref": "e253d66c-ef1e-4fae-9c7b-bdcad6dd466c",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0dfa4a14-b1d1-41b8-84f8-befa4f812304"
        },
        "item": {
          "id": "b3f0868c-8317-45ea-9e06-cbbe8005a5e2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "66883fd1-4b7d-4db7-acdd-736e24d86c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f1e42a-025e-4616-af60-2008bdc695f9",
        "cursor": {
          "ref": "a4292cb0-8a77-4a4f-ae52-15f20bad1d01",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bbee46db-47c1-445a-8be9-c51225e72d95"
        },
        "item": {
          "id": "58f1e42a-025e-4616-af60-2008bdc695f9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "72fcfcba-e877-4565-8a3f-0b11b0344697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d221b748-468a-4460-b927-0297b6ed7fc6",
        "cursor": {
          "ref": "171d8789-96e6-4c26-a7b8-9097ccb311ec",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "590b696a-f186-4036-9b08-51d9b3a75a82"
        },
        "item": {
          "id": "d221b748-468a-4460-b927-0297b6ed7fc6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "79dc1ef9-ecac-4735-ab5f-24772082b436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953b5427-0d58-41bc-ae01-26d4d219a240",
        "cursor": {
          "ref": "59947435-4544-4f8a-bc0c-0d55ffc0d032",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "00ecdae2-33b5-4b86-9755-451e48639d89"
        },
        "item": {
          "id": "953b5427-0d58-41bc-ae01-26d4d219a240",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ea51a463-7f28-4316-be1b-c60a9b3baaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adbe189-401b-4152-b5a6-1b2445b89983",
        "cursor": {
          "ref": "f665992f-7771-4dde-bcde-dba8784147ff",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2f1d0c75-00ba-4db5-b0f4-8514886b44df"
        },
        "item": {
          "id": "3adbe189-401b-4152-b5a6-1b2445b89983",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a78b34f6-3e1e-482e-baa8-a33aaac0b67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971dd865-1d6a-4817-a22a-bbd0a2936bbe",
        "cursor": {
          "ref": "7edb159f-fa5a-4fdc-8b4e-00d7a9a19745",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "28cc26ce-8fe7-4f85-ac07-8f87874f792c"
        },
        "item": {
          "id": "971dd865-1d6a-4817-a22a-bbd0a2936bbe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "55237def-fd5a-4652-a004-449ddedec529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb9471e-1446-4cbe-926a-ae71ba7a9b27",
        "cursor": {
          "ref": "bdfd8047-1837-42bd-9700-095907c05219",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4163c90a-01fb-4905-a757-da942ba827a3"
        },
        "item": {
          "id": "8bb9471e-1446-4cbe-926a-ae71ba7a9b27",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "71fbf7ab-926a-40b2-b427-168f22c252f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef6d618-ac10-4316-9e99-02f742016b5d",
        "cursor": {
          "ref": "7c3c2378-6bfb-4b97-b755-b132c537da93",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "257fefd0-fe4c-48da-877f-d1336f90d50c"
        },
        "item": {
          "id": "6ef6d618-ac10-4316-9e99-02f742016b5d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "96700b4a-8dd9-4aa7-b988-6d071682c120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8a3089-76ad-4ced-8c19-928bc991e4de",
        "cursor": {
          "ref": "41b49f5a-68a6-456f-945a-9a55a7275653",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4ba9c97c-75bf-4b01-b3b2-851d740c94e8"
        },
        "item": {
          "id": "9e8a3089-76ad-4ced-8c19-928bc991e4de",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b4787a3f-032d-45f0-9df3-bfcdb5e27bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743132df-cfb2-4dda-8f7b-916fa6ce6909",
        "cursor": {
          "ref": "1ff038c7-8b5f-49cb-be71-ac20cb77ff63",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e71dcc65-ee76-448e-bae5-17781eecf414"
        },
        "item": {
          "id": "743132df-cfb2-4dda-8f7b-916fa6ce6909",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c1e75af0-69c5-4401-8329-9feb4e4c852f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae96ee1-cf3a-486c-ae54-a50ee002a856",
        "cursor": {
          "ref": "a52f2b15-9a10-4167-afea-ae3d4efe0fe3",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7d23317a-d90b-45ce-87c4-5474e3cc2077"
        },
        "item": {
          "id": "cae96ee1-cf3a-486c-ae54-a50ee002a856",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b5783036-487f-412e-aac8-5f9101f1cfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88566cb8-95ac-4349-9891-c12487bb1bc2",
        "cursor": {
          "ref": "3a57919f-194e-418e-bcba-32b7ba829e0d",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4514e2c2-8529-4c50-b8fc-5b156c62a4d7"
        },
        "item": {
          "id": "88566cb8-95ac-4349-9891-c12487bb1bc2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7f07b8b3-5363-454a-bb1c-a305076a7534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a6c774-852b-49aa-b8de-5c001dbcee41",
        "cursor": {
          "ref": "2525f315-49a9-40fa-a8b6-dd2971abac07",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d4c84b21-83b2-48b4-81b5-b4649ff5b4c7"
        },
        "item": {
          "id": "89a6c774-852b-49aa-b8de-5c001dbcee41",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7c157fd2-0e55-4afe-b571-e97693325a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c88a74-3a7c-450e-a994-24ae35b09467",
        "cursor": {
          "ref": "ab2448dd-fc97-402e-be79-1fd9432cbdae",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81a6bca6-e91e-4e3c-a547-e1ce30fc67fa"
        },
        "item": {
          "id": "a7c88a74-3a7c-450e-a994-24ae35b09467",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5e27057a-b7f2-4e8a-b3c6-34329eb0cabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7c2337-0fbb-47b5-a140-e90ba01537c7",
        "cursor": {
          "ref": "4cc469f6-977f-4206-bf29-a7a3d5881fae",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "26b79d58-cbd2-4174-9b43-337e8e862ae0"
        },
        "item": {
          "id": "3c7c2337-0fbb-47b5-a140-e90ba01537c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "364d3aa8-0167-4e45-8f7f-806fe7c69417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43455980-9904-4cbc-87a2-3f94d1e850b4",
        "cursor": {
          "ref": "b41b4b6e-cc6e-4480-b850-4239e9668188",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9830bcdf-0be9-4f26-b757-8b8b76593517"
        },
        "item": {
          "id": "43455980-9904-4cbc-87a2-3f94d1e850b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0791720d-b4d8-487a-a85f-81bb6a2bdb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8565c9a-5a86-4258-86bb-006160539b8d",
        "cursor": {
          "ref": "12901345-9680-4637-8668-e0fd3267b8de",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6f62c1d9-ecb8-438e-b6a6-9b8b91f7310c"
        },
        "item": {
          "id": "c8565c9a-5a86-4258-86bb-006160539b8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b29d2703-1b01-4527-b9ce-11415213fe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b59c0e4-8970-4df1-9f1a-b43e89a9c59a",
        "cursor": {
          "ref": "d8f3fe18-ac48-4687-be06-919b25ae8119",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "85b698c5-6469-4590-b150-b9ab7f3fa782"
        },
        "item": {
          "id": "9b59c0e4-8970-4df1-9f1a-b43e89a9c59a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0944c885-06d6-4c3c-873f-1907670283c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec7b25b-ad29-4d12-a494-2f3df07a1f89",
        "cursor": {
          "ref": "10220629-4877-432e-9560-b24c45b7b846",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b9daabd6-898d-43c7-9ca9-810ebdbe6043"
        },
        "item": {
          "id": "3ec7b25b-ad29-4d12-a494-2f3df07a1f89",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e19a15fc-9125-4a4b-b80b-f69ca3cfa643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37393e1-db07-4819-ba74-faa107cf1b1f",
        "cursor": {
          "ref": "0d44e7d0-8cda-4dbd-af52-1f81d4b6efe7",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0a0ddf8e-01be-44f9-ac08-58d58aeac190"
        },
        "item": {
          "id": "e37393e1-db07-4819-ba74-faa107cf1b1f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4856f501-3599-4493-834b-3ede251b46e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166ef22d-04ff-4429-afb4-442aa0f3a4e1",
        "cursor": {
          "ref": "6c7686ff-37f1-4d0e-a625-a9e9929e18f6",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bd6b5cf8-afe4-447d-9dcb-406ff4e96c08"
        },
        "item": {
          "id": "166ef22d-04ff-4429-afb4-442aa0f3a4e1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f3dac01f-f4e9-46bb-bb8d-e15c734eb2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a036337-9e4d-495c-b97b-9a8e29fbc483",
        "cursor": {
          "ref": "939020e6-85e3-4da5-9036-b416a084517c",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cefcae04-00ee-4ef3-bf64-b17dfcad7a46"
        },
        "item": {
          "id": "1a036337-9e4d-495c-b97b-9a8e29fbc483",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f3892707-fad5-4d7d-bfb0-34d655f34524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f69f8ec-c328-423b-8d6e-e62b459cbdbb",
        "cursor": {
          "ref": "b650334f-9a80-4cfd-a257-444deea0dc02",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4c14b9f9-c648-46ff-b4d8-71afb829d11b"
        },
        "item": {
          "id": "7f69f8ec-c328-423b-8d6e-e62b459cbdbb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f70bc624-e777-49ac-95cb-f1b6c4342e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bc9e07-a652-43d8-ae64-fc2a1e783de7",
        "cursor": {
          "ref": "70e74bee-17d6-4a14-be89-f7ca119481f1",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1a73161e-4c26-4e07-a254-aadf191cffa6"
        },
        "item": {
          "id": "33bc9e07-a652-43d8-ae64-fc2a1e783de7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "70b1d55b-e787-48f7-b500-0531554c8e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31df6bdb-3d9c-42c2-88be-b36589c49b3f",
        "cursor": {
          "ref": "16268934-c9dd-45a1-98aa-fdf9d4806dbd",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e494dbf2-d438-43b3-b410-caa88fa9c06b"
        },
        "item": {
          "id": "31df6bdb-3d9c-42c2-88be-b36589c49b3f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a122c0f1-73f7-4e44-b59b-3867caf896d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d86755-be0b-4231-9761-7f98c4fa8c89",
        "cursor": {
          "ref": "c876f378-c53a-4441-a050-bdda0081915c",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "77590386-b0cf-47c7-89f2-dd3a7d6fb090"
        },
        "item": {
          "id": "e0d86755-be0b-4231-9761-7f98c4fa8c89",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "60192365-a412-40f2-add1-64c5b56e97ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73022a7f-7528-4591-89b6-720e20cfc039",
        "cursor": {
          "ref": "579d9877-7b0d-4a95-b35a-78c8e55317fb",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bbeb57d2-4f5d-4e80-b83d-59f12d01d8a4"
        },
        "item": {
          "id": "73022a7f-7528-4591-89b6-720e20cfc039",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "83b2c6c0-c0e8-4497-acb8-0802334f3689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07098505-d757-4d38-81be-d662a5f4c9a0",
        "cursor": {
          "ref": "8d4034d4-8dad-454e-b1d6-e7419290c11c",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "255367d1-edf4-4846-81e6-77d2fda1d461"
        },
        "item": {
          "id": "07098505-d757-4d38-81be-d662a5f4c9a0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "27205ca5-83f8-4c7b-ac0f-42ba73e9b31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c40e8dd-df2f-4b0c-a50a-47271a98b2f4",
        "cursor": {
          "ref": "f2ef710e-3f83-4a15-944f-24d73b47d91b",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ec5cc478-e113-4e24-9d65-e5251500996a"
        },
        "item": {
          "id": "4c40e8dd-df2f-4b0c-a50a-47271a98b2f4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dceaa103-feef-479b-b206-2f08935030f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a3dcfc-8ba8-45c0-a5e1-cc296f307c0a",
        "cursor": {
          "ref": "c3c89e1b-5651-4f58-bb31-e3ad5f0fb06d",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ded96155-c7e7-439b-9961-3c147037f3c2"
        },
        "item": {
          "id": "59a3dcfc-8ba8-45c0-a5e1-cc296f307c0a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2a68fd3f-f6ba-416a-987f-04ad3d91b6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7a7bd3-d39a-4ff0-bbd4-a723dd81bcb4",
        "cursor": {
          "ref": "202ec3ff-cc45-4645-8b76-c37c47ad8516",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0ee7763d-1a02-4bd8-b1c1-7e324f04dc5f"
        },
        "item": {
          "id": "2b7a7bd3-d39a-4ff0-bbd4-a723dd81bcb4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "50894218-2f5b-47c4-85cb-b2da4ed10b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a68b80-6fec-461e-9b68-42e6e3aef036",
        "cursor": {
          "ref": "c594bbc5-cda3-4bb5-a383-93be2da773a0",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "87997234-6da1-4da0-9890-b9ca51e7180f"
        },
        "item": {
          "id": "c3a68b80-6fec-461e-9b68-42e6e3aef036",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "40aec081-2d63-4dee-80c9-665866b5dd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f2d584-1619-4a1c-abdc-8c61f57928f7",
        "cursor": {
          "ref": "9ba1011b-a949-4505-ae33-535148575aff",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "103e1ef9-5f6f-4798-b19c-724a20e820ef"
        },
        "item": {
          "id": "27f2d584-1619-4a1c-abdc-8c61f57928f7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1512a261-fcbe-4bf0-9eb6-b473e5bb8d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ed444f-46e1-4589-aff4-a8d6768b5ffb",
        "cursor": {
          "ref": "94d85590-b0e4-4086-813a-9adfd8ae9b7b",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b36a3782-47a3-460b-9c28-37ea30459b95"
        },
        "item": {
          "id": "36ed444f-46e1-4589-aff4-a8d6768b5ffb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0289f759-7fd2-4426-96e1-a98db31e9d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad18f831-36c2-46d8-a947-e891bd2a6395",
        "cursor": {
          "ref": "ea374311-5521-4ea9-9536-ba2490d7127f",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aa62bd22-d626-4964-993c-0a6f04ec646f"
        },
        "item": {
          "id": "ad18f831-36c2-46d8-a947-e891bd2a6395",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2c821f0e-05fe-4203-bbda-89e43ab8a55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1100,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26819654-cdb5-46ca-baed-1f93e63434f1",
        "cursor": {
          "ref": "81600c95-d444-4487-8ab6-8f45b14eee6a",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "62db9f2b-ae0d-41fd-b221-8ab9cf55c4dc"
        },
        "item": {
          "id": "26819654-cdb5-46ca-baed-1f93e63434f1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "03ced244-692d-4c2e-aac9-34dacc9c9989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd282ab-75e8-41db-9b62-b5a360154e71",
        "cursor": {
          "ref": "213a1f19-b3a9-4ff5-bc66-f32352a25c10",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6d5a415a-c634-4fa5-8ca5-13851d6bafbe"
        },
        "item": {
          "id": "5fd282ab-75e8-41db-9b62-b5a360154e71",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "79c298c9-ebde-49b4-8feb-cc3d369f5321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1474,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8da3c6a-cfdf-4ec8-a5f0-4aa72f97d3c7",
        "cursor": {
          "ref": "31a9246a-4e48-4d55-a9c6-878ccbeb9a8f",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b9aaedf1-abd4-4731-afd6-e55f62723fd8"
        },
        "item": {
          "id": "d8da3c6a-cfdf-4ec8-a5f0-4aa72f97d3c7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2c9a61b1-2c33-4302-9290-e08bc9a4a30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1219,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40d933d-7fea-4813-b103-1925ea58163a",
        "cursor": {
          "ref": "a0079aa2-2972-4f8d-af1e-722531122ef0",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dccef70b-aed8-414f-beb8-1adbbf6192ff"
        },
        "item": {
          "id": "c40d933d-7fea-4813-b103-1925ea58163a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "248968d8-de42-4950-b031-688f9c1edeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1936fc-6b9b-4680-b1f2-082327ae65ee",
        "cursor": {
          "ref": "60c5ceaa-815b-4c9e-bb10-f9196f9d845d",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3d57f37f-2c07-4cfe-9d1c-70184c91e9de"
        },
        "item": {
          "id": "3a1936fc-6b9b-4680-b1f2-082327ae65ee",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a9320a98-56a0-4be6-8f2b-b3d6068b0efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84da7ff-c5c2-4561-9a13-047d4df4e19e",
        "cursor": {
          "ref": "c0fa3535-ca17-4beb-a9eb-f822d49b5503",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "51918b62-daae-4e0e-808a-e8da37cadd24"
        },
        "item": {
          "id": "a84da7ff-c5c2-4561-9a13-047d4df4e19e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "06d4055d-f82a-4977-be0e-096dede468cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84988bdb-9e11-4efb-b1d1-3be9fb9c395e",
        "cursor": {
          "ref": "934a5fed-6fef-44b4-84ef-10cca3ab82a7",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "98e5059d-274a-416d-8660-3d8f9526393e"
        },
        "item": {
          "id": "84988bdb-9e11-4efb-b1d1-3be9fb9c395e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3331f87b-7d11-4f2f-a72c-92e28270b262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b035020-278e-4540-9fc8-24f838c96d2c",
        "cursor": {
          "ref": "3362dbe0-bfd7-4645-9bd5-31833b4ecf27",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2325d82a-6479-4983-b2a6-c279bb431359"
        },
        "item": {
          "id": "6b035020-278e-4540-9fc8-24f838c96d2c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "29471428-ed9a-4273-9407-e78e16f7b5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de17842-a2e1-4258-8554-d45f64e969b3",
        "cursor": {
          "ref": "9a67abd3-e661-4752-9d58-dd8ff7d0e41d",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "562c5f17-0a86-44ba-9775-bfbac7f63368"
        },
        "item": {
          "id": "2de17842-a2e1-4258-8554-d45f64e969b3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0f845db4-ac85-483f-a73f-6bbdfa768b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219aa70f-9306-4a48-bb69-7bb2bbdcb705",
        "cursor": {
          "ref": "cb907ad6-0a30-41ce-9c83-6cb81529be11",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "719286c4-b449-4a56-8afd-ea3471105460"
        },
        "item": {
          "id": "219aa70f-9306-4a48-bb69-7bb2bbdcb705",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "37284f10-0988-491e-aabb-1c6b1f3f54d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0f466a-711a-48a4-945d-82dde24a4904",
        "cursor": {
          "ref": "5f7ef0b1-2895-4db9-ac85-25666dc2bb9d",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6a41bb09-edc7-4168-864d-ff04d56335b1"
        },
        "item": {
          "id": "fa0f466a-711a-48a4-945d-82dde24a4904",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "21e50eed-285b-4159-94e7-8b31c3c3ebfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733d63e6-4ba0-4566-8067-61f788a30752",
        "cursor": {
          "ref": "4c5c12aa-df39-4a0d-87f2-5421ab2542b6",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1c96ae04-4078-4491-b177-c1e0a17cbe86"
        },
        "item": {
          "id": "733d63e6-4ba0-4566-8067-61f788a30752",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b8b38f8f-be19-4f60-ac78-b306cb2e37f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1338,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca220040-2e31-45c8-8ccd-b5a46acabe32",
        "cursor": {
          "ref": "e07ab597-5ac4-4cd0-8f61-082877fd5b53",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a28982be-6f99-4431-a1ea-a0cd64239c86"
        },
        "item": {
          "id": "ca220040-2e31-45c8-8ccd-b5a46acabe32",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "762cbd7c-4f62-4efd-957f-b693b2adae0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1601,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df08f56-97d3-4c87-8be2-97c8a6571162",
        "cursor": {
          "ref": "c3b13ccc-5727-4d26-926f-6289050d1b56",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c880739a-39cc-4ecb-8c0a-c74d1e0feb0e"
        },
        "item": {
          "id": "8df08f56-97d3-4c87-8be2-97c8a6571162",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3cbc8a5b-ea92-4d5f-8466-de824936157f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f79fd7-7a78-401e-a846-3fc3fae8ea09",
        "cursor": {
          "ref": "6350c004-4e52-429d-ac5f-7a41f3ab1925",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6ec24dbf-e46f-4a1f-84b0-350eeb85706f"
        },
        "item": {
          "id": "44f79fd7-7a78-401e-a846-3fc3fae8ea09",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f1171686-d164-4884-b13c-122cbd305521",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 612,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d65d4c4-8bc9-4df8-90f4-5ae0efcc36e4",
        "cursor": {
          "ref": "3b092de6-47be-4051-bac3-3ffe8482027a",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a74cb8fe-1e16-4eea-b451-d9b23b48a6fb"
        },
        "item": {
          "id": "5d65d4c4-8bc9-4df8-90f4-5ae0efcc36e4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "241eccd7-171f-4c3b-bcfe-1cbc30e0cd3f",
          "status": "Created",
          "code": 201,
          "responseTime": 4062,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "375b31d1-7f4c-4ac7-8e71-7dc2677f7842",
        "cursor": {
          "ref": "0ddc00c4-0f9c-45e9-8a33-8aca766934c9",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "94bd1456-960f-421b-af82-0b724b43f308"
        },
        "item": {
          "id": "375b31d1-7f4c-4ac7-8e71-7dc2677f7842",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "14033d2d-5543-43a1-afd5-257cabd9849c",
          "status": "Created",
          "code": 201,
          "responseTime": 4064,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "d74335dd-5fe8-4db4-ab21-9b76a0eda756",
        "cursor": {
          "ref": "abf0aa03-f113-4dc2-a2aa-0909cfead00f",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "52083b76-f20e-4f37-998a-c0f84548af90"
        },
        "item": {
          "id": "d74335dd-5fe8-4db4-ab21-9b76a0eda756",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cbdff00b-e07b-4267-9162-ae2ae5296031",
          "status": "Created",
          "code": 201,
          "responseTime": 4019,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "2a4e41cd-3511-418a-b058-ae74c0ee204b",
        "cursor": {
          "ref": "b1ce49d5-8e1d-43dd-a834-95112319b66e",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8eab093d-c2ca-4120-87e5-053fca24fb2e"
        },
        "item": {
          "id": "2a4e41cd-3511-418a-b058-ae74c0ee204b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "34fdd51d-8cc9-4ea0-846b-ea64934b21fc",
          "status": "Created",
          "code": 201,
          "responseTime": 4292,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "c6816b12-eb56-4550-ab32-0a05f34fb5cd",
        "cursor": {
          "ref": "78209c9f-7ba1-4c99-a7a4-4eb647b4d749",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9cd85758-7876-4eb9-b19d-83fe46b3fd87"
        },
        "item": {
          "id": "c6816b12-eb56-4550-ab32-0a05f34fb5cd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "22e3423b-e280-47a1-b121-577cb7ba2092",
          "status": "Created",
          "code": 201,
          "responseTime": 5343,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "41e09f71-53e8-48a8-80cc-fcd86a584802",
        "cursor": {
          "ref": "d8d66f2a-1e88-4c7e-a04d-462624e8df44",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c253a9b4-b8a9-4d67-8455-dbddff495e21"
        },
        "item": {
          "id": "41e09f71-53e8-48a8-80cc-fcd86a584802",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c03ad67-4150-41e9-9803-aff47e711658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e09f71-53e8-48a8-80cc-fcd86a584802",
        "cursor": {
          "ref": "d8d66f2a-1e88-4c7e-a04d-462624e8df44",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c253a9b4-b8a9-4d67-8455-dbddff495e21"
        },
        "item": {
          "id": "41e09f71-53e8-48a8-80cc-fcd86a584802",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c03ad67-4150-41e9-9803-aff47e711658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ea245d-5285-413c-bd5a-e542d064d20a",
        "cursor": {
          "ref": "f916ff33-8d73-4871-84bf-e7640152885b",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ad7035a8-b2c8-46be-8224-0459c37ac3f7"
        },
        "item": {
          "id": "48ea245d-5285-413c-bd5a-e542d064d20a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "21bde089-d7a0-4713-9c11-faa610b113e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b529f807-8ce9-40a5-b2e7-660c9e330b41",
        "cursor": {
          "ref": "963bd7ed-c535-4017-a2fd-c30198fdb417",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "15c6b9b8-30e5-4d0f-a014-04f767230d09"
        },
        "item": {
          "id": "b529f807-8ce9-40a5-b2e7-660c9e330b41",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f0da33d3-9657-40ed-8ef4-bdec551194ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1718ad-53bc-4acb-bc65-aa92a1ebf500",
        "cursor": {
          "ref": "01583cf3-e712-4f5f-9299-c08732eae53c",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9b1167a0-9ab0-4afd-bb39-ed02b1cea4fa"
        },
        "item": {
          "id": "cd1718ad-53bc-4acb-bc65-aa92a1ebf500",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "58c8f8e0-77bf-4f97-8550-df961d623238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0c3aad-5e4d-4987-9749-1c0315f6d86a",
        "cursor": {
          "ref": "65dc18aa-8829-45dd-b9c2-3e07e448165e",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9531c855-93b1-44fc-9803-c08cefacb5fe"
        },
        "item": {
          "id": "4d0c3aad-5e4d-4987-9749-1c0315f6d86a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c00303ed-81d0-4139-9aa0-907d36f46678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711b6a2f-7b36-4b25-80fd-303599cf1692",
        "cursor": {
          "ref": "669b5986-7eca-4026-8d11-73871b9c8bd0",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dd6e7c88-d7da-4eff-9d6d-cf33e4f1b5b7"
        },
        "item": {
          "id": "711b6a2f-7b36-4b25-80fd-303599cf1692",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4c839c56-2c13-45fc-b55d-8957ffb062b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01dc6819-f939-4248-8290-b895e161d65a",
        "cursor": {
          "ref": "b00c513d-4eac-4446-8f87-ec2b6453c8f9",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9b435f6c-443a-4543-b1c3-990be04548b6"
        },
        "item": {
          "id": "01dc6819-f939-4248-8290-b895e161d65a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0c77b54f-189e-4578-941a-726d4d073e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a1dc59-6309-40eb-b0f9-659db0198215",
        "cursor": {
          "ref": "1dc2e670-6e5e-407a-b7f0-3a8dcfd88e30",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7a1f6322-84f3-471a-aad5-d9ee8d177e67"
        },
        "item": {
          "id": "d8a1dc59-6309-40eb-b0f9-659db0198215",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f8980f83-5396-413b-951e-28b0a1ff9b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6303fe-02b2-4e23-a6ee-fd64745ad44b",
        "cursor": {
          "ref": "6cadf68a-935c-4a74-ad29-55dad11b5dfe",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4f82436d-d559-47ac-8176-690ad842e9b9"
        },
        "item": {
          "id": "2d6303fe-02b2-4e23-a6ee-fd64745ad44b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9cac899c-f53a-402a-9138-457e59bc213a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7013e49b-310f-4b77-9c3a-5c396aebfa57",
        "cursor": {
          "ref": "2a08beb3-8d38-42af-a648-7909558af681",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cebce87f-c84a-4656-9063-9ab82e6b7cc9"
        },
        "item": {
          "id": "7013e49b-310f-4b77-9c3a-5c396aebfa57",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "54964384-1492-4fc5-be42-d3475f82240c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e54a19-88c2-4e55-9568-204357e58f02",
        "cursor": {
          "ref": "76b10abd-f521-4f13-877b-3390462c7920",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a5d37a2d-47df-4e92-8ab6-d90e6493c435"
        },
        "item": {
          "id": "c0e54a19-88c2-4e55-9568-204357e58f02",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0a1cc1f8-061e-4495-97ca-6ca67a62aebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c8cbf1-af3e-48a0-9096-72781a80e8b6",
        "cursor": {
          "ref": "26a611b2-cbfb-4e77-98e2-e021b5ceede7",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "783ff567-e186-4fc0-a0fe-55718821442d"
        },
        "item": {
          "id": "41c8cbf1-af3e-48a0-9096-72781a80e8b6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c540d7ac-191a-40f9-8d93-be6d37e1543f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84b70b0-cae1-44d9-b7a6-ab793d44f51d",
        "cursor": {
          "ref": "2e351ef5-93f9-4ced-9422-d9b54c8bfbd0",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d9708d2e-605e-46d3-9673-4d7fb7010639"
        },
        "item": {
          "id": "e84b70b0-cae1-44d9-b7a6-ab793d44f51d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "15222538-1262-47b5-9fc5-d146694f3e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce076ab9-7a44-4326-857d-305309596f61",
        "cursor": {
          "ref": "07ade87a-382b-46ff-8d50-eef26ba23430",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b6a0ae75-aed3-42ba-bf2c-5addfee077e0"
        },
        "item": {
          "id": "ce076ab9-7a44-4326-857d-305309596f61",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "391974b6-e476-4245-8136-4740306b2016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e28c2ef-4330-44e0-804a-406edaa2e773",
        "cursor": {
          "ref": "7c98e358-7dd1-4c28-b071-ed0b8ea7a9e7",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4e92c9e9-f3df-4aea-a631-1355f8bc20dc"
        },
        "item": {
          "id": "3e28c2ef-4330-44e0-804a-406edaa2e773",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "802cdfcd-cf25-4c24-aecc-4da521328c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d12abc-d31a-4f36-b7f5-63fcabb2f5c8",
        "cursor": {
          "ref": "e7c78e7a-8696-4755-b20b-1444c111af78",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8c35f230-4ea6-45a5-96e7-8c8543af4fe7"
        },
        "item": {
          "id": "92d12abc-d31a-4f36-b7f5-63fcabb2f5c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5162e7e3-65bf-45f9-9cc3-300875caba3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5040b718-2311-421d-ad4a-b44302c931f2",
        "cursor": {
          "ref": "7d9a5a63-70b0-4415-89dc-4533b6c21e68",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "658f1677-4b66-4471-915f-9e30a5aeb62b"
        },
        "item": {
          "id": "5040b718-2311-421d-ad4a-b44302c931f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7f22f174-0912-4188-ac24-4d852f09af10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87af568-c15e-429a-9f49-51a40a694e24",
        "cursor": {
          "ref": "aa4d2be8-3365-4f4a-909a-22d96530069b",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f0d85757-1e84-4217-ac5b-9ab6973d78aa"
        },
        "item": {
          "id": "e87af568-c15e-429a-9f49-51a40a694e24",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "69bf2d20-d996-499d-9aff-f66c6d076504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ee3e8d-df78-4ed1-8b43-7fc2adb9a01c",
        "cursor": {
          "ref": "88aff0c6-07af-4070-b6b9-30a54c6a4187",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3b9a2965-dde4-474c-9c38-d96c6f0e7965"
        },
        "item": {
          "id": "a8ee3e8d-df78-4ed1-8b43-7fc2adb9a01c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "20d043a3-77c4-4ff7-80c8-1816dd2ea604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6836e03-429d-43ee-b534-e66ded911972",
        "cursor": {
          "ref": "62b16b3b-0891-48a6-8fe0-b053b49ef2a5",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "73c55357-a6f2-4e99-be5b-8f4db9f997f2"
        },
        "item": {
          "id": "e6836e03-429d-43ee-b534-e66ded911972",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3b3e89ef-abff-4f0f-8e64-8052f1be1184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3630a29-4332-4ca2-9738-bc8289f8ce84",
        "cursor": {
          "ref": "d989124d-8053-44f5-ab9e-d4851695afcd",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d25f5bf2-29bd-4227-b9cc-b907939dbc8b"
        },
        "item": {
          "id": "c3630a29-4332-4ca2-9738-bc8289f8ce84",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fdfb1371-2ba5-43aa-8146-dad86fbb8852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe88d96e-9dbb-498f-8421-f63714fcc0b6",
        "cursor": {
          "ref": "2cdfeb41-fbc3-4971-85ed-9bbae7a544d3",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "459f9599-a145-4768-b730-ce25bbe62efb"
        },
        "item": {
          "id": "fe88d96e-9dbb-498f-8421-f63714fcc0b6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e9009461-0226-4252-8b28-a6d33a876f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10003bbe-753f-4ed6-b9a2-b415ab7278ca",
        "cursor": {
          "ref": "fa9f0c61-a1fe-4e5e-b1c5-518e7362f5e5",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a4623f95-7db3-477f-adb5-7c02505220b1"
        },
        "item": {
          "id": "10003bbe-753f-4ed6-b9a2-b415ab7278ca",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbdd7963-9bf9-46b8-8c47-b9e69e3f2b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8713e08-5afe-4edf-9e3f-e30736513ef3",
        "cursor": {
          "ref": "0e579b5d-024c-437c-95ef-9e9b695e5f79",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "43e8d3d4-a66d-465a-bb00-4836ecef1df1"
        },
        "item": {
          "id": "d8713e08-5afe-4edf-9e3f-e30736513ef3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3308b429-d970-4bbd-bbc5-37f2f6857207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4250efd5-09fe-4376-ad34-68027d212fce",
        "cursor": {
          "ref": "c5933fc3-0fda-4220-88e0-9f3bfa8e495a",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "96a77aba-a52a-4c1f-a9b7-0d35ae5a7b2b"
        },
        "item": {
          "id": "4250efd5-09fe-4376-ad34-68027d212fce",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fdd4f79d-9fb3-4b7b-bd8d-48af2f51caba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979b61e3-bb05-4ff1-bdf5-4f12b7343542",
        "cursor": {
          "ref": "4a6b0cc2-6a3f-44fb-b5c3-d220006c690d",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9b7f8ae8-ea6d-4f8e-b1d3-fbc25b23f729"
        },
        "item": {
          "id": "979b61e3-bb05-4ff1-bdf5-4f12b7343542",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "99a834ef-4b8b-4119-957c-993375d49009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5eb23f-6086-4378-b9ea-1e233e2fc7fe",
        "cursor": {
          "ref": "980f4db2-ae7e-4a50-b1f3-9105ce385a62",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b7a197ad-4753-47b8-9bcc-6388b0abd557"
        },
        "item": {
          "id": "0a5eb23f-6086-4378-b9ea-1e233e2fc7fe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "23d9a1d3-b7f8-4ed8-b82c-17bef1655c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78adc969-43e3-43a6-ab50-7478776a2c42",
        "cursor": {
          "ref": "75495dd9-c727-4d2d-bf0a-8be92825da3b",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "85f0e96b-f2f1-48be-9530-8691e7df58db"
        },
        "item": {
          "id": "78adc969-43e3-43a6-ab50-7478776a2c42",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5384b460-641e-4cbf-b0fd-502bf6d788f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb287e92-43e3-4fc4-8254-9ce7d81f3860",
        "cursor": {
          "ref": "b319b8b8-53e5-40ca-b512-253ed3c14e50",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6274df68-7e20-4c8c-85c7-b658ae007130"
        },
        "item": {
          "id": "fb287e92-43e3-4fc4-8254-9ce7d81f3860",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ddfae229-c92b-4940-b5fd-405efd67704c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba3edbf-743c-4edd-a76a-5c4f650ca042",
        "cursor": {
          "ref": "9566a018-03fa-466d-90a3-5056c39b6db2",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d2f2cdcc-35f6-40d5-95f3-68d39dd4f2b2"
        },
        "item": {
          "id": "4ba3edbf-743c-4edd-a76a-5c4f650ca042",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "01d1cb53-461b-43c1-8365-151f20c0c165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab2e18d-96ff-4422-822a-f892764dbd7a",
        "cursor": {
          "ref": "0d69a596-df41-4f4e-9686-2baaa48e98e3",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4d394d8c-de7d-4fe7-ab63-852ce00313c5"
        },
        "item": {
          "id": "fab2e18d-96ff-4422-822a-f892764dbd7a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "993722a5-3c5d-4729-bb0a-320663d88d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b696e1e1-3353-48a3-8ab2-6f0985db8aaf",
        "cursor": {
          "ref": "87d75028-8dff-460b-aa75-cf1fc1f638a7",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "94105676-3c26-42a7-b8c2-66d8b5dbb522"
        },
        "item": {
          "id": "b696e1e1-3353-48a3-8ab2-6f0985db8aaf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fe6e87f2-bee3-41ba-8717-e1a59eeaeee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b40959-15d2-4b98-abe1-2ca0cb811ff1",
        "cursor": {
          "ref": "cb701171-48d5-4831-9ecc-286934aa6583",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9d7cb423-dea1-4e65-99bf-2f466575c15c"
        },
        "item": {
          "id": "d9b40959-15d2-4b98-abe1-2ca0cb811ff1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54fafb69-df6f-47d2-81f9-6de66f7e6c26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 93,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe59192-1142-4609-8ab9-e57f413dbfce",
        "cursor": {
          "ref": "246bff7f-a423-4a8b-8a6b-90d25b16d83b",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a350db17-32fe-423e-840a-673f259e3482"
        },
        "item": {
          "id": "fbe59192-1142-4609-8ab9-e57f413dbfce",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c9638d36-5280-4d97-8763-048bfe839d2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fcd142-fdd9-474c-8f47-7f5b348f3a88",
        "cursor": {
          "ref": "dfc692b9-b57d-42ab-839b-3211b7a7eb12",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2150556e-f955-449b-b2b2-8eb6dfebfcbf"
        },
        "item": {
          "id": "c3fcd142-fdd9-474c-8f47-7f5b348f3a88",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ad150739-4fe7-4d2e-b7b3-b16f1e9d372f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fcd142-fdd9-474c-8f47-7f5b348f3a88",
        "cursor": {
          "ref": "dfc692b9-b57d-42ab-839b-3211b7a7eb12",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2150556e-f955-449b-b2b2-8eb6dfebfcbf"
        },
        "item": {
          "id": "c3fcd142-fdd9-474c-8f47-7f5b348f3a88",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ad150739-4fe7-4d2e-b7b3-b16f1e9d372f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da064f25-05e9-479b-91b6-2132eca58818",
        "cursor": {
          "ref": "73fd1d7e-9ef7-4d8e-96b3-ed49bdfcb4bf",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4a00eacf-fa66-4837-b172-4e48e4b3069b"
        },
        "item": {
          "id": "da064f25-05e9-479b-91b6-2132eca58818",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "48ddec02-cb59-43e3-bf5c-e4670fc82326",
          "status": "OK",
          "code": 200,
          "responseTime": 384,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "ae19dd1c-0efa-45b7-8dad-e93333cc2665",
        "cursor": {
          "ref": "3bc0703e-04ce-47fc-9742-616b7730e4db",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "09db35eb-c020-4dac-aea1-29115a2baa01"
        },
        "item": {
          "id": "ae19dd1c-0efa-45b7-8dad-e93333cc2665",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6edb6cca-6645-4a94-94e4-87f4d1232a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eb5744-e721-4798-a762-4ead625f265b",
        "cursor": {
          "ref": "0631c944-5a70-4b34-8d78-0494a70d2abd",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ffbc907c-5b7a-4a7f-8a71-9d7e95659616"
        },
        "item": {
          "id": "67eb5744-e721-4798-a762-4ead625f265b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "43a02d56-d8f1-4b7d-b2d1-00c783f74466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d908c37-2e01-4f26-a47c-da3d5f7711cf",
        "cursor": {
          "ref": "b36b4831-578b-4b33-8d0d-64d0dab4a8a6",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5608abe0-c092-4baf-a4ed-122d6c2c79b6"
        },
        "item": {
          "id": "9d908c37-2e01-4f26-a47c-da3d5f7711cf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "12b7b069-de0a-4ccd-a2be-aafa1dad00fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a7805-91d2-40a7-92f9-25245605a6bd",
        "cursor": {
          "ref": "7ed8673d-65de-4b35-8d22-fbb8af3ed313",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1bc6db7b-a572-4259-a1ff-b7e23752a669"
        },
        "item": {
          "id": "706a7805-91d2-40a7-92f9-25245605a6bd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "16195afa-4469-4a11-8a1d-5af12fce133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766c20c7-6739-4338-b9b4-c0087b96b440",
        "cursor": {
          "ref": "e6945f6f-1339-4d3b-b30f-4f0a94b58e86",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2ded9aff-7394-456b-ba0d-7a0c8daaff1b"
        },
        "item": {
          "id": "766c20c7-6739-4338-b9b4-c0087b96b440",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7289d709-6451-4d8e-8080-970d4eee5d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04543ffd-f17a-4b19-891c-2b9d6b209420",
        "cursor": {
          "ref": "e68cc8c3-8e5a-4a0f-bcc8-565813b92338",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2d201495-3319-4716-81d9-772cb0985b34"
        },
        "item": {
          "id": "04543ffd-f17a-4b19-891c-2b9d6b209420",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "35f6d36c-bc62-4b97-8364-2fc233373834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7052781e-801f-47fb-b846-20b798ac9e15",
        "cursor": {
          "ref": "b8a8f439-c5f5-467e-8bfc-12060e3a7ae8",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "78d05bb3-b237-4aec-9e57-d9014b30fae2"
        },
        "item": {
          "id": "7052781e-801f-47fb-b846-20b798ac9e15",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "097ffe4f-1f95-4e9e-b319-a737a11892b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3df4783-1445-4c78-bd3a-f7a0b654ba78",
        "cursor": {
          "ref": "6696154a-4be0-4a3f-93df-0748f29fd9df",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "34654d82-17fd-4705-a36d-086ff84403b0"
        },
        "item": {
          "id": "d3df4783-1445-4c78-bd3a-f7a0b654ba78",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f12fe7e7-80b2-46f5-ab6c-9d43ac57c167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86db55fa-3991-4916-97a7-055058b6d9c4",
        "cursor": {
          "ref": "1656d0ed-085c-4433-a657-533e4ce059b8",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "08a5d097-b7b6-4302-9c33-9f2b9d931e87"
        },
        "item": {
          "id": "86db55fa-3991-4916-97a7-055058b6d9c4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1c2e2e1b-ff34-41fa-9194-200544830515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2af323-6f86-4716-9f01-c04b5920b409",
        "cursor": {
          "ref": "99f45afd-a376-4f8f-b795-ea1c3d531450",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0d1d528c-9a75-4eac-b1a8-ca2319c80d9f"
        },
        "item": {
          "id": "cf2af323-6f86-4716-9f01-c04b5920b409",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d321f01c-9f18-411b-9c6b-6fa77a43461f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2fecad-92a7-4e2e-bde3-c522eb865e77",
        "cursor": {
          "ref": "2022d9e3-cddb-4bd6-be64-1cd9779ee578",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "064f1b1a-6867-4234-aa2c-5d5599a04596"
        },
        "item": {
          "id": "3b2fecad-92a7-4e2e-bde3-c522eb865e77",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b17085ab-9569-4258-ba17-8a361a466bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2a0a99-fe22-44e3-9a7b-e198903da5bf",
        "cursor": {
          "ref": "a5256fe1-6541-48c8-b5ab-7b420813b4b6",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e3668fab-9cb7-49d7-8c6d-c346569a8cae"
        },
        "item": {
          "id": "1e2a0a99-fe22-44e3-9a7b-e198903da5bf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ecf6242b-2284-4172-b882-47de637f4163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c2b818-37bf-48d1-b71f-2b41145ec4c7",
        "cursor": {
          "ref": "5b950467-21c0-4cc2-a4ac-0584caeb7f64",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5540d57e-b949-4675-aecb-e079b246c783"
        },
        "item": {
          "id": "f0c2b818-37bf-48d1-b71f-2b41145ec4c7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "994a5017-9c01-470f-b287-1ee748db1853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e714d8d0-5ec0-4f99-a2cb-52eabde492b9",
        "cursor": {
          "ref": "0ce24576-1e46-4375-b08b-231173351cef",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "50712b63-47b4-427d-a78a-21fe5cbe54c5"
        },
        "item": {
          "id": "e714d8d0-5ec0-4f99-a2cb-52eabde492b9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "80bc76d8-5e3e-47ce-a61d-e82a52d49e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c176984-3d77-4903-9889-18284b456105",
        "cursor": {
          "ref": "d22c2a49-4281-45fe-9db3-952295096c34",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9322b75f-ffe0-4064-8ddd-d683e0295a10"
        },
        "item": {
          "id": "9c176984-3d77-4903-9889-18284b456105",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "46c5ea20-8acd-4c79-8763-a61ec0a73b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e22397b-1e34-46bb-8e6c-1643c12253ad",
        "cursor": {
          "ref": "15f79a5f-5046-4517-963e-89722d22cd85",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "692938b4-0c4c-4777-a365-5b5f591b9397"
        },
        "item": {
          "id": "1e22397b-1e34-46bb-8e6c-1643c12253ad",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "86eff7e9-0037-4457-aa08-5194f7b13a23",
          "status": "OK",
          "code": 200,
          "responseTime": 2218,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "e252fb92-9f03-4d61-be0d-2caaf3f87002",
        "cursor": {
          "ref": "a19d5b3f-74f2-4c84-9ebe-3c7bbe171c15",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ad44ff7a-7008-4716-b81d-b4d461baedff"
        },
        "item": {
          "id": "e252fb92-9f03-4d61-be0d-2caaf3f87002",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "451397f6-5ce9-4271-9311-19b3720b68bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055f8036-ac9d-4e4f-982f-82b846fd3657",
        "cursor": {
          "ref": "450d14b3-dd9f-4557-aaae-318d1635d99c",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6da12efb-0572-45e4-9686-101b45248751"
        },
        "item": {
          "id": "055f8036-ac9d-4e4f-982f-82b846fd3657",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2c9b533d-c152-477f-a1d7-12b9d2f3f0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe39617a-06af-44c7-ab6a-7a2ad1bb0b21",
        "cursor": {
          "ref": "8eb9e9e7-002f-47e1-8a26-f5c2734e1373",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "01e79cd1-58dd-415a-a827-00cf29e10ad4"
        },
        "item": {
          "id": "fe39617a-06af-44c7-ab6a-7a2ad1bb0b21",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "107bdaa7-de85-4b27-9d0c-a21ef3d413d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059f514d-b020-400c-9221-57a8bc0a238f",
        "cursor": {
          "ref": "18920918-f0df-499c-8165-b6a4bc988289",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "63b84f27-1d01-4fe4-a3c0-256bbd673e85"
        },
        "item": {
          "id": "059f514d-b020-400c-9221-57a8bc0a238f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e9346638-6c6e-4624-9160-2a0cf5001ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5af8f3b-d175-4e57-9fdc-aee3bc1e1eef",
        "cursor": {
          "ref": "e185b3f0-3edc-49ad-bff1-58d0efeb05fc",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8890bf31-cb6e-4859-91ca-cc17a0a82337"
        },
        "item": {
          "id": "c5af8f3b-d175-4e57-9fdc-aee3bc1e1eef",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f501b49a-eef6-45de-b0a3-ba79251e2f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2757d963-19ac-4f0e-b206-ca9e31f30d42",
        "cursor": {
          "ref": "9ff31c34-afe3-48fa-a936-511bdb615cec",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "716c03dc-4844-4e14-a3d0-f99779b7cc5f"
        },
        "item": {
          "id": "2757d963-19ac-4f0e-b206-ca9e31f30d42",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9a55c9c1-cd06-414e-a67c-cad2181053e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1180,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43cfcab-0583-48f5-9926-53701a23d945",
        "cursor": {
          "ref": "aa8cde1f-9f3e-4147-9983-5db99cf2268a",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f23ae5ce-a20d-4bb6-8b52-1b89a61828bf"
        },
        "item": {
          "id": "e43cfcab-0583-48f5-9926-53701a23d945",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7908d250-f5c2-4e4d-bdf4-3dc75b3dfe9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1053,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acb9a2f-6d8c-49ee-b07f-ac71118bbe97",
        "cursor": {
          "ref": "b766735a-da66-4cc7-8a3e-f341970e9193",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b25f8225-6ac3-4dc3-a9d5-519e99df7db9"
        },
        "item": {
          "id": "0acb9a2f-6d8c-49ee-b07f-ac71118bbe97",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6b1ed0a0-e7cc-409c-b635-76fd52c9f23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1316,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868fa820-5940-4d99-ab7e-3f3661e65f3b",
        "cursor": {
          "ref": "79e19dd7-689b-4bd8-a476-b0b84fefa3b5",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ce3d140c-8505-467e-b3e8-7ef3ae8165d9"
        },
        "item": {
          "id": "868fa820-5940-4d99-ab7e-3f3661e65f3b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "00c48b62-9eb9-4377-9cf0-bd74879ae6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1397,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4e31a5-32a5-4aa6-b055-f6c9ce882e4e",
        "cursor": {
          "ref": "2f667c82-e650-4594-ab54-a57fc4f2e1d1",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d01cb08e-911b-4cc8-a67b-5d337d105c40"
        },
        "item": {
          "id": "ef4e31a5-32a5-4aa6-b055-f6c9ce882e4e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2b45aff7-6f61-4de3-8418-02ef54dc54a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1477,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54687ad-2f5a-474d-8b2d-bda43652f262",
        "cursor": {
          "ref": "5b1273cc-60ed-435d-9542-0578f17065ae",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "af71b836-847a-419b-9a4b-8a5bedadbe0e"
        },
        "item": {
          "id": "f54687ad-2f5a-474d-8b2d-bda43652f262",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a5664990-d64d-4a48-938c-aca1da6d4ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1160,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc69171-a841-42c1-ae55-dd7d256d14f2",
        "cursor": {
          "ref": "0eae58d9-61a3-40ee-8375-0c00ee6be334",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9deda367-1a4e-4aab-bb6e-fc587dafbcd1"
        },
        "item": {
          "id": "bcc69171-a841-42c1-ae55-dd7d256d14f2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "829db358-10a1-419a-8c31-2026a7e74fe6",
          "status": "OK",
          "code": 200,
          "responseTime": 962,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "3872d58c-199a-4bf1-b885-97ec99f208ab",
        "cursor": {
          "ref": "c5d38827-e3a8-48f8-8bf0-3e17f29dca5b",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b37aa33a-f5e1-4736-91ca-ca4312c817b6"
        },
        "item": {
          "id": "3872d58c-199a-4bf1-b885-97ec99f208ab",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f953e8f-f47d-4ce3-bebb-14d9e9a1b5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2f3ad4-345c-4587-96f3-e230f871c733",
        "cursor": {
          "ref": "124a2461-85ea-419c-b95f-acdeeec01ff3",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0b0be053-000a-447e-930c-17b72f6b656f"
        },
        "item": {
          "id": "7e2f3ad4-345c-4587-96f3-e230f871c733",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7e56cff6-a586-4c94-8248-b8cbcd6c13f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201d8147-e5e5-4e53-8e5d-146fd9f958ae",
        "cursor": {
          "ref": "897a00cb-88b7-4c11-86e7-22ac52700655",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6ed14b4e-27eb-4641-9a58-406186b8b6d5"
        },
        "item": {
          "id": "201d8147-e5e5-4e53-8e5d-146fd9f958ae",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6d678911-a0c8-4ded-bd01-48dc1cb1037c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5358b66-7786-436e-80cd-32fcf2b5a8dd",
        "cursor": {
          "ref": "1ee647f5-697c-4d56-a8af-6e9c59dc29ab",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "320bb97a-b326-4417-b284-e159b194b704"
        },
        "item": {
          "id": "f5358b66-7786-436e-80cd-32fcf2b5a8dd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "192b9e72-0225-4b83-9906-27b093b3e5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6975bfb7-8280-4c92-b8d3-54240a29f6b3",
        "cursor": {
          "ref": "0d083c59-56cf-40ee-85b1-de07133d41c0",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e51f4391-2ede-4f0b-b357-53d285689c0e"
        },
        "item": {
          "id": "6975bfb7-8280-4c92-b8d3-54240a29f6b3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bb587313-d380-4995-97b3-f7140c168f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d067056-e2d7-4b16-b47b-93196fe83386",
        "cursor": {
          "ref": "3c504328-3689-4b8d-b760-d342e978e2c8",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "46e67b02-4405-4608-8667-0589bf7c878d"
        },
        "item": {
          "id": "9d067056-e2d7-4b16-b47b-93196fe83386",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fb84d8b0-3ef7-40b4-8eea-8d0b0ecec16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0799b026-b622-4310-a4d3-a5eb4476be3a",
        "cursor": {
          "ref": "27deb055-4de4-4b5f-be2c-f33ff0e6fad2",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "10253ee2-feb8-45a5-a4bc-f44dbdbc146b"
        },
        "item": {
          "id": "0799b026-b622-4310-a4d3-a5eb4476be3a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2409e1db-858d-4871-9bb9-8737292ad2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bd2c69-6f4d-45a0-8b55-7896900960f5",
        "cursor": {
          "ref": "8aafe837-976e-4583-8377-7ac1d66fd775",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e66bc3fc-3033-4da1-91f5-3a8f5e884fd5"
        },
        "item": {
          "id": "e8bd2c69-6f4d-45a0-8b55-7896900960f5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c598dd52-7475-42f8-9145-334078cb810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bd3a51-3e0c-427f-8edf-7f6e15208137",
        "cursor": {
          "ref": "e1fd78ff-4891-4fa1-a4c7-b3afa1193e2a",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ad2f014d-cd86-436c-b3e1-2eb66952f5a7"
        },
        "item": {
          "id": "42bd3a51-3e0c-427f-8edf-7f6e15208137",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "50c381d3-d112-4536-87de-d6a8b4f9861c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27fb1ff-d9c1-43f6-967f-061d3dbcce02",
        "cursor": {
          "ref": "f660ca64-0192-48eb-8c0f-4304089d5b0a",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d6cf6a99-c12c-4651-9fd9-a577a732fef4"
        },
        "item": {
          "id": "f27fb1ff-d9c1-43f6-967f-061d3dbcce02",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "af888e7a-1b27-4be5-9445-08c1a9db5b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a278ea-a072-4321-b4f3-ac4811b31145",
        "cursor": {
          "ref": "9bc8d717-5f22-4abf-ae16-492e9c2348e2",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bc5b45ac-df93-45d0-aea2-2e475cbdc395"
        },
        "item": {
          "id": "d4a278ea-a072-4321-b4f3-ac4811b31145",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7f764301-c97a-45db-9371-6e4251af7bdb",
          "status": "OK",
          "code": 200,
          "responseTime": 362,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "97a2a6e7-2024-498f-8060-93e702afe36c",
        "cursor": {
          "ref": "bb714ba4-60f8-4b40-816a-54977d954533",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "63c2c484-fccb-4e87-b492-47c112612f20"
        },
        "item": {
          "id": "97a2a6e7-2024-498f-8060-93e702afe36c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "47ce3431-fcc9-4ffe-81dd-bf25345badb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0e275e-cfd3-4faa-8ceb-76bb62252d8c",
        "cursor": {
          "ref": "faf82053-8d1f-41f3-a0ef-1c619246e227",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "393e04bd-b93d-4cc2-9ab2-dbe70f7e1728"
        },
        "item": {
          "id": "cb0e275e-cfd3-4faa-8ceb-76bb62252d8c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cb83d307-430d-43b7-91e7-55180fe4ff3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defe4687-9e1b-484e-a31e-eb5b9405fd85",
        "cursor": {
          "ref": "4ad3c751-9c75-417f-a03a-9f552d413ae1",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "76db5fcf-3943-4637-b1a8-377c5d318fc3"
        },
        "item": {
          "id": "defe4687-9e1b-484e-a31e-eb5b9405fd85",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "af101276-489f-4489-87b7-d38b08e46853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9ee176-a3f0-4db9-aa7d-8ceb4c630dcc",
        "cursor": {
          "ref": "ad8b6c75-4d94-488e-be62-97bc4c083dcf",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5ea6b7ab-7267-4467-8bb1-420eb418622f"
        },
        "item": {
          "id": "ad9ee176-a3f0-4db9-aa7d-8ceb4c630dcc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5630abf1-9ce9-458e-91ab-be82867721f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7ae333-955a-4377-b39b-e5f04e328926",
        "cursor": {
          "ref": "531a5b69-6d57-44cb-9bd0-e4e7b77c15b3",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "33f01bfe-9942-4c0e-8c7a-fdac5a34683a"
        },
        "item": {
          "id": "fa7ae333-955a-4377-b39b-e5f04e328926",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f71b0515-e838-42d7-9f09-ecf5e27fb83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02cc6ad-215b-4164-a98e-528d6d0ec263",
        "cursor": {
          "ref": "05883c88-21ec-455d-883c-43e885ccc63e",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3bb652e8-57c4-43fd-87e0-e208ccc32cd7"
        },
        "item": {
          "id": "a02cc6ad-215b-4164-a98e-528d6d0ec263",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ed270f0c-2bfb-42ff-ad00-d2491113a58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176bd324-20a6-4885-bc5e-f86160266e7f",
        "cursor": {
          "ref": "23511790-ae64-4dad-b78c-47f4a3b450cf",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8dba500a-b9f3-4cb1-8c1d-00cd934b8f9e"
        },
        "item": {
          "id": "176bd324-20a6-4885-bc5e-f86160266e7f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fa2833e9-599c-4e04-bb35-20d777070ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bf8d9f-fd3c-4a89-bc35-e7ae0549fb23",
        "cursor": {
          "ref": "94729849-160e-471a-8db2-8682e538bbe0",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d73b0d93-f9f9-4655-b0e8-26ab0f7ead17"
        },
        "item": {
          "id": "80bf8d9f-fd3c-4a89-bc35-e7ae0549fb23",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d4c6251a-da27-4d84-838d-df5949541b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861b599b-4778-4148-9368-17d5b6681b3d",
        "cursor": {
          "ref": "834fa045-d987-457c-a10d-2043d75a7576",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f84cc361-c410-4dac-ad5e-0e38cc1faf29"
        },
        "item": {
          "id": "861b599b-4778-4148-9368-17d5b6681b3d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c84f68e7-45a2-42b7-b7c5-9b6563f39769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33527686-15bc-40cb-9e9a-c8681e3640e1",
        "cursor": {
          "ref": "d1071924-0c0d-498f-99f2-ad6b3a9913cc",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d41b8da5-34c3-42a2-b221-2b99a9ac03d0"
        },
        "item": {
          "id": "33527686-15bc-40cb-9e9a-c8681e3640e1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f1f534a2-1641-42d7-af6b-770506deea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faf9d65-1f7e-42a0-8fd7-505a333ac210",
        "cursor": {
          "ref": "1346091d-4a7a-418c-9d5a-4a89e0bf6c39",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f1d82272-8145-4a34-a339-42adb5416458"
        },
        "item": {
          "id": "1faf9d65-1f7e-42a0-8fd7-505a333ac210",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b61587be-635e-4e98-bb84-b48f0b0b74ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1187335a-c314-45d1-8b07-feaf7039f121",
        "cursor": {
          "ref": "6ad8fd67-de3b-4e9a-ba7e-596b10eca9a4",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "be66f8d8-6953-4081-a9a6-b58bbade24f1"
        },
        "item": {
          "id": "1187335a-c314-45d1-8b07-feaf7039f121",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2d4eebc0-90c8-417c-8ae5-7f46ee4ebb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37891afb-1738-4b0d-a2c1-63d7695cd88e",
        "cursor": {
          "ref": "4196941b-cc97-435b-ad78-4d2e03e4434e",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4f889a32-29a0-4e47-b0ca-6e46f8a7a477"
        },
        "item": {
          "id": "37891afb-1738-4b0d-a2c1-63d7695cd88e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1a89bacb-3169-4d24-8c4f-b830a3f8a8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fec1de9-2f32-4786-80e4-c41d04f6ffe9",
        "cursor": {
          "ref": "ce83d465-318b-44a9-8859-8cc49cf4141b",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e426d48c-d13e-4dab-a220-a4b40df7e527"
        },
        "item": {
          "id": "4fec1de9-2f32-4786-80e4-c41d04f6ffe9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4293d30a-8f6c-4fd0-b11c-8a9b58102836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40c7239-e946-4139-ba73-6675a83bfb3d",
        "cursor": {
          "ref": "0c039ac0-66c7-48c1-bd30-b7c257bbfb2c",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c2636352-9b05-4ba4-bda3-e3597b9f628f"
        },
        "item": {
          "id": "e40c7239-e946-4139-ba73-6675a83bfb3d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3ce707a1-d6b2-4b5d-a4dc-7e61bec3d4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca43a3d-89b4-46b8-b69f-4bd074a704a4",
        "cursor": {
          "ref": "4aa48cd7-db33-4093-a3df-d6ee5181845a",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7f901d2d-2984-4375-b08d-495a4e75663a"
        },
        "item": {
          "id": "1ca43a3d-89b4-46b8-b69f-4bd074a704a4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e92f07fc-4aa0-4500-8f74-c92250f02afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f01271-12de-4b4e-a9d4-72335e9bef6f",
        "cursor": {
          "ref": "1f578bbf-6c44-4c7d-81b4-440451a2f3d8",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3d12ece9-bda7-48c3-9bb6-a6a0945b19d1"
        },
        "item": {
          "id": "d4f01271-12de-4b4e-a9d4-72335e9bef6f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cd3ff196-50f0-4ef6-ab1f-9467fabb7709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e3fd74-17ee-45c0-9551-e79c53c94678",
        "cursor": {
          "ref": "63764412-46b4-4f20-b8fe-53c262139f79",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "647693db-a559-4737-9e82-83b18e47924f"
        },
        "item": {
          "id": "60e3fd74-17ee-45c0-9551-e79c53c94678",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5187c2e1-f8c7-4dab-90a7-5e4896aedd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b9c64a-85a9-4262-8576-1e847faf9541",
        "cursor": {
          "ref": "182b507b-07ef-421c-b359-de709ba4829b",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0cacbea3-06d6-4fa3-b37d-41ddbc24dbc6"
        },
        "item": {
          "id": "87b9c64a-85a9-4262-8576-1e847faf9541",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e5e12ec4-3551-408c-bf15-a95274558564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbd4fb8-f860-40f7-8cc7-7c30496c326b",
        "cursor": {
          "ref": "3f5f9a24-85e7-42e6-b6ed-85e81bf65738",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "61fc9256-0602-4dad-9492-d04aa2d64c60"
        },
        "item": {
          "id": "edbd4fb8-f860-40f7-8cc7-7c30496c326b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fef65bbb-e1ed-4543-acf6-8e7b2be2ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef182f71-44f8-47f6-b089-b52eb36eb515",
        "cursor": {
          "ref": "9c920949-5a5a-4134-a231-0ea50676d2e8",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dab135e5-1f90-4d2d-8d78-ea974cac9263"
        },
        "item": {
          "id": "ef182f71-44f8-47f6-b089-b52eb36eb515",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "979fc06c-2dd1-48ba-ae49-2d9b8457ec28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e54cfc-aeb9-4537-9943-4f353aa70394",
        "cursor": {
          "ref": "3ac01056-15b4-4022-b765-d1196b6d6c91",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8e889698-f975-4d7e-9464-67ef48cca9d6"
        },
        "item": {
          "id": "94e54cfc-aeb9-4537-9943-4f353aa70394",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "46229379-b005-49f3-aab0-f5354e1a9ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a7e7ef-7ac3-4b3f-b5b9-d4a69d56563f",
        "cursor": {
          "ref": "1b152273-31b7-422b-86dc-c52bdeb29063",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9e234136-ca8f-438f-9795-fb9592429304"
        },
        "item": {
          "id": "e5a7e7ef-7ac3-4b3f-b5b9-d4a69d56563f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f3b27e61-99c5-492c-841c-cb4ccbf294d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b00ed03-ebae-4dd5-ad3c-af4c0ad52a52",
        "cursor": {
          "ref": "0ac7b0f0-d726-41e5-b95d-ea590db428b5",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "189c4c32-c7fe-48a7-ae6c-dc439ed4a825"
        },
        "item": {
          "id": "2b00ed03-ebae-4dd5-ad3c-af4c0ad52a52",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c2467242-ecd5-4534-88f7-87cc61bbf940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88abe85-0719-4731-9445-e853bc1abc1c",
        "cursor": {
          "ref": "da29823a-e71d-4eca-a115-2a9b23c0eaad",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5137c731-f571-4807-875a-b086f74b5fd6"
        },
        "item": {
          "id": "a88abe85-0719-4731-9445-e853bc1abc1c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ba7dc978-5ab0-45c7-af80-6b8aadc9f29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4792c9-101f-4767-b7b9-9ec991bd53a7",
        "cursor": {
          "ref": "e9ae6f1a-1892-485b-a659-14dfe4dabbf6",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8d009ff3-7af0-4e57-83cb-a81263bc51ae"
        },
        "item": {
          "id": "3d4792c9-101f-4767-b7b9-9ec991bd53a7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "811d83b8-2d7b-4ea8-8aab-0efe601d4778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf073f4e-90a9-4af9-bb8c-eeb9a960fac3",
        "cursor": {
          "ref": "d187811f-4513-4cdc-a479-a7b98343a12d",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3bbac006-653a-45bb-a2aa-8d33dc099ad5"
        },
        "item": {
          "id": "cf073f4e-90a9-4af9-bb8c-eeb9a960fac3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "80c22f10-a66c-420d-92d6-e6c4c260c0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0cc246-8216-43cc-b9c8-ef71a5a364a4",
        "cursor": {
          "ref": "bc5f8e88-571f-4816-91ab-992f28187919",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "71f871fd-b45e-4570-a80c-257adc8c694d"
        },
        "item": {
          "id": "4b0cc246-8216-43cc-b9c8-ef71a5a364a4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5e70c62c-4d12-490e-852e-7bd36ea19ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bebdbe8-24c2-4c56-936d-6a2d033d6ba1",
        "cursor": {
          "ref": "cfe5de47-df81-4b8e-848c-297bc8ea6814",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "729c9280-21fb-4f79-b0e7-33d82776ea3b"
        },
        "item": {
          "id": "9bebdbe8-24c2-4c56-936d-6a2d033d6ba1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "57a9cc60-4ab8-4260-bde8-6dd64813f2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2280d4bf-1f19-471f-8207-42471a4dffda",
        "cursor": {
          "ref": "72e2652d-adb3-4cc9-9863-a51b7b9b2608",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "10d3277a-4901-4f8e-9b49-925445a24556"
        },
        "item": {
          "id": "2280d4bf-1f19-471f-8207-42471a4dffda",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e554c4ff-b2cb-4470-ba34-237800921098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c33bd8-de32-4f64-9aba-b89bc6420160",
        "cursor": {
          "ref": "145fec97-5ef2-4d2f-8116-9a8f863cc7b3",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8ffce5ad-36c4-4fd7-b4e3-391055cbcd2b"
        },
        "item": {
          "id": "98c33bd8-de32-4f64-9aba-b89bc6420160",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7fd4211b-32dc-4b2e-97fe-0ff5d421680f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc9ce7a-b595-4475-96d8-7b41f444ac39",
        "cursor": {
          "ref": "3e641afa-ffa8-4fbb-ba0e-9c40bb7e623d",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "22dd6371-7d6b-4f97-8b38-9233f7ceedb7"
        },
        "item": {
          "id": "7bc9ce7a-b595-4475-96d8-7b41f444ac39",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "25892874-2cee-4071-88a5-1638ca552ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a47c4da-0b07-404f-b5bd-5581dfbb7977",
        "cursor": {
          "ref": "31c26e2b-4901-43ea-a655-ffc6cc61feaa",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2046cfd0-3eb5-4550-bd25-b85ba63c177f"
        },
        "item": {
          "id": "0a47c4da-0b07-404f-b5bd-5581dfbb7977",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0451ef6d-6241-40cd-80be-1c44b7404f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a6e703-2ad3-4f69-87fe-b73f5852c90d",
        "cursor": {
          "ref": "3ff2cfdc-aeeb-47b6-b6ff-1cfc49b9ccef",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "57a33dd7-59bb-4347-8eb1-4395ca3dabe2"
        },
        "item": {
          "id": "41a6e703-2ad3-4f69-87fe-b73f5852c90d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ec5ef922-381f-4e87-b73a-0f6bb6d9e1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062795ef-e926-41fd-9aad-4de8d3c11b71",
        "cursor": {
          "ref": "ccd2f8ad-2764-4f96-9b50-5468ae93fad6",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dcf32a57-1e15-4822-918c-e1e71cd06315"
        },
        "item": {
          "id": "062795ef-e926-41fd-9aad-4de8d3c11b71",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "caf06c54-eac6-4355-91d3-c08380085b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadf09be-7047-476e-8e5d-258674c4820d",
        "cursor": {
          "ref": "d9a09bce-9056-4af1-b406-96257780ba95",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "68a2fc77-1f2c-40ab-bcba-a1819237f917"
        },
        "item": {
          "id": "eadf09be-7047-476e-8e5d-258674c4820d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "00902087-a4b3-4a6a-8882-937ce8eb6db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f891d71c-a43d-41f0-a988-7bd911e44e20",
        "cursor": {
          "ref": "ab9a0fc0-00b9-43b3-a811-81dc6db3f912",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3a726d6a-20c6-4b94-a5dc-7da555d1ee9b"
        },
        "item": {
          "id": "f891d71c-a43d-41f0-a988-7bd911e44e20",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "15491e0f-4626-4276-b63c-319de55a28ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1195710-7ebb-4f81-9e26-3fb5f3c989b6",
        "cursor": {
          "ref": "2cd34312-bb89-462b-8342-ebbf6dcdad23",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0e0b6f05-95ec-46b4-bbae-5ce49a571a92"
        },
        "item": {
          "id": "f1195710-7ebb-4f81-9e26-3fb5f3c989b6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc6be937-0699-4c89-b0ce-b8d776eca399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db79536d-ca83-4686-a433-c7956ec379a4",
        "cursor": {
          "ref": "2ce3d9ab-70fd-4189-bd61-f4e9732e1248",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0d5ea5ee-d8c5-4bba-9b2d-4c65f491a233"
        },
        "item": {
          "id": "db79536d-ca83-4686-a433-c7956ec379a4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "98a87223-68dd-4a83-b031-5dd1c7ca9e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2939968-5179-48ca-89a8-f85ec77402db",
        "cursor": {
          "ref": "0d8bedd4-7bfe-4cea-ac12-098fa7daa0d0",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4de3cae6-acef-4cef-be89-0906315df0e4"
        },
        "item": {
          "id": "b2939968-5179-48ca-89a8-f85ec77402db",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c8b0bb37-5536-432a-a94e-ffff59671c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58578620-19ca-4d26-8b96-dbbbf29b4800",
        "cursor": {
          "ref": "12ef12c1-5bb1-4abb-a817-0626a0b4142b",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "baf10fa1-f20f-496b-b17b-98eaa3f63811"
        },
        "item": {
          "id": "58578620-19ca-4d26-8b96-dbbbf29b4800",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dddfd388-84b7-468a-8a3e-62dd5fb215af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39637752-be91-4e87-a2ff-978daee1a937",
        "cursor": {
          "ref": "8e0f1f6c-2519-4f62-89aa-6ff3c678b611",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b4dd2540-7b39-4089-9031-0d3d4de44125"
        },
        "item": {
          "id": "39637752-be91-4e87-a2ff-978daee1a937",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "23b83ce2-f92b-4d8c-9c70-aedb046bece0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb611085-13ed-4aa4-9a60-14f96b1b48f4",
        "cursor": {
          "ref": "02ec7764-fab8-481a-b1cd-1d859c5dd324",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e663b0fd-b8b1-4d7f-8ef6-ec9f8393a490"
        },
        "item": {
          "id": "cb611085-13ed-4aa4-9a60-14f96b1b48f4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3e5a5c5e-8c8a-4a52-bf57-a5bfa6318467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f05014-2b95-4176-8d88-7e8836246cd6",
        "cursor": {
          "ref": "ded75c09-f54a-4c7d-9da8-e64fa5a2adba",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eb908a1c-abea-4294-86f6-56d2aae68618"
        },
        "item": {
          "id": "62f05014-2b95-4176-8d88-7e8836246cd6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9dd34efb-3568-463e-8561-e187706f1863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2027ae4c-d6ca-4cb2-93c8-cfb0d99f9ddd",
        "cursor": {
          "ref": "04a83041-3dfb-44df-b029-63966a631d5b",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a821281c-7b31-4d18-9365-a204c86f0af2"
        },
        "item": {
          "id": "2027ae4c-d6ca-4cb2-93c8-cfb0d99f9ddd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "654fbc2e-3192-411c-bd08-b02ac34ebfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b344dd98-6394-43d6-b270-bf79a6bfaff2",
        "cursor": {
          "ref": "3b67777a-011a-43ac-a8f7-178dd2aa17d5",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a3eb85bb-937b-4312-bfad-ebfe2c2cfc57"
        },
        "item": {
          "id": "b344dd98-6394-43d6-b270-bf79a6bfaff2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "38f4696a-12d7-4804-a9c3-080ccc0f5752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d289a44e-5164-426b-bdee-c17959b3fa0a",
        "cursor": {
          "ref": "46130e5d-3ee0-4ef5-ace5-800f170938cf",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "31f6bb9c-2ee0-48db-9e6b-b05fcf473463"
        },
        "item": {
          "id": "d289a44e-5164-426b-bdee-c17959b3fa0a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c334ea0e-ddce-4fc5-b7dd-929cd217ea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448e02c-3e36-4297-973d-a3bb145ea8af",
        "cursor": {
          "ref": "14b37f1f-eb94-40ac-bec9-e4f7d5a66988",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "26cbd129-8ad0-45ea-b712-10d361f72d10"
        },
        "item": {
          "id": "1448e02c-3e36-4297-973d-a3bb145ea8af",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "504a8cd2-b68c-4061-9b1a-774e10760254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc3dc92-5ea7-48e7-9780-a106f9bfb018",
        "cursor": {
          "ref": "2088826f-80f6-4247-8ec7-15ffda226f0b",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "53639860-5377-41cf-9b3c-42af8362b47e"
        },
        "item": {
          "id": "5dc3dc92-5ea7-48e7-9780-a106f9bfb018",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c006f70e-68db-4e47-a76b-7c856f37ceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649b3e14-aab5-4948-97be-ee2dd27a5d22",
        "cursor": {
          "ref": "ee16fa90-8f18-4572-83d9-fbb131d4b8c0",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a171132f-b387-47f3-8865-3f0e3832150e"
        },
        "item": {
          "id": "649b3e14-aab5-4948-97be-ee2dd27a5d22",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "49e59732-04cf-4355-b5c2-b0fbac692d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abdd37a-56d3-48b1-b96c-37bd366942c3",
        "cursor": {
          "ref": "9a3020f1-37fc-4236-bc19-8e8779b2d7b6",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ca6ccec4-5b06-4341-82b3-12bd64011346"
        },
        "item": {
          "id": "4abdd37a-56d3-48b1-b96c-37bd366942c3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "34800bb3-97f8-4e97-b3c1-888b34cbaff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbfef50-c6aa-44d3-980a-4c614a7485c1",
        "cursor": {
          "ref": "3a416998-87f5-4a4a-b663-0fc7e17b48b4",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0dd70bea-1ac7-4678-82b1-7e2952b14b51"
        },
        "item": {
          "id": "6cbfef50-c6aa-44d3-980a-4c614a7485c1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2eb7e69c-1fed-4e65-aaa4-ccf3c1dd4178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85facdba-01f1-4288-877d-a2648a7b9d97",
        "cursor": {
          "ref": "6cb868cc-b6e9-4123-aaf3-6cb662031f55",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "93b4f2ed-2289-43c8-aa2f-7c12f7e29d13"
        },
        "item": {
          "id": "85facdba-01f1-4288-877d-a2648a7b9d97",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0c0ecf43-0c65-4c05-b0ed-8efa699656bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebe8c43-96cc-4afc-9198-de196b0995da",
        "cursor": {
          "ref": "9bf23619-6d05-4dc8-a55c-b6a45afe1e73",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4d282d45-b0c3-4beb-994b-b7248fc5f4b6"
        },
        "item": {
          "id": "1ebe8c43-96cc-4afc-9198-de196b0995da",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2b06cdd4-ebf0-426f-851b-d88697b56710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef92958-473f-4167-b803-6e61e33b5819",
        "cursor": {
          "ref": "bab8ff98-d3dd-4d79-a8a6-a5be86a1923a",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ed1005d3-4ed1-4058-ae43-007f4b7e7c9f"
        },
        "item": {
          "id": "9ef92958-473f-4167-b803-6e61e33b5819",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f4a6228a-48ee-4039-96f5-57d05681587d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9eef09f-6a8c-4a25-8cc7-2220dbaa7176",
        "cursor": {
          "ref": "4e064fd6-6766-46df-a0ab-779c53aa7a5a",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "87a57cba-4e97-4b63-ac2b-14903bbee5ff"
        },
        "item": {
          "id": "b9eef09f-6a8c-4a25-8cc7-2220dbaa7176",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ff3d7424-9d32-4a9b-8467-557277c6beae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff18969-53ba-4a68-a4aa-0c13f56e7985",
        "cursor": {
          "ref": "06097683-1557-49ff-b3ad-a868799efdbf",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9009cbfb-6d1b-4a57-84a3-92b6a751e2ff"
        },
        "item": {
          "id": "eff18969-53ba-4a68-a4aa-0c13f56e7985",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9a8964ef-68b8-480b-b8d2-0f896958bcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55df789-f6cd-4f20-9c26-8d9216ef6a4b",
        "cursor": {
          "ref": "be7adbeb-a5f8-4fc0-9987-b3d873209720",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "507b3edf-0aa0-4fde-965e-803f5c4f7879"
        },
        "item": {
          "id": "f55df789-f6cd-4f20-9c26-8d9216ef6a4b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1c711317-1aed-4cd8-aa62-877f9c1a0184",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b179823-8008-4e7b-9f4a-eff3c0a02f38",
        "cursor": {
          "ref": "0282fda6-d794-4aef-b610-47f9818e02a4",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ede80b65-df65-4b30-af07-b3dd8732e390"
        },
        "item": {
          "id": "3b179823-8008-4e7b-9f4a-eff3c0a02f38",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "35d13b22-da58-4e62-989a-15a4b00b5c19",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 350,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56dd28a-246d-455c-89c0-9043696a2bcb",
        "cursor": {
          "ref": "6aada83f-c28d-4f1f-b41c-7a8c80c3b37f",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9138712b-0b8a-4af6-9d82-5b941abb0a77"
        },
        "item": {
          "id": "f56dd28a-246d-455c-89c0-9043696a2bcb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "350cd682-1046-46b2-b83c-519faa6fd0ab",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8b4c57-c516-4e3f-bee0-094bb4c12512",
        "cursor": {
          "ref": "17d03faf-b312-44b4-96f7-3925acd190aa",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e23adf01-70c4-487e-89f6-82e757662a8d"
        },
        "item": {
          "id": "2c8b4c57-c516-4e3f-bee0-094bb4c12512",
          "name": "credentials_verify"
        },
        "response": {
          "id": "54fbe177-4421-46e2-b54f-36c52c3662b3",
          "status": "OK",
          "code": 200,
          "responseTime": 2068,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14b7d05-3b3c-4d5e-a4f1-c9d2bb05a165",
        "cursor": {
          "ref": "9ca1f817-4466-4c8e-8397-a1043bfbee82",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "38f33b4e-8d99-47b2-acfb-1dc7ab2b6f6c"
        },
        "item": {
          "id": "c14b7d05-3b3c-4d5e-a4f1-c9d2bb05a165",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "45cea4de-c526-4c80-a6ab-973a74ecda23",
          "status": "OK",
          "code": 200,
          "responseTime": 1820,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "62751f10-4cb5-456c-b6ee-e60f2322c75f",
        "cursor": {
          "ref": "73a1407d-a525-4009-ad34-7499a2e8091e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5c060a7-fd50-4844-88e8-61e1fef92088"
        },
        "item": {
          "id": "62751f10-4cb5-456c-b6ee-e60f2322c75f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a68be7f7-85a1-4a65-b954-8bfe46c4b968",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62751f10-4cb5-456c-b6ee-e60f2322c75f",
        "cursor": {
          "ref": "73a1407d-a525-4009-ad34-7499a2e8091e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5c060a7-fd50-4844-88e8-61e1fef92088"
        },
        "item": {
          "id": "62751f10-4cb5-456c-b6ee-e60f2322c75f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a68be7f7-85a1-4a65-b954-8bfe46c4b968",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62751f10-4cb5-456c-b6ee-e60f2322c75f",
        "cursor": {
          "ref": "73a1407d-a525-4009-ad34-7499a2e8091e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5c060a7-fd50-4844-88e8-61e1fef92088"
        },
        "item": {
          "id": "62751f10-4cb5-456c-b6ee-e60f2322c75f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a68be7f7-85a1-4a65-b954-8bfe46c4b968",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88345cc-7ec4-498a-bf5f-10bb7453ef13",
        "cursor": {
          "ref": "a1f70279-e170-4f50-9175-d7fbc84414bc",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4cdb73f9-dc4c-46ed-91a3-3136fe44a528"
        },
        "item": {
          "id": "d88345cc-7ec4-498a-bf5f-10bb7453ef13",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "51659018-2408-40f2-b0bb-5a1e733c1af0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 358,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361d169b-d6b0-4e5e-b3d2-c589cae22041",
        "cursor": {
          "ref": "25a01cc6-e0d4-4d02-97bd-1395996879f6",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7b32d059-1328-44e7-b42e-e2673ae59431"
        },
        "item": {
          "id": "361d169b-d6b0-4e5e-b3d2-c589cae22041",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d0adfd5b-6b76-479c-a416-0efb4c61881c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361d169b-d6b0-4e5e-b3d2-c589cae22041",
        "cursor": {
          "ref": "25a01cc6-e0d4-4d02-97bd-1395996879f6",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7b32d059-1328-44e7-b42e-e2673ae59431"
        },
        "item": {
          "id": "361d169b-d6b0-4e5e-b3d2-c589cae22041",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d0adfd5b-6b76-479c-a416-0efb4c61881c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fd8e20-a41b-4897-976a-13f80f178829",
        "cursor": {
          "ref": "83aa2b32-d32f-43df-894a-1eddf99189f9",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9b52986e-7bfb-4c63-b4b2-031204cf6ea0"
        },
        "item": {
          "id": "26fd8e20-a41b-4897-976a-13f80f178829",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "29c49560-41e9-48ae-bf24-7d9ea31deb2a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 547,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9eb1b8-89d5-4fde-a5c7-98fe5852b681",
        "cursor": {
          "ref": "d27ad90b-efc9-416e-b959-f89716598404",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fc20424e-b353-4964-b015-770f01785acf"
        },
        "item": {
          "id": "ee9eb1b8-89d5-4fde-a5c7-98fe5852b681",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "871cfa75-3e28-4f4d-89a2-5b925999c6db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9eb1b8-89d5-4fde-a5c7-98fe5852b681",
        "cursor": {
          "ref": "d27ad90b-efc9-416e-b959-f89716598404",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fc20424e-b353-4964-b015-770f01785acf"
        },
        "item": {
          "id": "ee9eb1b8-89d5-4fde-a5c7-98fe5852b681",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "871cfa75-3e28-4f4d-89a2-5b925999c6db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfa95fd-57de-4e4c-b4e2-3dc77643db1a",
        "cursor": {
          "ref": "079afc5e-a706-4133-9163-af9bf5f3cd17",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fe732b88-228b-4808-8194-3bc2bb70b4ee"
        },
        "item": {
          "id": "3cfa95fd-57de-4e4c-b4e2-3dc77643db1a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9f107dbc-d71d-4c04-a953-ab2486acc2ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 559,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}