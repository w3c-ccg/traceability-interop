{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e6ee22a4-2dff-4e98-be6c-5b0f6d200509",
        "name": "Clear Cache",
        "item": [
          {
            "id": "07f5bbbb-4483-4f60-96ba-2f76f5612193",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "caaf8de5-9728-43ba-8094-890967215946",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d57dff9e-cdb0-443a-b583-dfcd20f5a633"
                }
              }
            ]
          },
          {
            "id": "38895166-4cd5-437d-8420-5398dfa7d047",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7205fc4b-0f9d-433f-bba3-91bde69a5061",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "befd18d0-aaf7-4bab-9e94-d9581739188b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "72a32e33-888b-48ac-9306-d2a4dcaab6bb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "214d36ff-0802-4304-9183-8ffd86796947",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6b1dd1d-fd8c-4885-a3a2-f195f07d6fd5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f388b5ce-e792-4ff2-b6b3-20ed51f9ac0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dff9c5fd-f32e-4cf0-bc14-c34a6cb5118c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91f533d2-9b26-4b4c-946e-f9da95cb832b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9cae90b-1dd3-477c-a054-57c648bbd666"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51954290-42c7-49dd-b073-a026beda91bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "126057a1-3c93-45fa-b2d5-98c55c4d85c4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e50dbf2d-ba4d-40e0-80d3-9a65884fa3c6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b0a1ceb9-a2a8-48fc-8f6e-72b1d3d95a4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4492c95-61f6-4002-a670-19303748ee8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c68879d-49d0-42e9-a6dd-f5802f1efb41"
            }
          }
        ]
      },
      {
        "id": "a4d2ce61-3457-4340-950f-86e9e917773e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3330c20d-3786-40d1-b94a-3572c2252859",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11c12d46-1a04-48b2-90a5-d51b8ef167bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a8e6e751-1d76-4d7d-af90-373a98e943f4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25997f7-bd44-44b4-855d-3a7aff5afa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "834dfe80-e44c-4db1-8725-343adf3d9b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaa404b-e306-46ca-907b-0ccb6408bf2e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c1c3d3-34ad-4c7b-ae7f-d4c066780067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "003c894f-4979-4756-8c2f-15c14d75f402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e24d6c-af0a-4343-857c-118ee6f18abf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e33a80-dcdc-4802-8eea-f1d72f3528be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61a3fb98-ab86-4063-8c01-4929edf38bda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7aca88d-e52f-4626-9223-59ba093f0cfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d23ba350-affb-4ecc-b8d2-6e9bd5133643",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0bbb04-3a16-4ba3-8fd5-ce99e8202d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac265444-b243-4d48-90ca-4049848186c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a62b4d-404f-4454-a005-adf856d87067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1b9a0b-d7c2-43de-9408-acd91bf29ef5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b894ca3c-0673-4ecb-bc98-22d1f56a8a6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d37b3580-22a0-44de-a7fe-ab048d0da750",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "527570e2-8e38-4a67-83de-255b89a21945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5f7e4d7e-170a-4023-bffb-58e58715fb1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "200f93de-5618-4274-a745-69c00ed584cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "64c88ae9-43b4-4dc4-88a9-9ba4d4ccd52a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ed45173-d6f8-413b-8090-c3eb64d7cd83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7fe8524-a48e-41a2-bea9-822a8ab0a43f"
            }
          }
        ]
      },
      {
        "id": "6242264b-5325-4030-850b-40f7728e94a7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1d95dfea-44dc-4511-a53b-4c483ec9234b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2356d3a9-d0bc-49a5-98e4-b7e0b383d3c0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "043d6031-7386-430e-afaf-af1506d2fff4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c45243b-1675-409a-b0c4-d98a2c315ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef01a507-028a-4a58-88e0-95520b5da99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182b2174-f413-4fea-b3a5-91456bedbc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0de0556-bdbe-4a8a-bd7c-7a6e3e46dcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aae798-83b1-48fb-ac68-bf97253433ab",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd41658-52a6-47ab-b59e-943dd251d8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b4e06e-04d2-405e-8e94-92a8ae5889a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5631b89-8316-48f4-b2fc-ab6ff7ecdf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d478e892-7d43-45dc-aed0-c183e719c480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a960c702-3a98-4d07-aff5-a69de3682ec5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50fbceb-c882-41b5-b115-2d6fb9f7bf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e349617-f043-42f9-89b4-f945920b2971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e6a225-8ce0-4307-ad1b-609619177f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ec40c28-dfb3-4b57-818c-442ce1636e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eb23f3-f997-444c-9319-7908953b71c3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766f6093-221b-4ad8-bd3f-68f6870813bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983a0802-7950-498d-af85-8fb8725ae391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af659ce-7d0e-4ceb-affb-9a58dbfa4c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50b09096-488a-47bc-bdee-43a71494f9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b599d-e4ec-4a9e-b3e4-0ab02eda0934",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecde1bc8-77b1-4519-aa0e-d6e03f4a8014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa14023-9ee2-46e5-bb2a-2a274d28d39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a147bf39-ae3d-4f96-86d9-dc0fc85bdcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4abeda45-aaf0-42a7-b6bf-fd675557bd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c690f36c-7e28-4583-b21a-856a59d95a26",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ce5e35-afdb-46c8-be89-96e801248ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72e5366-fff6-4168-9f41-c2a29dab96fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b09c47-add1-447f-a73f-6237bf99b339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6928fdc4-fef4-45ce-8ff2-fa00fe85c7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d99bc86-4443-4a9b-9389-5cf228ed1c8a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6ba380-4d78-4906-aaaa-ee66bebdbbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf758303-5549-43f7-9f00-fd1a1b2e8fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987b44bb-2654-4aef-a69e-c6e160ad8d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d3ba9f0-57ba-4c7a-adf8-1f9c56b0efe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c82ffa-fcfb-4f01-9454-1440d7875e59",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895e55a5-1082-4a54-8ea1-034598292ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccc9607-d4aa-4477-aee1-53ef936c3656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a8f140-4c3f-44ab-9dc1-516a6756c3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44342dc7-8c4b-4e29-ad67-c2e689ce8bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a88e165-e5ca-450c-9786-872daf9564d7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28376ce0-7c09-4cdd-a762-1d71b4b55a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bf1bb5-5342-4c3f-a7ba-2c48ec3c68f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d306d0a-3d70-45d8-9be3-2441f6cb6260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "676195b7-f1c3-4929-9570-78d0ee0351de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9065fa-1888-4319-a3da-413393b98991",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0450a78d-3bd5-48cc-adbb-bbe93f330ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20d1a32-9e77-4765-834e-e0892fc0771a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8215e6e-c270-42ae-900b-672c6c9921d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4830d1a8-84b7-48ac-9600-174a40dab134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56418a4c-94b3-4f67-93e6-c7fc267eb195",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf81702-9c7f-43c5-916f-57baf5078c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6423fb-e506-46c2-aac9-c7b65a766a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98154884-a0dd-43d8-a7b1-6d6f97fddaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7521ba9-395b-42ef-b436-a8c2f072f208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6a3030-ba72-4102-968b-e14236920c80",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7860033d-25ad-4253-991a-877f3b2e9411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b339f4a0-cf40-485f-b384-8bf5d5810e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6fb0b1-e27d-4359-9f6a-bade04f0abdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f508021-b18b-43b1-beb8-da5c8a9fc9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef31571-ce08-4bbe-8e48-d3ddda437827",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1f15ee-cea9-4a49-8260-17c857cf2710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af4a684-5456-4941-b81b-29cb9d69cc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d2bb08-e59c-496f-92a9-59fd94e7075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4834fd9-fe22-4b6c-8bb4-4d98f26e2015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8117de0-5f75-41b8-81a5-3953e1748f57",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5f864d-2568-4c2f-bf5e-d17593011d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df9b8b3-d8d9-40db-89a0-898f332aec9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e2bd6c-c6b1-4215-bc8e-8f544bf7c254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6be279ea-3f49-474b-9f44-5a6afa971c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f536dca-5bb0-48be-ac2c-4d86fabda350",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9b8064-8bee-43af-bf99-7eb1b9ac5d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88329af3-7574-4c5a-a5c1-bbd8eb1da69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ac9f13-2f0d-4278-9e4c-ef2ec59cdeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f851f4e6-c940-4178-a4a1-23a8a93e658c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb3e787-3e2a-4b87-aaaa-b57e2b999858",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98917a41-2938-4111-984b-3ef1615d097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec9fc71-07bd-490f-ad0b-c1887f5a7a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e7da83-3dc8-4944-ade7-e8e102eb4492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42327c00-e611-42aa-a894-f46f9c10ee2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320aad92-94f8-442a-82e7-612eb6d82b41",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce80b010-ccba-44f7-81e4-7b7e7d1c0f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0781ef7-0a61-4804-9a19-39c74831a7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bad79b-2eec-48d5-9751-916036bfc4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13a2172c-fca2-4c24-a891-90b124be977e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f988077a-0118-4e98-9cae-3dbf55ae2eb3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180855ea-74b0-4d74-b8fd-bc2014a53e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1bc7e9-6983-4b9b-bfe6-e67d6dbd3996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0e5b10-ccb4-4c8a-938c-8406bf1d8cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bfed64-5972-4c89-8395-c12e9d325267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc762e3-cf01-47f2-90c3-b8d7ed04580b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0d9d83-52d9-45ab-95e4-9ad9696101a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df02179f-46b7-4f9c-a2f8-c7faede35ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eb22e0-6537-4252-9bf4-869413f03a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fcdeff-bc4d-4e34-9f82-35bfc41ac28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a08d37a-71f1-4e63-aeca-c4d9d1162ea5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b4896-882e-4b0c-b873-2e9353866b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f3a6b9-ed75-41ea-8649-5f5b86aaf175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5403fd04-ec94-4e3e-b7c1-796f4a84c615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63b080bb-5c6c-47c3-96aa-352ff5274e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805dd19e-96e1-4b6a-953a-3c920a4f8c68",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa458e9a-812b-4e6a-82e0-48311e441664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0405fb76-abe0-4e5e-a377-8795550d756c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9afceb-0ea9-4b02-ad52-fc854ddc14f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bbcb05-3025-4f45-b267-829a8a17c971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42f9727-e690-495b-bf69-1994f4748948",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29da42e-817a-44bd-a065-47a7f37e1afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c4d365-7273-4148-9c53-6352cd1d97fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00fe0fc-efef-4da3-a516-9cba40537aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f21c28e4-88ac-4553-9ba7-43aff1de370b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bfffd1-02c8-4c5d-9fe5-839ba74f4075",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5495d738-246b-4924-a73d-96c5c8965bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b6ecf0-2877-4b74-8479-9a1c353066b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa4deb7-e650-44a2-8ac1-787e6f404cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0409fdbb-e4b3-441f-aeda-42b7f50428b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bfd2e9-3096-48b2-a42b-a1d69f27e159",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bac97a-d435-4341-b01b-6a4533276b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b16d218-c833-4933-a581-294ae974552d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffd2a6f-5b1f-444f-9c7e-a767160b482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2c4769-57b5-45fd-9607-4da44d78970c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fb678d-f9d4-476c-b32c-d78b3c27c1df",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a49da1d-58ec-4249-ba1b-03e6fa5c9459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d19c741-69b6-4614-91ca-0c427ce2cf89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e435ae-ceb4-4ca9-aebb-4b6fdc66acc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b35354-a45c-4d96-ab3e-c0d50b74cc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c37d76f-ddd0-44b4-849c-8c955baa4eba",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efe9531-03e8-4495-900b-f8bc4eb4c31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae4a7e6-5278-4abd-b338-f1b798bd9e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9182b64-c745-4eea-a728-eaefa3f8b72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c32950-04fe-4530-bfa4-9f8926c75635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75baed35-a486-49ca-896b-1ef6d3c2bfe7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65282ea0-e3c5-480b-8a40-72d36954b409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187620ec-1e82-4869-95ae-0fdb1494fde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f7edba-59c7-485b-b0a1-4afcf81698e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6be5f5-1df0-4232-97df-bf7ea886bb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee50088-acf4-4ce8-bcac-630aef909aea",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf5046-cda4-4867-ba03-e4f4dc178811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa6d363-cb79-493a-81af-8489bd738fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f466c01f-30f4-4ae7-b685-7a0d3c9fba8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40bfbf3-9d50-4010-9c1c-a259ee8acbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00bc332-9c14-4b97-930f-e5ad981b024d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0105efb4-fe05-4471-93eb-be867ab1717b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb64016e-4871-47ea-9c9e-e9f598607277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f2ac6e-4116-4969-951f-9a949bf49140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a40ecfa-93ca-40e6-9942-4bb3dc42c502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a447183-841c-4696-bbf7-e369a9303a21",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1c7ce0-49b1-4250-8263-58ac7c80c482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07395dc9-aaca-4b03-b55f-4e1497f0afce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2779d3fa-6df6-42a2-be44-a9d31d2cf651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3f7025-a05a-45bd-91c7-3d43c869b58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c1b5c5-86f9-40e3-bec6-c5680c2c8842",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df20516e-6e68-42fe-9d82-ae2873f2d93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f936a1ff-d68c-4058-87cc-df34d7d34d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fa3d94-ac24-4fe3-82dd-6ae98558516e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e10065f6-6394-4f57-8107-9869255ebb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcfdadb-e5ca-474c-b5d9-22c0741aa703",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a971d2e-4a59-4b6c-9199-cff167deaceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c3f25a-6162-4af9-9469-649c45369952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e18f319-42c9-422d-94d9-190b233f0c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3b2bc8-6e92-4d5f-b9e5-5aa1395c3093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8ddda4-6c17-4737-ac7e-fbdbff6d8ece",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfee7a67-fc05-433a-8981-6727c63a9cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e958cdb1-8b89-4c16-b879-c42e9ecc9ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e829d2-7091-49f2-bcc0-8feb63231f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90434a2f-9cab-4388-b562-b64449d8b934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284c64f3-8afa-457a-9322-5b01b5105200",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b16ee-e0ee-4813-a808-fcfbde2ebd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4883184d-9f97-4502-994b-e57acc37f6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c46d2e7-e760-4c91-a012-bb330e6cae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab43d01-db81-45b7-831b-e32d5dea2bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2238f8-6cd4-48e9-b2c9-ccc41275a0ee",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2e8605-9be9-4359-b48d-3b58466ebab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434a9582-9247-4619-8a4a-cc4f0d931efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101df8bf-3f41-4d4e-af78-4d2f0eaa352e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "73652a5c-5155-486a-ab95-e028548e6a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfadd26-995f-48e8-9341-858e9dfaeed3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6d5d66-2fab-4887-ac58-83a2bb54e2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b690e7c4-dcd4-405e-b70d-44b7127b324c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f259a3-21ab-4f9b-bc16-1573925565f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d06e0f7a-5535-470e-bf52-4ab91aec93d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74beffee-5a64-4963-adb6-6100e6363c90",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b826a2d-eef7-468d-afe6-fdb30e22f5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21746208-8796-40f0-9bd1-b3477962c7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16025ca4-cf54-4cf9-8c22-7cff83bedd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7238e5-8e43-4f06-99aa-2c5f0a9b0123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697c2a6d-36e9-4097-9307-9f5315a079cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9426c25-81fb-41fb-a8f1-f427161b4b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a785464-9ad9-4eec-9b00-424f95bd2620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0ef0ec-76e6-451b-8fd7-5ffa1c188bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a941578-91d0-4051-b114-cd2337514adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60df92d0-3757-46f7-959e-e9fe7548c4eb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec92524-dc97-4543-aacc-084771745e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4703c5b-4074-4c96-ad70-0aa8d6eada60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955c6983-4b7b-44f4-b253-cc2b1cd82ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e91fbb75-0cb3-4e6f-9589-be44c43b4ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973f4632-0274-412f-b0dd-6034aabf32d4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f61e86-577f-483f-83a1-68e1d717698b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4a5358-b062-4e10-a1bb-60e9f74f766e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ad6f2f-5dbd-49fe-bf5f-b1312d880712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e59d6118-392f-46a5-a912-32d2cb69c940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30f0f62-795e-4d4b-b42f-b85d5972bc84",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0487c54f-c402-43a8-b18f-efb2971e37c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8678da-6c2a-428f-b2be-e019e9686c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2290664-ff29-4f58-be62-4499562e8e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16fca83f-a7c2-4ee2-9563-1fad606367c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52158650-8458-4faf-8523-69439a409bc4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d97a5d8-9c67-4c99-a541-e3c3fcd41ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1de8a4-0f5d-4ed6-bd04-d3c431dc1267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5757add-b00e-45b4-8cd7-53ee3a4abac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cbcac4-7818-42d7-ac20-add1d8b941ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedefb8b-617a-40a6-b69d-0ff4813802a0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2263b234-2b1d-4dbe-87f8-b4caea0401e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1742c9af-12d9-436f-88b3-86b244a5e7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc62b69-d602-49fc-bed8-cb71b6447bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0b989f-7ca2-4525-b1af-1b618b4a8612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56afd77-dc3a-4018-b4b8-5e46fb2e244c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d733f01-5e9e-4be4-8a61-21b959f7e8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e443188-9879-492c-aa5e-0c53c4219a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626bd6bb-f494-423f-bb3a-2408460b5cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee58b6fc-b033-43da-81ae-bb5a90b185b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee717ae4-62cb-4002-9df5-f99b247a0b3a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff591ba-d640-40e1-8d66-3e0b52cee5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1080afe-30b4-4524-91b0-20cba2ecf4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938bf33c-7553-46e8-89ac-e7ea2ed195c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6e65df-01da-4e4c-8a63-794981ca52d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6d68f7-1abe-4dfc-8cf0-821b5f61a948",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b5ca40-9314-4677-9601-ff8f47650b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9934588f-84da-4e61-b13e-eebc28aee15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e0b762-7bb0-4499-ac60-bf270eb98bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ad1f58-c0c8-47b6-9019-ef7a99c04cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a87bd89-c58c-40d3-8a82-d596e4368f4c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925ae13c-c9d8-4c98-b199-d72630298415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054f728f-5d2f-49c0-8513-403538e203bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dfdbd2-a3fb-4c0b-8972-9d844a28b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83fe1ec1-a890-4108-8539-0c3c03fc751d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9399acaa-2330-40be-b9f3-a482a9a64a5b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d48a0ea-2750-49f9-9a5d-4bbda91417bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26757977-3a99-4f27-b6f8-75aba3efdec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41498cb-895e-4b56-a88b-8cedf1c68466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f155e3b-ef57-41e1-a5e8-958b7dac6e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809ad533-d261-48c6-9065-99cc776b6ca4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3068fbe4-9adf-40fa-989d-97c09ecb4997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4594f4-ea46-4b1e-b183-94403db67a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3185ce40-e975-440c-95aa-46b58d534d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e800e171-07e0-4177-9cdb-cb7280080fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6465375-9684-43de-bf1b-666edc590b2f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e37643f-f08d-4256-b482-6b3a058b7b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db705fc-cce4-4c19-8cb4-88d025db828d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2296f97-dd97-4779-9a8f-b463ea7eab82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9781939-f54d-4bfc-a3ea-ad14e7279dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61da38a2-088f-4f50-a525-cabf20c24a2f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a40f5e-7669-4798-8934-d5028eb99ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32192e77-2270-46f0-a0e3-172567076a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d323354-2936-4bf0-b33e-59d7097aa6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b019abd6-c3ba-4e09-ac58-d20bba7c9888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb851bb3-c364-4703-b3c3-838f061170cf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2073c817-66cf-4f8d-86db-417207206ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1881bdf6-8deb-46f8-9d37-832efe7d596d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3abf2a-8690-4291-b002-3dcf8116495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "769b5e0e-e120-45af-80aa-c659797054d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3aa7c21-290e-46bb-8ec7-0263cf901abf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e0db92-6f21-4c83-a7e1-3024414788cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b61ae3-24f4-425e-ac27-437756e266c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74566b7-eb5b-4058-83f4-e322a413e5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee934671-8a4d-4fa1-83c6-cf7266dfa838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8bfe2f-4baf-444b-9a16-cdf51211bcbe",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68a4517-3ed1-4db9-8344-0e82f685c8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5c8ad0-6cf4-4967-b57c-9999a4b8df68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134c57d0-29cb-4ecb-af66-93d007c413c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccfd460-6984-4850-9aa9-069d3a6bb365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a4abb5-a005-436a-bc33-d85fb9e28d83",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f14388e-bf40-4bb5-a225-5e68ffbc25a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e53570-8df4-4d7e-855a-3b0869eb33db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b884b4b4-9523-4e57-b9b6-f28e5686758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "794f95e7-54b8-498e-ac6d-c25bd204321e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273edce0-e4db-4a53-8d7c-d9dbeafac570",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013b3153-94fc-4112-abe7-e3bdb90e1ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e148b0b-fce1-44be-a214-06ed6250ff7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5d4a2a-ea45-4683-913c-96a4f1de3104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f1f621-d2e2-49f9-a8be-1b565365d9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210dd433-1b96-4636-a06d-8a260997d26f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23226e9-1977-4b40-a0af-20d9885e8fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25930e66-178c-4b10-a595-ef9fa0b886bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e3716e-786d-40e6-b193-70ed05642a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec31fa68-515d-4c8b-bb53-d657a33c853a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613f2ed7-24b3-49a0-ab00-241914d7405c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c6f5db-5138-48c2-a6d4-0d422f78c9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be0ce7d-4f5d-4001-bc39-e4f9bc789b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d50951-0a3a-432e-9c2d-7763369f6f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0694a470-ef2c-4b23-ac7a-bfdbbcce2e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be81918-2d06-4390-aa02-643458bf39ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faf192c-0a83-4f39-bd86-606c363bf821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223ea733-3b56-4cf7-9c89-ac0ea39fe738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd72e3b-ab9a-467c-8d59-0efff11aa429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebf3952-021f-4fea-a14b-6ab5fbe1bbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1c1848-2d15-4358-9946-3a880cdfc964",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e7ea4a-548e-4c20-8122-18ad28a8a77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a896967-72c3-47bb-b4af-9520ebe10103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d83131-7cc4-4567-9531-0b15c7cdfd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "786f46ba-0252-42c6-b2d1-860ca94e973c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee06adec-6345-4ad8-84a1-5a0ef4a1d71e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4b501b-a39f-403a-9886-501a26a6e0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4ec1da-f6c6-4b33-857f-15de88be62b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12833bbd-c2af-4cb5-921a-1fa29a4bbf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcebf409-2e2f-4e80-ab99-ba175f304373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba77600-adce-47ee-806f-81894c72315a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d88af6-5e21-4854-973a-2c5a866de785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e449a9-fcec-466a-9176-6d692ca7b420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ed525c-abc3-4a71-b297-61ccf46ef6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb8f984-a92a-4d65-b9f2-c7e273c8b5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9788538-3a81-4bf0-9e14-13b633057167",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22758352-699c-45e0-9d4f-e73eea15424a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525b9ced-d708-4a03-8525-87f657abe3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fb6293-c0b0-410e-8c41-6daf50ec5cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e0db3c-a2f8-4212-940a-9a42fb5f9ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3e2930-0aa7-4652-9a8b-555a13d8ca32",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e58dfc3-4f3d-4eab-80b1-d95c15752d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4b75b2-3c7c-4da4-bd5e-1a1b66657b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957d167a-8bf5-4abd-a4f2-8dccd5ac35da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20aae57c-0c06-4f0a-a387-710500ea631c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3479cc98-0434-446a-a12f-00788db08fb5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8183ab64-6686-49f0-9718-175509d7f215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fbe228-3045-41f6-93e9-6a2f1d2ffaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d18747-699e-4654-bcc9-c2cc5881a04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47947016-3974-4b90-97ef-4195d93bd68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8771b4b8-57ab-4e0a-96b4-10631ccda1fb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050b0d4c-3b14-4eb6-aa7e-54347fcbad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b53613-1053-45b1-87be-4682b453e981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298d0c71-9bf9-49ef-a77c-afc1bbd1605e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30315ce6-1a4c-4e78-aff6-754100fbb7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3f5ca0-18e7-4764-9aff-f08d6c7fbf10",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc25e99f-e049-4cfc-b92b-a5cc05c9249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7960a5d4-b891-4fc7-b7f9-1c02aa80128c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31f5513-21f6-443c-ad22-69aff8c0ea41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be3a620a-f8ce-426f-acc5-d1c18b9c8804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fd4fb0-9ea7-486c-8aa7-b97aabcfae17",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a091ffd4-9c2d-4e27-a711-c06709aabadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f851cde-3551-48de-9400-96a046406233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6d8331-e234-4e9e-b8a5-24cf67f92e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "adf614a0-5d07-484b-b709-45db47eb18fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affea46f-06a1-4dd2-a61f-43531b72b1ad",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87443a7-a63d-46ce-b3e9-82bcc20db9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059c599a-e636-4816-ae19-6aafc5ae7104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a394fb-47b1-47f6-8646-3540aa31350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b090fa-86e9-4801-9623-9cb49cac1097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d081bbfa-6854-440a-a76f-efa62e96beea",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cf33a8-c64d-4d43-a6a7-2b4c15d5e77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1a473a-d7b8-4b88-8f88-d0c44719ae30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07365d73-4b7c-4339-b055-8f0d19fe77ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a5a2a4-c4d8-49ec-b0f1-bbdf317df506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedf4c60-d52a-4b23-8f44-ff6402676863",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413823d7-eceb-459e-a65d-f21f7b3d3aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68835468-92a0-4b1d-aed4-4f3c6582e494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d704af9-dc8b-4db1-8a74-cf148bc3ada3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8764beb0-0419-4ab8-a4d2-a5273923c7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca02a4a8-11bc-4a8d-9fc5-d873348ab367",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef4e9cf-d2a0-4779-9290-35a34ef6b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f6e272-4d2f-4bcd-b1fc-79da206f4a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36493f1b-645f-4065-8573-92fb7c67282e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc1cd6f-bc85-4993-9327-5fc9c8f3e507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668b5ed0-2c59-4953-ae5f-61223be8585b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aec26a-fb00-48de-b9be-eab1ec03d493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e1007e-f5e2-458b-8acb-0f59085be0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965edbbb-f025-475d-b18f-4dce0a7e8856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ebad76-02b7-4235-8157-51d78a555904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f1fdc5-91d1-45d4-9d4e-53211396e586",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5552c94-44e8-4d19-8ea4-ec3894e6042b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383ceaa2-0ab7-4156-b8b8-63698e8a8ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ac4fe3-50d1-43b3-809d-1f1bd57459cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7add078-7d76-4990-ba18-31a9278dff06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96d7e58-3b63-43bf-b732-d9a56dd4dd2f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b636ba-ab62-4b7c-8763-8a9821215dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa89808b-f0c5-466e-be8c-58ea5c8915b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee00cd1-fba7-4f9a-8a53-653e20dafd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98481b97-d1db-476e-bfac-7d60fe4ab964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf204fe-5e3e-4060-9ea7-f104e53b6bb1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebb29c5-2d6e-44d0-b3f1-61484e8414fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6d905f-ccca-467d-9086-8a150348d76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70086b5-e9f6-4e21-b69f-193e81c7981e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d784b9c6-4173-4885-9e2e-51ec26c692b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68103dc8-50e0-4daf-b3d1-2a44a7e69bee",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cd1c06-61ae-4bdc-a844-caaeabc2fe00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40405980-9839-4b19-ac9e-70e64db9eb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57632bab-952c-4b12-b5f8-02cff9bbcee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea97fed7-89f1-47f8-9aea-fe2370eb299f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b4b166-cac6-4727-af67-baf7f2f998bf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76980871-b91e-486d-991c-dcceb43172aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05b7560-a095-4502-913d-50f43620ba07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df4742a-433a-4202-af59-798e9f769d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdaf879-3497-44c3-857a-1339bf54b40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1690ecdf-fdf8-4469-81a4-59ff5c2516b4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e47e0dd-66a5-4ca1-9e9a-753a22f44488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f42fd32-f75b-4fdd-a48a-2bff2b2c4403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b758c40e-b86f-4488-98ed-8fbd940c1793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76aada7b-41c5-44ea-86a8-af51e135a270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5670b6d9-4389-4059-9071-da6bdf7a647e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d795ec9a-3970-4124-b66d-f89d4fb98b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc9d419-4dab-4220-9125-da1149008439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17aed53e-c1fb-41e7-8104-675f1a236b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbce322-4f85-4435-87b1-05f72dbaaf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bd4ba3-25b5-487d-a5e1-b21555007374",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa50f81e-a21d-4ab5-bd80-c96e0a70ee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31301cbc-6b89-44d3-aad1-a75c99ed3f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673925ff-4b6f-440d-8ead-dd536e582d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec45b3b-b673-463f-a00e-6f487c427353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ce0afe-34ad-465e-ad1b-97e7269a9f54",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29b9859-1570-4677-a975-0157f2a3117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd007160-4401-4433-b657-9428ff731367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d863e8-4602-46d6-ab0d-9dedf4a87c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72aecbb2-650e-4822-b9e8-f850990c0363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768ed61f-5122-4a2c-96c0-9e76aca956d5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09378d3a-f7e2-4985-a4d5-038460ce17ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0922d236-40d9-43e1-9afe-f2e74c45ea33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2bb660-fd5d-462b-8fae-8ed57af4e82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3578bd00-3ac4-4cc5-8c67-6eccefc0dc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aacc448-23a7-4706-be1b-886ab28f0b9d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c654afbc-7f9c-40c3-a648-bc34bd4c71ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc823c86-35c4-4062-bea9-469614d98cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d899a603-cf1f-497b-bb94-506c89f7be18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdac1c0b-8242-4848-b726-27de1339072c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469cb9b3-e2b3-48bd-b3ce-78d6021d0e21",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c2abe7-b4c3-49ca-b281-822bcc652830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1529c67-2de6-486d-bb71-d7554467719f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205985f3-e1e1-4d9f-9f6b-fbd06e29230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "865a788d-bac7-497e-aa06-861f27fcbba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c2a4df-877b-46c4-8bab-4d18c66653b8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983519ca-a19f-4f8d-a3ad-d72ba1c82479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fde2f89-c7a4-4d5c-8fe4-b1347118becd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702d397c-a268-4216-8e11-737cf29f485f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7673bce5-22f5-43af-84b9-cba1bc38fc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2f62e2-a2b5-410d-bbd2-e672513edf6a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8d35d6-9374-4d18-a552-261b1322156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57583fdc-0151-421f-8307-c3cfc97ded35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114af0e9-28d4-4763-a8e3-842b37260e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1475f8-eee0-4626-9c97-f31e4898f423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a8ae5c-2d80-4ee4-ab58-7323896bfc00",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add71b33-f14c-41e3-ada5-cd57a883f325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94a2c3b-1a54-4cbf-8f38-0d49ee56d6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c91861-8b58-4292-8eaf-1b2173f1cba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce16832-4c4f-411c-9d3e-969b22f1b703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f08297-087f-47a8-845e-742fe0d19417",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23732d66-7595-4c54-bdb2-e2cbd2c7296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcfc018-1825-4b7a-a505-9995a32f169f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d776c67b-60ed-44e3-83a1-3fe452aabd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36ecc6b4-d2ab-4ba5-be8c-8d3fc834fd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2996b4a6-fb6f-4262-aa92-8fe4fca8eae0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b16094c-2be2-41b3-9a47-2445f46ea195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79bb890-54d5-48c2-9a3a-04346b8687fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2611cf-7dfb-41e0-9df6-ba766782651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "549d07d9-cdd7-4ce7-9df5-60ed1d239aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4ed19c-7368-4b1c-9551-c09e640d5e61",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af232a2a-93fd-429d-9831-c95f6cac842d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfe5bfa-3d43-4fb3-bab8-be6196473f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cd470f-8709-45ce-be04-0d12fe34ed1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3709eba-a1e4-4391-8910-f0328f0eed45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8760e1-9a3b-4d69-b24c-6b8fb876d4a1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b44d7a2-3277-4309-9925-bc936911e2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a22f32f-89df-4044-a2eb-b5490e8e83ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f096fe5-76eb-48ac-861b-764fd0720b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd881fdd-7c19-43a6-bbe9-a68b1b0c8960"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4bd3ad1c-88f6-40f2-bac5-b104e066555d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13cb84a4-f440-4ff5-b37a-85a335eb2a6d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e47f968-f023-4266-9dd2-010ad45ce015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9da43d49-e138-4437-8533-8cc1612d1ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79eeb01c-af52-47a4-859d-1d096d4041ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0827e58-70fa-4a9e-ad6c-3797ad7d32b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ffecd1c-8b48-4db1-b74d-c1a5c85234e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d046f47-e3e9-44f3-b0bf-4d3d19917d37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b4309e9-3ddd-41b9-a5ff-a6c571dabc21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7287e638-e156-4106-922f-d8bd95d8a185"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34194a62-1adb-44bf-b3b2-0abb92d9fc7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbc526a3-2519-494d-83e7-555feafd2774"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4fccb33-f9a5-4b0b-9177-826342c78949",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb5a6189-2257-4065-9ae7-4134942ba182"
                }
              }
            ]
          },
          {
            "id": "b375f878-f711-45f2-be05-1916549eede4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9424656-5805-4c6b-ad2b-aa3cbb827c34",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e44a51e3-3c55-4124-9f8b-ddf7ccd33143",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0d98a7-8cb2-49d3-b7b2-e6dc116b647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "736d44f4-eecd-48a1-8962-c7ff7c5004cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7500c44-2e85-407c-9972-298694c7f632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02ef98f-c0e5-407d-8658-baa4a5545b9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c859d940-4139-48cc-8186-ba2dfd918cbd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89d6f610-6440-4857-9581-2cb4da41f4c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8d41db0-7d20-4a5b-9497-4bd040bc6172"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51a3b5b6-9539-4800-ac76-9c2b74774d7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d87a5b4-2c6e-4f62-a152-c05fe5a56715"
                    }
                  }
                ]
              },
              {
                "id": "d33bd010-94d8-4c5a-8a72-9be07bcf1f99",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2699287-d3c2-44f8-b36a-fd455c88cc49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "800ecf67-98d6-4fbb-b146-41d279028667"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02a227f6-aa46-4f71-96a1-3bf9371fa366",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ba3d5e5-5d10-45e8-9527-c182605216e3"
                    }
                  }
                ]
              },
              {
                "id": "7a09000c-51b0-407c-b156-84608b09a0be",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "237cda14-5f45-4719-a9aa-0432126b9e16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bc23e71-2d3b-4325-8925-be8619562171"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24b683e1-bfd6-4717-8286-38ec2f318ce9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8dc5e41a-2cf4-46a5-8209-5bc707b73619"
                    }
                  }
                ]
              },
              {
                "id": "9474bb0d-1331-4156-9c72-581b9a63e466",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8349b26d-b3fd-4c5f-9cb9-f44d5a84f197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3086733-9f43-486a-b8d6-9b5d5900bddb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47b2e56b-5314-4d2b-b745-12719fae880d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6bf6c8c0-1976-4f4d-b612-90baffddda09"
                    }
                  }
                ]
              },
              {
                "id": "bb5a041d-725c-4e33-b9e9-a70425490fd8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ed21a0d-d532-4a3c-bf59-76f1b365a612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e3070b9-7d3e-46af-8f99-76b95ec4e9de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a3344bd-2d4d-431f-8b76-5677d374a927",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4fd74fcd-c852-40d5-98e8-8473f6b15206"
                    }
                  }
                ]
              },
              {
                "id": "3e440fbf-8883-44b2-ba29-0af0ed312869",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcffa426-aed6-4c81-8f96-00223fce26e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd7261d3-5b35-45f3-a87e-4554cf7d15f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff1bd32a-4991-40bc-81c2-93c4205f2205",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "565f4e0a-0303-477a-bb0f-3fb3c2a5ea63"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f2bf380-c813-488c-be69-af553d2074fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "826e10cc-f9a1-4a50-8ef7-ee781a311029"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4030bd7-0cd4-4391-b624-8b6017401f65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "067a1091-7ea3-4db4-bb9d-916a02e7108b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b8d944e-d759-47e8-9a64-fdf2426a4f96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "204ee612-d4e1-45f5-9a99-f55b7ffcf7c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16d19327-2e14-4c2f-83d8-a5b0c821746e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bc4ccc4-8660-46bb-9a85-fa2671445190"
            }
          }
        ]
      },
      {
        "id": "467caa81-00d8-42a1-acb7-2b2aee7c3c47",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1be7684c-5dbc-4a97-bbf8-5b7b65f96f3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76a324a3-c591-4e7f-9930-d9efaad9de32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0052c9d-a5bd-484a-9701-5caf1f9aaced",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36326ea-aea2-48c5-9305-feda326b8d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cbfe9b-8628-4c2e-b8bd-5709f84aff0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9738da69-ec7f-47cc-9f63-ac2ce9a28b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d58b8c2f-b4a9-43f9-851c-b9752d52c23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bf2809-9c94-4301-ab46-0b0605e21ee0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62db3d3-eccf-487d-b4d7-e9b1694eb25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe64202-42d0-4c89-b199-4cf70b50785b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bf2491-abbf-4d6b-9ebb-73fb9d29e1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0cf90c-ac8b-415b-9e3e-1fb12db465ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fcd06c-5f22-43c2-8601-12fb49992b27",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6d17b6-b7ae-4b0d-96d1-950f2b0b85a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df3d61a-e7b6-4858-8026-db4c0a8ff6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a607cc21-885f-43a0-a643-e1d87db657c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ec42d5-e711-4187-b0de-8a80f5fa12d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5bd407-0fb8-47cc-8cb0-1ee42821a40e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59166a6f-1739-454e-9815-6ca6e7cb23cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e675c44-a7aa-4c7f-9f7a-fcd9a55a67f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfec5a10-e356-43e8-bef8-e22fed47ceb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d89c951b-5868-41d3-a50b-314ee6bfda5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7339ac1c-2fd8-44a0-832b-f179ac76c3bb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34577678-002d-4b65-84a5-247af887aea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee90e0f0-f93e-48d9-ae06-ffdb89d79245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacb0dba-627b-4a9c-89c5-a8d1a1abca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfcf376-03ad-42c8-a47b-d3f648805f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d01e5ce-55ce-49dc-b40d-8dcc38a09d74",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d85482-166e-4bda-9133-beab375c96c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eab781a-7079-4c61-97be-1a971e8207cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf277ae6-8f6d-49b8-9d2a-e7c7fd0731a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75af8168-93a9-4fa1-9282-0e7bda8acc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33775555-fba1-4776-a588-1c51da95cb1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6e70fa-498b-42c7-92e0-5f4b0089f036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3edf73-6163-4173-819f-c0389c889af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8417f494-0ff5-4ace-be1c-a774174ce1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3374aa3e-52be-430a-8efd-a1958becad64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26c95ba-73df-4b0d-85dd-b1c6376ff7be",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d273a7-491b-4c3d-9cdb-f959e51bdf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1853cee5-5b40-428a-9322-525a4b64cfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37c921a-5a54-4f0a-be1f-b297c1ad3bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c62ac8a7-ae4d-461a-a48a-6f855552992b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cd1c66-a41a-4a40-9026-7a98067e9ee1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1f88a4-c95c-4f01-8fbb-7f8e604897e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4386e37-2198-4254-9ab2-6e0453df41c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e768aa-134b-4f0a-9fa9-dd8d94363849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd954094-2dea-4567-8148-d91a30389921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e08f3d2-2741-4b64-bd16-c54933fcacdc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c971b27-922d-4337-8791-8f5e65b4d263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f131f21-67fc-4b66-95bf-a7ab84b4dc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a17dad1-dfff-4db1-9b5e-bb23c5281b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d98ffa-6b06-4e8d-8793-8a6ca2c175e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272d6ecd-5e04-4579-91ce-1c5ddb6fb930",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71747d06-d583-46da-b623-7eae462dd24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdcd6d6-98b3-40c3-8019-2efa29c7a3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76d35c4-0bfb-41fd-b3cc-75d1f5d67954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3fda4b-754c-42a9-bf75-ec1fbb7cc3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c97ad6-d60e-46c7-b86d-033fa41e64a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b11d05a-29a5-49a4-92aa-cd8687aaa048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeae6c7-eb28-45d1-ab19-7de29378eddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d13b6-bab5-4e83-a4dd-7ca0717840c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0de209eb-aa3d-46ae-9cc8-2d32306d6ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23422343-d03b-481a-aa3c-7ee1c880bf6f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b4447a-5637-4f29-aab6-187120540300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d15951-d957-4ad8-a9f8-9bf15126e2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1614f5-9c5f-4cf5-93b2-a92b668efb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bf27a8-2616-4b86-95a7-cbe053a88afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c632496e-17a5-48a5-946a-b68fd82571b3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5be2cd-aa63-4a2d-b146-5c066af9636f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34585591-938f-4abf-8ccf-e31fb5a29be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b2a854-032e-4334-b1cb-6268fa56a6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db66779-5fd9-490d-9d3b-cb6964494be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9db8bb6-451b-4cb4-bab1-e8ff5a80b3bc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f6d4aa-34bc-4028-bc66-c6d19e703727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d952d0-7cb4-4a1f-bb90-f835e13c28f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18293fa-becf-4358-bbcd-cedcb1862914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0948763-0eb7-48b5-9b7a-fed7a4a6e609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405ea5fa-c121-40de-875d-34b8ed9ba6a0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c21a28-24ea-45c9-aedf-ca623c1fce3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ec679d-ebfa-404f-a0a5-7b6dd5c0be12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f8a16d-2640-43be-8067-a719e76d39ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c2a14c-e0b6-4181-8a75-57f83003535d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06cac4e-d0a3-489b-be98-24b304ca40e4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee95735-e0b8-4a3d-ba1f-4c743e3dfccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208c2282-7ef6-4f4a-938b-146830fac9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a524c2-c675-48f9-a56b-d9fca5a2a2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbc8f89-e0c3-4d0d-ac97-f475bb401bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e273ae6-fdc3-4244-81b9-bdfa3779666e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de638c0-aaf2-41c3-9b21-010f05fb51cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2b74c9-9472-4c42-b2cc-0b10a8b2ad6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd6e573-2842-406e-ade4-5d1e05c9c50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba6ab9e-daba-4fea-b50b-1cae60f6396b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe91787c-c9c2-4982-a285-8deb9e81aff2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de106bdf-ddc3-454e-a3b1-2fb9475d0882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787e42f3-ed6c-4fa9-9690-c16df911e5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50ac8b0-2c48-4995-a59d-e8d8803b7aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c1a609-a2e2-48e5-bf2e-891f79d4f9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e45d38-2d61-406a-9fc2-71a8e8200ca2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2f59b8-bf89-4ce0-993b-2b61dff8ba5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd9cc81-5b12-4bb6-abe1-4c8cb5c3f07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40c1c16-1abb-4d39-aaab-dbaeea344710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8927f6-3ee0-40d1-a7cb-489382dbc09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb49392-a140-46cd-bd09-ede15ea52567",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9900c27-d3b6-4629-819a-03deabb1bc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cce885-5015-421b-9c99-d3aa560f9566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cce40dc-dd43-4ea1-8eb4-35d92041d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a2dc48-0c35-4778-af46-bd75a5e3f0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71c3093-e302-46c7-8a21-9170cd73100a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92d6d2b-7975-4200-96fe-dfd6a31f1ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca27e2fd-e693-47b6-98f9-b896f2ac8885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e792f-0106-4a95-b2ef-a1870ea14da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17112445-31f2-413f-8c12-8ae770611e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f596332f-f7a7-407d-95c6-48b0487960c1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a92d69-22ed-4dfa-9720-a00e3d6b67fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3780c5-4d6c-40d7-977b-d8cd9facab7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8031b0f-897d-4133-9220-51a795bf5025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccce1c11-2495-4af2-9f79-cdae33fae846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39303946-3079-47a9-b741-26115bbd00ac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36597ce3-8e08-482a-bbb6-7db9fe5f5505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7935305-994c-4527-91bd-dd792df8bfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d9ee7c-40c2-4690-aa8e-bc8a22f86cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48323f36-5ec8-46a6-b41e-9a8bfb318d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c108e7c-b54e-46ed-ae89-de5607a220e2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6306ca-f361-4d1f-9853-5390b0037459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b037e33-2579-4732-a3ac-d138dcf33e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5e6a53-817e-4933-a58f-696413523e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0b508a-10d9-4963-a1ec-a7e7f0e6a4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6442042-0d0b-44a8-b1df-f3cca17b3df2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7faf906-a0b8-474e-b46c-6e1944d23c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03666fa0-5cc3-4738-8ec3-9ed333e1ac8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736ce6f6-1e0d-4d5c-8038-6d7b962ec0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a2e626-c80b-4d9c-b4e8-959961ac159c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ac8426-a982-4d53-beea-51abfe69f747",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ba93b0-0064-49a0-bb7f-fd709c196857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae50b37-f2a6-45ae-ac6e-b9c91caf2acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6308fdbf-6f50-4b18-8925-198c95926a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc70affa-3ecd-43eb-be21-e53f3a8ff5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865604ca-7560-412a-9fca-6e6f90fc3fa1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c8caa6-c167-4585-8be2-1556a1ed7ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fa2227-fa34-4d31-ba24-e7a30ac21659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d8b857-a281-430d-8f30-460b02249dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64449d7a-2a57-4dfe-93a2-a23d96f6e63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30493bec-158b-4d26-bb61-043073a0ed61",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf46a4fc-e75c-4aa2-8202-c1e47c06243b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd525396-28d5-4a88-b26e-f5bcbb49592c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62febb6-3469-4fdd-a2b2-38c1ed6998ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3605de-359b-4b10-b303-8ca9c147578b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db7e353-974c-44f5-9b49-6c69d279d17a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4833cc1-cd04-41da-aef6-24b25d44a1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797649a0-9409-418d-a3d9-5abd79b4eb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a1c848-e1d5-4504-af34-94a9db01647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "185684e5-4d6b-4463-be31-aada2bfd1507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb601cf1-e716-43e8-971f-c52b2d539143",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fc5188-fceb-4630-b8ce-f248554bc888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4737fc8f-e35a-4137-a402-eaf823c8f714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7904691-664d-469f-9869-f12d03f525a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e5e118-3526-42bf-9de9-e17fdba7520d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8471bf-838a-4df5-9416-411f497cf795",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570de6c1-2c79-4da3-b1ae-df3203b433eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2798894-bdec-42dc-89b4-c2c7be74a257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33833746-f2da-401d-a927-bc7b7a32554e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1353c0b-cf15-45b7-aea7-d095f7f1cf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e399748-2a37-4a29-ac6f-345f4ca27f56",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e2004d-1558-403e-a6b0-19c4a54142a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c458cf82-bcc1-40fd-a9f3-3641095e84c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab05e975-43dd-4796-a3d4-4e160ee502b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8251f80f-f513-4c17-81cb-34551eceda7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308c8bdc-26e9-44f9-849b-8d4c3a54e9a8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f3774a-fac2-4403-bd68-049885c2e1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bbf497-42ea-486c-8135-71650a0a71cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5cb184-4ee2-46d7-bb40-19cfba1d2d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "812e4c01-ea03-44da-b408-c8423cacd32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1943ac44-6724-4b92-90aa-c243ccd497bd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3e4e89-ac76-4a41-96e5-d6fcec9c2f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99eebd2d-cb04-4473-ad7f-9c6ed83f35af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8c6e5c-9a8d-4358-8675-9fe238e5e33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4b66e9-71a8-47fb-9f6b-26a7ce34e877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95038ac3-56c0-4031-9423-d38f31d8e4e7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4214319-9c90-4b69-8730-5c4508f9fbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf21274-c922-4e12-be12-8b2feb714d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf8f75b-3d29-4084-9c2e-f3e7cea7b1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48aa92c-47b0-44ab-8515-a89d6eef2742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f108aec-5dca-4d35-ba92-f4d55cfd7138",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dc1f13-d277-4e6f-a89d-68ed9646aa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593d3b9b-8667-4b11-ad62-e48f8ce7d4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4990fe-fc22-481c-93cc-740cb64e8d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a22c2e3-3e85-4afe-a23c-fbbbc613a851"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86b5be5d-e7ce-44d5-810b-5a5afa06b689",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f9f72b6-1422-4dde-bec5-6a6d2382a5c4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead0abad-83c7-4146-a007-0b331482bfe8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9eae7aff-ae1f-4ead-8495-effa4b0ce55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff830b76-c9bc-440f-bb1a-efd7736143d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ef1728b-5dac-4385-be77-ae2d0d4bf8ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cbaa931-bd0d-46d6-987a-6e18e438e73b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ddd381b-abe2-4471-a1a5-df9ec66a80b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b66ed97-7590-481b-9142-42bc4a8e7930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16190da9-3b23-4be3-9e68-02c9d0ac148e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad7b7400-b235-4a63-8248-5594cf0489ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc4b142c-6979-4c4f-b20a-45f87b6e52be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd44ecfd-35da-4918-8a40-0d0d93126ffc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff3a8880-b2a7-4902-ade0-4b35a05c8fbc"
            }
          }
        ]
      },
      {
        "id": "eab813c2-11ea-4885-8a66-fed4bc6b8032",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "392ea147-ebc3-4955-a010-426a3c1837d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49138084-00c6-4180-9e16-862483cf1f8c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11183035-0e49-4fa5-a0d2-05b04c0ceb4f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfc828b-fb73-4c08-8050-d206efe5d597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae9248b-b7c3-4aee-b8e2-1cc765da670b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73993632-4e4d-43f5-ae70-e68cb6b2a07f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0517aa0a-46a5-498c-8f4b-4217ca5694eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e9a81a-b0df-48e1-aea4-973636aee616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a841a149-7176-4ed1-bc86-99a539023598",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c25883c-31c6-4a19-8b6e-36c27ce8f515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b29cd3-d16a-4a22-bce0-adecd8dac3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41887582-c867-48e2-b088-7ddd0099c8e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663dc0d4-f409-44fa-a8c9-138912e471fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335a4ce0-17b6-496b-99fe-e205e30097b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3436c773-9cee-4b7e-b045-257a4c77fd6b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d953524d-dfef-4e91-acb9-2dabd7b2b013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1349f5a-d229-4ada-9e7c-8776ac146b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8575bd1-840d-4616-b947-1b6e698a7720",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb123c8-3f7c-47a2-855a-f1bb640b0124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e289ac7c-7b17-4a55-9c64-28d7f3c26dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fafcf6-2b76-4fb8-aec8-e48e02df95c8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050938f8-f2d9-400e-82d7-80a9ce5e7f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72607ff6-e8e8-4513-b4c2-0305ca7f622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b41628-f025-466b-b95c-6fad8bb57fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2b1b21-28e4-4b66-99a3-cd57f7f7ccc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad40ceda-1fa1-4c0a-bade-aca48b36af6f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48f257d-fa53-4738-a20c-101db2a2cfba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18aac4e8-227e-4a3e-89de-88377a7fdd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c71c10-dcf0-47fb-b725-4833698e726d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677adbf3-397e-479a-ae8e-a94ab5127b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84035c63-7969-424d-9211-29065efaa44e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d909bd-2278-4932-80ee-7e92f8474dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5713b69-4b61-414d-8cb2-65d2e465aeb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8062a1bd-f967-4b25-8319-41c02310ac15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f0341f-4349-4a26-907f-849d703e8882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197b73eb-b738-4188-9d81-6972c882863c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5c8d07-2dbb-4cc7-b2f2-fb73d51bcb29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13774986-b49e-4252-b987-f0757c066033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c90b9dd-3eb3-4e26-8fbf-75e15f734040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a38046c-7bfc-4e84-b46a-f349fb93dd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e33715-8864-4e9e-88d9-31ec2f4ea2dc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9b550e-fd1f-4018-8e19-1a6300b9efca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3e4bea-5682-46b4-8883-9f2ec6498938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57f2afa-131b-4151-a1ce-80c9ccdad451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b09b40-1ae8-4132-89da-9c753808b4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdac82c-5978-4d59-8856-5ec4a1779cd4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb49449-fb91-4bd1-8e22-e129ac05bf02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceae1b58-9cb5-4612-869d-37e2c62fb05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f954f934-90d9-460a-b9cf-3840f5160af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6631d430-36e7-49a8-9752-08c6b8b2a7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990b5fed-0b82-4bd6-9eff-403f975bfd2b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab0c57e-e2d7-4484-b5a1-b39524111812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6547799-f6e0-42c8-9e94-e333d9ecbf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3d5b4d-118b-4ef9-ab60-255cdf7d10f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64981ad-3bbf-4253-bd88-47932d079c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239510a5-694c-4048-ac18-88472821f2bf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc84d9ea-5032-4e39-a85d-11277e01a374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f0af9b-79d9-4118-a851-24a336ef9bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05c4e2c-6360-4a61-a510-0503fce9a60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d621c98-30c6-4773-b0a0-9d7bc3880107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a44f623-10f7-4de4-9ecd-6b1ba8d5c4f3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e12c035-86aa-4ad7-8c42-1ebe764e6622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51945c75-f694-4267-89f5-7638f03064e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aa0197-e668-4aaa-8786-4e105741b0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8b2a9a-51b6-4fa2-abd8-a785f4921678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af225288-3cce-45d7-b637-33735978a752",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afab078-b4d5-4d67-922c-322812cb3a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b144129f-8c69-40f6-95f0-38024bafb9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fab49ae-1d34-4c2d-be7a-0f7c505f58a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a66ed3b-c3be-4cfa-967c-b20abc1caacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7af49b7-ac56-4280-8dd5-a4448431aba1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281bcb28-5641-425f-8073-b69e032d0713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbcc9ea-91f1-4e54-9dd4-6b6173c44ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2572425d-1de7-4bda-9597-16c3df0da38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a28390-d266-4918-ae27-04aeb7f9befe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69ffc0c-0529-4b96-a439-c4ad25467517",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b908bdf9-7935-47c8-93b1-8b14a9fcced2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d767e0d6-6485-4203-a7da-65e1ad69881a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd547186-e309-498d-8029-90aa621b676d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f77b0b2-40bf-425a-b800-c971b10468d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7ca52e-4b3d-4581-8ac6-21035a684d17",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8e8b7d-543a-4a23-b1c2-6a5317232652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f167ff46-bc25-4900-99fa-702905d2c958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8ae590-a64b-4315-a646-95831885a204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5763a6ab-f3af-4ac8-95a6-5ea3c6ad75ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7146d0-0f7a-4bac-8ae6-d5d0e2d43df5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1813209e-b881-477f-bb92-02e6e82c137d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35991c4-0876-408b-a005-9e44ae24c8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67356968-8cbf-4875-84c4-ce35d6a35e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b780d086-13d2-4fa3-a988-c4423d39b49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d19302-2d06-4935-8218-223d3a2d7029",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef38488-a642-47b6-a06e-ef1dcf8b6183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e71e915-148f-456b-82d9-e1ff792f6b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cbb4a7-460c-4b00-a506-14c08cb693b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d553ec3-d438-4a55-a8f0-22816835ffad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7c335a-b08f-430e-a735-9fc573d59453",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b1dd9a-a4f0-4856-923b-9ddae33bdc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d767209-95c1-482c-ae90-d557d3463d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeb7d6b-c2fe-45db-bf57-e5afecb07bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4078df-b2db-4d73-9699-fe1c6e48372c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bea175f-c9e7-4d92-9db4-f0f0fc5f16a9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c1869a-dd4b-4b44-8b76-836f159d1103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99945f5d-9ebb-448e-868a-2c7876322d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d465d23-928d-40e9-90c0-9ac74f5b1051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a801f312-ba80-4f5e-8780-d070bb058043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1194042-b907-4d0e-8736-1f1f18939139",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fbcd56-c9af-4431-bbc5-1a440d529f65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c444dad-0343-47ff-9051-278ae3a2b1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4a880c-f053-4947-aeff-6ba33c2b4c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55eb2da-7b5c-4ac6-ac8a-cc8b8da56de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa910180-c28d-4761-96f8-dd515101e6eb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2383b9-67ee-4d91-a1f0-bba13d0f4d75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397f876e-401b-4e2b-9f29-75986e2432e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2464b2-06a5-4966-b4cf-574458038863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b99623-625c-4b51-9df7-8155f5d1433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7cd29f-ab69-4d08-a953-5cbb29c42a42",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3d717e-9194-4aa1-9aac-9ebcbfb1b890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd3a903-d947-476b-987d-0d2b275e164d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a89e22-0292-49c0-8afc-90ce8bfef73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417b7fe1-b53e-43e2-8a12-ae84829d6ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1608c392-666b-4bf5-be15-c561b1d05899",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee63168-2b96-45ed-8d24-e96cfef9e34a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01767336-8328-4e10-9784-c67964c863c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1609eb2-c403-4758-8236-e83099f95409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340590d9-0e3c-42d4-8e30-b745e5bc4fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54245b0a-f565-442e-8366-30ed1fe649ed",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c6de72-35d9-4191-8974-29ac122a5ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40404d2-2b8a-4ec2-b230-01c9c1acead8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f4ce71-459c-4808-a3bc-226882315d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69e4b91-bc7d-48dc-a02f-7c3d1d71f39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6cc476-8c5a-4f67-8389-5a532a2c4c66",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95e33e0-81ad-4858-886e-7ee384f8a50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0ea39f-4e18-4a23-9f7b-eee7534068d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8583b0-63cc-49a5-8ea3-5b1274650474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1af398-9b2b-4f69-9c4b-a2f35f0d4ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ceba50-c829-47f7-9f8a-6e13ed7002b2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2c4879-6188-4f92-8df6-dc7e4f11b080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2c5465-cf5f-4230-acaf-1560af28ada4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8642986-c29a-403a-b762-2fa60903fe40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3b1cf4-b255-410a-bddc-2586a3b13500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cec3d6b-8097-40c6-8fd0-8655e5d10508",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86f94bc-e434-4d40-b648-4a22d7fe9a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b975d40-3c6b-44da-bdc1-fe99ce992e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5c0551-8773-459c-9962-23131f39dc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e4530e-6e97-4ac3-8362-8b9fbb053a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ed00b9-36a5-4755-93fd-122b4c467caf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5592debe-1f65-4fe3-abe4-b5d70c15b222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "330a0d94-5cc7-467e-b430-4a02bab84276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a928591-6a13-4ba1-a454-2c3cf42ed995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77a7a6d-a8c3-4704-8e1f-e643f3760fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64222ebb-f2cf-49f4-a7c8-994f28ae7e96",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b7744e-3e2c-471e-bd6f-fa34f241f36d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a86bf1-647b-4a85-81c7-4279c6e73aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dbf6ed-2943-4151-b88f-57acc86000d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be62788-3ea5-4944-a68a-4cee1bdef45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c9141b-4a24-42b5-8f2c-b90d32644cde",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3adb23-b4a4-4c88-abce-3446e781eec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c54b03b-768f-4958-b887-1137cfe4330e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371ddf7e-f96d-4b6d-9fd3-3aadfda87412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbd95f1-3dc4-4e30-83d1-e5371d4292b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6963683-f8fe-4319-9316-7f88892f7f22",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f750d2-88ab-4d8b-91d4-c677f7351d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b1cd1c-5096-4ed4-bc59-2412c4fa55a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623af457-1e93-43e5-b798-df399a33824b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be822b30-30af-4e31-937a-e69d5632fc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f298c669-a824-4ddd-a159-17ad685c35c8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0f53af-c1e5-40ba-ab2a-4a0f31f4ad1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac024c5-48c1-44fc-b3f1-31ffca3d97fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50df844-8231-4668-a627-a712508428fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d706f7dd-cac1-499b-b580-f0b9b10f8793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3bdafc-bed5-4027-a4b6-9b7e0c699a60",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f847bc6-04de-4d96-be58-5e11ce6270b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60035183-9ef4-49db-9a6b-98fd014f5dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db834c06-2180-4306-9fb9-b8a482d2c369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70f0afd-ae10-46d2-a966-3bd6fa2d1c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db81564-8fe4-4d0b-b363-6fba3a503e18",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc0ec59-186b-48e4-abfc-6210f90c9b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b7b893-4ed0-4032-8a89-e17db594d59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1451b0ec-233d-4ec4-8f23-af46f7954ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c43b5a-d8a4-4a62-b800-de16ab5c600a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae746639-102d-4268-b89d-053ef14d053c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ff28a1-8d30-4f4a-ba64-8cd3be64fd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d84304-8254-4e74-8ab5-5aaa267da824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4794fe62-fddd-49bd-aeb4-f56d54af9598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5c5284-10ce-44d2-8afa-b6a6d1f7c73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a32512a-503e-4a37-b45a-51b2766d74c2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a2613f-614f-429e-a3de-caea7fe882fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1510c94-fb93-4205-a1d5-7337a394524c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3324d1-9ac9-4ca5-972d-46c3a69d2f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a8a066-bb0e-48af-9ebe-78ac523efcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494033da-b9c0-44c8-a253-3eb76305a1bf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435032de-75a4-4756-ae42-a4a1b4cc22e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c013fa-75c4-484f-8f3f-bf7cda6464bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f236793c-2ef5-48cb-8d64-1a055655cbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173d0297-8f24-47f2-908f-fc49708c8fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bda10ec-eef3-4691-a25d-15a03b7412cb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fc2312-5dd7-414f-9d17-250ff7dd8f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15c71a7-2ca3-4842-b048-98e014dbf2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f514c69-0da9-4e71-85ce-bde5a951b721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabb52f8-7811-4ffa-9ac3-23c231c95773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e89837-d889-460e-b765-406a4e122bea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404166c3-75b8-43de-8b01-a967bc0dc19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8745be-1129-4adb-954d-c20c1642a1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1833adf-a805-4313-93bf-89efcffb5319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bb398d-f820-4094-9de3-254d4be342e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a627e6-3e88-42f3-8304-81ceafe3614e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c973fcf1-6f91-4bb2-a8f8-7ce7f2b11c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be452ab-6f2b-490a-9ec1-cd6c6a221bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359d9a11-bbd6-4ce6-a269-84fb46f12904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2e55ad-1f39-4adf-96b0-3810bfc683aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85909b3e-c46c-4148-b424-40910487e9e7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecc4526-b69a-4f02-9830-ca4cb5cb2174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9e0fd7-0198-47ad-bb60-e6374fa9fbe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5624f10-6b2a-4d8a-bb1e-a4d4bc030ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b49954-a140-4174-b8bd-c638c4e07eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6356c5-233c-4ea6-83b6-cc32342686fc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd86d585-f84d-42ae-9f55-bb6840c0fe24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea82d416-f79d-474f-a016-4f95a0b53d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc8bdef-9a49-42d2-9773-c5cdffdceb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028722a0-b0bd-46ed-b721-b720592f67b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c002bd1-b04d-4d01-92e6-64ff108e5e91",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ec36d7-9376-423b-9fef-491e5dde1393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6544882c-62ad-48bf-a6b5-ca972b0f815d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283d62ca-cae4-49ce-8c6f-0f24b2c40270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7d9be2-3497-43c4-8c97-743d5e829c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafb5ec6-66e9-41ec-88b6-2945768b9150",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537b3702-bd32-4b7c-8460-b30561ae63fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b962cf3e-c680-415c-840a-034a88c98b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9152a6-d872-4913-9197-8438d6e977ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8434a7-3017-430d-82fb-1a64c1ad71c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbc7352-f8ea-4208-9132-7788f0c09afd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c912f3-67c4-4999-9e1a-ab89f5583e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a28a13b-cdd5-4a08-9b85-7cd58e2fa486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa4418a-f835-49dd-a2fb-7aac65e625cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5572da99-1aa6-4b69-8011-30d3e54973a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ddb44f-f850-4dcf-a6ff-58203247c48c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4333c7-8d65-4497-b322-c79d01e7b42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4403904e-c280-4b6f-b872-3436b13be2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c012b5ae-0c4a-448f-bef9-8edd8dd4e4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0512b8d9-f79b-41cc-8583-f553c77b8361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875ab3f6-fe47-46a5-a1dd-2c5bd5515358",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874ce4af-5ad6-49d0-bd1e-9a8abb897381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ee6966-5890-44e2-8e5c-e147982b2c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc98f73c-6185-4394-add1-ae9e3c320013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70025d8-0de2-46ae-a120-d3df6d5f1f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbe9a27-6f27-46da-8e1b-74119472822b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36334d0-9e06-4e38-962e-33f333f2bd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a1d657-02a9-41e7-8c8c-9125ab5d6af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b24029-5294-4e07-aa51-06ed4099977a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9496e74a-b234-4f86-8bff-57069709a5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d54f68-3263-406a-9ec6-0c1e8bd1e468",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c2923c-bb37-40a2-aefd-8bf32ef5facc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffb48a3-2925-409f-b1ac-d9cdfb6110fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7b6a8d-221a-4e7a-8294-f40dc4fa9fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf28f075-bd9e-4b0d-bf26-aaeb52d93ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57a1831-1dc9-4d0f-bb91-96e0ece6c687",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2435eb-2692-44b3-98fe-bf3fd576c63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af13feb9-865d-4eb8-b2a9-bf6552bba389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79e5803-6fcb-4c3e-9d1c-a96b2e324cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2454590-dc13-42e3-b04b-c59f6f2dba89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95f041c-6cdb-4abc-a769-3411baf11f3f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff2872a-84fb-482f-9dcc-209c90572f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbf735f-50f4-4d44-b828-b6fa36192407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f238fa2a-3b76-4fa5-a400-03f58427e170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917abbe4-2bab-4c69-ac89-ec6e97408831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9025c86f-1fa9-4785-8d77-6231650b0d3a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61b7199-753f-4460-8a21-aba5ab134957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbc6c1f-c7af-4a40-9043-13b01da495a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b0405-3cba-4096-ad68-147f9568b8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6f5ef9-c161-44c5-aea0-c9f7bb36844d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e721ec-e3b4-41d2-8bb2-c40c5aec5d54",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff86171-35d6-485a-aa26-3c154cf1d0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75310d38-f518-45ab-984a-066991addc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115e4d87-5639-4e8a-b15e-f935bed09810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254d3a19-fafc-45c1-b455-823cee8d8343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53ee51c-e631-4416-885f-f40b51a9b6d9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4974b3-7981-45ab-8dbb-d289fa5ee82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2472882-8bbf-4a13-b07b-fd28cd3e6624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86556ada-3e04-4d85-ad6a-b44bc9082545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63af186-3587-4f84-baf4-4b049d3d9490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30c7a22-ca62-48a5-8e5d-b10b47960df8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203479a1-028e-4d48-997a-7199a73317ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8349ce-7131-486d-980c-9c3a0a4ba300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dff30b-9ddf-4fde-a8f5-a098c51d83d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc13233a-4dcd-4096-9f00-4ee9735f7b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bde727-6217-49b8-9f94-742c8edcfa99",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26233854-d7a0-4603-8127-3caea3a53dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b37d916-d4d7-462a-91a6-2e76f42f78fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c85459-4799-42e7-af56-0008fcd54f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d7dbff-80a5-4606-8256-cb45bc173e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32fba5e-1767-462c-98a9-a8a34e272865",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adffe50e-1af9-4832-b15a-80cd4035cc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0916b1fc-d4d7-4bc6-89cb-e92ff9c9d308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b321c62d-7c8a-4559-81eb-90d5f569bd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3386e2ad-7afd-4b31-b7d6-128e8175b5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63846d39-9813-4820-b787-c99701ac42d7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60723a96-789f-4e7d-a34f-aa326204f43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d30080-0330-4917-8501-3c535749316a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1db8f2-58c9-4a3d-9557-40daea975c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fd58d6-3d8a-46e5-93c2-763e271643dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001d0b35-4fcc-48b7-9622-5ac12a7f0c59",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af9855-1138-4088-8834-c3b1d1282d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68cd127-fc51-4a26-9383-36865805ac30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d2155d-7404-4869-ac12-86b4b1a8f499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584fa63d-8b7f-4ea8-a0e7-f8c01fe68031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ccb484-b9a4-4e30-864e-06c27745ee1f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1f0f5d-df17-41e4-9cf7-aa3abe66a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d8ed5d-ecbe-4173-a4a2-72b004289846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f51e9e-69bd-4247-9a3c-d4600049881a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7408e525-d2e7-4bef-8d6e-7c5ecc5342d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4659a760-c181-486d-a271-3768c74db0f3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea27864a-500a-48f1-84ea-0b56cc70a6f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6824200b-9146-45c7-87a8-325aaa8f7654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f178521e-97fb-4209-953a-c9cb0bead607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dc8b50-aee6-4239-8916-7b3fdf50aab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa3876f-0ceb-4654-bbde-c07b1cabedd1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23ee4b7-a64f-43ca-aea8-73c954fe4eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4af82d8-5a7d-46e5-b5e7-35d889ce84ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ef0ba8-3de1-4e41-a4d1-17dc1e147b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33411eb-ade2-4bcf-ad44-30d92ba94c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b891e0f1-48d7-45dc-a77e-92c5dd04db17",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32b6df8-3581-43b3-803b-32c64c75c3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d806936b-196f-4401-8d10-519c98c13047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f472968-138e-4a9d-8c73-d76537f516e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f8437d-7d05-45a8-ad95-24b29811fdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a29bf14-c7bf-4a41-ab1a-9c08b690c144",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f89345-6f73-4229-ab87-04e66e74d4bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4881a0dd-2457-48fc-ab93-20b37ba7f617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64bea15-0f79-4486-92d7-44d561ea478d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622e5e74-a597-42d4-8743-26aa798eb8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552b37b7-d50c-4028-9e62-66874d7d6e1e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14a9023-9295-46d4-a537-2e71548bc497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259c9a6c-16bc-46e3-bef4-7c2388884444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f04d6a-69a9-48c2-bfbe-0c89f5ebfaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c647adc-e2be-4084-a7e4-b045e4be6a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deda308-b57b-4e5e-932d-3d048cb6b418",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c552ce0-84f5-430d-9c83-9c8aade3f56b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7f7461-2e81-415d-9d54-a524eca7dd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49fe1c3-74e5-456f-b08f-15ed6dca0a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bb091b-c3ea-4006-9ea2-4ec84651f50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d669134d-6496-4ab0-8c73-cb95c2429f6b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aef756-81dc-40d6-9545-83926b34f2cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79d018a-41a8-47b5-8e5e-86b759d38e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4cab92-f1de-45a7-aaa8-2a250a09b658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4900ffa1-b56b-4b06-ba3f-97f10d4abb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407a4d87-f64f-4b91-a13c-f4048b84609b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28715ad1-cf1d-439e-bb21-520c5dc92f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ddd0fc1-5033-45f5-a01d-bf65e6a6ed31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d4ac99-5327-4081-93a1-45cbeeaa93fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24409938-e511-42cc-867e-7d6fd5ac5756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c301ac35-ffd7-44dc-b3fe-8261350b57d2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f613fcaf-93ad-4c22-a1c5-1580cf4f20f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77dbf4e7-a972-479a-9432-7ff2ad489bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a2dd67-0edb-4660-a2fc-d0bfe6eaceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9459bb3-6a8c-4e99-b22a-493815850e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e22098-83ed-4e72-b954-397ed6cc271a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07c1ebe-846a-49a9-8584-59f282d2370c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6ac405-746e-41cc-ad6e-8bbef3c7d6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d3f973-870e-4f6a-96b6-79c8c6d9a773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1075ae-ea9d-4934-b69d-07fa96ca75f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd13c7c-610e-44e2-b677-b96d6933770b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aafe306-9896-42a7-b5c4-cce62c1f991a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c55d06-0bb3-4e3f-99f4-a6eb75a9cf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0551cae9-aa80-45b2-9de2-99532d20f367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96485104-efcc-4d2f-877b-a61b35928ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a9e9fe-bc5d-4279-b57f-ffdc6eef472c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb5af89-5458-47f1-aec2-605da54b87fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba57802-912e-4916-8a36-0c75e2de2783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e570403f-fc76-4905-a582-8367c85b7b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e532db-5cb5-4ddd-8ec4-eaa9efc0fa4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80850517-ebd8-47bf-a675-54e56989a894",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b8d1d2-d01d-4407-a5b5-d1935a3fa602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929a569b-dac8-447a-b900-4f4f3fc6ea71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc1dac-98f4-4739-9959-c1faef1091b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f82b2eb-0623-4b5c-8118-c35acf61d8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c653f2-7220-4d55-b5aa-30010c0f3c13",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae03947b-0a5d-4e0e-be4f-8819b92bbd14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911267ad-9e7a-4a96-b003-8c74c466bee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b25651d-89e4-4625-bdfc-5e0376ec8e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df297f3-ebc7-479b-96f1-94b5f033e544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c4e221-8731-4402-84ee-5a1e13a3bc59",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d9929a-b793-44ee-b642-09de3593b104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef2031e-c1fa-4e5a-add6-33afc5e1b0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412c6cff-3ea5-4c21-a8c6-ff406fc2e26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3f290d-c683-4a51-be4e-43c68626bb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61efa89c-dccf-413f-9acb-3fe188f6b686",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d8f24a-355f-444f-b508-9951d300b5f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76981522-7b46-487c-81a8-d6e9a6d60c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aecb682-8323-48f6-af8c-eb9a0057291c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59476ffa-2241-49c3-90f8-3ab7d63d1b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdffa9ba-2318-4156-a110-846d5b6d724f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c585ab2b-1a28-477a-9a0d-ab4feb3973b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a722903-7d6e-447c-bf45-fb7703a15285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fdc0b4-0624-42a4-bd15-2d545f5e6222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518b37f6-a8c0-4ca8-b551-59bc7e9e8ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae661ec-1eb3-4822-86ba-47ecc5a011f5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f7c174-cfec-44e7-8199-6967b0228560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cbe3da9-812f-4b76-9c10-102d100baf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f919337f-31f4-4cc2-a73c-4d46e1edf51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d008689a-e4f9-4bbc-b04c-8160b3e42615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5547e2c9-05dd-4f33-af4f-524a14f129e0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c24f593-c8a0-4ac5-a1bc-918179752e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815881bc-54cc-4fa9-9da6-ae1ee55ca6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6632718e-e6b0-4f59-bb75-dace2ba0307d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29428137-45fc-4ea5-b222-9b6c7c48c1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d1e9bc-6e83-4bf1-9cef-2557bf457e31",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd68ce4-65b7-4360-8d16-a9d9b725421d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a29bb49-8143-419f-a68b-88d0e71195cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bbec1a-1a32-4091-b765-5eed7a2682e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b6ceed-df82-43ed-a9da-198c4678b576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d790db55-2512-4c52-8c34-bbe3910ed285",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7139bde2-115a-492d-813a-dda908f7f210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05947902-8047-4481-b208-60539e8ec19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a7f08e-5138-419e-bca5-d4cd816468c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536cb910-0f27-4fac-969e-44140d4e208d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7662db1e-df2e-4138-b645-bf30ca714f0e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e686dc-3634-43ce-8e4b-0fae6ec38982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a38b7e1f-59f9-4154-ad59-dccdc7799db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b06eb1-2d28-4236-adeb-45af8a9faea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eabf283-aa60-4b79-bcf7-3e77397df35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf7692d-19fd-48c1-853e-7d6b7191247a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c858eba-f494-4ba6-8d57-3364c3ce68b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e3d8af-7cfd-44ea-9db3-97198a8e32f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9e5068-0ace-4268-a92f-ed5000db3831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433df39c-dcbf-4212-b9a5-5f31943edae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391f1822-e4bd-4134-9bdd-16863d3cfe1c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfbfcbd-90cb-4490-a77a-acadf0928c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49024a5-03d0-4647-94f7-42c9b6875a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed98c976-554d-4b02-a8aa-57d59b4136bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472a78c7-9501-4afe-9a20-0d8216d7a8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba84f24-ca47-426a-a374-14d1bf98e939",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cdea9c-efbd-4954-9a4c-473dcb7b3887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9ec07f-ddd5-4087-b045-8595452e4c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9f829f-5061-46b8-b518-48763b2b0c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cc6c17-f46e-4bb6-bdd2-84b3057aac32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec77e9a-2313-46d4-8858-99da6c5b96c6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c60bd83-6399-4ef1-9925-490099988285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d831b26-b228-49a0-b2a0-5c4d0fc80d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53099d1-da0d-4429-a49f-23e65667c6c5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d857e82c-2e0e-446a-9aef-6aca22dd27a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2910264-5ecb-48d0-a83c-a7e81b0df667",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17327298-fe90-45cb-8d15-589b38d49cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cafd2bd-4a2d-4902-b66f-60dcc65058ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b896b155-cacd-490e-b7a0-2079d71df8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e0e007-1f3f-4490-a77a-e170b7c29442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76af97de-d0bb-45f3-b9b2-10ddf21e816e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d64150-5a51-4128-bf2b-bc6b7f458ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabe9d08-cbbb-4921-9d61-72d3d69d7afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ee3c48-1d6c-444f-b4bf-90bb5d3608b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b85b9b-0479-47ff-bffa-4ec73aa97a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ed6b22-50ce-4510-a262-939eece0f121",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3f1353-78f1-4561-b39c-0da0e9312379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1369bd6b-b60e-4687-a9e9-7bb09a9b0f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975e14e6-e333-4931-b01e-a1e915b8e110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae51a47-d365-4c5a-95de-912829abde6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddc9728-f70e-4e16-a812-1cc59f670147",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4ccb35-4866-4050-a439-4dbfdeac5de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d28439c-bf10-4559-bd39-29ca3428321d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2382bd-280f-4652-bc7e-bbaaea0f6082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1da3795-ea28-4707-82f7-3d021f8c6f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ddc0ab-47db-4ff9-96b1-bf41476f155c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40821b9-8f42-4f44-971f-de5b7c3c5882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1cfa6d7-4a1d-4ad7-909e-3cb4dea38130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6515bec9-c75c-4c65-957b-27cefe03dc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1423d5-4a5e-493a-b9c9-62fb62e70c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cf975a-40f1-4e3e-bed7-e24f111fbf6e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226407eb-de00-48ea-b82f-d1d7aabfb245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae0f5526-76ca-4047-a367-1c62ff041646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1596fe9-a82e-4034-afaa-f47f9592dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533ed39d-da2b-406a-b1cf-81028cef9ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dc1fd4-cf17-4ede-b5a3-5d0de4e132c8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa9f4b3-b1cd-4dde-b08c-8c3f27a7dd80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861aac86-0b4e-4fb7-9033-2b94d7767abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4431be-e2af-4617-aceb-dac04ed075ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78dbcc1-114a-46cf-b7db-fd1c0f186ca2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2802dee5-c6ac-4833-a011-cd558a54a189",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e2d1163-f386-4dd7-b706-a361d1d49a53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ab06799-6fd7-4362-9eab-fc67b7e3ff97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdc7e9c7-abc2-462e-840d-316c7abb3665"
                    }
                  }
                ]
              },
              {
                "id": "c37080b4-3ccf-4693-8637-c2cffe01538e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0052fae6-d937-436f-bed3-4825230f727d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e7249c-ed7c-45eb-a7ee-3ffb13db5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "110623ce-eb94-46f4-819c-2da636a2317a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60792edd-b35d-4dd1-a064-bf6ddb94e0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e55d0840-fa7c-4de9-8c88-90af9d32a8d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db6f7420-634e-4fd0-88d8-20d0a57b5894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13a3c22e-8aeb-4c2e-9665-1435ddbaf232"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fd97763-1e54-4f74-9135-2b9363400d99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9e33c6a-229a-4110-9385-278cc47bf0ba"
                    }
                  }
                ]
              },
              {
                "id": "d11d0395-3407-4621-9088-cbd4db154085",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "315488fe-047f-4b03-9f90-5289a1624c32",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bf1b08-191d-4f63-8b5b-1436656ec87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "06e740d7-3596-4f68-8154-59670eb2c4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63682b34-a961-4034-bb50-3c924f24751e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a3a6fa-c7ca-49a7-8e29-7667203c813a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7b9b874f-491a-4f02-8aa6-ba9ab73e997d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d59fcf4-1dbd-4f38-912e-775c11105e10",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "406b2913-0567-47ea-92cf-5653f7ecf397",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2f9e6cdb-8aa6-4b61-a58e-ccb8eeff16ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8981993-43fd-47ab-bf06-58b4191fcb2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efbd06d2-7367-4fcd-bd7c-bc1d867a7ee4"
                    }
                  }
                ]
              },
              {
                "id": "de2eb256-a8f3-44d4-9f18-e4903c5ea301",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ed57257-0967-471e-91c9-7539d002b6e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "72a6b1f8-a681-4542-880f-b424dd8c6342"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94ba58f4-1493-44bf-9c05-a19e0c557acb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6096579f-1299-4263-8b3c-b2a42fbc3d9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db281447-9e8b-4524-b130-2af69828a653",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f5bc6020-368e-4932-ac82-c2992a1710c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd1637d6-f919-40b2-bbbd-39620d3edd30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ef26e32-6f2c-4f7c-b3f4-0dddc685ab52"
            }
          }
        ]
      },
      {
        "id": "84fd5c06-fb7a-43bb-877d-e8c31128e959",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "739d742b-b12a-4f58-8824-4569e1f15669",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca5aa4be-c468-4070-b971-bf2fbcb04ce0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d7d03be-6e55-43b3-8c9e-05c624e7a0dd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8771fde-2df7-49d5-ba03-ae5fc20aef43",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a32c0f45-5562-4f84-afe6-8223850fcc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a029e86-f21d-4185-9a00-46c49c5a829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a84363f-7ff8-4d20-af62-2393242b3362"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f266813-4df8-40fd-a507-2c4aab6b6cec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "644f1306-9514-4f02-8f2a-ca83d6e66cd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad11600c-fc3b-4be7-b7be-b6131528d3b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aa613af-4e8a-4265-a495-19e5cf554199"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba75d6af-cf74-48f2-8c00-644e80113aec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b55f27cb-9f6b-4f5f-a46a-7f1cad01470e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d44aba11-4970-4b8d-8187-018c5b844fe0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "528eba13-b8de-431c-bd0b-7e5379fa0bb4"
            }
          }
        ]
      },
      {
        "id": "71303c12-e529-4996-ba2f-2a2b37d3f8dc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5679334c-840d-4b03-ace6-68aead5308b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f11a1df-8638-4ef5-a4f1-dcff3c924f39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd552082-d095-4668-aac7-2eb0c4f3ef92",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0020c5f5-5b3a-45a6-b471-6ad04b792b3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bde457c3-edba-4d9b-b3dc-1058f6e813c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b62c26a-4f88-4b71-921b-7bd6d91a1569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43b635b8-0e13-4602-80df-886ff169918e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5263ab8c-6b51-4ace-a7ea-df59a2e09692",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99947c2b-799b-45ab-8176-55327c3cc9b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ae91b50-3ea9-4e2e-8b92-9d378adcad3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "185280e1-3410-4cf5-bf0a-7c3bdb30de08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59f1536b-4c9b-4b5f-b7da-783e1ffc4a1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd69804e-e49d-45d2-8fe8-8c5f0e635e6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1639b726-d649-44c1-99f1-83cbcd81c4f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afdbcb92-10d2-40c5-b7f3-69440078c9d8"
            }
          }
        ]
      },
      {
        "id": "c8c15e73-03eb-4d48-9a5f-6c43e15ce1da",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f33c5519-eb32-480e-8df2-942b4fc346c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "636df086-b255-486e-ab88-eb5886a9de19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d38a5600-c4f1-4309-9937-ccd4ef0bd629",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43848143-2fda-4ea1-902d-0a3c308ad8ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e2ad9f4-b5e5-4b75-83d4-c92daca61de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566af7af-0da4-40c4-8d44-38ed9731b765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8c626bf-ccab-4097-87af-309232876dbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d8314fe-c250-4a05-8b55-00a5a91343b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ceafef8-faaf-4320-a8fb-f5bf6fdd3f84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33eed8ae-12d3-4470-90dc-b2c1a213e1eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "214b275f-9cc0-4367-ba23-0a4bffc26b83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a25cc70-61da-4d7a-9cee-bcd0ae8b2f13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f52d8ae-97a8-4f61-8ae6-9322481cfade"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bc0e004-1db4-4ef3-89ff-b4c61a6d913b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a29eead-02c9-4158-98f5-fd29735046ea"
            }
          }
        ]
      },
      {
        "id": "fa57986e-a0fe-4267-ba9b-e53204b0faab",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aac97ff-bd29-4cf9-9a14-f19755aa469c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a854389-ec9e-45af-a184-bf655cb4e734",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "491ca72d-ca00-49bd-ba11-919497caa553",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3a0e096-01dc-4576-ac41-960add0bcaf8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f553533f-cdec-47e4-8b75-c0749677e516",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 389.952380952381,
      "responseMin": 5,
      "responseMax": 12578,
      "responseSd": 1863.8698046070922,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724632893619,
      "completed": 1724633000130
    },
    "executions": [
      {
        "id": "07f5bbbb-4483-4f60-96ba-2f76f5612193",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5c270ad4-dd2a-4442-8b41-99bbedf056bd",
          "httpRequestId": "42a2a8d5-6d75-4be9-b8c4-d880c0ecb92c"
        },
        "item": {
          "id": "07f5bbbb-4483-4f60-96ba-2f76f5612193",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ddd4a618-509c-4bbb-a218-f90d0cedf545",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "38895166-4cd5-437d-8420-5398dfa7d047",
        "cursor": {
          "ref": "4195abe2-601a-48e7-bff3-e95f9c8cb945",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ea907b1f-ffdc-439a-a27a-02ca8886cc2f"
        },
        "item": {
          "id": "38895166-4cd5-437d-8420-5398dfa7d047",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "68f910b3-d9e9-4297-bf04-230281460cc4",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "a6b1dd1d-fd8c-4885-a3a2-f195f07d6fd5",
        "cursor": {
          "ref": "cc3c6c8c-fc39-4bbe-b901-8583d676a63c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8cd51fef-4c10-4710-9240-70a9a219ddd6"
        },
        "item": {
          "id": "a6b1dd1d-fd8c-4885-a3a2-f195f07d6fd5",
          "name": "did_json"
        },
        "response": {
          "id": "fbeaf72d-41b4-4a4b-9eee-933864afe6b9",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e6e751-1d76-4d7d-af90-373a98e943f4",
        "cursor": {
          "ref": "770d7d84-0739-4203-90cb-cb83cd1abd32",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8bc8115e-f1ed-426d-bce7-b67530d5cc90"
        },
        "item": {
          "id": "a8e6e751-1d76-4d7d-af90-373a98e943f4",
          "name": "did:invalid"
        },
        "response": {
          "id": "0f96dd0c-0031-4165-a7fe-b219f8c5b047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2034,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e6e751-1d76-4d7d-af90-373a98e943f4",
        "cursor": {
          "ref": "770d7d84-0739-4203-90cb-cb83cd1abd32",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8bc8115e-f1ed-426d-bce7-b67530d5cc90"
        },
        "item": {
          "id": "a8e6e751-1d76-4d7d-af90-373a98e943f4",
          "name": "did:invalid"
        },
        "response": {
          "id": "0f96dd0c-0031-4165-a7fe-b219f8c5b047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2034,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaa404b-e306-46ca-907b-0ccb6408bf2e",
        "cursor": {
          "ref": "84c48363-8c3c-4d0c-ab77-150c20313f68",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "586cd97a-5a15-4728-8ac3-2cf90644791d"
        },
        "item": {
          "id": "bfaa404b-e306-46ca-907b-0ccb6408bf2e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "40698a51-3505-4dd4-8bdd-0c55650a0c89",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2372,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e24d6c-af0a-4343-857c-118ee6f18abf",
        "cursor": {
          "ref": "735d1458-3653-4995-bd02-856469fb2823",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fdce3d4a-75e3-4fac-bd87-175fcfa8c82f"
        },
        "item": {
          "id": "f0e24d6c-af0a-4343-857c-118ee6f18abf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "df9c0e59-dfe5-4c7f-8979-7650e85403d7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2284,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23ba350-affb-4ecc-b8d2-6e9bd5133643",
        "cursor": {
          "ref": "4416b462-44cd-4d9a-a332-c98ef144baaa",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1d7837e8-bc4b-4904-b2ae-557b901424f7"
        },
        "item": {
          "id": "d23ba350-affb-4ecc-b8d2-6e9bd5133643",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "17477ad2-3f08-4ff6-96ee-da815c57661d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37b3580-22a0-44de-a7fe-ab048d0da750",
        "cursor": {
          "ref": "2d9b0a80-e9af-4c70-9b47-50ebcd5e6457",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c1158a24-6a90-41be-ae12-999ca257b9a5"
        },
        "item": {
          "id": "d37b3580-22a0-44de-a7fe-ab048d0da750",
          "name": "identifiers"
        },
        "response": {
          "id": "d54fc714-a838-4cfb-8748-2964619dc2ec",
          "status": "OK",
          "code": 200,
          "responseTime": 2356,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043d6031-7386-430e-afaf-af1506d2fff4",
        "cursor": {
          "ref": "77ed5a90-15e7-4642-8992-b92cd13c5103",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a714ff3a-424a-4809-a3eb-828178737d21"
        },
        "item": {
          "id": "043d6031-7386-430e-afaf-af1506d2fff4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dd544a3e-4c51-4efb-86eb-d63bb7bca267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18aae798-83b1-48fb-ac68-bf97253433ab",
        "cursor": {
          "ref": "678db5c1-a819-45a6-8c73-5893e45c700f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "45971f48-225b-44c9-aa77-bda9dc8ea245"
        },
        "item": {
          "id": "18aae798-83b1-48fb-ac68-bf97253433ab",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "86ccdbf5-8a6d-48e4-8393-a03f1a38b3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a960c702-3a98-4d07-aff5-a69de3682ec5",
        "cursor": {
          "ref": "1d752a9a-ee1a-4206-9255-d1ee73e20f92",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "719f958a-167b-4a3a-9fb5-92ab5a7488dc"
        },
        "item": {
          "id": "a960c702-3a98-4d07-aff5-a69de3682ec5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "21f1403f-14ed-44f2-8a33-bcaa20d5c3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eb23f3-f997-444c-9319-7908953b71c3",
        "cursor": {
          "ref": "f254c2a2-2e47-4f73-be01-0134931f01f7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f0da7a05-870d-4c3e-8f2c-281956596d9b"
        },
        "item": {
          "id": "e9eb23f3-f997-444c-9319-7908953b71c3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f8d5c52d-8d62-42f2-8461-b9c6ee98f8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b599d-e4ec-4a9e-b3e4-0ab02eda0934",
        "cursor": {
          "ref": "d46d6860-69cc-4a67-a2ad-e6f1ed52c141",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d331dcde-c7e4-4b2c-85d5-acd8d672ca23"
        },
        "item": {
          "id": "d33b599d-e4ec-4a9e-b3e4-0ab02eda0934",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3a24c21b-0628-466c-8111-6bb920028bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c690f36c-7e28-4583-b21a-856a59d95a26",
        "cursor": {
          "ref": "92b453c4-f6ea-4c6a-9606-471d23c0b4ab",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6cab9d93-e110-484a-9853-e2f491f6d863"
        },
        "item": {
          "id": "c690f36c-7e28-4583-b21a-856a59d95a26",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "56ca2771-8dfa-474e-a963-094b051aff6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d99bc86-4443-4a9b-9389-5cf228ed1c8a",
        "cursor": {
          "ref": "75662de9-c290-4e5f-aa4d-ac06f5e0cd5a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8a568951-a3e0-4997-bf3d-3b3c8edf04af"
        },
        "item": {
          "id": "5d99bc86-4443-4a9b-9389-5cf228ed1c8a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "14d91991-d1c0-4147-a5d9-39017de589a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c82ffa-fcfb-4f01-9454-1440d7875e59",
        "cursor": {
          "ref": "72fe4f14-57eb-46a9-8d0b-cba4f36f4e34",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1b4db3c4-6fae-4631-babe-64114b6bfa61"
        },
        "item": {
          "id": "44c82ffa-fcfb-4f01-9454-1440d7875e59",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8a809625-c8b7-4402-a0ab-bc4f39944c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a88e165-e5ca-450c-9786-872daf9564d7",
        "cursor": {
          "ref": "753a960b-9917-4e93-ba43-e9697042ef6d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b774c05c-75b6-4aeb-8bf8-1c5b004cb346"
        },
        "item": {
          "id": "9a88e165-e5ca-450c-9786-872daf9564d7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5c9e470d-622e-4134-9629-1f8c597b289d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9065fa-1888-4319-a3da-413393b98991",
        "cursor": {
          "ref": "206efd34-e525-4f7b-b81b-33c2f100a64a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8888a91d-c247-4677-bae4-67d54b86c37c"
        },
        "item": {
          "id": "4c9065fa-1888-4319-a3da-413393b98991",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "91354ac9-300e-434d-95d1-d7f4b2361b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56418a4c-94b3-4f67-93e6-c7fc267eb195",
        "cursor": {
          "ref": "6e07e7c6-43bd-4994-8d07-14d3dc9cb25f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5c46d1ed-8c2e-469b-be47-80f1ade804ae"
        },
        "item": {
          "id": "56418a4c-94b3-4f67-93e6-c7fc267eb195",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2df03a2a-aa4d-4dfa-adae-857c592b3df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6a3030-ba72-4102-968b-e14236920c80",
        "cursor": {
          "ref": "29805489-baaa-4fe9-a2de-6d13b86bef80",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5c73d9bf-3b45-4b0b-b12d-d195a1dc2440"
        },
        "item": {
          "id": "2e6a3030-ba72-4102-968b-e14236920c80",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bbd1276b-3f4b-44ee-8c4c-54c7e1dc9bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef31571-ce08-4bbe-8e48-d3ddda437827",
        "cursor": {
          "ref": "f233e26b-9dcd-4a4e-8ee3-083748692651",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "663c5f04-f596-4795-a537-75c9d6758921"
        },
        "item": {
          "id": "5ef31571-ce08-4bbe-8e48-d3ddda437827",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c319a854-ec6c-4b9c-875b-56936116f3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8117de0-5f75-41b8-81a5-3953e1748f57",
        "cursor": {
          "ref": "eb9b5dcc-1d01-486c-bb67-942479739c89",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8564cc8e-7fbb-4439-acaa-f3cdeae06cd4"
        },
        "item": {
          "id": "c8117de0-5f75-41b8-81a5-3953e1748f57",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c7be9d50-5c36-4537-90cc-14a1caa44538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f536dca-5bb0-48be-ac2c-4d86fabda350",
        "cursor": {
          "ref": "35525a73-5e01-4805-8461-367f67ea4591",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ec74ef96-20a6-4688-8023-160fd3e842fc"
        },
        "item": {
          "id": "0f536dca-5bb0-48be-ac2c-4d86fabda350",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "94a09c7d-9df5-45f1-83f5-c5b3a893036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb3e787-3e2a-4b87-aaaa-b57e2b999858",
        "cursor": {
          "ref": "81b4db28-e48c-4232-83ae-b335a93f91d3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1fb314c7-cbc7-4b23-a57c-720c7a0397bb"
        },
        "item": {
          "id": "bfb3e787-3e2a-4b87-aaaa-b57e2b999858",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c282fe3f-72d1-472b-89fe-a3b769871232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320aad92-94f8-442a-82e7-612eb6d82b41",
        "cursor": {
          "ref": "825772b9-87a8-48ed-8017-1b2f7144378f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "baad2aaf-37ed-4ec9-b83d-8f40fc9455bf"
        },
        "item": {
          "id": "320aad92-94f8-442a-82e7-612eb6d82b41",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "be1ad1ea-101a-4c39-b574-6f452ef34bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f988077a-0118-4e98-9cae-3dbf55ae2eb3",
        "cursor": {
          "ref": "c5d975ea-392e-4fb5-b1a1-b5200aa9fef0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9425df56-bf53-47a2-94de-68d252294e6f"
        },
        "item": {
          "id": "f988077a-0118-4e98-9cae-3dbf55ae2eb3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4292c364-648e-454e-9ac1-0fc97212ec23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc762e3-cf01-47f2-90c3-b8d7ed04580b",
        "cursor": {
          "ref": "331ccb5c-bd18-4f41-a750-c0c78f5e69fc",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7f7e0792-bbcb-4df5-b5b1-15480ed9008d"
        },
        "item": {
          "id": "2fc762e3-cf01-47f2-90c3-b8d7ed04580b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5f953cd8-dc37-4f40-ab2a-b0becef61602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a08d37a-71f1-4e63-aeca-c4d9d1162ea5",
        "cursor": {
          "ref": "3d78bfa2-84ce-46db-a475-81aa77f57875",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aa530731-9ce7-4f1a-8c0d-766a12f949fd"
        },
        "item": {
          "id": "4a08d37a-71f1-4e63-aeca-c4d9d1162ea5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c3f3c1a4-94be-469f-b606-c1ea8cc5c348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805dd19e-96e1-4b6a-953a-3c920a4f8c68",
        "cursor": {
          "ref": "41fe1eed-2da0-4c57-8654-180eee40c022",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0d3cb70a-59e7-4a84-9996-fd4645e8e0f6"
        },
        "item": {
          "id": "805dd19e-96e1-4b6a-953a-3c920a4f8c68",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6d8b5918-5716-44b9-9bde-c3f329f5a412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42f9727-e690-495b-bf69-1994f4748948",
        "cursor": {
          "ref": "5b9dd21f-345b-4e7c-8762-40d0f2e73d47",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e5ae1a74-c77b-4a05-aeeb-43a947ed35d5"
        },
        "item": {
          "id": "a42f9727-e690-495b-bf69-1994f4748948",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "40000296-164d-43ba-a807-fbd4d84c6e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bfffd1-02c8-4c5d-9fe5-839ba74f4075",
        "cursor": {
          "ref": "be5710e1-42c8-4239-ba9e-2cce7dfd467a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ad71525d-503c-4bb8-88b7-533776dcab29"
        },
        "item": {
          "id": "c6bfffd1-02c8-4c5d-9fe5-839ba74f4075",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f62f7649-db78-4296-8d7d-d3c84f1e7c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bfd2e9-3096-48b2-a42b-a1d69f27e159",
        "cursor": {
          "ref": "1232874e-e5a9-445c-aea4-a9cc9bb368a0",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9c948eeb-7027-4ee2-b2ee-9086d5dfc59b"
        },
        "item": {
          "id": "87bfd2e9-3096-48b2-a42b-a1d69f27e159",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2d9e50a3-72cd-4562-acc5-03497f8d8f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fb678d-f9d4-476c-b32c-d78b3c27c1df",
        "cursor": {
          "ref": "15f0abba-754a-4f09-a46a-970c6f84c3d8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "436951da-ce5b-4ab2-a1a4-83b64f1518c0"
        },
        "item": {
          "id": "e6fb678d-f9d4-476c-b32c-d78b3c27c1df",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2afa4e8f-ffc4-4081-8e25-e3718c3216c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c37d76f-ddd0-44b4-849c-8c955baa4eba",
        "cursor": {
          "ref": "485e6496-ccc2-43d0-8a3f-52c06d4cae7d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2c775dac-5bc2-48ee-85cd-6bae2953cb00"
        },
        "item": {
          "id": "4c37d76f-ddd0-44b4-849c-8c955baa4eba",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "37fb8a40-b7fa-4229-a303-31e91459ee23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75baed35-a486-49ca-896b-1ef6d3c2bfe7",
        "cursor": {
          "ref": "b29e1439-b749-4d68-961c-1d42d9c4ff2d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b52d1bf-77a8-4a4f-a346-46ec229d0eab"
        },
        "item": {
          "id": "75baed35-a486-49ca-896b-1ef6d3c2bfe7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1e305990-887a-4cf5-8117-ac5ab4600b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee50088-acf4-4ce8-bcac-630aef909aea",
        "cursor": {
          "ref": "6d710cea-b006-4232-b9c7-ef57a6128617",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8b0d7e44-5b3f-4b2d-a02a-45dbdebe8ebf"
        },
        "item": {
          "id": "eee50088-acf4-4ce8-bcac-630aef909aea",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f5495e51-7b29-4935-b2b2-8f2a25ca1ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00bc332-9c14-4b97-930f-e5ad981b024d",
        "cursor": {
          "ref": "53b15a70-df32-4adb-aedd-487eb4ed2c9b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1c9d020a-e331-4894-91af-3a09ba3510b2"
        },
        "item": {
          "id": "a00bc332-9c14-4b97-930f-e5ad981b024d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5b9f3e25-35a0-479a-abe9-5c14535e256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a447183-841c-4696-bbf7-e369a9303a21",
        "cursor": {
          "ref": "50a1711d-e727-46f9-9219-a0f19de0ed2a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c49a78cc-56c1-41c2-b1bb-a5564e27d94b"
        },
        "item": {
          "id": "3a447183-841c-4696-bbf7-e369a9303a21",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "09262633-18ab-40c3-ba53-9bb61223e35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c1b5c5-86f9-40e3-bec6-c5680c2c8842",
        "cursor": {
          "ref": "85d88c1f-7dbe-4f41-9f0c-5119dc0248a3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c43f98ce-9869-4131-a6e1-0637e0aabcc3"
        },
        "item": {
          "id": "34c1b5c5-86f9-40e3-bec6-c5680c2c8842",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "018d8b4b-5276-42f1-bce9-7b4616ad4056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcfdadb-e5ca-474c-b5d9-22c0741aa703",
        "cursor": {
          "ref": "ac89dd26-81e5-4424-94d4-cbbec8a33946",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c239f10f-2a8d-4b77-896b-5bd9699a234d"
        },
        "item": {
          "id": "5bcfdadb-e5ca-474c-b5d9-22c0741aa703",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d67c75d7-bd10-45f2-8c61-214cac17a0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8ddda4-6c17-4737-ac7e-fbdbff6d8ece",
        "cursor": {
          "ref": "9a4468f0-2a2e-4a1e-9ed8-8b4ff1bd18e9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1313766d-b76d-4083-97c1-6c822cb6d544"
        },
        "item": {
          "id": "0c8ddda4-6c17-4737-ac7e-fbdbff6d8ece",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "30e4b516-6d81-4633-ab76-ed54f196ac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284c64f3-8afa-457a-9322-5b01b5105200",
        "cursor": {
          "ref": "23755f7d-30f5-43be-a49f-525155274632",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4eb6e04d-c5d3-454d-9a9b-774669c4c95f"
        },
        "item": {
          "id": "284c64f3-8afa-457a-9322-5b01b5105200",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "75030ff2-d00a-4ef6-8305-75735eaea2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2238f8-6cd4-48e9-b2c9-ccc41275a0ee",
        "cursor": {
          "ref": "ead9e5cd-73fd-47fd-8503-835f7200bda6",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "91f82849-3362-4b22-819c-13d7bd44be56"
        },
        "item": {
          "id": "ea2238f8-6cd4-48e9-b2c9-ccc41275a0ee",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "975ef208-d034-488a-b11d-62e9a28df823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfadd26-995f-48e8-9341-858e9dfaeed3",
        "cursor": {
          "ref": "b4b83f8b-c4d3-4ab5-a132-fa0b0fc6724d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bca72919-190c-4312-a259-61c34ae9ab01"
        },
        "item": {
          "id": "acfadd26-995f-48e8-9341-858e9dfaeed3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c9c0b1ed-cf95-439b-a31d-62d2391dd590",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74beffee-5a64-4963-adb6-6100e6363c90",
        "cursor": {
          "ref": "22da1692-c0fe-46e0-8d04-6b943d7efe1d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2688ef3f-1b20-44b2-ada1-6b77957d4373"
        },
        "item": {
          "id": "74beffee-5a64-4963-adb6-6100e6363c90",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1109f1d8-9323-4377-ab1c-d0b05e769e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697c2a6d-36e9-4097-9307-9f5315a079cb",
        "cursor": {
          "ref": "4dc88234-afd8-4611-932c-f13c997a89a3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "25e209d6-c68d-4dfb-b2c4-0b580e0c740d"
        },
        "item": {
          "id": "697c2a6d-36e9-4097-9307-9f5315a079cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a1cd2388-8a9d-4550-9cac-2436f9f81784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60df92d0-3757-46f7-959e-e9fe7548c4eb",
        "cursor": {
          "ref": "ce627e00-7de5-41da-b7ef-69b005f74ab1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9eacb200-8788-4205-a904-1d4c779e8ecc"
        },
        "item": {
          "id": "60df92d0-3757-46f7-959e-e9fe7548c4eb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "843a478c-7ade-4515-ac55-0677db842ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973f4632-0274-412f-b0dd-6034aabf32d4",
        "cursor": {
          "ref": "46489bd4-3001-4b58-a743-b73100adbe67",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "864d4bc1-0857-43d3-a754-81800e9d3834"
        },
        "item": {
          "id": "973f4632-0274-412f-b0dd-6034aabf32d4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b397f321-e5d6-4778-9821-a681aafab6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30f0f62-795e-4d4b-b42f-b85d5972bc84",
        "cursor": {
          "ref": "29b75e96-a770-4991-820a-5119c9b86229",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "62fc9977-8e14-4172-a590-835b01887e02"
        },
        "item": {
          "id": "f30f0f62-795e-4d4b-b42f-b85d5972bc84",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7b7d9f4b-f30f-4ac0-bffa-9b4fa732267c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52158650-8458-4faf-8523-69439a409bc4",
        "cursor": {
          "ref": "216031de-2636-4bbd-b942-ec6da7e21fb9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "175daa79-0a21-4508-81e7-e6cc841a13ea"
        },
        "item": {
          "id": "52158650-8458-4faf-8523-69439a409bc4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "69906534-ee6a-441d-bd9f-03e297f97a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedefb8b-617a-40a6-b69d-0ff4813802a0",
        "cursor": {
          "ref": "ccb028f5-bb17-467a-bf5e-e94bb48e49d5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b22ad69c-ff88-48eb-9ddd-466a4e66046d"
        },
        "item": {
          "id": "cedefb8b-617a-40a6-b69d-0ff4813802a0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a7c18263-916c-4f31-8dac-395171566eeb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56afd77-dc3a-4018-b4b8-5e46fb2e244c",
        "cursor": {
          "ref": "0ded595d-d3f9-4882-b422-b87d930efbcf",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "499bfbf6-11d9-4cb0-91a5-a8b476b4ae2a"
        },
        "item": {
          "id": "e56afd77-dc3a-4018-b4b8-5e46fb2e244c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a9901651-3725-4efe-bee8-c368bfe54e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee717ae4-62cb-4002-9df5-f99b247a0b3a",
        "cursor": {
          "ref": "fd927c24-e8db-48b5-b271-08551e4a891e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "24fbb7e8-9333-433f-bf0b-021a091c6a67"
        },
        "item": {
          "id": "ee717ae4-62cb-4002-9df5-f99b247a0b3a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e7a86332-0090-473c-ac37-cb12ed39844f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6d68f7-1abe-4dfc-8cf0-821b5f61a948",
        "cursor": {
          "ref": "eab09ab8-0f9e-4864-b7bb-2421136e077c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e7d3b1ab-a2d9-4de1-9a32-2ec1b391e179"
        },
        "item": {
          "id": "6b6d68f7-1abe-4dfc-8cf0-821b5f61a948",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5ed80084-b5e3-4aee-b3a3-6c4e3f451bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a87bd89-c58c-40d3-8a82-d596e4368f4c",
        "cursor": {
          "ref": "640614f3-2ac4-43cb-a87e-c4034dcef996",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e62f6af9-0de3-4bc2-9cac-4f1c5dd65b59"
        },
        "item": {
          "id": "7a87bd89-c58c-40d3-8a82-d596e4368f4c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "54ccc7df-31ec-49c9-b458-bc9da66e1a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9399acaa-2330-40be-b9f3-a482a9a64a5b",
        "cursor": {
          "ref": "4f60f4ed-0a05-44a4-93b2-c7b230f2f653",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f9995113-3ba6-4273-9ed7-6f483c19151d"
        },
        "item": {
          "id": "9399acaa-2330-40be-b9f3-a482a9a64a5b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "adcaee49-f9fe-4c50-a2e2-5b6941ea3d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809ad533-d261-48c6-9065-99cc776b6ca4",
        "cursor": {
          "ref": "5c1b08ba-744d-4950-ae75-8f73021a0689",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7fd0e552-7f26-446f-8b15-e8f09ad44216"
        },
        "item": {
          "id": "809ad533-d261-48c6-9065-99cc776b6ca4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fe06de0a-d324-4c83-82ae-877db4a51204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6465375-9684-43de-bf1b-666edc590b2f",
        "cursor": {
          "ref": "0cf25384-d4f6-4baf-8aa2-1e18fb126548",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4ee67c22-e144-405a-89f0-c396fcc45944"
        },
        "item": {
          "id": "b6465375-9684-43de-bf1b-666edc590b2f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "83f55de3-0e2e-4fe1-a85c-3c89b53dad4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61da38a2-088f-4f50-a525-cabf20c24a2f",
        "cursor": {
          "ref": "2666a1ba-7d39-49d7-80f6-58b833937655",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9629c699-7a3e-4391-8bb0-e768d863f0ba"
        },
        "item": {
          "id": "61da38a2-088f-4f50-a525-cabf20c24a2f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4e855e2f-85f7-4bbc-bf9f-6ba5708314f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb851bb3-c364-4703-b3c3-838f061170cf",
        "cursor": {
          "ref": "2a93ddf6-f1db-4864-b0d3-e4ba5c1e0a86",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "98f5ab5e-ca11-4a7a-bb94-3c89fc70af7c"
        },
        "item": {
          "id": "bb851bb3-c364-4703-b3c3-838f061170cf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6636ac6c-10a5-4029-a5ff-70285b786493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aa7c21-290e-46bb-8ec7-0263cf901abf",
        "cursor": {
          "ref": "fb0675d3-9acc-43e6-a958-8c372913b176",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d5ef8894-cb4e-45e8-b4f3-7e8c7c158c5b"
        },
        "item": {
          "id": "a3aa7c21-290e-46bb-8ec7-0263cf901abf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e650174b-052c-4f42-9e60-18eb71eadb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8bfe2f-4baf-444b-9a16-cdf51211bcbe",
        "cursor": {
          "ref": "cc20a51e-5684-43a6-8e10-ffc7796fd522",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5718e3be-e664-430a-af91-e93c7781fb4e"
        },
        "item": {
          "id": "ee8bfe2f-4baf-444b-9a16-cdf51211bcbe",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dc5ec85b-97ac-47db-bc1b-8ae5cbbf9bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a4abb5-a005-436a-bc33-d85fb9e28d83",
        "cursor": {
          "ref": "4cc09d74-b47b-46d5-b7ff-3757767222b6",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7ffa6a3f-06f9-4004-9c7e-b9401a16dfca"
        },
        "item": {
          "id": "55a4abb5-a005-436a-bc33-d85fb9e28d83",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "828a52ed-fac2-46ee-a6f3-bb617f2e62b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273edce0-e4db-4a53-8d7c-d9dbeafac570",
        "cursor": {
          "ref": "c7b1077f-080a-42c4-abaa-a47a018f7441",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce7069f2-499b-4892-b790-bb5ffe4b2685"
        },
        "item": {
          "id": "273edce0-e4db-4a53-8d7c-d9dbeafac570",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5a9dcbc9-1b99-491d-bc13-6f4a49f3a0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210dd433-1b96-4636-a06d-8a260997d26f",
        "cursor": {
          "ref": "0a801c21-7113-4f3e-b917-74dc454bd4cd",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "61e8c0ca-e19d-4c3c-9f3d-57b02668391e"
        },
        "item": {
          "id": "210dd433-1b96-4636-a06d-8a260997d26f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "714fef95-b731-4b75-a6b2-12db688f0ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613f2ed7-24b3-49a0-ab00-241914d7405c",
        "cursor": {
          "ref": "644ca4aa-1e04-4fe4-b39b-4e90db710b11",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "375e9f05-ea1e-4307-a5eb-3b2ae80d359f"
        },
        "item": {
          "id": "613f2ed7-24b3-49a0-ab00-241914d7405c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3d3664ed-8f83-4545-a6ea-7a6888a69a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be81918-2d06-4390-aa02-643458bf39ef",
        "cursor": {
          "ref": "1bff3367-625a-409c-a752-9edfc9778223",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "26896b52-7b27-43d4-a89f-efd3a8bafee6"
        },
        "item": {
          "id": "2be81918-2d06-4390-aa02-643458bf39ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "10ed2ccc-15d8-49da-a90f-7ad7011e9e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1c1848-2d15-4358-9946-3a880cdfc964",
        "cursor": {
          "ref": "d6044143-086d-4138-8c41-b9c726530d99",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "aa395113-efd8-4785-9f2a-6e4c1548cf7f"
        },
        "item": {
          "id": "fd1c1848-2d15-4358-9946-3a880cdfc964",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0fe1a447-a9ac-4549-bdcf-7a97cc1ec6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee06adec-6345-4ad8-84a1-5a0ef4a1d71e",
        "cursor": {
          "ref": "069dac36-4955-4444-969f-e5f5182827c6",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fd227a66-8dcb-414c-b9f4-65ecdb90f6b4"
        },
        "item": {
          "id": "ee06adec-6345-4ad8-84a1-5a0ef4a1d71e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fe562049-3178-4f94-96ee-86f9e6d6ce6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba77600-adce-47ee-806f-81894c72315a",
        "cursor": {
          "ref": "f00148c5-8123-4375-b3c2-24053e32ccb8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "111a524d-5b9a-444d-a2a9-b1bbfc729e1d"
        },
        "item": {
          "id": "cba77600-adce-47ee-806f-81894c72315a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "53b69f6e-816d-4afa-9b0d-72c6c011bae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9788538-3a81-4bf0-9e14-13b633057167",
        "cursor": {
          "ref": "c4d6a345-d5f6-4576-b427-9456b2bca30e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4c82c375-bb25-42ce-8e01-5c9ffff1cd03"
        },
        "item": {
          "id": "b9788538-3a81-4bf0-9e14-13b633057167",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fa393128-f99b-414d-9830-10dee485f4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3e2930-0aa7-4652-9a8b-555a13d8ca32",
        "cursor": {
          "ref": "3aa63568-f706-4520-9c84-d6774765a19e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "220ece2c-e49d-48d0-a775-d8f7eb30b6e6"
        },
        "item": {
          "id": "3e3e2930-0aa7-4652-9a8b-555a13d8ca32",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "513221c0-6df7-46d9-83fe-ab17ce96e9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3479cc98-0434-446a-a12f-00788db08fb5",
        "cursor": {
          "ref": "3900ee02-73cd-4ec4-9488-973a587b4971",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eabb0489-5ddb-4684-8ddd-4cbe31ee3a85"
        },
        "item": {
          "id": "3479cc98-0434-446a-a12f-00788db08fb5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c0e96766-dfc6-41bf-aaa5-58195132ed0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8771b4b8-57ab-4e0a-96b4-10631ccda1fb",
        "cursor": {
          "ref": "e8f580e5-8806-479f-a679-6e46d470f312",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e2bcdec6-02da-4ebe-b2b4-6857b2825e32"
        },
        "item": {
          "id": "8771b4b8-57ab-4e0a-96b4-10631ccda1fb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9059432b-0823-433a-9d8b-046b0771978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3f5ca0-18e7-4764-9aff-f08d6c7fbf10",
        "cursor": {
          "ref": "ab51d6c3-5ff9-4b48-8447-6d63b66691e6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f87cdd8f-2bc8-43dd-85dc-d31d69115e32"
        },
        "item": {
          "id": "0c3f5ca0-18e7-4764-9aff-f08d6c7fbf10",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8c0d60a7-c7e4-450f-8316-2192bad72e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fd4fb0-9ea7-486c-8aa7-b97aabcfae17",
        "cursor": {
          "ref": "605450bb-e46c-4a08-9a5e-ad9b181af87e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3478bc2f-61b5-4025-86e9-17a686f00a4f"
        },
        "item": {
          "id": "a5fd4fb0-9ea7-486c-8aa7-b97aabcfae17",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bfec7dcc-2227-49dd-9eeb-3e8e3fa50652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affea46f-06a1-4dd2-a61f-43531b72b1ad",
        "cursor": {
          "ref": "7e77163c-a062-45e5-a0ce-879e29d0800d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9c1885c4-b9a9-4462-86f9-44c606ba9daa"
        },
        "item": {
          "id": "affea46f-06a1-4dd2-a61f-43531b72b1ad",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "67744b81-0cb2-4d56-a5b2-faa4307abde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d081bbfa-6854-440a-a76f-efa62e96beea",
        "cursor": {
          "ref": "3e09b207-da48-469e-ae5f-af6b868292da",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "541b7cb3-4362-41f9-9e2c-4b048cec289c"
        },
        "item": {
          "id": "d081bbfa-6854-440a-a76f-efa62e96beea",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ef0d6fd3-367c-4cd9-9a5c-e15bad2f3a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedf4c60-d52a-4b23-8f44-ff6402676863",
        "cursor": {
          "ref": "649948c4-89c5-4389-a6cf-feb14b75ebad",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0fb31d0b-9506-46ce-aee6-77fbc19f8a11"
        },
        "item": {
          "id": "cedf4c60-d52a-4b23-8f44-ff6402676863",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "71894ced-cf81-46d8-9a41-9eeae258f8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca02a4a8-11bc-4a8d-9fc5-d873348ab367",
        "cursor": {
          "ref": "2f20b58c-413e-4156-ace7-8a1e300ad53f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "356c29c2-0328-4817-9c86-f4dd42369d1b"
        },
        "item": {
          "id": "ca02a4a8-11bc-4a8d-9fc5-d873348ab367",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "338d7507-0446-4ac3-bac6-79bbe18594de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668b5ed0-2c59-4953-ae5f-61223be8585b",
        "cursor": {
          "ref": "46c52fe0-bed2-4648-8a15-25fe62ebd646",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6385f1d3-bc6b-43e0-ab9b-af121ce77a55"
        },
        "item": {
          "id": "668b5ed0-2c59-4953-ae5f-61223be8585b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "df0d70a5-bd4d-4471-a98a-e72792087801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f1fdc5-91d1-45d4-9d4e-53211396e586",
        "cursor": {
          "ref": "3119b951-67fe-4770-91bd-c515d1e4c727",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c0f336a7-54b9-4c4b-a05d-1e25339bec97"
        },
        "item": {
          "id": "e6f1fdc5-91d1-45d4-9d4e-53211396e586",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4eb9685f-7b97-4e17-951c-ef1fb64bf458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96d7e58-3b63-43bf-b732-d9a56dd4dd2f",
        "cursor": {
          "ref": "db37d5d7-072c-4926-af88-c2769eaf7091",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b61655c5-4ad7-431a-8adc-a0acb9042b3b"
        },
        "item": {
          "id": "f96d7e58-3b63-43bf-b732-d9a56dd4dd2f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "576338e5-b9aa-419c-8462-acb078a850a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf204fe-5e3e-4060-9ea7-f104e53b6bb1",
        "cursor": {
          "ref": "0bc44b65-036a-4315-b3cd-04fe11c5450c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "694f0178-9e4c-42ab-93cb-16d2876008be"
        },
        "item": {
          "id": "abf204fe-5e3e-4060-9ea7-f104e53b6bb1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3755e0b6-8033-4c2c-85c2-ed1a657c541d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68103dc8-50e0-4daf-b3d1-2a44a7e69bee",
        "cursor": {
          "ref": "f4c04a4f-9c6b-4769-9426-a3f8980fa023",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cb259e11-065f-40de-8a09-c403b33cb603"
        },
        "item": {
          "id": "68103dc8-50e0-4daf-b3d1-2a44a7e69bee",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "161a77a8-b759-41a8-b09d-36c45fb6f85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b4b166-cac6-4727-af67-baf7f2f998bf",
        "cursor": {
          "ref": "c0ede42b-63f3-4828-9819-09a3e1d05a6d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5b31dd93-3636-4450-98f0-8404ba369d9a"
        },
        "item": {
          "id": "e7b4b166-cac6-4727-af67-baf7f2f998bf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "788a9718-cf75-4e53-9ded-54f8029b6449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1690ecdf-fdf8-4469-81a4-59ff5c2516b4",
        "cursor": {
          "ref": "f753b531-fd48-4073-bcaf-0b548626342e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8e1e8375-69ac-4d20-a328-ccf7030b2d3c"
        },
        "item": {
          "id": "1690ecdf-fdf8-4469-81a4-59ff5c2516b4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d62fbb0b-b184-4302-a36d-9803a1c5d9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5670b6d9-4389-4059-9071-da6bdf7a647e",
        "cursor": {
          "ref": "846c4b91-4bbd-4b9b-8108-a3efe05c51c7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3cb99906-413f-4bbf-bb0c-6dbf1c6563c7"
        },
        "item": {
          "id": "5670b6d9-4389-4059-9071-da6bdf7a647e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "65558f47-bc85-4684-8e5f-5ef5604df983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bd4ba3-25b5-487d-a5e1-b21555007374",
        "cursor": {
          "ref": "6050b50f-c91e-44d5-b1f4-b0630f5df782",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "369ce1c2-a7c5-41ad-8925-c6a2b8585f83"
        },
        "item": {
          "id": "46bd4ba3-25b5-487d-a5e1-b21555007374",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d915b39c-9dba-4dda-8d7d-eba87017ee5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ce0afe-34ad-465e-ad1b-97e7269a9f54",
        "cursor": {
          "ref": "1876f545-354d-4ec2-9c26-6c821384cf29",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "23c274bd-0044-415a-aa26-d6c1f6435015"
        },
        "item": {
          "id": "86ce0afe-34ad-465e-ad1b-97e7269a9f54",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bdcdf474-1d09-495d-908c-3d4eaf00794b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768ed61f-5122-4a2c-96c0-9e76aca956d5",
        "cursor": {
          "ref": "10d5bc8f-979c-401d-8860-3a2e5190d418",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ec65dcaf-9dd8-4726-904d-3f771ef6d483"
        },
        "item": {
          "id": "768ed61f-5122-4a2c-96c0-9e76aca956d5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d4f241ea-78bb-47aa-94fb-3ff1e6b38140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aacc448-23a7-4706-be1b-886ab28f0b9d",
        "cursor": {
          "ref": "3bb99e46-d26c-4156-8fea-86a922f4a2ab",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a7b93d18-1c62-4214-affb-2dfa55ef8c4c"
        },
        "item": {
          "id": "3aacc448-23a7-4706-be1b-886ab28f0b9d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4c39f166-9940-4ad1-a110-5c1f0fa2aec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469cb9b3-e2b3-48bd-b3ce-78d6021d0e21",
        "cursor": {
          "ref": "c565bd97-d3c4-4991-847a-0c74b8b5130b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "314d1d62-c932-4818-b9ff-19509f0efd41"
        },
        "item": {
          "id": "469cb9b3-e2b3-48bd-b3ce-78d6021d0e21",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4048b986-6bd6-47cd-8cec-d08e10361f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c2a4df-877b-46c4-8bab-4d18c66653b8",
        "cursor": {
          "ref": "ed971c38-f44a-4d9e-801e-3e17d5b243c9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e0e86c75-4bf6-4785-b79e-b04cf6dbe6c3"
        },
        "item": {
          "id": "e4c2a4df-877b-46c4-8bab-4d18c66653b8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3df9aec6-da74-4a55-a0d1-4ae874e5d9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2f62e2-a2b5-410d-bbd2-e672513edf6a",
        "cursor": {
          "ref": "e2115355-4c83-4582-bf40-56c28a2682d5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "573f9f8e-a733-4756-8760-98d457840f8f"
        },
        "item": {
          "id": "ef2f62e2-a2b5-410d-bbd2-e672513edf6a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "97e48d2c-29fb-4a04-a1e2-a87120745ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a8ae5c-2d80-4ee4-ab58-7323896bfc00",
        "cursor": {
          "ref": "d68a0f9a-eb01-49fb-91c7-f065c41a9eb0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e14bde92-d13d-4f2c-bd58-18767481247d"
        },
        "item": {
          "id": "a2a8ae5c-2d80-4ee4-ab58-7323896bfc00",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "45ad505e-4144-433e-9dd8-6e471eeb0de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f08297-087f-47a8-845e-742fe0d19417",
        "cursor": {
          "ref": "4d8fff89-2259-4969-9ee9-fea4c0d9bddb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bd6a3af9-422d-431c-b044-bc9cc20b83ba"
        },
        "item": {
          "id": "91f08297-087f-47a8-845e-742fe0d19417",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "14cfcb7e-7617-4e85-9260-58484cdaa7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2996b4a6-fb6f-4262-aa92-8fe4fca8eae0",
        "cursor": {
          "ref": "d967eda5-507d-46a8-924a-aa5b53e845e4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0fd96b01-a531-4ed6-a313-80dcc351af22"
        },
        "item": {
          "id": "2996b4a6-fb6f-4262-aa92-8fe4fca8eae0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2654e9d2-fa10-47e3-b1d4-4eb68121c5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4ed19c-7368-4b1c-9551-c09e640d5e61",
        "cursor": {
          "ref": "afcf73d2-04ce-4338-a8e0-7b1f75264d34",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4a9302e6-ab2a-40f2-ad3a-2fc183c8b6e0"
        },
        "item": {
          "id": "5d4ed19c-7368-4b1c-9551-c09e640d5e61",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "53ad2620-59e9-483f-902f-204e9ac8dbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8760e1-9a3b-4d69-b24c-6b8fb876d4a1",
        "cursor": {
          "ref": "79efcea1-1629-4829-a643-615500f2bae5",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "01a7259f-5f22-4388-80fb-f4248e6b2a2a"
        },
        "item": {
          "id": "1a8760e1-9a3b-4d69-b24c-6b8fb876d4a1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "acd9dfad-4dcb-44ba-a92e-69c3a935e5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb84a4-f440-4ff5-b37a-85a335eb2a6d",
        "cursor": {
          "ref": "f3991fd4-4f2b-43b8-97b9-a4a8b8fc6181",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1a7efc47-33fa-429a-8506-8fe6475f6a29"
        },
        "item": {
          "id": "13cb84a4-f440-4ff5-b37a-85a335eb2a6d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6cb101dd-0c11-4d32-83ec-0a8a8ca07f7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44a51e3-3c55-4124-9f8b-ddf7ccd33143",
        "cursor": {
          "ref": "8950e6ec-58d4-4ea9-a910-4419c8d37252",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3d35a52e-5a2f-47dc-90f5-c650b63447ee"
        },
        "item": {
          "id": "e44a51e3-3c55-4124-9f8b-ddf7ccd33143",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e96c60c2-7d81-4e03-b7ea-e7e3de2d58bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c859d940-4139-48cc-8186-ba2dfd918cbd",
        "cursor": {
          "ref": "c373cb06-71f7-45be-8391-32af21e0632e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f1a8340b-15fe-4901-871e-3fe102c59a62"
        },
        "item": {
          "id": "c859d940-4139-48cc-8186-ba2dfd918cbd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b6071b4b-55b0-43e8-b6d1-6fe862d7fa2a",
          "status": "Created",
          "code": 201,
          "responseTime": 12578,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33bd010-94d8-4c5a-8a72-9be07bcf1f99",
        "cursor": {
          "ref": "8a226a11-a762-4dc6-b529-8db6444b6158",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0a9b3d4f-e5ea-46af-ad38-8b5c655e3acf"
        },
        "item": {
          "id": "d33bd010-94d8-4c5a-8a72-9be07bcf1f99",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dec0fcf8-f496-4c51-8a54-5b166eae2a35",
          "status": "Created",
          "code": 201,
          "responseTime": 11648,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a09000c-51b0-407c-b156-84608b09a0be",
        "cursor": {
          "ref": "c52ee799-cf53-4e33-a7df-d7ccb824424e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2de12d11-1ec9-41e1-a75d-7f9cacc846f1"
        },
        "item": {
          "id": "7a09000c-51b0-407c-b156-84608b09a0be",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ba25eaee-b01f-4eac-8f06-d68b3bfa5a66",
          "status": "Created",
          "code": 201,
          "responseTime": 12413,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9474bb0d-1331-4156-9c72-581b9a63e466",
        "cursor": {
          "ref": "08671360-0570-4528-8116-5acf0bf3656c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "82dbaa63-5278-46e0-8fc9-e6856a1999bc"
        },
        "item": {
          "id": "9474bb0d-1331-4156-9c72-581b9a63e466",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ce9fd415-94ee-469b-8d3c-3c1dc763ad41",
          "status": "Created",
          "code": 201,
          "responseTime": 11465,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5a041d-725c-4e33-b9e9-a70425490fd8",
        "cursor": {
          "ref": "d92833e7-474d-4623-b229-0a305fe72b18",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "74d11964-413e-4335-9771-45ad04d8a010"
        },
        "item": {
          "id": "bb5a041d-725c-4e33-b9e9-a70425490fd8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "634a89c5-ce7c-442e-a316-405bb033a051",
          "status": "Created",
          "code": 201,
          "responseTime": 11467,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-26T00:42:49Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-26T00:42:49Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3e440fbf-8883-44b2-ba29-0af0ed312869",
        "cursor": {
          "ref": "aa823b97-42a5-4412-8b65-001afd9c73a8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8da11456-aa8d-4fbb-80c2-fc6fac0d30c8"
        },
        "item": {
          "id": "3e440fbf-8883-44b2-ba29-0af0ed312869",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8f06f073-b2df-4550-92c1-04d6a8a6379a",
          "status": "Created",
          "code": 201,
          "responseTime": 12470,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0052c9d-a5bd-484a-9701-5caf1f9aaced",
        "cursor": {
          "ref": "924c1aa6-3a89-4589-a020-b57f4587522b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c43d7e6e-4ec5-4c47-87c5-3747b76cdee5"
        },
        "item": {
          "id": "f0052c9d-a5bd-484a-9701-5caf1f9aaced",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9fb0db1-91ee-4d44-91a2-6dc9ee782213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bf2809-9c94-4301-ab46-0b0605e21ee0",
        "cursor": {
          "ref": "a9883b5e-72ef-449b-af9c-caf3e087549f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ae3ab4b7-fe75-4568-acd0-c574a7a78452"
        },
        "item": {
          "id": "e5bf2809-9c94-4301-ab46-0b0605e21ee0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0a175e2c-5b3c-4a23-96a9-b973df33c0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fcd06c-5f22-43c2-8601-12fb49992b27",
        "cursor": {
          "ref": "522f22a0-3753-441d-91fa-a18b6fe18e11",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ac3c3414-397c-45e9-9af7-85f43c1b5d57"
        },
        "item": {
          "id": "25fcd06c-5f22-43c2-8601-12fb49992b27",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6aace059-2377-4353-a925-050da6d94109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5bd407-0fb8-47cc-8cb0-1ee42821a40e",
        "cursor": {
          "ref": "038de449-d8eb-4a62-9aad-fd8102bb0ad1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "86d6fe3f-6e2e-41dc-87e0-36fa5d11085f"
        },
        "item": {
          "id": "cc5bd407-0fb8-47cc-8cb0-1ee42821a40e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "229a65da-6675-4597-8f28-06e324682fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7339ac1c-2fd8-44a0-832b-f179ac76c3bb",
        "cursor": {
          "ref": "70148997-4a2d-4184-8084-17b3bfce7998",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d33b8104-fd6a-4865-b066-4b97d785ab80"
        },
        "item": {
          "id": "7339ac1c-2fd8-44a0-832b-f179ac76c3bb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fbe9a928-cbcd-4136-9029-b95306129b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d01e5ce-55ce-49dc-b40d-8dcc38a09d74",
        "cursor": {
          "ref": "fdd8fa13-3aa2-40da-b6d0-a07c03790175",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2b6cf4c8-1000-452d-a5ff-96f8e5422e36"
        },
        "item": {
          "id": "2d01e5ce-55ce-49dc-b40d-8dcc38a09d74",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c8fe4350-ef44-456d-a9c2-7879dc8b4cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33775555-fba1-4776-a588-1c51da95cb1a",
        "cursor": {
          "ref": "7d5e8058-c8f2-4c54-8bea-d14b83b27d90",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6af25a6a-5482-40ab-9316-3ce1772778a2"
        },
        "item": {
          "id": "33775555-fba1-4776-a588-1c51da95cb1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b2a41de6-d819-4012-a057-2ee8473e9445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26c95ba-73df-4b0d-85dd-b1c6376ff7be",
        "cursor": {
          "ref": "9be0cc18-04c0-4f29-a935-bb05ca2e6938",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6d3a1a42-7d5f-41fc-94b3-eb458a8cee61"
        },
        "item": {
          "id": "b26c95ba-73df-4b0d-85dd-b1c6376ff7be",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5a0e369a-66dd-4a6b-9e62-411b3460fdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cd1c66-a41a-4a40-9026-7a98067e9ee1",
        "cursor": {
          "ref": "9b42b9a8-ad99-4eea-90de-d878ae1afe94",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d9b69feb-8df9-4ba0-9c56-00cf0a68d964"
        },
        "item": {
          "id": "65cd1c66-a41a-4a40-9026-7a98067e9ee1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1d7cb094-1d38-4cca-9437-a7b0fc2bf08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e08f3d2-2741-4b64-bd16-c54933fcacdc",
        "cursor": {
          "ref": "3070a533-1718-454d-9fde-e08fad6b5f89",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c30760f3-99b5-454d-bf6d-cdd0693b9206"
        },
        "item": {
          "id": "1e08f3d2-2741-4b64-bd16-c54933fcacdc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "016e4c95-f45e-4e83-83b4-11e06a6b5375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272d6ecd-5e04-4579-91ce-1c5ddb6fb930",
        "cursor": {
          "ref": "23b1a687-db28-4a82-9e63-d9b93e60d494",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "85fc2c47-5fe7-467f-a54e-86ce05805ad4"
        },
        "item": {
          "id": "272d6ecd-5e04-4579-91ce-1c5ddb6fb930",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "49c89644-097d-4d2f-a0ec-2d0abd676d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c97ad6-d60e-46c7-b86d-033fa41e64a4",
        "cursor": {
          "ref": "1b4207d7-3c0e-4453-bcc7-9851c0dc9108",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "76290446-718a-4db2-b364-91b07958e022"
        },
        "item": {
          "id": "a5c97ad6-d60e-46c7-b86d-033fa41e64a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "afab52d4-3a94-4519-9f16-970bcbfc8674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23422343-d03b-481a-aa3c-7ee1c880bf6f",
        "cursor": {
          "ref": "ca956325-3f6a-4c16-b463-636e93ca7490",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "561f880e-43b4-46ad-afc3-57a017a3e0df"
        },
        "item": {
          "id": "23422343-d03b-481a-aa3c-7ee1c880bf6f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cef4a8ed-7ef2-4d95-af1a-ee755cc51f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c632496e-17a5-48a5-946a-b68fd82571b3",
        "cursor": {
          "ref": "4ad672ce-4362-4dab-b70b-83dd9a9f2bf6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bc12234f-f0f3-4ec5-8d04-47343ca28db1"
        },
        "item": {
          "id": "c632496e-17a5-48a5-946a-b68fd82571b3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9fff665d-3542-48c4-9033-1d11a3bd245f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9db8bb6-451b-4cb4-bab1-e8ff5a80b3bc",
        "cursor": {
          "ref": "52663d99-69d7-419a-bdc6-c0a6bea70934",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a8415718-4448-4d62-9180-ac15909ed224"
        },
        "item": {
          "id": "d9db8bb6-451b-4cb4-bab1-e8ff5a80b3bc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a627f0cc-6bb8-47b7-88f6-6eef468cb001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405ea5fa-c121-40de-875d-34b8ed9ba6a0",
        "cursor": {
          "ref": "defd5d1b-99e0-4121-b6d2-74cc797726cf",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "96d9f32f-306d-43a2-b96b-13d2b922c99e"
        },
        "item": {
          "id": "405ea5fa-c121-40de-875d-34b8ed9ba6a0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd9d8eca-ab74-4d7c-9d81-b1f00a4c8a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06cac4e-d0a3-489b-be98-24b304ca40e4",
        "cursor": {
          "ref": "fd68dc9b-1219-4460-9c94-276f98e54e08",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "453bc433-1ac4-485c-bdf8-eca6a1874615"
        },
        "item": {
          "id": "c06cac4e-d0a3-489b-be98-24b304ca40e4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b367c921-01b7-4c7d-9277-0a164e5ac124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e273ae6-fdc3-4244-81b9-bdfa3779666e",
        "cursor": {
          "ref": "3a5da738-26aa-4b33-8565-52d50dc5147e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "23f119b7-f270-4d6b-ac95-44bd1f581fb1"
        },
        "item": {
          "id": "2e273ae6-fdc3-4244-81b9-bdfa3779666e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "04e67c3b-c260-4766-8b6f-28e445eb8da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe91787c-c9c2-4982-a285-8deb9e81aff2",
        "cursor": {
          "ref": "c8fde0ab-0b84-4b33-bf96-ca9c2dda19b5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b4b0698a-3310-48e8-976c-8d78f9a9dc34"
        },
        "item": {
          "id": "fe91787c-c9c2-4982-a285-8deb9e81aff2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ac5547c-a86b-4937-8ecd-99e4f6824ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e45d38-2d61-406a-9fc2-71a8e8200ca2",
        "cursor": {
          "ref": "9cb4e8b0-3e0d-4129-84c1-f3e78fa9b291",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5bea4265-b9d4-4e0f-b193-0b13d5d6c561"
        },
        "item": {
          "id": "57e45d38-2d61-406a-9fc2-71a8e8200ca2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a87ac42d-962e-46a5-9839-fb66497de4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb49392-a140-46cd-bd09-ede15ea52567",
        "cursor": {
          "ref": "299f454e-fdba-4668-9e50-4ae1054c7eda",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dca1aa0d-47ab-4a72-bbfa-cc640d875466"
        },
        "item": {
          "id": "4eb49392-a140-46cd-bd09-ede15ea52567",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "af6fe4e3-48be-4cfd-8993-ab7f6be7dd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71c3093-e302-46c7-8a21-9170cd73100a",
        "cursor": {
          "ref": "3a3bfcd6-1737-423f-abc8-c4efc4362609",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7614c397-9866-4b91-8f18-811564d3e8d6"
        },
        "item": {
          "id": "b71c3093-e302-46c7-8a21-9170cd73100a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dcc022c6-e2c7-4c62-b84a-f49bc94c2c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f596332f-f7a7-407d-95c6-48b0487960c1",
        "cursor": {
          "ref": "c15edc8f-aa96-4fbd-abd3-8a2ed4d75fe8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "93f1a343-8e96-4eda-998f-e2fe0c46cb68"
        },
        "item": {
          "id": "f596332f-f7a7-407d-95c6-48b0487960c1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0bd4419f-9190-466b-89d5-dea0e1da3c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39303946-3079-47a9-b741-26115bbd00ac",
        "cursor": {
          "ref": "cb279e33-1905-4c22-b6a6-80ca692cdfbd",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7445d4b9-2648-49b3-9b13-9916ddaa77b1"
        },
        "item": {
          "id": "39303946-3079-47a9-b741-26115bbd00ac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9c633b4-b488-455b-8486-d11734b36223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c108e7c-b54e-46ed-ae89-de5607a220e2",
        "cursor": {
          "ref": "48cb2be9-7444-4a8d-8ce7-4e7c2641a344",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1c271617-6992-46e9-b5c4-b441f565a963"
        },
        "item": {
          "id": "8c108e7c-b54e-46ed-ae89-de5607a220e2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2f7a3ffd-d2a2-4556-b4fd-a43cf6cd318e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6442042-0d0b-44a8-b1df-f3cca17b3df2",
        "cursor": {
          "ref": "1ad2e6a1-9c5d-468f-83ba-c654b139200c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2a893240-19f9-4550-a371-b73684ec4910"
        },
        "item": {
          "id": "c6442042-0d0b-44a8-b1df-f3cca17b3df2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d6c7d078-cccc-4e15-8daf-7d4055262a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ac8426-a982-4d53-beea-51abfe69f747",
        "cursor": {
          "ref": "8493cf73-ba23-4c5e-b6d0-a6996bf41ba6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f59148ec-5c5c-45b5-bf24-16e991a2cc7e"
        },
        "item": {
          "id": "a5ac8426-a982-4d53-beea-51abfe69f747",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a5615750-4d1f-4a65-9c70-4af98bb02bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865604ca-7560-412a-9fca-6e6f90fc3fa1",
        "cursor": {
          "ref": "ab102faa-1c82-41e3-8ca5-f93b36c47e14",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b6357526-8be2-4835-804f-3656656365ef"
        },
        "item": {
          "id": "865604ca-7560-412a-9fca-6e6f90fc3fa1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b6303072-124d-4db0-82f7-4826b99b4351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30493bec-158b-4d26-bb61-043073a0ed61",
        "cursor": {
          "ref": "d39b723a-7d7e-46b3-abb3-7b00c8b0ddf3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "87741322-1c3c-4462-b4f3-42f387b7c4b8"
        },
        "item": {
          "id": "30493bec-158b-4d26-bb61-043073a0ed61",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "94d6cc28-6a86-4100-9336-8ba645493681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db7e353-974c-44f5-9b49-6c69d279d17a",
        "cursor": {
          "ref": "c9faa262-8b4c-48df-8c0f-d4daf1341d9b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d0cac7db-d7b9-474b-864a-1b929299bf47"
        },
        "item": {
          "id": "0db7e353-974c-44f5-9b49-6c69d279d17a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "06d61ea3-7d32-4b47-839a-b8ae452dac65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb601cf1-e716-43e8-971f-c52b2d539143",
        "cursor": {
          "ref": "eb100f07-e374-4c4f-a261-0f1dd62c4f23",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2c37d0de-467e-4c4f-ba11-07dd1b7acc45"
        },
        "item": {
          "id": "fb601cf1-e716-43e8-971f-c52b2d539143",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c593531a-25e6-4168-90ed-b465787fc349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8471bf-838a-4df5-9416-411f497cf795",
        "cursor": {
          "ref": "50e45cff-4fb9-45da-a276-35011ae4f5cf",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3295dd29-c19a-4670-9c6c-77e32f45ae63"
        },
        "item": {
          "id": "ba8471bf-838a-4df5-9416-411f497cf795",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b2a773c1-49ab-4fc0-9970-1b2b4441d841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e399748-2a37-4a29-ac6f-345f4ca27f56",
        "cursor": {
          "ref": "15b411f7-2eaa-448e-a450-7131e9e9a150",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f3a0652a-594b-4c51-a23b-98dfc473612c"
        },
        "item": {
          "id": "0e399748-2a37-4a29-ac6f-345f4ca27f56",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0bc8a43c-6b79-4ce0-af91-06b6e735ed2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308c8bdc-26e9-44f9-849b-8d4c3a54e9a8",
        "cursor": {
          "ref": "6aec3e86-e918-419c-8b03-58c7c4791024",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c38abea9-1a07-4854-859b-d0063b774dbb"
        },
        "item": {
          "id": "308c8bdc-26e9-44f9-849b-8d4c3a54e9a8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4eb75e1b-a837-4745-b77c-0f26e091b370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1943ac44-6724-4b92-90aa-c243ccd497bd",
        "cursor": {
          "ref": "2c2fcda7-ac11-4b16-8dee-9e1634232790",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "30ce1206-9767-4bae-b2a5-a72e92b1c1ac"
        },
        "item": {
          "id": "1943ac44-6724-4b92-90aa-c243ccd497bd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "79848551-b11e-4f43-b05a-5b154fe687bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95038ac3-56c0-4031-9423-d38f31d8e4e7",
        "cursor": {
          "ref": "4e3b28b0-828a-4e04-8f92-421dc25416d7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3ba32b67-ed30-423f-aafb-1c53c0685463"
        },
        "item": {
          "id": "95038ac3-56c0-4031-9423-d38f31d8e4e7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2ae99dfa-d7b4-4b26-aec0-3a8f2e40d09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f108aec-5dca-4d35-ba92-f4d55cfd7138",
        "cursor": {
          "ref": "8f4d540e-01b7-4915-9432-8f829b8d963d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5a0ca0fb-db64-4abb-8479-9af72d6e0c99"
        },
        "item": {
          "id": "9f108aec-5dca-4d35-ba92-f4d55cfd7138",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "af0e54f0-ee50-48c0-a9f6-053c8fc851b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9f72b6-1422-4dde-bec5-6a6d2382a5c4",
        "cursor": {
          "ref": "951ad2c0-1bad-4b5e-aa0c-729abd8be254",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1152bad7-02f2-4f5d-8d97-93f298765a0d"
        },
        "item": {
          "id": "6f9f72b6-1422-4dde-bec5-6a6d2382a5c4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8e0c3d72-9cb7-4e4c-a682-a91eb9ad1d1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11183035-0e49-4fa5-a0d2-05b04c0ceb4f",
        "cursor": {
          "ref": "4bf3bc4a-af7f-429c-ba9b-a5ea55fa086b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "eaca9506-9f34-4383-8b16-917f61145f77"
        },
        "item": {
          "id": "11183035-0e49-4fa5-a0d2-05b04c0ceb4f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "64a8a3ff-b2fc-43f0-82bc-3c267339873a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73993632-4e4d-43f5-ae70-e68cb6b2a07f",
        "cursor": {
          "ref": "398ba5e7-4e0d-47a3-90cb-ce04cffe4784",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0987fd17-5d6e-4c67-9cc3-8f8884dd877b"
        },
        "item": {
          "id": "73993632-4e4d-43f5-ae70-e68cb6b2a07f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "116b8bed-3f56-4849-ab79-77093d136632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a841a149-7176-4ed1-bc86-99a539023598",
        "cursor": {
          "ref": "ef1cf150-d4c4-43b0-9e60-6186181a31ee",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9cea7a3a-d1ad-4093-ad21-96435b7b3a75"
        },
        "item": {
          "id": "a841a149-7176-4ed1-bc86-99a539023598",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b4e62565-abfe-4c68-904f-91f6a39d1e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41887582-c867-48e2-b088-7ddd0099c8e9",
        "cursor": {
          "ref": "dfc43ea4-3c83-462a-aaa8-d115213b36df",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8fcf96d9-1d6f-4dbc-9f7c-f63366173c6e"
        },
        "item": {
          "id": "41887582-c867-48e2-b088-7ddd0099c8e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d3938526-4b10-402b-9a7a-00201fcbb6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3436c773-9cee-4b7e-b045-257a4c77fd6b",
        "cursor": {
          "ref": "bcdb7d72-6887-4670-bdb2-47b7a5104970",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ff2ffbb8-5e10-4a77-a5f1-bca780789e47"
        },
        "item": {
          "id": "3436c773-9cee-4b7e-b045-257a4c77fd6b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c8b8d6ff-4eba-4170-be53-4855ed8e0fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8575bd1-840d-4616-b947-1b6e698a7720",
        "cursor": {
          "ref": "13d9a6bb-3d44-4064-8d16-10a2486845e6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "64377676-e894-44c9-8a8e-b44834815727"
        },
        "item": {
          "id": "b8575bd1-840d-4616-b947-1b6e698a7720",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6eb9ab5f-0dfa-4fd2-b9ff-cd13b4ce4657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fafcf6-2b76-4fb8-aec8-e48e02df95c8",
        "cursor": {
          "ref": "9ddaea0e-abf6-4f49-ba7c-ba74fa387d62",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "61d866ab-5b47-4acf-9293-bac5680edd25"
        },
        "item": {
          "id": "54fafcf6-2b76-4fb8-aec8-e48e02df95c8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f1c616c4-8bab-47f7-8807-6fd2df44d4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad40ceda-1fa1-4c0a-bade-aca48b36af6f",
        "cursor": {
          "ref": "b8d7ad49-1757-4699-8ac3-0f33e30b8755",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5ca4a9a2-32e3-40dc-a5d2-6ea6ac6f5810"
        },
        "item": {
          "id": "ad40ceda-1fa1-4c0a-bade-aca48b36af6f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c191e5ae-9904-444c-91af-3f16b1291c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84035c63-7969-424d-9211-29065efaa44e",
        "cursor": {
          "ref": "daf12393-aefa-4f33-ad97-ba5b16187334",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5d57a315-3ba0-4732-8583-d1ec531f1ca2"
        },
        "item": {
          "id": "84035c63-7969-424d-9211-29065efaa44e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bdffcece-2b81-4138-84d7-795431f0b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197b73eb-b738-4188-9d81-6972c882863c",
        "cursor": {
          "ref": "2be0af7e-85f7-41f3-89fc-bd659c5666a7",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "40030ac0-91f2-40d9-9716-3fda0a24d19a"
        },
        "item": {
          "id": "197b73eb-b738-4188-9d81-6972c882863c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e7853dcb-7762-4a17-a64a-a718a387661e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e33715-8864-4e9e-88d9-31ec2f4ea2dc",
        "cursor": {
          "ref": "5fa6aa0a-43c4-4c10-b41f-aec17e7554f3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1659dd00-6689-45aa-a5eb-f8de55e1c3aa"
        },
        "item": {
          "id": "51e33715-8864-4e9e-88d9-31ec2f4ea2dc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5ee6b93e-1bdd-4c7d-a517-a72816c0c7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdac82c-5978-4d59-8856-5ec4a1779cd4",
        "cursor": {
          "ref": "68fbc734-a130-48c5-a9ed-4720705df766",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6c8cfe52-a0b5-431f-94c6-852fd6b11eee"
        },
        "item": {
          "id": "efdac82c-5978-4d59-8856-5ec4a1779cd4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "71e16b83-4c4b-4646-a540-c7788ba73c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990b5fed-0b82-4bd6-9eff-403f975bfd2b",
        "cursor": {
          "ref": "146a6341-1dbc-42e1-85c5-c130f0a59cc6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cf507d5f-7ef9-47cc-8acb-002594fd056b"
        },
        "item": {
          "id": "990b5fed-0b82-4bd6-9eff-403f975bfd2b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dc510245-4489-4a9a-b62e-88b33999e056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239510a5-694c-4048-ac18-88472821f2bf",
        "cursor": {
          "ref": "123eb260-0356-4622-9ad3-41fe70605d94",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "29b5200d-2d10-450f-b19c-00a046bce36b"
        },
        "item": {
          "id": "239510a5-694c-4048-ac18-88472821f2bf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4990ec7e-0abb-4628-8631-32c9647dcaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a44f623-10f7-4de4-9ecd-6b1ba8d5c4f3",
        "cursor": {
          "ref": "3979d25a-440e-4827-b712-a1c370b4f6ca",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "770c5055-c871-4664-b4d2-814a08a2842e"
        },
        "item": {
          "id": "1a44f623-10f7-4de4-9ecd-6b1ba8d5c4f3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1d9cf744-a16f-443f-a8f3-aef9af94a0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af225288-3cce-45d7-b637-33735978a752",
        "cursor": {
          "ref": "2e5a6678-2caf-4fd7-953c-f3f0f74c644f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "52e39f66-cdbb-4927-a060-72ebe5587448"
        },
        "item": {
          "id": "af225288-3cce-45d7-b637-33735978a752",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "11ccad85-dbc8-4030-8a73-aeab95ef0b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7af49b7-ac56-4280-8dd5-a4448431aba1",
        "cursor": {
          "ref": "5526ae6b-4df6-4487-adfa-2a6dbb6234ba",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f74a38f1-2da4-4d83-9184-4608b82d2032"
        },
        "item": {
          "id": "f7af49b7-ac56-4280-8dd5-a4448431aba1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5c42aa80-bfb1-4ff5-a25b-fae422992988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69ffc0c-0529-4b96-a439-c4ad25467517",
        "cursor": {
          "ref": "694e4377-7e4e-423b-952a-bd79978c8cad",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d9fc6260-29a6-4ff2-8a60-6b72c6cd06bd"
        },
        "item": {
          "id": "f69ffc0c-0529-4b96-a439-c4ad25467517",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "137bc3ff-e0a6-4a35-be5f-282c28d12431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7ca52e-4b3d-4581-8ac6-21035a684d17",
        "cursor": {
          "ref": "5e8a8994-2db6-42a5-9f74-08076f41ab7e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "88436ca1-c032-4b6a-881c-7e91f014582d"
        },
        "item": {
          "id": "4d7ca52e-4b3d-4581-8ac6-21035a684d17",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6113bb5d-b728-49c2-a807-7a3e30c1ec93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7146d0-0f7a-4bac-8ae6-d5d0e2d43df5",
        "cursor": {
          "ref": "54359013-cec2-4a55-971f-ed8d64309c59",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1a0d18f8-8488-48c2-a01d-8e52c97b5e6e"
        },
        "item": {
          "id": "7d7146d0-0f7a-4bac-8ae6-d5d0e2d43df5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fa313a28-aca5-435f-b6ea-58eebf0dcf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d19302-2d06-4935-8218-223d3a2d7029",
        "cursor": {
          "ref": "8744ae9a-ba0c-4aa4-bcc3-c92282757252",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7837f594-90da-4df9-8023-790ceae30ff2"
        },
        "item": {
          "id": "58d19302-2d06-4935-8218-223d3a2d7029",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d831095c-1e42-495f-bf39-962bfafb1b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7c335a-b08f-430e-a735-9fc573d59453",
        "cursor": {
          "ref": "b05754e9-8d98-4b64-88b7-c192984c3f17",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6ce5b2ed-b61a-4129-b008-6e624a211f3b"
        },
        "item": {
          "id": "0d7c335a-b08f-430e-a735-9fc573d59453",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e6ce4b32-3ac9-4e6b-a7b9-132ae02ee18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bea175f-c9e7-4d92-9db4-f0f0fc5f16a9",
        "cursor": {
          "ref": "50b5e7e9-5dff-4c12-bd90-3a793e71550d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "baf1f862-12d5-4cb6-8339-e8ea5a4c7249"
        },
        "item": {
          "id": "3bea175f-c9e7-4d92-9db4-f0f0fc5f16a9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c98b6245-e96a-463d-bd20-88efd1f46188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1194042-b907-4d0e-8736-1f1f18939139",
        "cursor": {
          "ref": "a11a168e-b4fe-4214-b06a-395e8054c553",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7c0c727a-de7a-4391-a205-aa01ca7d27e3"
        },
        "item": {
          "id": "a1194042-b907-4d0e-8736-1f1f18939139",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "215982d3-026d-4692-8736-1ff33d287f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa910180-c28d-4761-96f8-dd515101e6eb",
        "cursor": {
          "ref": "83087164-d995-4e56-8e46-6e0bc57af9aa",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9f03d5db-0e04-4e4b-8b0d-d016fc71964f"
        },
        "item": {
          "id": "fa910180-c28d-4761-96f8-dd515101e6eb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "12a6f1bf-17c6-498f-9544-dbe82abc0cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7cd29f-ab69-4d08-a953-5cbb29c42a42",
        "cursor": {
          "ref": "095c4318-e4f0-47c6-8adb-802875c11965",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7125bff3-35c7-4c6c-a38d-1257d76e719d"
        },
        "item": {
          "id": "ab7cd29f-ab69-4d08-a953-5cbb29c42a42",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c8cc9269-35ed-4adb-8c67-cb5ce7b08bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1608c392-666b-4bf5-be15-c561b1d05899",
        "cursor": {
          "ref": "7952d200-a697-4673-9da6-5a4da158f9f7",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e64b1e02-1207-4799-8cb1-37f0ad2eef95"
        },
        "item": {
          "id": "1608c392-666b-4bf5-be15-c561b1d05899",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e56453a2-6a0c-4971-9a69-202553950c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54245b0a-f565-442e-8366-30ed1fe649ed",
        "cursor": {
          "ref": "a15bd9b2-1822-48d8-8b20-c4c13d766f54",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2f2f57c8-6baa-4aad-8c4c-6a63f4cb5fa9"
        },
        "item": {
          "id": "54245b0a-f565-442e-8366-30ed1fe649ed",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b5a09da0-18d1-402b-bee2-3fa7f31ad466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6cc476-8c5a-4f67-8389-5a532a2c4c66",
        "cursor": {
          "ref": "49f6e8d1-79b7-4f9a-8c19-8b5acc16263a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8115a5d9-1fcd-4d5a-bdbe-8334362d3629"
        },
        "item": {
          "id": "1c6cc476-8c5a-4f67-8389-5a532a2c4c66",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aa87d35f-30e8-4afb-a50f-60c814720ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ceba50-c829-47f7-9f8a-6e13ed7002b2",
        "cursor": {
          "ref": "b92e976c-f312-4eef-958e-0501aecee8a4",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "85afa90e-2a5e-4918-b37d-28161d7ff3b8"
        },
        "item": {
          "id": "c8ceba50-c829-47f7-9f8a-6e13ed7002b2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f1112a1b-d93e-4b2b-9605-910a2c538a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cec3d6b-8097-40c6-8fd0-8655e5d10508",
        "cursor": {
          "ref": "f04a8375-99b1-4f28-8edd-e15736194640",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "733c5f4b-a97d-42ef-ac4e-f897e49e7f87"
        },
        "item": {
          "id": "2cec3d6b-8097-40c6-8fd0-8655e5d10508",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "65966656-2d79-4871-a918-e0506c2335d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ed00b9-36a5-4755-93fd-122b4c467caf",
        "cursor": {
          "ref": "09d55991-4ab5-45a5-a9fe-721394bdf06d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "94b64f20-20a5-45f7-ae3b-790be6b4633d"
        },
        "item": {
          "id": "41ed00b9-36a5-4755-93fd-122b4c467caf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3613f7f5-3e27-405e-9ed4-7cb953a81987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64222ebb-f2cf-49f4-a7c8-994f28ae7e96",
        "cursor": {
          "ref": "6703ccad-c3e3-4191-be48-d8e8279b327b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7714c20c-57f5-45d3-9cd4-2051244772a5"
        },
        "item": {
          "id": "64222ebb-f2cf-49f4-a7c8-994f28ae7e96",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "23359d9a-2879-4d8b-a399-d804d46c46b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c9141b-4a24-42b5-8f2c-b90d32644cde",
        "cursor": {
          "ref": "f4e16df3-ab3f-494e-b947-d20e2201079a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d70033a2-6101-4075-ad0d-237c2956731c"
        },
        "item": {
          "id": "d2c9141b-4a24-42b5-8f2c-b90d32644cde",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "84bdf608-86ae-4664-98ef-552361ea6290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6963683-f8fe-4319-9316-7f88892f7f22",
        "cursor": {
          "ref": "751f37c7-837f-4044-9d2f-bef07eb3ddee",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "31c6fb9d-490d-439c-bff8-a1551a0b477c"
        },
        "item": {
          "id": "f6963683-f8fe-4319-9316-7f88892f7f22",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c076b693-af88-4d7d-ba46-f0e13d58d8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f298c669-a824-4ddd-a159-17ad685c35c8",
        "cursor": {
          "ref": "03103317-f42b-426a-bf14-804e131a02f0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4629dd3e-9d09-419f-953e-6e89fbcbc6bd"
        },
        "item": {
          "id": "f298c669-a824-4ddd-a159-17ad685c35c8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8d532fa9-ed09-4890-b597-60999ebdf5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3bdafc-bed5-4027-a4b6-9b7e0c699a60",
        "cursor": {
          "ref": "663eb51f-f27b-403b-84af-eb814f5f35a3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bc3c4498-4563-411d-990c-834ab0747299"
        },
        "item": {
          "id": "dc3bdafc-bed5-4027-a4b6-9b7e0c699a60",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "68f86e6e-1a2a-4ce7-922d-0c159c1ee8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db81564-8fe4-4d0b-b363-6fba3a503e18",
        "cursor": {
          "ref": "49d26257-4e69-4258-82c7-5de0889d7674",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ad72d5c4-46cf-4dac-bc0f-48ee4a346620"
        },
        "item": {
          "id": "2db81564-8fe4-4d0b-b363-6fba3a503e18",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6738d08b-4a29-47cf-a272-b79ab19d8305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae746639-102d-4268-b89d-053ef14d053c",
        "cursor": {
          "ref": "dafacc5d-5d4c-4511-8581-8103e907e5fe",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "58aa16a8-fffa-427b-95f9-39b0e7d6cac4"
        },
        "item": {
          "id": "ae746639-102d-4268-b89d-053ef14d053c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b9982a50-03cb-4603-b1ec-4c74bb7c50c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a32512a-503e-4a37-b45a-51b2766d74c2",
        "cursor": {
          "ref": "9192c2f9-52ca-4865-a8af-42ec799639fb",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6464af01-337c-443e-b930-e9357b0254db"
        },
        "item": {
          "id": "4a32512a-503e-4a37-b45a-51b2766d74c2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6b0f9791-9b4f-4fa0-809f-99ad27f866fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494033da-b9c0-44c8-a253-3eb76305a1bf",
        "cursor": {
          "ref": "37013b2a-b98d-4210-b80c-3f7277844951",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1de949a2-e953-4be2-85ae-b6d1aacac030"
        },
        "item": {
          "id": "494033da-b9c0-44c8-a253-3eb76305a1bf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "50f3188a-9828-4c2d-af87-54da481501d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bda10ec-eef3-4691-a25d-15a03b7412cb",
        "cursor": {
          "ref": "3224a8ec-9836-4371-9bd0-22a280885298",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "94dce0b9-dfbf-4a52-9fd9-43dea6926458"
        },
        "item": {
          "id": "1bda10ec-eef3-4691-a25d-15a03b7412cb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0aaeb175-1ff2-407a-8e8b-d6dbbc6b62c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e89837-d889-460e-b765-406a4e122bea",
        "cursor": {
          "ref": "d288d659-68a5-4dec-9b78-c169d6bac229",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "14ef406d-d4f6-4dce-89d0-99bad9312cd1"
        },
        "item": {
          "id": "b2e89837-d889-460e-b765-406a4e122bea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6951d16f-fcd7-4378-90de-c7cf1e28d855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a627e6-3e88-42f3-8304-81ceafe3614e",
        "cursor": {
          "ref": "83a86989-0ba6-4990-858a-26e858f2fed9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bd7b27fb-418a-401f-8f33-d08b630e67e7"
        },
        "item": {
          "id": "33a627e6-3e88-42f3-8304-81ceafe3614e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "78c11540-faac-4883-88b8-f0b04b9a46de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85909b3e-c46c-4148-b424-40910487e9e7",
        "cursor": {
          "ref": "4981863b-0fab-4c62-a964-eee98da6a7d3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "61739102-53fa-4918-8232-152cda955600"
        },
        "item": {
          "id": "85909b3e-c46c-4148-b424-40910487e9e7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a0ccbca3-413e-4521-8248-2ad6a249ba36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6356c5-233c-4ea6-83b6-cc32342686fc",
        "cursor": {
          "ref": "90967dc8-c130-49a2-873a-b6d9126cfcdb",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6d334c87-74e2-4257-ba05-d6c71816d057"
        },
        "item": {
          "id": "8e6356c5-233c-4ea6-83b6-cc32342686fc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bfa8430c-4947-49b1-9406-94e16a3d9762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c002bd1-b04d-4d01-92e6-64ff108e5e91",
        "cursor": {
          "ref": "577f0aca-7b68-4c4f-8389-4c31ee0bcc9b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "677eadb7-323d-45b1-9830-fff0c02994c7"
        },
        "item": {
          "id": "2c002bd1-b04d-4d01-92e6-64ff108e5e91",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b668d238-7cd1-46b7-9f8e-1e38d894dde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafb5ec6-66e9-41ec-88b6-2945768b9150",
        "cursor": {
          "ref": "f0833273-ba14-4175-8745-7d0e18c35b8c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a891e164-dd48-4539-a76e-37094b952b3f"
        },
        "item": {
          "id": "eafb5ec6-66e9-41ec-88b6-2945768b9150",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "295a2e11-d732-4c29-863f-212508b9e157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbc7352-f8ea-4208-9132-7788f0c09afd",
        "cursor": {
          "ref": "04c2d05e-0476-464c-9ea1-3e1a27791da4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "126126b3-7d59-4dc1-ae16-9769b6b0695e"
        },
        "item": {
          "id": "efbc7352-f8ea-4208-9132-7788f0c09afd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4d516fbd-930a-4e8a-8fcf-f3ba841d1e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ddb44f-f850-4dcf-a6ff-58203247c48c",
        "cursor": {
          "ref": "c078862a-67c7-4578-8dda-93ac2088ace6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c06351e3-ac23-44c9-af0f-352ea19f2075"
        },
        "item": {
          "id": "d2ddb44f-f850-4dcf-a6ff-58203247c48c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "de6e72a0-391b-429c-b6cd-11997519c333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875ab3f6-fe47-46a5-a1dd-2c5bd5515358",
        "cursor": {
          "ref": "2c5187c9-3143-4b13-8f7f-31268d6dc6c6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7bdf499a-1b34-4922-830e-95565b5106ef"
        },
        "item": {
          "id": "875ab3f6-fe47-46a5-a1dd-2c5bd5515358",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f1d6c1df-bbba-4b62-9d7a-e6a3776d52bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbe9a27-6f27-46da-8e1b-74119472822b",
        "cursor": {
          "ref": "b738d28f-4384-4944-834e-3d49e3fc6204",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a46b963e-de96-4f72-a3c3-86b8c9f44e12"
        },
        "item": {
          "id": "2bbe9a27-6f27-46da-8e1b-74119472822b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1b79946e-8664-48a1-bbbd-f1dd3bd133b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d54f68-3263-406a-9ec6-0c1e8bd1e468",
        "cursor": {
          "ref": "54924574-69c2-4d18-93d5-526720f1f6f1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "68846b73-4ed4-4a51-8ff2-c5b2f39ae6f6"
        },
        "item": {
          "id": "b9d54f68-3263-406a-9ec6-0c1e8bd1e468",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b681eb8a-829b-4e33-8db7-d55ae32c303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57a1831-1dc9-4d0f-bb91-96e0ece6c687",
        "cursor": {
          "ref": "e4ab70fd-fedd-4056-88a9-fb4678496f6b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e9855466-799e-4695-8b28-70008efa24a0"
        },
        "item": {
          "id": "b57a1831-1dc9-4d0f-bb91-96e0ece6c687",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "003721bc-cdca-4346-a94b-fbf57d622632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95f041c-6cdb-4abc-a769-3411baf11f3f",
        "cursor": {
          "ref": "4087b78d-97cc-4cb4-9118-e97b6565b1c3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e965ce1-3a6b-4c05-9ad4-aaa05151682d"
        },
        "item": {
          "id": "e95f041c-6cdb-4abc-a769-3411baf11f3f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5cb64dd1-ba19-4efe-89a8-9ca7d1113b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9025c86f-1fa9-4785-8d77-6231650b0d3a",
        "cursor": {
          "ref": "5a1a2f50-f5bd-4c52-9775-76b6ef1c4561",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "00fc31b1-0a72-43ed-baa6-822eb134f325"
        },
        "item": {
          "id": "9025c86f-1fa9-4785-8d77-6231650b0d3a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "06d26632-d2c5-41d8-b944-aa6f8991cb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e721ec-e3b4-41d2-8bb2-c40c5aec5d54",
        "cursor": {
          "ref": "7f11f2c5-536b-4dc0-8b6b-28698e5e7738",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5b6cb440-ac4e-451b-a7bc-3e138dc32fce"
        },
        "item": {
          "id": "14e721ec-e3b4-41d2-8bb2-c40c5aec5d54",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73f18635-9fea-4563-a5c4-cdda2bb86c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53ee51c-e631-4416-885f-f40b51a9b6d9",
        "cursor": {
          "ref": "0614a75b-1640-40c6-9251-fbb95d19ea65",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0071daab-1232-40b2-8b59-bd16f8fde787"
        },
        "item": {
          "id": "c53ee51c-e631-4416-885f-f40b51a9b6d9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0d222078-6561-43d7-ad75-8f9460c67b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30c7a22-ca62-48a5-8e5d-b10b47960df8",
        "cursor": {
          "ref": "59b7aa0b-3907-4572-a635-9888fa628c29",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ae979c04-3315-4858-ac9f-c4240534fcee"
        },
        "item": {
          "id": "d30c7a22-ca62-48a5-8e5d-b10b47960df8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bb31f622-fa68-472f-87e8-4ec93bd45ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bde727-6217-49b8-9f94-742c8edcfa99",
        "cursor": {
          "ref": "6138fd51-7363-4398-98d9-b97ed543ecd4",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a15300e9-ff53-4f3a-8cc4-7ce16e8381a0"
        },
        "item": {
          "id": "45bde727-6217-49b8-9f94-742c8edcfa99",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c4f6a006-53cb-4af0-b946-d35273d03e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32fba5e-1767-462c-98a9-a8a34e272865",
        "cursor": {
          "ref": "4cd7b139-f612-4b21-97b4-2ad9cffb2028",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f953266d-2473-4dae-87b2-c9eb648ebbbc"
        },
        "item": {
          "id": "b32fba5e-1767-462c-98a9-a8a34e272865",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "06077dad-05bf-4457-9a67-c467b7ecf375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63846d39-9813-4820-b787-c99701ac42d7",
        "cursor": {
          "ref": "b7143f90-ac02-40f3-9e64-1b58ea553f82",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "26757a1f-5c50-4fad-8927-34239bd9a249"
        },
        "item": {
          "id": "63846d39-9813-4820-b787-c99701ac42d7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "073d90b6-8713-47e1-a327-407e6d11ea08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001d0b35-4fcc-48b7-9622-5ac12a7f0c59",
        "cursor": {
          "ref": "5b525a7f-2870-4288-be2b-59d332c4335a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9978501a-41c4-4f6b-a5be-13c4feb32882"
        },
        "item": {
          "id": "001d0b35-4fcc-48b7-9622-5ac12a7f0c59",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e07f850f-f1dd-4d61-8ed1-17fb3ed26491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ccb484-b9a4-4e30-864e-06c27745ee1f",
        "cursor": {
          "ref": "3785d22d-6269-414e-8179-53c4c5bf4cc4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4d273ba7-d402-4934-9fb1-2978d62bdfb8"
        },
        "item": {
          "id": "02ccb484-b9a4-4e30-864e-06c27745ee1f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "883cb8b3-9dbe-4c67-b936-51d728f97432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4659a760-c181-486d-a271-3768c74db0f3",
        "cursor": {
          "ref": "9539fa3e-9d87-44a0-a20f-e773bd472c7e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c21f6ad3-5167-4ece-8128-2fb34213fff0"
        },
        "item": {
          "id": "4659a760-c181-486d-a271-3768c74db0f3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "85a5aa44-4732-48cf-bae4-9dc93417a36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa3876f-0ceb-4654-bbde-c07b1cabedd1",
        "cursor": {
          "ref": "36488ed7-e57e-4e3d-b358-d8fe59d53ff7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f6d1e738-9adf-4bcf-a0bf-04476deaa2c8"
        },
        "item": {
          "id": "3aa3876f-0ceb-4654-bbde-c07b1cabedd1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "62a9895a-10d0-4cec-a431-37117a7ff38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b891e0f1-48d7-45dc-a77e-92c5dd04db17",
        "cursor": {
          "ref": "e9a7f33a-51c6-456b-b32b-f6864e8588c9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "62fe40b0-bf29-4147-aec8-c7a2dde42d39"
        },
        "item": {
          "id": "b891e0f1-48d7-45dc-a77e-92c5dd04db17",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "001e0e08-53e9-4f2f-b363-7aba95593e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a29bf14-c7bf-4a41-ab1a-9c08b690c144",
        "cursor": {
          "ref": "d78ddb4c-1170-433f-848e-063299f45280",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ef71fa68-6534-4910-858c-d2bc7f73f7de"
        },
        "item": {
          "id": "4a29bf14-c7bf-4a41-ab1a-9c08b690c144",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c05da587-8f1e-49b4-a1aa-d4c91adad965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552b37b7-d50c-4028-9e62-66874d7d6e1e",
        "cursor": {
          "ref": "ee579abd-336b-4e0e-9aa2-c710b3837e73",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c69a765d-9da5-426f-99d8-5b0d409f07d4"
        },
        "item": {
          "id": "552b37b7-d50c-4028-9e62-66874d7d6e1e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6c832c45-cc30-45c6-974d-2e584d38cbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deda308-b57b-4e5e-932d-3d048cb6b418",
        "cursor": {
          "ref": "8df0b783-0261-4741-9d0f-cc8e488ae4eb",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0196356a-49a9-4b91-986f-8d9a801ba530"
        },
        "item": {
          "id": "4deda308-b57b-4e5e-932d-3d048cb6b418",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ac51e96d-3192-4cd5-ab71-a94686f57bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d669134d-6496-4ab0-8c73-cb95c2429f6b",
        "cursor": {
          "ref": "2f5bdfd9-92eb-43bf-b85b-7b08051c849f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2e585bd4-74df-4667-b2cf-662cdcb41ee8"
        },
        "item": {
          "id": "d669134d-6496-4ab0-8c73-cb95c2429f6b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "39de2c21-b0c7-463c-8d70-9ea8b32461e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a4d87-f64f-4b91-a13c-f4048b84609b",
        "cursor": {
          "ref": "43c6ebd3-eaed-4bb8-aba9-bdc96854fa14",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "018cf296-a0d0-4089-83b3-8a5f5718f119"
        },
        "item": {
          "id": "407a4d87-f64f-4b91-a13c-f4048b84609b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0551fbb1-2c68-4efc-bc56-364e5947821c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c301ac35-ffd7-44dc-b3fe-8261350b57d2",
        "cursor": {
          "ref": "af746e45-523c-4b8a-b143-5c0b1428a521",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6e4e2d53-9281-45de-b4d6-d87db5e64182"
        },
        "item": {
          "id": "c301ac35-ffd7-44dc-b3fe-8261350b57d2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d1bf1f22-a184-4435-ad48-2c0e425d6657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e22098-83ed-4e72-b954-397ed6cc271a",
        "cursor": {
          "ref": "84067d36-ae66-4aff-aa0f-d4c3432a6cea",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "64fa10df-f8b2-47bc-aa8a-b4efdc51876a"
        },
        "item": {
          "id": "95e22098-83ed-4e72-b954-397ed6cc271a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4e4cdc3c-c6d6-4d44-9816-7a3567d04ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd13c7c-610e-44e2-b677-b96d6933770b",
        "cursor": {
          "ref": "5453cf78-16dc-4be4-87c0-9f21f7f955af",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5f1b9772-c90f-47f9-9f57-b3d7fcdda75b"
        },
        "item": {
          "id": "5fd13c7c-610e-44e2-b677-b96d6933770b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b776be49-f47e-47ab-abc8-be39bc4d2d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a9e9fe-bc5d-4279-b57f-ffdc6eef472c",
        "cursor": {
          "ref": "ffe16c47-f82a-435b-a44c-2a8c94511d35",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6be898dc-e1ad-4b25-9d7e-097e377d950d"
        },
        "item": {
          "id": "69a9e9fe-bc5d-4279-b57f-ffdc6eef472c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "484fbcab-abbf-4952-8a15-e97589b9f895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80850517-ebd8-47bf-a675-54e56989a894",
        "cursor": {
          "ref": "401be6a3-d26e-4576-8aee-639c1a8a3240",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e15e8ece-ba63-4c92-8966-e47cf5cbf476"
        },
        "item": {
          "id": "80850517-ebd8-47bf-a675-54e56989a894",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a515e9c6-bbbb-4d96-9190-acc1a81583e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c653f2-7220-4d55-b5aa-30010c0f3c13",
        "cursor": {
          "ref": "b2e92bb1-f5dc-4f9d-8b7d-84855e1cda98",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fdd9c1ef-7f3a-48a6-b00d-c0daa95e66c0"
        },
        "item": {
          "id": "85c653f2-7220-4d55-b5aa-30010c0f3c13",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "89404282-178e-4f4c-bfe7-3dea67f55ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c4e221-8731-4402-84ee-5a1e13a3bc59",
        "cursor": {
          "ref": "2ea37d83-5587-405f-a107-7048845a35ef",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "325139fd-b676-48c2-902b-7f444f14a714"
        },
        "item": {
          "id": "c8c4e221-8731-4402-84ee-5a1e13a3bc59",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6f3ef8af-6c48-407e-b708-158bf73dbf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61efa89c-dccf-413f-9acb-3fe188f6b686",
        "cursor": {
          "ref": "dc92937c-3440-4409-92c3-936fb302f060",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "028f1840-478a-4768-aae1-264eafb03e5a"
        },
        "item": {
          "id": "61efa89c-dccf-413f-9acb-3fe188f6b686",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "52ef18e7-c5ef-4892-887b-c4b124f29ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdffa9ba-2318-4156-a110-846d5b6d724f",
        "cursor": {
          "ref": "ed265787-3e6b-402a-8d6f-32c77b7b9f93",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1bd2581e-27a1-4bde-a8a1-2907e0bee345"
        },
        "item": {
          "id": "bdffa9ba-2318-4156-a110-846d5b6d724f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a71c9292-fc7b-46d3-bc8d-a5ed8c97aeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae661ec-1eb3-4822-86ba-47ecc5a011f5",
        "cursor": {
          "ref": "dc716b43-72f8-418d-8773-72c563551315",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ce86af3c-9c20-4a9a-a102-2073393d3922"
        },
        "item": {
          "id": "fae661ec-1eb3-4822-86ba-47ecc5a011f5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dba79a5e-4f6e-4397-9344-8a71e845b3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5547e2c9-05dd-4f33-af4f-524a14f129e0",
        "cursor": {
          "ref": "4d6a9792-8ead-40e1-9123-cda7bea6efb5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8d113dcb-3e36-44bd-8219-dcb17501def6"
        },
        "item": {
          "id": "5547e2c9-05dd-4f33-af4f-524a14f129e0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "862544a8-c5c1-4236-9cd2-4af931d1825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d1e9bc-6e83-4bf1-9cef-2557bf457e31",
        "cursor": {
          "ref": "2d3a3bda-10ad-4401-87ee-6039e9bc29d5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "472da7ba-eb84-4b63-86f0-80c7f998a9a6"
        },
        "item": {
          "id": "f2d1e9bc-6e83-4bf1-9cef-2557bf457e31",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3ce9bc9d-c23c-46cb-9f39-070fc35956f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d790db55-2512-4c52-8c34-bbe3910ed285",
        "cursor": {
          "ref": "508a2191-13e7-4655-949f-86371766a83f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ce68d56c-992c-4f5d-94fd-69c1b25fd2c6"
        },
        "item": {
          "id": "d790db55-2512-4c52-8c34-bbe3910ed285",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7f63e27d-653f-4eaf-9abc-9b32122f4c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7662db1e-df2e-4138-b645-bf30ca714f0e",
        "cursor": {
          "ref": "0223829a-f5c5-492a-8444-edbc70eca4e0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d2e527bf-8fdb-4e32-b93a-2996c702c35d"
        },
        "item": {
          "id": "7662db1e-df2e-4138-b645-bf30ca714f0e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "32eebccd-22c6-4616-b7fe-d69c25a863ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf7692d-19fd-48c1-853e-7d6b7191247a",
        "cursor": {
          "ref": "202644ec-bb91-4791-a509-e8c8e0522607",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d107fee0-a304-4785-add7-2eb7f3fda847"
        },
        "item": {
          "id": "bdf7692d-19fd-48c1-853e-7d6b7191247a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e4552367-3018-43bd-82f3-7717bd97135e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391f1822-e4bd-4134-9bdd-16863d3cfe1c",
        "cursor": {
          "ref": "7fbb044f-4038-4124-b43e-8bb2ddb020d0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a8dc2937-a41e-4210-ac4d-5a9c132ca170"
        },
        "item": {
          "id": "391f1822-e4bd-4134-9bdd-16863d3cfe1c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bb5eec78-5ed8-48b9-8fc7-358e88ae5bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba84f24-ca47-426a-a374-14d1bf98e939",
        "cursor": {
          "ref": "38b6d9dc-57f4-45af-8419-ab370ca2f6c2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "89664876-0c67-48cf-8917-1e1558a52d09"
        },
        "item": {
          "id": "2ba84f24-ca47-426a-a374-14d1bf98e939",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c2cc35d6-b81e-4cf9-a5c8-9c2f069f00f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec77e9a-2313-46d4-8858-99da6c5b96c6",
        "cursor": {
          "ref": "59fa70c3-2778-4fce-89a4-44570bd32a1a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "858c6824-e284-433a-a264-b31f38c9b9f6"
        },
        "item": {
          "id": "dec77e9a-2313-46d4-8858-99da6c5b96c6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a644c53a-6581-4370-ac2c-575ca004101c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2910264-5ecb-48d0-a83c-a7e81b0df667",
        "cursor": {
          "ref": "9a2a8cb9-ebb8-4844-b4ad-486250c9b4ee",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "869ae7d6-357c-45a9-8448-4bda9c70f327"
        },
        "item": {
          "id": "b2910264-5ecb-48d0-a83c-a7e81b0df667",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "846cd7fe-e7ec-417f-875b-5c2d4d55ee23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76af97de-d0bb-45f3-b9b2-10ddf21e816e",
        "cursor": {
          "ref": "a767e4f3-2c12-4353-bdfa-8e813c52f2bb",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0c30905c-618d-4d53-add5-b81be5a43c71"
        },
        "item": {
          "id": "76af97de-d0bb-45f3-b9b2-10ddf21e816e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d07a6fed-a9d2-4c67-a428-4f9349120985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ed6b22-50ce-4510-a262-939eece0f121",
        "cursor": {
          "ref": "64b4d7a0-45df-4ec5-8554-3cfc6366aedf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a874bef8-b56c-4b2a-96c6-6346b1ede62a"
        },
        "item": {
          "id": "53ed6b22-50ce-4510-a262-939eece0f121",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2f89d9d9-eba0-4418-9fdf-abd11a2fbcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddc9728-f70e-4e16-a812-1cc59f670147",
        "cursor": {
          "ref": "d7660caa-13b7-47b1-ae0a-e63c52a82845",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "54b20416-78bd-46a6-a9c1-4b3367196a47"
        },
        "item": {
          "id": "eddc9728-f70e-4e16-a812-1cc59f670147",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "abe57ac8-e628-4e9a-a1ba-977191f10121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ddc0ab-47db-4ff9-96b1-bf41476f155c",
        "cursor": {
          "ref": "86a1c98b-8814-4d63-9a92-7cfc786369e3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6da344f3-1aed-4664-a78a-ee80a88c2f85"
        },
        "item": {
          "id": "45ddc0ab-47db-4ff9-96b1-bf41476f155c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "19ce346b-dcf3-4547-b5fd-9ca74a6804c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cf975a-40f1-4e3e-bed7-e24f111fbf6e",
        "cursor": {
          "ref": "7189c0fa-8922-4840-9124-1e95dba16661",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bb6dac83-a928-4aba-b3d5-7009bc4eb02a"
        },
        "item": {
          "id": "02cf975a-40f1-4e3e-bed7-e24f111fbf6e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2d06973b-11f0-45f7-ba8f-dfc3d208b512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dc1fd4-cf17-4ede-b5a3-5d0de4e132c8",
        "cursor": {
          "ref": "5cd38ded-04d2-485a-9c47-86dded120741",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "206f609a-f669-4470-85cf-4bb4655992e7"
        },
        "item": {
          "id": "79dc1fd4-cf17-4ede-b5a3-5d0de4e132c8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2e88808b-92be-43b8-afd2-633544b148a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0052fae6-d937-436f-bed3-4825230f727d",
        "cursor": {
          "ref": "291bc11f-3d5b-4960-9f9f-551786b693ae",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1a7e9316-4e35-46ed-879c-969d1058ba9d"
        },
        "item": {
          "id": "0052fae6-d937-436f-bed3-4825230f727d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0174a3e5-d10e-4377-b4b9-8e84d1c144f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315488fe-047f-4b03-9f90-5289a1624c32",
        "cursor": {
          "ref": "dbc4a409-267b-485d-8e50-e626a3231b1d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "561c04b2-7f47-49f6-9158-b2180861832a"
        },
        "item": {
          "id": "315488fe-047f-4b03-9f90-5289a1624c32",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c52ed5e8-6d2d-43f2-8b97-f53635bbd2e6",
          "status": "OK",
          "code": 200,
          "responseTime": 2231,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d59fcf4-1dbd-4f38-912e-775c11105e10",
        "cursor": {
          "ref": "35320e13-e4e2-410a-a069-707339f208d3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "70196e01-1a5b-4bf8-838e-835c19b47fef"
        },
        "item": {
          "id": "0d59fcf4-1dbd-4f38-912e-775c11105e10",
          "name": "credentials_verify"
        },
        "response": {
          "id": "90a584b1-40d0-4d5a-a9ac-c1d097546103",
          "status": "OK",
          "code": 200,
          "responseTime": 3452,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2eb256-a8f3-44d4-9f18-e4903c5ea301",
        "cursor": {
          "ref": "2645fd75-2148-4742-9c3c-91e1c58107c8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5dff6df1-8c2d-49be-b189-e7522777575f"
        },
        "item": {
          "id": "de2eb256-a8f3-44d4-9f18-e4903c5ea301",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "511c2dfd-7a46-42f2-8228-652b6b428202",
          "status": "OK",
          "code": 200,
          "responseTime": 3082,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7d03be-6e55-43b3-8c9e-05c624e7a0dd",
        "cursor": {
          "ref": "799838a3-76da-4f86-96ac-d5336c8c4779",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "932c4ab2-99d6-45e5-99c2-8efdc847cf6a"
        },
        "item": {
          "id": "4d7d03be-6e55-43b3-8c9e-05c624e7a0dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "105d4e29-811c-4720-ad82-02ed8d84c55e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7d03be-6e55-43b3-8c9e-05c624e7a0dd",
        "cursor": {
          "ref": "799838a3-76da-4f86-96ac-d5336c8c4779",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "932c4ab2-99d6-45e5-99c2-8efdc847cf6a"
        },
        "item": {
          "id": "4d7d03be-6e55-43b3-8c9e-05c624e7a0dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "105d4e29-811c-4720-ad82-02ed8d84c55e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd552082-d095-4668-aac7-2eb0c4f3ef92",
        "cursor": {
          "ref": "87d52586-6fe3-4bdd-a607-5357d7114206",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "abf0192d-cb72-4bcb-82d9-ebe00e6e1f03"
        },
        "item": {
          "id": "bd552082-d095-4668-aac7-2eb0c4f3ef92",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50ede274-4120-4896-8100-d9011fc8850d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38a5600-c4f1-4309-9937-ccd4ef0bd629",
        "cursor": {
          "ref": "9cd8bd64-114c-4bc9-b192-f5f5fa40417c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d8ed684a-5f3b-4374-9a85-722b8b0f2898"
        },
        "item": {
          "id": "d38a5600-c4f1-4309-9937-ccd4ef0bd629",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "71ef3bd1-3dc9-4c59-9db2-ad238f30d260",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}